import { StateCenter } from "../../../common/stateCenter";
import { ZegoLogger } from "../../../common/zego.entity";
import { ZegoStreamCenterWeb } from "../zego.streamCenter.web";
interface DevicesInfo {
    microphones: Array<{
        deviceName: string;
        deviceID: string;
    }>;
    speakers: Array<{
        deviceName: string;
        deviceID: string;
    }>;
    cameras: Array<{
        deviceName: string;
        deviceID: string;
    }>;
}
/**
 * 快速拔插设备异常检测
 */
export declare class QuickDeviceChangeDetection {
    private logger;
    private stateCenter;
    private streamCenter;
    private devicesInfo?;
    private maxQuickDeviceChangeDelayMs;
    lastRecordDeviceTime: number;
    constructor(logger: ZegoLogger, stateCenter: StateCenter, streamCenter: ZegoStreamCenterWeb);
    private getDetectionStreams;
    private actionMicDeviceQuickChangeException;
    private getDeviceName;
    private actionCameraDeviceQuickChangeException;
    private updateDeviceInfo;
    private getTrackStatsSnapshot;
    private includeExceptionDevices;
    private checkAudioTrackStatsChange;
    private checkVideoTrackStatsChange;
    private checkStreamStatesChanged;
    isRecordQuickly(): boolean;
    onDeviceNoChangeQuickly(res: DevicesInfo): void;
}
export {};
