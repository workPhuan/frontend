import {
  __commonJS
} from "./chunk-S5KM4IGW.js";

// node_modules/zego-zim-web/index.js
var require_zego_zim_web = __commonJS({
  "node_modules/zego-zim-web/index.js"(exports, module) {
    !function(e, t) {
      if ("object" == typeof exports && "object" == typeof module)
        module.exports = t();
      else if ("function" == typeof define && define.amd)
        define([], t);
      else {
        var r, s = t();
        for (r in s)
          ("object" == typeof exports ? exports : e)[r] = s[r];
      }
    }("undefined" != typeof self ? self : exports, function() {
      return function(e) {
        var t = {};
        function r(s) {
          if (t[s])
            return t[s].exports;
          var n = t[s] = { i: s, l: false, exports: {} };
          return e[s].call(n.exports, n, n.exports, r), n.l = true, n.exports;
        }
        return r.m = e, r.c = t, r.d = function(e2, t2, s) {
          r.o(e2, t2) || Object.defineProperty(e2, t2, { enumerable: true, get: s });
        }, r.r = function(e2) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
        }, r.t = function(e2, t2) {
          if (1 & t2 && (e2 = r(e2)), 8 & t2)
            return e2;
          if (4 & t2 && "object" == typeof e2 && e2 && e2.__esModule)
            return e2;
          var s = /* @__PURE__ */ Object.create(null);
          if (r.r(s), Object.defineProperty(s, "default", { enumerable: true, value: e2 }), 2 & t2 && "string" != typeof e2)
            for (var n in e2)
              r.d(s, n, function(t3) {
                return e2[t3];
              }.bind(null, n));
          return s;
        }, r.n = function(e2) {
          var t2 = e2 && e2.__esModule ? function() {
            return e2.default;
          } : function() {
            return e2;
          };
          return r.d(t2, "a", t2), t2;
        }, r.o = function(e2, t2) {
          return Object.prototype.hasOwnProperty.call(e2, t2);
        }, r.p = "", r(r.s = 21);
      }([function(e, t, r) {
        "use strict";
        var s = r(25), n = (r.d(t, "c", function() {
          return s.a;
        }), r.d(t, "g", function() {
          return s.b;
        }), r.d(t, "h", function() {
          return s.c;
        }), r.d(t, "i", function() {
          return s.d;
        }), r.d(t, "k", function() {
          return s.e;
        }), r.d(t, "l", function() {
          return s.f;
        }), r.d(t, "o", function() {
          return s.g;
        }), r.d(t, "p", function() {
          return s.h;
        }), r.d(t, "r", function() {
          return s.i;
        }), r.d(t, "w", function() {
          return s.j;
        }), r.d(t, "x", function() {
          return s.k;
        }), r.d(t, "y", function() {
          return s.l;
        }), r.d(t, "z", function() {
          return s.m;
        }), r.d(t, "A", function() {
          return s.n;
        }), r.d(t, "B", function() {
          return s.o;
        }), r.d(t, "C", function() {
          return s.p;
        }), r.d(t, "D", function() {
          return s.q;
        }), r.d(t, "E", function() {
          return s.r;
        }), r.d(t, "G", function() {
          return s.s;
        }), r.d(t, "H", function() {
          return s.t;
        }), r.d(t, "J", function() {
          return s.u;
        }), r.d(t, "K", function() {
          return s.v;
        }), r.d(t, "L", function() {
          return s.w;
        }), r.d(t, "M", function() {
          return s.x;
        }), r.d(t, "O", function() {
          return s.y;
        }), r.d(t, "R", function() {
          return s.z;
        }), r.d(t, "S", function() {
          return s.A;
        }), r.d(t, "T", function() {
          return s.B;
        }), r.d(t, "U", function() {
          return s.C;
        }), r.d(t, "Y", function() {
          return s.D;
        }), r.d(t, "Z", function() {
          return s.E;
        }), r.d(t, "ab", function() {
          return s.F;
        }), r.d(t, "bb", function() {
          return s.G;
        }), r.d(t, "cb", function() {
          return s.H;
        }), r.d(t, "eb", function() {
          return s.I;
        }), r.d(t, "gb", function() {
          return s.J;
        }), r.d(t, "hb", function() {
          return s.K;
        }), r.d(t, "ib", function() {
          return s.L;
        }), r.d(t, "jb", function() {
          return s.M;
        }), r.d(t, "kb", function() {
          return s.N;
        }), r.d(t, "lb", function() {
          return s.O;
        }), r.d(t, "nb", function() {
          return s.P;
        }), r(34)), i = (r.d(t, "a", function() {
          return n.a;
        }), r.d(t, "b", function() {
          return n.b;
        }), r.d(t, "f", function() {
          return n.c;
        }), r.d(t, "n", function() {
          return n.d;
        }), r.d(t, "q", function() {
          return n.e;
        }), r.d(t, "v", function() {
          return n.f;
        }), r.d(t, "F", function() {
          return n.g;
        }), r.d(t, "I", function() {
          return n.h;
        }), r.d(t, "N", function() {
          return n.i;
        }), r.d(t, "P", function() {
          return n.j;
        }), r.d(t, "Q", function() {
          return n.k;
        }), r.d(t, "V", function() {
          return n.l;
        }), r.d(t, "db", function() {
          return n.m;
        }), r.d(t, "fb", function() {
          return n.n;
        }), r(35)), o = (r.d(t, "d", function() {
          return i.a;
        }), r.d(t, "e", function() {
          return i.b;
        }), r.d(t, "j", function() {
          return i.c;
        }), r.d(t, "mb", function() {
          return i.d;
        }), r(36)), a = (r.d(t, "m", function() {
          return o.a;
        }), r.d(t, "u", function() {
          return o.b;
        }), r(37)), u = (r.d(t, "s", function() {
          return a.a;
        }), r.d(t, "t", function() {
          return a.b;
        }), r(38));
        r.d(t, "W", function() {
          return u.a;
        }), r.d(t, "X", function() {
          return u.b;
        });
      }, function(e, t, r) {
        "use strict";
        var s = r(23), n = (r.d(t, "o", function() {
          return s.a;
        }), r.d(t, "q", function() {
          return s.b;
        }), r.d(t, "r", function() {
          return s.c;
        }), r(14)), i = (r.d(t, "y", function() {
          return n.a;
        }), r(24));
        r.d(t, "a", function() {
          return i.a;
        }), r.d(t, "b", function() {
          return i.b;
        }), r.d(t, "c", function() {
          return i.c;
        }), r.d(t, "d", function() {
          return i.d;
        }), r.d(t, "e", function() {
          return i.e;
        }), r.d(t, "f", function() {
          return i.f;
        }), r.d(t, "g", function() {
          return i.g;
        }), r.d(t, "h", function() {
          return i.h;
        }), r.d(t, "i", function() {
          return i.i;
        }), r.d(t, "j", function() {
          return i.j;
        }), r.d(t, "k", function() {
          return i.k;
        }), r.d(t, "l", function() {
          return i.l;
        }), r.d(t, "m", function() {
          return i.m;
        }), r.d(t, "n", function() {
          return i.n;
        }), r.d(t, "p", function() {
          return i.o;
        }), r.d(t, "s", function() {
          return i.p;
        }), r.d(t, "t", function() {
          return i.q;
        }), r.d(t, "u", function() {
          return i.r;
        }), r.d(t, "v", function() {
          return i.s;
        }), r.d(t, "w", function() {
          return i.t;
        }), r.d(t, "x", function() {
          return i.u;
        });
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return d;
        });
        var s = r(53), n = r(61), i = r(79), o = r(81), a = r(89), u = r(93), c = r(0), l = c.X.Manager, d = (p.getInstance = function() {
          return this.instance || (this.instance = new p());
        }, p.prototype.getVersion = function() {
          return "2.17.0";
        }, p.prototype.createEngine = function(e2) {
          var t2 = { appID: e2, version: "2.17.0 8/2 18:19" }, r2 = this.handle;
          return this.enginMap.get(r2) ? (t2.msg = "had created", this.lg.i(l, c.W.Create, t2), null) : (e2 = new n.a(r2, e2), this.enginMap.set(r2, e2), this.lg.i(l, c.W.Create, t2), e2);
        }, p.prototype.destroyEngine = function(e2) {
          this.lg.i(l, c.W.Destroy), e2 && (this.enginMap.delete(e2.econf.handle), e2.destroy());
        }, p.prototype.setLogConfig = function(e2) {
          this.lg.i(l, c.W.SetLogConfig, e2), this.lg.setLogConfig(Object.assign({ logLevel: "info" }, e2));
        }, p.prototype.setAdvancedConfig = function(e2, t2) {
          this.st.advancedConfig[e2] = t2;
        }, p.prototype.setGeofencingConfig = function(e2, t2) {
          var r2, s2, n2 = this;
          return (t2 == c.B.Include || t2 == c.B.Exclude) && e2 && 0 < e2.length && e2.every(function(e3) {
            return 2 <= e3 && e3 <= 7;
          }) ? (e2 = e2.map(function(e3) {
            return 0 | e3;
          }), this.st.advancedConfig.geoFence.type = t2, this.st.advancedConfig.geoFence.areas = e2, t2 == c.B.Include ? (s2 = 1 < e2.length ? (Math.random() * e2.length | 0) % e2.length : 0, this.st.setHost(e2[s2])) : ((r2 = new Set(Object.keys(this.st.advancedConfig.geoFence.hostMap).map(function(e3) {
            return +e3;
          }))).delete(1), e2.forEach(function(e3) {
            r2.delete(e3), n2.st.advancedConfig.geoFence.hostMap[e3].relatives.forEach(function(e4) {
              return r2.delete(e4);
            });
          }), s2 = 1 < (e2 = Array.from(r2)).length ? (Math.random() * e2.length | 0) % e2.length : 0, this.st.setHost(e2[s2] || 1)), this.lg.i(l, c.W.SetGeoFence, this.st.advancedConfig.geoFence), 1 != this.st.advancedConfig.geoFence.id) : (this.lg.i(l, c.W.SetGeoFence, { type: t2, areas: e2 }), false);
        }, p);
        function p() {
          if (this.handle = Symbol(), this.enginMap = /* @__PURE__ */ new Map(), p.instance)
            return p.instance;
          this.lg = new a.a(this.getVersion()), this.st = new u.a(this.getVersion()), this.dr = new o.a(this.st), this.crypto = new s.a(), this.pb = new i.a(this.crypto, this.st), p.instance = this;
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "b", function() {
          return n;
        }), r.d(t, "a", function() {
          return i;
        }), r.d(t, "g", function() {
          return o;
        }), r.d(t, "d", function() {
          return a;
        }), r.d(t, "f", function() {
          return c;
        }), r.d(t, "e", function() {
          return l;
        }), r.d(t, "c", function() {
          return h;
        });
        var s, n = { importantLevel: 0, reportSize: 2e3, reportNum: 20, bps: 16e3, netTimeout: 3 }, i = { totalAvailCache: 102400, cacheMaxSize: 2e4, cacheDelPer: 0.2 }, o = (s = 1, function() {
          return s++;
        }), a = (u.prototype.isEmpty = function() {
          return 0 == this.items.length;
        }, u.prototype.enqueue = function(e2) {
          this.items.push(e2);
        }, u.prototype.dequeue = function() {
          return this.items.shift();
        }, u.prototype.front = function() {
          return this.isEmpty() ? "No elements in Queue" : this.items[0];
        }, u.prototype.size = function() {
          return this.items.length;
        }, u.prototype.clear = function() {
          this.items = [];
        }, u);
        function u() {
          this.items = [], this.items = [];
        }
        var c = { TIMEOUT: { code: 100001, msg: "network timeout" }, DATAEXIST: { code: 100002, msg: "data exist" } }, l = -1, d = (Object.defineProperty(p.prototype, "id", { get: function() {
          return this._id || null;
        }, set: function(e2) {
          this._id = e2;
        }, enumerable: false, configurable: true }), Object.defineProperty(p.prototype, "data", { get: function() {
          return this._data;
        }, set: function(e2) {
          this._data = e2;
        }, enumerable: false, configurable: true }), p.prototype.hasNext = function() {
          return this.next && this.next.id;
        }, p.prototype.hasPrev = function() {
          return this.prev && this.prev.id;
        }, p);
        function p(e2, t2) {
          void 0 === e2 && (e2 = null), void 0 === t2 && (t2 = null), this.next = null, this.prev = null, this._id = e2, this._data = t2;
        }
        f.prototype.insertBefore = function(e2, t2) {
          return (t2 = new d(this._idCounter, t2)).next = e2, t2.prev = e2.prev, e2.prev && (e2.prev.next = t2), e2.prev = t2, ++this._idCounter, ++this._numNodes, t2;
        }, f.prototype.addLast = function(e2) {
          return this.insertBefore(this.end, e2);
        }, f.prototype.add = function(e2) {
          return this.addLast(e2);
        }, f.prototype.getFirst = function() {
          return 0 === this._numNodes ? null : this.start.next;
        }, f.prototype.getLast = function() {
          return 0 === this._numNodes ? null : this.end.prev;
        }, f.prototype.size = function() {
          return this._numNodes;
        }, f.prototype.getFromFirst = function(e2) {
          var t2 = 0, r2 = this.start.next;
          if (0 <= e2)
            for (; t2 < e2 && null !== r2; )
              r2 = r2.next, ++t2;
          else
            r2 = null;
          if (null === r2)
            throw "Index out of bounds.";
          return r2;
        }, f.prototype.get = function(e2) {
          return 0 === e2 ? this.getFirst() : e2 === this._numNodes - 1 ? this.getLast() : this.getFromFirst(e2);
        }, f.prototype.remove = function(e2) {
          return e2.prev && (e2.prev.next = e2.next), e2.next && (e2.next.prev = e2.prev), --this._numNodes, e2;
        }, f.prototype.removeFirst = function() {
          var e2 = null;
          return 0 < this._numNodes && this.start.next ? this.remove(this.start.next) : e2;
        }, f.prototype.removeLast = function() {
          var e2 = null;
          return 0 < this._numNodes && this.end.prev ? this.remove(this.end.prev) : e2;
        }, f.prototype.removeAll = function() {
          this.start.next = this.end, this.end.prev = this.start, this._numNodes = 0, this._idCounter = 0;
        }, f.prototype.each = function(e2) {
          for (var t2 = this.start; t2.hasNext(); )
            e2(t2 = t2.next);
        }, f.prototype.find = function(e2) {
          for (var t2 = this.start, r2 = false, s2 = null; t2.hasNext() && !r2; )
            e2(t2 = t2.next) && (s2 = t2, r2 = true);
          return s2;
        }, f.prototype.map = function(e2) {
          for (var t2 = this.start, r2 = []; t2.hasNext(); )
            e2(t2 = t2.next) && r2.push(t2);
          return r2;
        }, f.prototype.push = function(e2) {
          return this.addLast(e2);
        }, f.prototype.unshift = function(e2) {
          0 < this._numNodes ? this.insertBefore(this.start.next, e2) : this.insertBefore(this.end, e2);
        }, f.prototype.pop = function() {
          return this.removeLast();
        }, f.prototype.shift = function() {
          return this.removeFirst();
        };
        var h = f;
        function f() {
          this.start = new d(), this.end = new d(), this._idCounter = 0, this._numNodes = 0, this.start.next = this.end, this.start.prev = null, this.end.prev = this.start, this.end.next = null;
        }
      }, function(e, t) {
        e.exports = s;
        var r = null;
        try {
          r = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;
        } catch (e2) {
        }
        function s(e2, t2, r2) {
          this.low = 0 | e2, this.high = 0 | t2, this.unsigned = !!r2;
        }
        function n(e2) {
          return true === (e2 && e2.__isLong__);
        }
        Object.defineProperty(s.prototype, "__isLong__", { value: true }), s.isLong = n;
        var i = {}, o = {};
        function a(e2, t2) {
          var r2, s2, n2;
          return t2 ? (n2 = 0 <= (e2 >>>= 0) && e2 < 256) && (s2 = o[e2]) ? s2 : (r2 = c(e2, (0 | e2) < 0 ? -1 : 0, true), n2 && (o[e2] = r2), r2) : (n2 = -128 <= (e2 |= 0) && e2 < 128) && (s2 = i[e2]) ? s2 : (r2 = c(e2, e2 < 0 ? -1 : 0, false), n2 && (i[e2] = r2), r2);
        }
        function u(e2, t2) {
          if (isNaN(e2))
            return t2 ? b : _;
          if (t2) {
            if (e2 < 0)
              return b;
            if (f <= e2)
              return I;
          } else {
            if (e2 <= -m)
              return S;
            if (m <= e2 + 1)
              return k;
          }
          return e2 < 0 ? u(-e2, t2).neg() : c(e2 % h | 0, e2 / h | 0, t2);
        }
        function c(e2, t2, r2) {
          return new s(e2, t2, r2);
        }
        s.fromInt = a, s.fromNumber = u, s.fromBits = c;
        var l = Math.pow;
        function d(e2, t2, r2) {
          if (0 === e2.length)
            throw Error("empty string");
          if ("NaN" === e2 || "Infinity" === e2 || "+Infinity" === e2 || "-Infinity" === e2)
            return _;
          if (t2 = "number" == typeof t2 ? (r2 = t2, false) : !!t2, (r2 = r2 || 10) < 2 || 36 < r2)
            throw RangeError("radix");
          var s2;
          if (0 < (s2 = e2.indexOf("-")))
            throw Error("interior hyphen");
          if (0 === s2)
            return d(e2.substring(1), t2, r2).neg();
          for (var n2 = u(l(r2, 8)), i2 = _, o2 = 0; o2 < e2.length; o2 += 8) {
            var a2 = Math.min(8, e2.length - o2), c2 = parseInt(e2.substring(o2, o2 + a2), r2);
            i2 = a2 < 8 ? (a2 = u(l(r2, a2)), i2.mul(a2).add(u(c2))) : (i2 = i2.mul(n2)).add(u(c2));
          }
          return i2.unsigned = t2, i2;
        }
        function p(e2, t2) {
          return "number" == typeof e2 ? u(e2, t2) : "string" == typeof e2 ? d(e2, t2) : c(e2.low, e2.high, "boolean" == typeof t2 ? t2 : e2.unsigned);
        }
        s.fromString = d, s.fromValue = p;
        var h = 4294967296, f = h * h, m = f / 2, g = a(1 << 24), _ = a(0), b = (s.ZERO = _, a(0, true)), v = (s.UZERO = b, a(1)), y = (s.ONE = v, a(1, true)), M = (s.UONE = y, a(-1)), k = (s.NEG_ONE = M, c(-1, 2147483647, false)), I = (s.MAX_VALUE = k, c(-1, -1, true)), S = (s.MAX_UNSIGNED_VALUE = I, c(0, -2147483648, false));
        (e = (s.MIN_VALUE = S, s.prototype)).toInt = function() {
          return this.unsigned ? this.low >>> 0 : this.low;
        }, e.toNumber = function() {
          return this.unsigned ? (this.high >>> 0) * h + (this.low >>> 0) : this.high * h + (this.low >>> 0);
        }, e.toString = function(e2) {
          if ((e2 = e2 || 10) < 2 || 36 < e2)
            throw RangeError("radix");
          if (this.isZero())
            return "0";
          var t2, r2;
          if (this.isNegative())
            return this.eq(S) ? (r2 = u(e2), r2 = (t2 = this.div(r2)).mul(r2).sub(this), t2.toString(e2) + r2.toInt().toString(e2)) : "-" + this.neg().toString(e2);
          for (var s2 = u(l(e2, 6), this.unsigned), n2 = this, i2 = ""; ; ) {
            var o2 = n2.div(s2), a2 = (n2.sub(o2.mul(s2)).toInt() >>> 0).toString(e2);
            if ((n2 = o2).isZero())
              return a2 + i2;
            for (; a2.length < 6; )
              a2 = "0" + a2;
            i2 = "" + a2 + i2;
          }
        }, e.getHighBits = function() {
          return this.high;
        }, e.getHighBitsUnsigned = function() {
          return this.high >>> 0;
        }, e.getLowBits = function() {
          return this.low;
        }, e.getLowBitsUnsigned = function() {
          return this.low >>> 0;
        }, e.getNumBitsAbs = function() {
          if (this.isNegative())
            return this.eq(S) ? 64 : this.neg().getNumBitsAbs();
          for (var e2 = 0 != this.high ? this.high : this.low, t2 = 31; 0 < t2 && 0 == (e2 & 1 << t2); t2--)
            ;
          return 0 != this.high ? t2 + 33 : t2 + 1;
        }, e.isZero = function() {
          return 0 === this.high && 0 === this.low;
        }, e.eqz = e.isZero, e.isNegative = function() {
          return !this.unsigned && this.high < 0;
        }, e.isPositive = function() {
          return this.unsigned || 0 <= this.high;
        }, e.isOdd = function() {
          return 1 == (1 & this.low);
        }, e.isEven = function() {
          return 0 == (1 & this.low);
        }, e.equals = function(e2) {
          return n(e2) || (e2 = p(e2)), (this.unsigned === e2.unsigned || this.high >>> 31 != 1 || e2.high >>> 31 != 1) && this.high === e2.high && this.low === e2.low;
        }, e.eq = e.equals, e.notEquals = function(e2) {
          return !this.eq(e2);
        }, e.neq = e.notEquals, e.ne = e.notEquals, e.lessThan = function(e2) {
          return this.comp(e2) < 0;
        }, e.lt = e.lessThan, e.lessThanOrEqual = function(e2) {
          return this.comp(e2) <= 0;
        }, e.lte = e.lessThanOrEqual, e.le = e.lessThanOrEqual, e.greaterThan = function(e2) {
          return 0 < this.comp(e2);
        }, e.gt = e.greaterThan, e.greaterThanOrEqual = function(e2) {
          return 0 <= this.comp(e2);
        }, e.gte = e.greaterThanOrEqual, e.ge = e.greaterThanOrEqual, e.compare = function(e2) {
          if (n(e2) || (e2 = p(e2)), this.eq(e2))
            return 0;
          var t2 = this.isNegative(), r2 = e2.isNegative();
          return t2 && !r2 ? -1 : !t2 && r2 ? 1 : this.unsigned ? e2.high >>> 0 > this.high >>> 0 || e2.high === this.high && e2.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e2).isNegative() ? -1 : 1;
        }, e.comp = e.compare, e.negate = function() {
          return !this.unsigned && this.eq(S) ? S : this.not().add(v);
        }, e.neg = e.negate, e.add = function(e2) {
          n(e2) || (e2 = p(e2));
          var t2 = this.high >>> 16, r2 = 65535 & this.high, s2 = this.low >>> 16, i2 = 65535 & this.low, o2 = e2.high >>> 16, a2 = 65535 & e2.high, u2 = e2.low >>> 16, l2 = 0, d2 = 0, h2 = 0, f2 = 0;
          return d2 += (h2 = h2 + ((f2 += i2 + (65535 & e2.low)) >>> 16) + (s2 + u2)) >>> 16, c((h2 &= 65535) << 16 | (f2 &= 65535), ((l2 += (d2 += r2 + a2) >>> 16) + (t2 + o2) & 65535) << 16 | (d2 &= 65535), this.unsigned);
        }, e.subtract = function(e2) {
          return n(e2) || (e2 = p(e2)), this.add(e2.neg());
        }, e.sub = e.subtract, e.multiply = function(e2) {
          if (this.isZero())
            return _;
          if (n(e2) || (e2 = p(e2)), r)
            return c(r.mul(this.low, this.high, e2.low, e2.high), r.get_high(), this.unsigned);
          if (e2.isZero())
            return _;
          if (this.eq(S))
            return e2.isOdd() ? S : _;
          if (e2.eq(S))
            return this.isOdd() ? S : _;
          if (this.isNegative())
            return e2.isNegative() ? this.neg().mul(e2.neg()) : this.neg().mul(e2).neg();
          if (e2.isNegative())
            return this.mul(e2.neg()).neg();
          if (this.lt(g) && e2.lt(g))
            return u(this.toNumber() * e2.toNumber(), this.unsigned);
          var t2 = this.high >>> 16, s2 = 65535 & this.high, i2 = this.low >>> 16, o2 = 65535 & this.low, a2 = e2.high >>> 16, l2 = 65535 & e2.high, d2 = e2.low >>> 16, h2 = 0, f2 = 0, m2 = 0, b2 = (b2 = 0) + ((f2 = f2 + ((m2 += o2 * (e2 = 65535 & e2.low)) >>> 16) + i2 * e2) >>> 16) + ((f2 = (65535 & f2) + o2 * d2) >>> 16);
          return c((f2 &= 65535) << 16 | (m2 &= 65535), ((h2 += (b2 += s2 * e2) >>> 16) + ((b2 = (65535 & b2) + i2 * d2) >>> 16) + ((b2 = (65535 & b2) + o2 * l2) >>> 16) + (t2 * e2 + s2 * d2 + i2 * l2 + o2 * a2) & 65535) << 16 | (b2 &= 65535), this.unsigned);
        }, e.mul = e.multiply, e.divide = function(e2) {
          if ((e2 = n(e2) ? e2 : p(e2)).isZero())
            throw Error("division by zero");
          var t2, s2, i2;
          if (r)
            return this.unsigned || -2147483648 !== this.high || -1 !== e2.low || -1 !== e2.high ? c((this.unsigned ? r.div_u : r.div_s)(this.low, this.high, e2.low, e2.high), r.get_high(), this.unsigned) : this;
          if (this.isZero())
            return this.unsigned ? b : _;
          if (this.unsigned) {
            if ((e2 = e2.unsigned ? e2 : e2.toUnsigned()).gt(this))
              return b;
            if (e2.gt(this.shru(1)))
              return y;
            s2 = b;
          } else {
            if (this.eq(S))
              return e2.eq(v) || e2.eq(M) ? S : e2.eq(S) ? v : (i2 = this.shr(1).div(e2).shl(1)).eq(_) ? e2.isNegative() ? v : M : (t2 = this.sub(e2.mul(i2)), i2.add(t2.div(e2)));
            if (e2.eq(S))
              return this.unsigned ? b : _;
            if (this.isNegative())
              return e2.isNegative() ? this.neg().div(e2.neg()) : this.neg().div(e2).neg();
            if (e2.isNegative())
              return this.div(e2.neg()).neg();
            s2 = _;
          }
          for (t2 = this; t2.gte(e2); ) {
            i2 = Math.max(1, Math.floor(t2.toNumber() / e2.toNumber()));
            for (var o2 = Math.ceil(Math.log(i2) / Math.LN2), a2 = o2 <= 48 ? 1 : l(2, o2 - 48), d2 = u(i2), h2 = d2.mul(e2); h2.isNegative() || h2.gt(t2); )
              h2 = (d2 = u(i2 -= a2, this.unsigned)).mul(e2);
            d2.isZero() && (d2 = v), s2 = s2.add(d2), t2 = t2.sub(h2);
          }
          return s2;
        }, e.div = e.divide, e.modulo = function(e2) {
          return n(e2) || (e2 = p(e2)), r ? c((this.unsigned ? r.rem_u : r.rem_s)(this.low, this.high, e2.low, e2.high), r.get_high(), this.unsigned) : this.sub(this.div(e2).mul(e2));
        }, e.mod = e.modulo, e.rem = e.modulo, e.not = function() {
          return c(~this.low, ~this.high, this.unsigned);
        }, e.and = function(e2) {
          return n(e2) || (e2 = p(e2)), c(this.low & e2.low, this.high & e2.high, this.unsigned);
        }, e.or = function(e2) {
          return n(e2) || (e2 = p(e2)), c(this.low | e2.low, this.high | e2.high, this.unsigned);
        }, e.xor = function(e2) {
          return n(e2) || (e2 = p(e2)), c(this.low ^ e2.low, this.high ^ e2.high, this.unsigned);
        }, e.shiftLeft = function(e2) {
          return n(e2) && (e2 = e2.toInt()), 0 == (e2 &= 63) ? this : e2 < 32 ? c(this.low << e2, this.high << e2 | this.low >>> 32 - e2, this.unsigned) : c(0, this.low << e2 - 32, this.unsigned);
        }, e.shl = e.shiftLeft, e.shiftRight = function(e2) {
          return n(e2) && (e2 = e2.toInt()), 0 == (e2 &= 63) ? this : e2 < 32 ? c(this.low >>> e2 | this.high << 32 - e2, this.high >> e2, this.unsigned) : c(this.high >> e2 - 32, 0 <= this.high ? 0 : -1, this.unsigned);
        }, e.shr = e.shiftRight, e.shiftRightUnsigned = function(e2) {
          var t2;
          return n(e2) && (e2 = e2.toInt()), 0 == (e2 &= 63) ? this : (t2 = this.high, e2 < 32 ? c(this.low >>> e2 | t2 << 32 - e2, t2 >>> e2, this.unsigned) : c(32 === e2 ? t2 : t2 >>> e2 - 32, 0, this.unsigned));
        }, e.shru = e.shiftRightUnsigned, e.shr_u = e.shiftRightUnsigned, e.toSigned = function() {
          return this.unsigned ? c(this.low, this.high, false) : this;
        }, e.toUnsigned = function() {
          return this.unsigned ? this : c(this.low, this.high, true);
        }, e.toBytes = function(e2) {
          return e2 ? this.toBytesLE() : this.toBytesBE();
        }, e.toBytesLE = function() {
          var e2 = this.high, t2 = this.low;
          return [255 & t2, t2 >>> 8 & 255, t2 >>> 16 & 255, t2 >>> 24, 255 & e2, e2 >>> 8 & 255, e2 >>> 16 & 255, e2 >>> 24];
        }, e.toBytesBE = function() {
          var e2 = this.high, t2 = this.low;
          return [e2 >>> 24, e2 >>> 16 & 255, e2 >>> 8 & 255, 255 & e2, t2 >>> 24, t2 >>> 16 & 255, t2 >>> 8 & 255, 255 & t2];
        }, s.fromBytes = function(e2, t2, r2) {
          return r2 ? s.fromBytesLE(e2, t2) : s.fromBytesBE(e2, t2);
        }, s.fromBytesLE = function(e2, t2) {
          return new s(e2[0] | e2[1] << 8 | e2[2] << 16 | e2[3] << 24, e2[4] | e2[5] << 8 | e2[6] << 16 | e2[7] << 24, t2);
        }, s.fromBytesBE = function(e2, t2) {
          return new s(e2[4] << 24 | e2[5] << 16 | e2[6] << 8 | e2[7], e2[0] << 24 | e2[1] << 16 | e2[2] << 8 | e2[3], t2);
        };
      }, function(e, t, r) {
        (function(t2) {
          e.exports = function(e2) {
            var s;
            if ("undefined" != typeof window && window.crypto && (s = window.crypto), "undefined" != typeof self && self.crypto && (s = self.crypto), !(s = !(s = !(s = "undefined" != typeof globalThis && globalThis.crypto ? globalThis.crypto : s) && "undefined" != typeof window && window.msCrypto ? window.msCrypto : s) && void 0 !== t2 && t2.crypto ? t2.crypto : s))
              try {
                s = r(94);
              } catch (o2) {
              }
            var n = Object.create || function(e3) {
              return i.prototype = e3, e3 = new i(), i.prototype = null, e3;
            };
            function i() {
            }
            var o = {}, a = o.lib = {}, u = a.Base = { extend: function(e3) {
              var t3 = n(this);
              return e3 && t3.mixIn(e3), t3.hasOwnProperty("init") && this.init !== t3.init || (t3.init = function() {
                t3.$super.init.apply(this, arguments);
              }), (t3.init.prototype = t3).$super = this, t3;
            }, create: function() {
              var e3 = this.extend();
              return e3.init.apply(e3, arguments), e3;
            }, init: function() {
            }, mixIn: function(e3) {
              for (var t3 in e3)
                e3.hasOwnProperty(t3) && (this[t3] = e3[t3]);
              e3.hasOwnProperty("toString") && (this.toString = e3.toString);
            }, clone: function() {
              return this.init.prototype.extend(this);
            } }, c = a.WordArray = u.extend({ init: function(e3, t3) {
              e3 = this.words = e3 || [], this.sigBytes = null != t3 ? t3 : 4 * e3.length;
            }, toString: function(e3) {
              return (e3 || d).stringify(this);
            }, concat: function(e3) {
              var t3 = this.words, r2 = e3.words, s2 = this.sigBytes, n2 = e3.sigBytes;
              if (this.clamp(), s2 % 4)
                for (var i2 = 0; i2 < n2; i2++) {
                  var o2 = r2[i2 >>> 2] >>> 24 - i2 % 4 * 8 & 255;
                  t3[s2 + i2 >>> 2] |= o2 << 24 - (s2 + i2) % 4 * 8;
                }
              else
                for (var a2 = 0; a2 < n2; a2 += 4)
                  t3[s2 + a2 >>> 2] = r2[a2 >>> 2];
              return this.sigBytes += n2, this;
            }, clamp: function() {
              var t3 = this.words, r2 = this.sigBytes;
              t3[r2 >>> 2] &= 4294967295 << 32 - r2 % 4 * 8, t3.length = e2.ceil(r2 / 4);
            }, clone: function() {
              var e3 = u.clone.call(this);
              return e3.words = this.words.slice(0), e3;
            }, random: function(e3) {
              for (var t3 = [], r2 = 0; r2 < e3; r2 += 4)
                t3.push(function() {
                  if (s) {
                    if ("function" == typeof s.getRandomValues)
                      try {
                        return s.getRandomValues(new Uint32Array(1))[0];
                      } catch (e4) {
                      }
                    if ("function" == typeof s.randomBytes)
                      try {
                        return s.randomBytes(4).readInt32LE();
                      } catch (e4) {
                      }
                  }
                  throw new Error("Native crypto module could not be used to get secure random number.");
                }());
              return new c.init(t3, e3);
            } }), l = o.enc = {}, d = l.Hex = { stringify: function(e3) {
              for (var t3 = e3.words, r2 = e3.sigBytes, s2 = [], n2 = 0; n2 < r2; n2++) {
                var i2 = t3[n2 >>> 2] >>> 24 - n2 % 4 * 8 & 255;
                s2.push((i2 >>> 4).toString(16)), s2.push((15 & i2).toString(16));
              }
              return s2.join("");
            }, parse: function(e3) {
              for (var t3 = e3.length, r2 = [], s2 = 0; s2 < t3; s2 += 2)
                r2[s2 >>> 3] |= parseInt(e3.substr(s2, 2), 16) << 24 - s2 % 8 * 4;
              return new c.init(r2, t3 / 2);
            } }, p = l.Latin1 = { stringify: function(e3) {
              for (var t3 = e3.words, r2 = e3.sigBytes, s2 = [], n2 = 0; n2 < r2; n2++) {
                var i2 = t3[n2 >>> 2] >>> 24 - n2 % 4 * 8 & 255;
                s2.push(String.fromCharCode(i2));
              }
              return s2.join("");
            }, parse: function(e3) {
              for (var t3 = e3.length, r2 = [], s2 = 0; s2 < t3; s2++)
                r2[s2 >>> 2] |= (255 & e3.charCodeAt(s2)) << 24 - s2 % 4 * 8;
              return new c.init(r2, t3);
            } }, h = l.Utf8 = { stringify: function(e3) {
              try {
                return decodeURIComponent(escape(p.stringify(e3)));
              } catch (e4) {
                throw new Error("Malformed UTF-8 data");
              }
            }, parse: function(e3) {
              return p.parse(unescape(encodeURIComponent(e3)));
            } }, f = a.BufferedBlockAlgorithm = u.extend({ reset: function() {
              this._data = new c.init(), this._nDataBytes = 0;
            }, _append: function(e3) {
              "string" == typeof e3 && (e3 = h.parse(e3)), this._data.concat(e3), this._nDataBytes += e3.sigBytes;
            }, _process: function(t3) {
              var r2, s2 = this._data, n2 = s2.words, i2 = s2.sigBytes, o2 = this.blockSize, a2 = i2 / (4 * o2), u2 = (a2 = t3 ? e2.ceil(a2) : e2.max((0 | a2) - this._minBufferSize, 0)) * o2;
              t3 = e2.min(4 * u2, i2);
              if (u2) {
                for (var l2 = 0; l2 < u2; l2 += o2)
                  this._doProcessBlock(n2, l2);
                r2 = n2.splice(0, u2), s2.sigBytes -= t3;
              }
              return new c.init(r2, t3);
            }, clone: function() {
              var e3 = u.clone.call(this);
              return e3._data = this._data.clone(), e3;
            }, _minBufferSize: 0 }), m = (a.Hasher = f.extend({ cfg: u.extend(), init: function(e3) {
              this.cfg = this.cfg.extend(e3), this.reset();
            }, reset: function() {
              f.reset.call(this), this._doReset();
            }, update: function(e3) {
              return this._append(e3), this._process(), this;
            }, finalize: function(e3) {
              return e3 && this._append(e3), this._doFinalize();
            }, blockSize: 16, _createHelper: function(e3) {
              return function(t3, r2) {
                return new e3.init(r2).finalize(t3);
              };
            }, _createHmacHelper: function(e3) {
              return function(t3, r2) {
                return new m.HMAC.init(e3, r2).finalize(t3);
              };
            } }), o.algo = {});
            return o;
          }(Math);
        }).call(this, r(11));
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return E;
        });
        r = "function" == typeof atob, t = "function" == typeof btoa;
        var s = "function" == typeof Buffer;
        const n = "function" == typeof TextDecoder ? new TextDecoder() : void 0, i = "function" == typeof TextEncoder ? new TextEncoder() : void 0, o = Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="), a = ((e2) => {
          let t2 = {};
          return e2.forEach((e3, r2) => t2[e3] = r2), t2;
        })(o), u = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/, c = String.fromCharCode.bind(String), l = "function" == typeof Uint8Array.from ? Uint8Array.from.bind(Uint8Array) : (e2, t2 = (e3) => e3) => new Uint8Array(Array.prototype.slice.call(e2, 0).map(t2)), d = (e2) => e2.replace(/=/g, "").replace(/[+\/]/g, (e3) => "+" == e3 ? "-" : "_"), p = (e2) => e2.replace(/[^A-Za-z0-9\+\/]/g, "");
        var h = (e2) => {
          let t2, r2, s2, n2, i2 = "";
          var a2 = e2.length % 3;
          for (let a3 = 0; a3 < e2.length; ) {
            if (255 < (r2 = e2.charCodeAt(a3++)) || 255 < (s2 = e2.charCodeAt(a3++)) || 255 < (n2 = e2.charCodeAt(a3++)))
              throw new TypeError("invalid character found");
            t2 = r2 << 16 | s2 << 8 | n2, i2 += o[t2 >> 18 & 63] + o[t2 >> 12 & 63] + o[t2 >> 6 & 63] + o[63 & t2];
          }
          return a2 ? i2.slice(0, a2 - 3) + "===".substring(a2) : i2;
        };
        const f = t ? (e2) => btoa(e2) : s ? (e2) => Buffer.from(e2, "binary").toString("base64") : h, m = s ? (e2) => Buffer.from(e2).toString("base64") : (e2) => {
          let t2 = [];
          for (let r2 = 0, s2 = e2.length; r2 < s2; r2 += 4096)
            t2.push(c.apply(null, e2.subarray(r2, r2 + 4096)));
          return f(t2.join(""));
        }, g = (e2, t2 = false) => t2 ? d(m(e2)) : m(e2), _ = (e2) => {
          var t2;
          return e2.length < 2 ? (t2 = e2.charCodeAt(0)) < 128 ? e2 : t2 < 2048 ? c(192 | t2 >>> 6) + c(128 | 63 & t2) : c(224 | t2 >>> 12 & 15) + c(128 | t2 >>> 6 & 63) + c(128 | 63 & t2) : (t2 = 65536 + 1024 * (e2.charCodeAt(0) - 55296) + (e2.charCodeAt(1) - 56320), c(240 | t2 >>> 18 & 7) + c(128 | t2 >>> 12 & 63) + c(128 | t2 >>> 6 & 63) + c(128 | 63 & t2));
        }, b = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g, v = (e2) => e2.replace(b, _), y = s ? (e2) => Buffer.from(e2, "utf8").toString("base64") : i ? (e2) => m(i.encode(e2)) : (e2) => f(v(e2)), M = (e2, t2 = false) => t2 ? d(y(e2)) : y(e2);
        t = (e2) => M(e2, true);
        const k = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g, I = (e2) => {
          switch (e2.length) {
            case 4:
              var t2 = ((7 & e2.charCodeAt(0)) << 18 | (63 & e2.charCodeAt(1)) << 12 | (63 & e2.charCodeAt(2)) << 6 | 63 & e2.charCodeAt(3)) - 65536;
              return c(55296 + (t2 >>> 10)) + c(56320 + (1023 & t2));
            case 3:
              return c((15 & e2.charCodeAt(0)) << 12 | (63 & e2.charCodeAt(1)) << 6 | 63 & e2.charCodeAt(2));
            default:
              return c((31 & e2.charCodeAt(0)) << 6 | 63 & e2.charCodeAt(1));
          }
        }, S = (e2) => e2.replace(k, I);
        var D = (e2) => {
          if (e2 = e2.replace(/\s+/g, ""), !u.test(e2))
            throw new TypeError("malformed base64.");
          e2 += "==".slice(2 - (3 & e2.length));
          let t2, r2, s2, n2 = "";
          for (let i2 = 0; i2 < e2.length; )
            t2 = a[e2.charAt(i2++)] << 18 | a[e2.charAt(i2++)] << 12 | (r2 = a[e2.charAt(i2++)]) << 6 | (s2 = a[e2.charAt(i2++)]), n2 += 64 === r2 ? c(t2 >> 16 & 255) : 64 === s2 ? c(t2 >> 16 & 255, t2 >> 8 & 255) : c(t2 >> 16 & 255, t2 >> 8 & 255, 255 & t2);
          return n2;
        };
        const q = r ? (e2) => atob(p(e2)) : s ? (e2) => Buffer.from(e2, "base64").toString("binary") : D, C = s ? (e2) => l(Buffer.from(e2, "base64")) : (e2) => l(q(e2), (e3) => e3.charCodeAt(0)), w = (e2) => C(R(e2)), A = s ? (e2) => Buffer.from(e2, "base64").toString("utf8") : n ? (e2) => n.decode(C(e2)) : (e2) => S(q(e2)), R = (e2) => p(e2.replace(/[-_]/g, (e3) => "-" == e3 ? "+" : "/")), x = (e2) => A(R(e2));
        function T() {
          var e2 = (e3, t2) => Object.defineProperty(String.prototype, e3, L(t2));
          e2("fromBase64", function() {
            return x(this);
          }), e2("toBase64", function(e3) {
            return M(this, e3);
          }), e2("toBase64URI", function() {
            return M(this, true);
          }), e2("toBase64URL", function() {
            return M(this, true);
          }), e2("toUint8Array", function() {
            return w(this);
          });
        }
        function O() {
          var e2 = (e3, t2) => Object.defineProperty(Uint8Array.prototype, e3, L(t2));
          e2("toBase64", function(e3) {
            return g(this, e3);
          }), e2("toBase64URI", function() {
            return g(this, true);
          }), e2("toBase64URL", function() {
            return g(this, true);
          });
        }
        const L = (e2) => ({ value: e2, enumerable: false, writable: true, configurable: true }), E = { version: "3.7.2", VERSION: "3.7.2", atob: q, atobPolyfill: D, btoa: f, btoaPolyfill: h, fromBase64: x, toBase64: M, encode: M, encodeURI: t, encodeURL: t, utob: v, btou: S, decode: x, isValid: (e2) => "string" == typeof e2 && (e2 = e2.replace(/\s+/g, "").replace(/={0,2}$/, ""), !/[^\s0-9a-zA-Z\+/]/.test(e2) || !/[^\s0-9a-zA-Z\-_]/.test(e2)), fromUint8Array: g, toUint8Array: w, extendString: T, extendUint8Array: O, extendBuiltins: () => {
          T(), O();
        } };
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return n;
        }), r.d(t, "b", function() {
          return i;
        });
        var s, n = { DEBUG: 0, INFO: 1, WARN: 2, ERROR: 3, REPORT: 99, DISABLE: 100, debug: 0, info: 1, warn: 2, error: 3, report: 99, disable: 100 }, i = (s = 1, function() {
          return s++;
        });
      }, function(e, t, r) {
        e.exports = function(e2) {
          for (var t2 = Math, r2 = e2, s = r2.lib, n = s.WordArray, i = s.Hasher, o = r2.algo, a = [], u = 0; u < 64; u++)
            a[u] = 4294967296 * t2.abs(t2.sin(u + 1)) | 0;
          var c = o.MD5 = i.extend({ _doReset: function() {
            this._hash = new n.init([1732584193, 4023233417, 2562383102, 271733878]);
          }, _doProcessBlock: function(e3, t3) {
            for (var r3 = 0; r3 < 16; r3++) {
              var s2 = t3 + r3, n2 = e3[s2];
              e3[s2] = 16711935 & (n2 << 8 | n2 >>> 24) | 4278255360 & (n2 << 24 | n2 >>> 8);
            }
            var i2 = this._hash.words, o2 = e3[t3 + 0], u2 = e3[t3 + 1], c2 = e3[t3 + 2], f = e3[t3 + 3], m = e3[t3 + 4], g = e3[t3 + 5], _ = e3[t3 + 6], b = e3[t3 + 7], v = e3[t3 + 8], y = e3[t3 + 9], M = e3[t3 + 10], k = e3[t3 + 11], I = e3[t3 + 12], S = e3[t3 + 13], D = e3[t3 + 14], q = e3[t3 + 15], C = i2[0], w = i2[1], A = i2[2], R = i2[3];
            C = l(C, w, A, R, o2, 7, a[0]), R = l(R, C, w, A, u2, 12, a[1]), A = l(A, R, C, w, c2, 17, a[2]), w = l(w, A, R, C, f, 22, a[3]), C = l(C, w, A, R, m, 7, a[4]), R = l(R, C, w, A, g, 12, a[5]), A = l(A, R, C, w, _, 17, a[6]), w = l(w, A, R, C, b, 22, a[7]), C = l(C, w, A, R, v, 7, a[8]), R = l(R, C, w, A, y, 12, a[9]), A = l(A, R, C, w, M, 17, a[10]), w = l(w, A, R, C, k, 22, a[11]), C = l(C, w, A, R, I, 7, a[12]), R = l(R, C, w, A, S, 12, a[13]), A = l(A, R, C, w, D, 17, a[14]), C = d(C, w = l(w, A, R, C, q, 22, a[15]), A, R, u2, 5, a[16]), R = d(R, C, w, A, _, 9, a[17]), A = d(A, R, C, w, k, 14, a[18]), w = d(w, A, R, C, o2, 20, a[19]), C = d(C, w, A, R, g, 5, a[20]), R = d(R, C, w, A, M, 9, a[21]), A = d(A, R, C, w, q, 14, a[22]), w = d(w, A, R, C, m, 20, a[23]), C = d(C, w, A, R, y, 5, a[24]), R = d(R, C, w, A, D, 9, a[25]), A = d(A, R, C, w, f, 14, a[26]), w = d(w, A, R, C, v, 20, a[27]), C = d(C, w, A, R, S, 5, a[28]), R = d(R, C, w, A, c2, 9, a[29]), A = d(A, R, C, w, b, 14, a[30]), C = p(C, w = d(w, A, R, C, I, 20, a[31]), A, R, g, 4, a[32]), R = p(R, C, w, A, v, 11, a[33]), A = p(A, R, C, w, k, 16, a[34]), w = p(w, A, R, C, D, 23, a[35]), C = p(C, w, A, R, u2, 4, a[36]), R = p(R, C, w, A, m, 11, a[37]), A = p(A, R, C, w, b, 16, a[38]), w = p(w, A, R, C, M, 23, a[39]), C = p(C, w, A, R, S, 4, a[40]), R = p(R, C, w, A, o2, 11, a[41]), A = p(A, R, C, w, f, 16, a[42]), w = p(w, A, R, C, _, 23, a[43]), C = p(C, w, A, R, y, 4, a[44]), R = p(R, C, w, A, I, 11, a[45]), A = p(A, R, C, w, q, 16, a[46]), C = h(C, w = p(w, A, R, C, c2, 23, a[47]), A, R, o2, 6, a[48]), R = h(R, C, w, A, b, 10, a[49]), A = h(A, R, C, w, D, 15, a[50]), w = h(w, A, R, C, g, 21, a[51]), C = h(C, w, A, R, I, 6, a[52]), R = h(R, C, w, A, f, 10, a[53]), A = h(A, R, C, w, M, 15, a[54]), w = h(w, A, R, C, u2, 21, a[55]), C = h(C, w, A, R, v, 6, a[56]), R = h(R, C, w, A, q, 10, a[57]), A = h(A, R, C, w, _, 15, a[58]), w = h(w, A, R, C, S, 21, a[59]), C = h(C, w, A, R, m, 6, a[60]), R = h(R, C, w, A, k, 10, a[61]), A = h(A, R, C, w, c2, 15, a[62]), w = h(w, A, R, C, y, 21, a[63]), i2[0] = i2[0] + C | 0, i2[1] = i2[1] + w | 0, i2[2] = i2[2] + A | 0, i2[3] = i2[3] + R | 0;
          }, _doFinalize: function() {
            var e3 = this._data, r3 = e3.words, s2 = 8 * this._nDataBytes, n2 = 8 * e3.sigBytes;
            r3[n2 >>> 5] |= 128 << 24 - n2 % 32;
            var i2 = t2.floor(s2 / 4294967296), o2 = s2;
            r3[15 + (n2 + 64 >>> 9 << 4)] = 16711935 & (i2 << 8 | i2 >>> 24) | 4278255360 & (i2 << 24 | i2 >>> 8), r3[14 + (n2 + 64 >>> 9 << 4)] = 16711935 & (o2 << 8 | o2 >>> 24) | 4278255360 & (o2 << 24 | o2 >>> 8), e3.sigBytes = 4 * (r3.length + 1), this._process();
            for (var a2 = this._hash, u2 = a2.words, c2 = 0; c2 < 4; c2++) {
              var l2 = u2[c2];
              u2[c2] = 16711935 & (l2 << 8 | l2 >>> 24) | 4278255360 & (l2 << 24 | l2 >>> 8);
            }
            return a2;
          }, clone: function() {
            var e3 = i.clone.call(this);
            return e3._hash = this._hash.clone(), e3;
          } });
          function l(e3, t3, r3, s2, n2, i2, o2) {
            var a2 = e3 + (t3 & r3 | ~t3 & s2) + n2 + o2;
            return (a2 << i2 | a2 >>> 32 - i2) + t3;
          }
          function d(e3, t3, r3, s2, n2, i2, o2) {
            var a2 = e3 + (t3 & s2 | r3 & ~s2) + n2 + o2;
            return (a2 << i2 | a2 >>> 32 - i2) + t3;
          }
          function p(e3, t3, r3, s2, n2, i2, o2) {
            var a2 = e3 + (t3 ^ r3 ^ s2) + n2 + o2;
            return (a2 << i2 | a2 >>> 32 - i2) + t3;
          }
          function h(e3, t3, r3, s2, n2, i2, o2) {
            var a2 = e3 + (r3 ^ (t3 | ~s2)) + n2 + o2;
            return (a2 << i2 | a2 >>> 32 - i2) + t3;
          }
          return r2.MD5 = i._createHelper(c), r2.HmacMD5 = i._createHmacHelper(c), e2.MD5;
        }(r(5));
      }, function(e, t, r) {
        "use strict";
        (function(e2) {
          var s = t;
          function n(e3, t2, r2) {
            for (var s2 = Object.keys(t2), n2 = 0; n2 < s2.length; ++n2)
              void 0 !== e3[s2[n2]] && r2 || (e3[s2[n2]] = t2[s2[n2]]);
            return e3;
          }
          function i(e3) {
            function t2(e4, r2) {
              if (!(this instanceof t2))
                return new t2(e4, r2);
              Object.defineProperty(this, "message", { get: function() {
                return e4;
              } }), Error.captureStackTrace ? Error.captureStackTrace(this, t2) : Object.defineProperty(this, "stack", { value: new Error().stack || "" }), r2 && n(this, r2);
            }
            return (t2.prototype = Object.create(Error.prototype)).constructor = t2, Object.defineProperty(t2.prototype, "name", { get: function() {
              return e3;
            } }), t2.prototype.toString = function() {
              return this.name + ": " + this.message;
            }, t2;
          }
          s.asPromise = r(101), s.base64 = r(102), s.EventEmitter = r(103), s.float = r(104), s.inquire = r(105), s.utf8 = r(106), s.pool = r(107), s.LongBits = r(108), s.isNode = Boolean(void 0 !== e2 && e2 && e2.process && e2.process.versions && e2.process.versions.node), s.global = s.isNode && e2 || "undefined" != typeof window && window || "undefined" != typeof self && self || this, s.emptyArray = Object.freeze ? Object.freeze([]) : [], s.emptyObject = Object.freeze ? Object.freeze({}) : {}, s.isInteger = Number.isInteger || function(e3) {
            return "number" == typeof e3 && isFinite(e3) && Math.floor(e3) === e3;
          }, s.isString = function(e3) {
            return "string" == typeof e3 || e3 instanceof String;
          }, s.isObject = function(e3) {
            return e3 && "object" == typeof e3;
          }, s.isset = s.isSet = function(e3, t2) {
            var r2 = e3[t2];
            return !(null == r2 || !e3.hasOwnProperty(t2)) && ("object" != typeof r2 || 0 < (Array.isArray(r2) ? r2 : Object.keys(r2)).length);
          }, s.Buffer = function() {
            try {
              var e3 = s.inquire("buffer").Buffer;
              return e3.prototype.utf8Write ? e3 : null;
            } catch (e4) {
              return null;
            }
          }(), s._Buffer_from = null, s._Buffer_allocUnsafe = null, s.newBuffer = function(e3) {
            return "number" == typeof e3 ? s.Buffer ? s._Buffer_allocUnsafe(e3) : new s.Array(e3) : s.Buffer ? s._Buffer_from(e3) : "undefined" == typeof Uint8Array ? e3 : new Uint8Array(e3);
          }, s.Array = "undefined" != typeof Uint8Array ? Uint8Array : Array, s.Long = s.global.dcodeIO && s.global.dcodeIO.Long || s.global.Long || s.inquire("long"), s.key2Re = /^true|false|0|1$/, s.key32Re = /^-?(?:0|[1-9][0-9]*)$/, s.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/, s.longToHash = function(e3) {
            return e3 ? s.LongBits.from(e3).toHash() : s.LongBits.zeroHash;
          }, s.longFromHash = function(e3, t2) {
            return e3 = s.LongBits.fromHash(e3), s.Long ? s.Long.fromBits(e3.lo, e3.hi, t2) : e3.toNumber(Boolean(t2));
          }, s.merge = n, s.lcFirst = function(e3) {
            return e3.charAt(0).toLowerCase() + e3.substring(1);
          }, s.newError = i, s.ProtocolError = i("ProtocolError"), s.oneOfGetter = function(e3) {
            for (var t2 = {}, r2 = 0; r2 < e3.length; ++r2)
              t2[e3[r2]] = 1;
            return function() {
              for (var e4 = Object.keys(this), r3 = e4.length - 1; -1 < r3; --r3)
                if (1 === t2[e4[r3]] && void 0 !== this[e4[r3]] && null !== this[e4[r3]])
                  return e4[r3];
            };
          }, s.oneOfSetter = function(e3) {
            return function(t2) {
              for (var r2 = 0; r2 < e3.length; ++r2)
                e3[r2] !== t2 && delete this[e3[r2]];
            };
          }, s.toJSONOptions = { longs: String, enums: String, bytes: String, json: true }, s._configure = function() {
            var e3 = s.Buffer;
            e3 ? (s._Buffer_from = e3.from !== Uint8Array.from && e3.from || function(t2, r2) {
              return new e3(t2, r2);
            }, s._Buffer_allocUnsafe = e3.allocUnsafe || function(t2) {
              return new e3(t2);
            }) : s._Buffer_from = s._Buffer_allocUnsafe = null;
          };
        }).call(this, r(11));
      }, function(e, t, r) {
        "use strict";
        e.exports = r(100);
      }, function(e, t) {
        var r = function() {
          return this;
        }();
        try {
          r = r || new Function("return this")();
        } catch (e2) {
          "object" == typeof window && (r = window);
        }
        e.exports = r;
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return l;
        });
        var s = r(2), n = r(1), i = r(0), o = function() {
          return (o = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, a = function(e2, t2) {
          var r2 = "function" == typeof Symbol && e2[Symbol.iterator];
          if (!r2)
            return e2;
          var s2, n2, i2 = r2.call(e2), o2 = [];
          try {
            for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
              o2.push(s2.value);
          } catch (e3) {
            n2 = { error: e3 };
          } finally {
            try {
              s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
            } finally {
              if (n2)
                throw n2.error;
            }
          }
          return o2;
        }, u = function(e2, t2, r2) {
          if (r2 || 2 === arguments.length)
            for (var s2, n2 = 0, i2 = t2.length; n2 < i2; n2++)
              !s2 && n2 in t2 || ((s2 = s2 || Array.prototype.slice.call(t2, 0, n2))[n2] = t2[n2]);
          return e2.concat(s2 || Array.prototype.slice.call(t2));
        }, c = i.X.Conversation, l = (d.prototype.destroy = function() {
          this.dbMgr = null, this.cnMgr = null, this.bus = null, this.lg = null, this.econf = null;
        }, d.prototype.setDBConv = function(e2) {
          Object.assign(e2, this.dbConv), this.dbConv = e2;
        }, d.prototype.sendCommand = function(e2, t2, r2) {
          var s2 = this, a2 = new Date(), u2 = a2.getTime(), l2 = u2 - this.lastSendTime, d2 = { time: a2, delay: l2, convID: this.convID, message: o({}, e2) };
          if (e2.messageID && e2.orderKey && (e2 = o(o({}, e2), { extendedData: "" })), this.initSendingMessage(e2, t2), e2.receiptStatus = i.ab.None, e2.isMentionAll = false, e2.mentionedUserIDs = [], e2.type == i.gb.Command && l2 < this.econf.cloudSetting.qps.send_msg)
            return d2.error = Object(n.y)(6000004), this.lg.w(c, i.W.SendMsg, d2), e2.sentStatus = i.eb.Failed, this.emitMsgSentStatus(e2), Promise.reject(d2.error);
          if (r2 && "function" == typeof r2.onMessageAttached)
            try {
              r2.onMessageAttached(e2);
            } catch (t3) {
            }
          return this.lastSendTime = u2, e2.type == i.gb.Barrage && l2 < this.econf.cloudSetting.qps.send_barrage_msg ? new Promise(function(t3) {
            setTimeout(function() {
              e2.sentStatus = i.eb.Success, e2.messageID = e2.localMessageID, e2.timestamp = s2.st.getRealClientTimestamp(u2), s2.emitMsgSentStatus(e2), s2.lg.i(c, i.W.SendMsg, d2), t3({ message: e2 });
            }, 80 * Math.random() + 50);
          }) : (a2 = e2.message, r2 = { msg_type: e2.type, priority_type: t2.priority, msg: "string" == typeof a2 ? Object(n.k)(a2) : a2, conv_id: this.convID, payload: Object(n.k)(e2.extendedData) }, l2 = o(o({}, this.getAssociatedReqBody()), { conv_id: this.convID, command_msg_info: r2 }), this.cnMgr.send(this.convTypeMap.commandMsgCmd, l2).then(function(t3) {
            if (u2 = s2.st.getRealClientTimestamp(u2), t3.code)
              return e2.sentStatus = i.eb.Failed, e2.messageID = e2.localMessageID, e2.timestamp = u2, s2.emitMsgSentStatus(e2), d2.error = s2.withSendMessageErrorCode(t3.code, t3.message), s2.lg.w(c, i.W.SendMsg, d2), Promise.reject(d2.error);
            var r3 = t3.msg_id;
            t3 = t3.command_svr_info;
            return e2.sentStatus = i.eb.Success, e2.messageID = t3 ? t3.msg_id : r3, e2.timestamp = t3 ? t3.msg_time : u2, s2.emitMsgSentStatus(e2), s2.lg.i(c, i.W.SendMsg, d2), { message: e2 };
          }));
        }, d.prototype.sendMessage = function(e2, t2, r2, s2) {
          var a2 = (l2 = new Date()).getTime(), u2 = a2 - this.lastSendTime, l2 = { time: l2, delay: u2, convID: this.convID, message: o({}, e2) };
          return this.initSendingMessage(e2, t2), u2 < this.econf.cloudSetting.qps.send_msg ? (l2.error = Object(n.y)(6000004), delete l2.message, l2.msgType = e2.type, this.lg.w(c, i.W.SendMsg, l2), e2.sentStatus = i.eb.Failed, this.emitMsgSentStatus(e2), Promise.reject(l2.error)) : (this.lastSendTime = a2, this.emitSendingMessage(e2, s2, r2), this.innerSendMsg(Object(n.k)(e2.message), e2, t2, false, i.W.SendMsg, l2, s2));
        }, d.prototype.sendMediaMessage = function(e2, t2, r2, a2) {
          var u2, l2, d2, p, h = this, f = { time: new Date(), uploadTime: 0, convID: this.convID, message: o({}, e2) }, m = e2.type >= i.gb.Image && e2.type <= i.gb.Video, g = e2.type == i.gb.Combine ? e2.type : e2.type - 10;
          if (m && (e2.isServerMessage || e2.sentStatus != i.eb.Success) && (e2.fileUID = ""), this.initSendingMessage(e2, t2), this.emitSendingMessage(e2, a2, r2), e2.type == i.gb.Combine && (e2.aesKey = e2.aesKey || s.a.getInstance().crypto.generateNonce(), u2 = e2.conversationType, l2 = e2.localMessageID, d2 = e2.conversationID, p = e2.aesKey, e2.combineID = "0-" + u2 + "_" + l2 + "_" + p + "-" + d2), e2.fileDownloadUrl || e2.fileUID)
            return this.innerSendMsg(this.encodeMediaMsgBody(e2, g), e2, t2, false, i.W.SendMediaMsg, f, a2);
          var _ = e2.type == i.gb.Combine ? this.getCombineMessageFile(e2) : e2.fileLocalPath;
          return this.dbMgr.getFileInfo(_).then(function(t3) {
            return e2.fileUID = t3.md5, e2.fileName = e2.fileName || t3.name, e2.fileSize = +e2.fileSize || t3.size || 1, h.saveLocalMessage(e2, i.eb.Sending), t3 = { md5: e2.fileUID, name: e2.fileName, size: e2.fileSize, file_type: g, duration: h.getMediaMessageDuration(e2) }, h.cnMgr.send(i.d.file_upload, t3);
          }).then(function(s2) {
            if (s2.code)
              throw Object(n.y)(6000212, s2.message, s2.code);
            function i2(t3) {
              if (r2 && "function" == typeof r2.onMediaUploadingProgress && m) {
                var s3 = t3.loaded || t3.totalBytesSent || t3.totalBytesWritten || 0;
                t3 = t3.total || t3.totalBytesExpectedToSend || t3.totalBytesExpectedToWrite || 1;
                try {
                  r2.onMediaUploadingProgress(e2, s3, t3);
                } catch (t4) {
                }
              }
            }
            if (i2({ loaded: 0, total: e2.fileSize }), 1 == s2.state)
              return i2({ loaded: e2.fileSize, total: e2.fileSize }), h.fetchFileProcess(e2, t2, g, f, a2);
            var o2 = Date.now(), u3 = { file_size: e2.fileSize, file_type: e2.type, file_env: n.p ? n.p._zim_env : "" };
            return h.dbMgr.uploadFile(s2.upload_req, _, i2).then(function() {
              return u3.time_consumed = Date.now() - o2, h.dr.reportSDKEvent("/sdk/file/upload_msg", u3), f.uploadTime = u3.time_consumed, h.fetchFileProcess(e2, t2, g, f, a2);
            }, function(e3) {
              throw u3.time_consumed = Date.now() - o2, u3.error = e3.code, u3.error_message = e3.message, h.dr.reportSDKEvent("/sdk/file/upload_msg", u3), e3.code = 0, e3;
            });
          }).catch(function(e3) {
            var t3 = e3 ? e3.code : 0, r3 = e3 ? e3.stack || e3.message || e3.errMsg : t3;
            f.error = t3 ? e3 : Object(n.y)(6000203, r3), e3 = i.W.SendMediaMsg;
            throw h.lg.w(c, e3, f), t3 || (t3 = n.p ? n.p._zim_env : "", h.dr.reportSDKEvent("/sdk/log", { error_message: e3 + t3 + r3 }), h.lg.upload(e3, true)), f.error;
          });
        }, d.prototype.deleteMessages = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), convID: this.convID, config: t2 };
          if (t2 && t2.isAlsoDeleteServerMessage) {
            if (0 == (t2 = e2.filter(function(e3) {
              return !e3.isUserInserted && !e3.isBroadcastMessage && e3.sentStatus == i.eb.Success;
            })).length)
              return this.deleteLocalMessages(e2, s2);
            var o2 = this.convType == i.r.Peer ? i.d.c2c_del_msg : i.d.gp_del_msg;
            t2 = this.convType == i.r.Peer ? { conv_id: this.convID, conv_type: this.convType, msg_ids: t2.map(function(e3) {
              return e3.messageID;
            }) } : { conv_id: this.convID, conv_msg_seq: t2.map(function(e3) {
              return e3.messageSeq;
            }) };
            return this.cnMgr.send(o2, t2).then(function(t3) {
              return t3.code ? (s2.error = Object(n.y)(6000602, t3.message, t3.code), r2.lg.w(c, i.W.DelMsg, s2), Promise.reject(s2.error)) : r2.deleteLocalMessages(e2, s2);
            });
          }
          return this.deleteLocalMessages(e2, s2);
        }, d.prototype.deleteAllMessage = function(e2) {
          var t2, r2 = this, s2 = { time: new Date(), convID: this.convID, config: e2 };
          return e2 && e2.isAlsoDeleteServerMessage ? (e2 = this.convType == i.r.Peer ? i.d.c2c_del_all_msg : i.d.gp_del_all_msg, t2 = { conv_id: this.convID, conv_type: this.convType }, this.cnMgr.send(e2, t2).then(function(e3) {
            return e3.code ? (s2.error = Object(n.y)(6000602, e3.message, e3.code), r2.lg.w(c, i.W.DelAllMsg, s2), Promise.reject(s2.error)) : r2.deleteLocalAllMessage(s2);
          })) : this.deleteLocalAllMessage(s2);
        }, d.prototype.queryHistoryMessage = function(e2) {
          var t2 = this;
          return new Promise(function(r2) {
            function s2(e3) {
              (_2 = e3.filter(function(e4) {
                return e4.sentStatus == i.eb.Sending;
              })).length && t2.queryMessageStatus(_2);
              var s3 = [], a2 = t2.convType == i.r.Peer, u2 = t2.dbConv.maxSendReceiptMsgSeq || 0, f2 = t2.dbConv.maxRecvReceiptMsgSeq || 0, m2 = a2 ? t2.econf.mailHBConfig.history_c2c_msg_seq : t2.dbConv.historyMsgSeq, g2 = Array.from(t2.econf.msgExtraMap.values()).filter(function(e4) {
                return 0 < e4.rootRepliedCount && e4.conversationID == t2.convID && e4.conversationType == t2.convType;
              }), _2 = (e3 = e3.map(function(e4) {
                return (t2.mergeMessageExtra(e4, g2, u2, f2, m2, a2) || e4.type == i.gb.Tips && 0 == e4.event) && s3.push(e4), t2.pb.handleDBMessage(t2.econf, e4);
              }), t2.filterReceiptMemberMsg(e3)), y = (s3.length && (t2.updateMsgCacheList(s3), t2.dbMgr.addMessageList(t2.convID, t2.convType, s3)), l2 ? e3.sort(function(e4, t3) {
                return t3.orderKey - e4.orderKey;
              }) : e3.sort(function(e4, t3) {
                return e4.orderKey - t3.orderKey;
              }), 0), M = (y = n2 ? e3.findIndex(function(e4) {
                return n2 === e4.messageID;
              }) + 1 : y) + o2;
              e3 = e3.slice(y, M), l2 && e3.sort(function(e4, t3) {
                return e4.orderKey - t3.orderKey;
              }), v.count = e3.length, v.historySeq = m2, a2 && (v.sendSeq = u2, v.recvSeq = f2), b.seqs = [d2, p, h, y, o2].join(), v.statusMap = b, t2.lg.i(c, i.W.QueryHistoryMsg, v), r2({ list: e3, receiptMemberMsgs: _2 });
            }
            var n2 = e2.nextMessage ? e2.nextMessage.messageID : "", o2 = e2.count, l2 = e2.reverse, d2 = t2.dbConv.msgSeq || 0, p = t2.dbConv.maxSeq || 0, h = e2.nextMessage ? e2.nextMessage.messageSeq : 0, f = !h && l2, m = false, g = 0, _ = 0, b = (l2 ? (_ = h ? h - 1 : d2, g = Math.max(t2.dbConv.deletedMsgMaxSeq || 0, _ - o2)) : (g = Math.max(t2.dbConv.deletedMsgMaxSeq || 0, h), _ = Math.min(g + o2, d2)), { reverse: l2, patch: 0, seqs: "" }), v = { time: new Date(), convID: t2.convID, smin: g, smax: _, lmin: 0, lmax: 0, dbCount: 0, count: 0 };
            t2.dbMgr.getMessageList(t2.dbConv, e2).then(function(r3) {
              r3.length <= 0 && (t2.dbConv.msgSeq = 0, t2.dbConv.maxSeq = 0, p = d2 = 0);
              var n3 = t2.econf.user.deleteAllMsgTime || 0, o3 = t2.dbConv.deletedMsgMaxSeq || 0, c2 = t2.dbConv.deletedMsgSeqs || [], h2 = r3.filter(function(e3) {
                return !e3.isUserInserted && e3.sentStatus == i.eb.Success;
              }).map(function(e3) {
                return e3.messageSeq;
              }), y = (c2.length && h2.push.apply(h2, u([], a(c2), false)), h2.sort(function(e3, t3) {
                return e3 - t3;
              }), h2[0] || 0), M = h2[h2.length - 1] || 0;
              if (v.dbCount = r3.length, v.lmin = y, v.lmax = M, !f && M - y < h2.length && y <= g + 1 && _ <= M)
                return s2(r3);
              function k(a2) {
                var u2, d3;
                t2.dbMgr && (a2.list.forEach(function(e3) {
                  var r4 = e3.msg_svr_info.conv_msg_seq, s3 = e3.msg_svr_info.msg_time;
                  R.push(r4), w.has(r4) || C && !(-1 == c2.indexOf(r4) && o3 < r4 && n3 < s3) || (D < r4 && (D = r4), (!S || r4 < S) && (S = r4), w.set(r4, t2.transform2Message(e3, true)));
                }), u2 = f ? m : l2, a2.nextSeq && (!u2 && D < _ || u2 && g < S) ? t2.fetchSvrMessage(a2.nextSeq, ++q, A, u2).then(k) : (b.patch = w.size, (d3 = t2.dbConv.state) != i.q.Delete && w.size && (t2.dbConv.state = i.q.Normal), t2.insertDeletedMsgSeqs(R, v), w.size ? t2.saveMsgRepliedInfo(w, true, false).then(function(r4) {
                  t2.saveMessageList(r4, D, d3, i.db.Fetch).then(function() {
                    return t2.dbMgr.getMessageList(t2.dbConv, e2);
                  }).then(s2);
                }) : s2(r3)));
              }
              var I, S = 0, D = 0, q = 1, C = t2.convType != i.r.Room, w = /* @__PURE__ */ new Map(), A = i.v.Biz, R = [];
              if (f)
                p && d2 <= p ? t2.fetchSvrMessage(d2, q, A, m).then(k) : (m = true, I = Math.min(100, d2 - p), t2.fetchSvrMessage(-1, q, A, m, I).then(k));
              else {
                var x = l2 ? y : M, T = 100;
                if (l2)
                  if (_ <= M) {
                    for (var O = h2.length - 1; 0 < O; O--)
                      if (1 < h2[O] - h2[O - 1]) {
                        x = h2[O], T = Math.min(100, h2[O] - h2[O - 1]), b.seqs = h2[O - 1] + "," + x;
                        break;
                      }
                  } else
                    x = _ + 1, T = Math.min(100, _ + 1 - M);
                else if (x = M, y <= g + 1) {
                  for (O = 1; O < h2.length; O++)
                    if (1 < h2[O] - h2[O - 1]) {
                      x = h2[O - 1], T = Math.min(100, h2[O] - h2[O - 1]), b.seqs = x + "," + h2[O];
                      break;
                    }
                } else
                  x = g, T = Math.min(100, y - g + 1);
                t2.fetchSvrMessage(x, q, A, l2, T).then(k);
              }
            });
          });
        }, d.prototype.insertMsg = function(e2) {
          var t2 = this, r2 = (Object.isFrozen(e2) && (e2 = JSON.parse(JSON.stringify(e2))), this.dbConv.msgSeq || 0), s2 = this.dbConv.maxOrderKey || 0, n2 = { convID: this.convID, dbSeq: r2, orderKey: s2 }, o2 = (s2 = (e2.clientSeq = ++this.econf.clientMsgSeq, e2.clientSid = this.econf.convSid, e2.localMessageID = this.convType + e2.clientSid + e2.clientSeq, e2.messageID = e2.localMessageID, e2.messageSeq = 0, e2.orderKey = s2 + 1, e2.conversationID = this.convID, e2.conversationType = this.convType, e2.direction = i.Y.Send, e2.sentStatus = i.eb.Success, e2.timestamp = this.st.getRealClientTimestamp(), e2.isUserInserted = true, e2.receiptStatus = i.ab.None, JSON.parse(JSON.stringify(e2))), this.dbConv.state);
          return o2 == i.q.Delete && (this.dbConv.state = i.q.Normal), this.saveMessageList([s2], r2, o2, i.db.Insert).then(function() {
            return t2.lg.i(c, i.W.InsertMsg, n2), { message: e2 };
          });
        }, d.prototype.queryReplyMsg = function(e2, t2) {
          var r2 = this, s2 = e2.messageSeq, n2 = e2.repliedInfo ? e2.repliedInfo.rootMessageSeq : s2, o2 = this.createMessageExtra(n2, n2 == s2 ? e2.messageID : ""), a2 = (e2 = o2.rootRepliedMaxSeq || 0, o2.rootRepliedCount || 0), u2 = { time: new Date(), convID: this.convID, config: t2, rootSeq: n2, msgSeq: s2, oldMaxSeq: e2, oldReplyCount: a2 }, l2 = this.convType == i.r.Peer ? i.d.c2c_msg_reply : i.d.gp_msg_reply;
          return (e2 < s2 ? this.cnMgr.send(l2, { conv_id: this.convID, conv_msg_seq: n2 }).then(function(e3) {
            if (e3.code || !e3.total_count || !e3.conv_msg_seq.length)
              return e3.total_count && (o2.rootRepliedCount = e3.total_count), r2.dbMgr.getReplyMessageListByRootSeq(r2.convID, r2.convType, n2);
            var t3, s3 = e3.conv_msg_seq, i2 = (s3.sort(function(e4, t4) {
              return e4 - t4;
            }), s3.find(function(e4) {
              return e4 == n2;
            }) || s3.unshift(n2), o2.rootRepliedMaxSeq = s3[s3.length - 1], o2.rootRepliedCount = e3.total_count, e3.root_info && (t3 = (e3 = e3.root_info).peer_user_id, e3 = e3.mute_list_seq, t3 && (o2.rootRepliedSender = t3), e3 && (o2.rootRepliedSentTime = e3), !o2.rootRepliedState && r2.isMsgDel(+n2, o2.rootRepliedSentTime || 0) && (o2.rootRepliedState = 1)), o2.rootRepliedCount <= r2.econf.mailHBConfig.reply_msg_seq_count);
            return r2.batchFetchMsgList(s3, i2, true).then(function(e4) {
              return i2 ? Array.from(e4.values()) : r2.dbMgr.getReplyMessageListByRootSeq(r2.convID, r2.convType, n2);
            });
          }) : this.dbMgr.getReplyMessageListByRootSeq(this.convID, this.convType, n2)).then(function(e3) {
            e3.sort(function(e4, t3) {
              return e4.messageSeq - t3.messageSeq;
            }), e3 = e3.map(function(e4) {
              return r2.pb.handleDBMessage(r2.econf, e4);
            });
            var s3 = o2.rootRepliedCount, l3 = { messageSeq: n2, state: i.bb.Normal, senderUserID: "", sentTime: 0, repliedCount: s3 };
            if (e3[0] && e3[0].messageSeq == n2) {
              var d2 = e3[0], p = (e3.shift(), d2.rootRepliedCount = s3, o2.reactions);
              if (p) {
                var h, f = [];
                for (h in p) {
                  var m = p[h];
                  f.push({ conversationID: d2.conversationID, conversationType: d2.conversationType, messageID: d2.messageID, userList: m.userList, totalCount: m.totalCount, reactionType: h, isSelfIncluded: m.isSelfIncluded });
                }
                d2.reactions = f;
              }
              l3.senderUserID = d2.senderUserID, l3.sentTime = d2.timestamp, l3.message = d2, o2.messageID = d2.messageID, o2.rootRepliedSender = d2.senderUserID, o2.rootRepliedSentTime = d2.timestamp, a2 < s3 && (g = { conversationID: r2.convID, conversationType: r2.convType, count: s3, messageID: d2.messageID }, r2.bus.emit(i.u.MsgRepliedCount, { infos: [g] }));
            } else
              o2.rootRepliedSender || e3.some(function(e4) {
                if (e4.repliedInfo && e4.repliedInfo.messageSeq == n2)
                  return o2.rootRepliedSender = e4.repliedInfo.senderUserID, o2.rootRepliedSentTime = e4.repliedInfo.sentTime, true;
              }), o2.rootRepliedState || (o2.rootRepliedState = r2.isMsgDel(n2, o2.rootRepliedSentTime || 0) ? 1 : 2), l3.state = o2.rootRepliedState, l3.senderUserID = o2.rootRepliedSender, l3.sentTime = o2.rootRepliedSentTime;
            r2.dbMgr.addMessageExtraList([o2], "replyCount");
            var g = e3.length, _ = (v = t2.nextFlag || 0) ? e3.findIndex(function(e4) {
              return v === e4.messageSeq;
            }) : 0, b = _ + Math.min(i.m.MAX_QUERY_PAGE_COUNT, t2.count), v = (null == (y = e3[b]) ? void 0 : y.messageSeq) || 0, y = (e3 = e3.slice(_, b), o2.rootRepliedMaxSeq);
            return Object.assign(u2, { maxSeq: y, replyCount: s3, total: g, count: e3.length, start: _, end: b, nextFlag: v }), r2.lg.i(c, i.W.QueryReplyMsg, u2), { nextFlag: v, rootRepliedInfo: l3, messageList: e3 };
          });
        }, d.prototype.queryMessages = function(e2) {
          var t2 = this, r2 = { time: new Date(), convID: this.convID, count: 0, seqs: e2.join() };
          return e2 = Array.from(new Set(e2)), this.batchFetchMsgList(e2).then(function(e3) {
            return r2.count = e3.size, t2.lg.i(c, i.W.QueryMsgs, r2), (e3 = Array.from(e3.values())).sort(function(e4, t3) {
              return e4.messageSeq - t3.messageSeq;
            }), { conversationID: t2.convID, conversationType: t2.convType, messageList: e3 };
          });
        }, d.prototype.onPushMessage = function(e2, t2, r2) {
          var s2, n2 = this.transform2Message(e2, false), o2 = (t2 = (this.updateC2CMsgSeq(n2.c2cSeq), t2 && (this.dbConv.sendMsgCount = t2), n2.type == i.gb.Tips && this.dbConv.deletedMsgCount++, this.econf.user.userID), this.dbConv.state), a2 = (this.dbConv.state = i.q.Normal, this.convType != i.r.Room && n2.direction == i.Y.Receive && (t2 = -1 != n2.mentionedUserIDs.indexOf(t2) ? 1 : 0, a2 = n2.isMentionAll ? 2 : 0, (t2 || a2) && ((s2 = this.dbConv.mentionedInfoList || []).push({ type: t2 | a2, messageID: n2.messageID, fromUserID: n2.senderUserID, messageSeq: n2.messageSeq }), this.dbConv.mentionedInfoList = s2)), n2.repliedInfo && (this.addRootReplyMsg(e2.msg_info.reply_info, r2), this.preFetchReplyMsg(((t2 = {})[n2.repliedInfo.rootMessageSeq] = n2.messageSeq, t2))), this.saveMessageList([n2], n2.messageSeq, o2, i.db.Push), [this.pb.handleDBMessage(this.econf, n2)]);
          return this.bus.emit(this.convTypeMap.receiveMessage, { messageList: a2, fromConversationID: this.convID }), n2;
        }, d.prototype.onPushMsgDelete = function(e2, t2) {
          var r2, s2 = this, n2 = this.dbConv.deletedMsgSeqs || [];
          e2.every(function(e3) {
            return -1 != n2.indexOf(e3);
          }) || (r2 = this.dbConv.readMsgSeq || 0, this.dbMgr.deleteMessageListFromRemote(this.convID, this.convType, e2, r2, function(r3, n3, o2) {
            0 < r3.length && (r3 = { conversationID: s2.convID, conversationType: s2.convType, isDeleteConversationAllMessage: false, messageList: r3, messageDeleteType: 0 }, s2.bus.emit(i.u.MsgDeleted, r3)), s2.afterDeleteLocalMessages(e2, n3, false, t2, o2), s2.checkReplyMsgChange(e2, true, true);
          }));
        }, d.prototype.onPushAllMsgDelete = function(e2, t2) {
          var r2, s2, n2, o2, a2, u2 = this, c2 = this.dbConv.deletedMsgMaxSeq || 0;
          e2 <= c2 || (r2 = Math.max(e2, this.dbConv.readMsgSeq || 0), this.dbConv.readMsgSeq = r2, this.dbConv.deletedMsgMaxSeq = e2, s2 = [], this.dbConv.deletedMsgSeqs && this.dbConv.deletedMsgSeqs.length && (this.dbConv.deletedMsgSeqs = this.dbConv.deletedMsgSeqs.filter(function(t3) {
            return r2 < t3 && s2.push(t3), e2 < t3;
          })), this.filterMentionedInfoList(), n2 = this.dbConv.msgSeq || 0, o2 = this.dbConv.sendMsgCount || 0, c2 = function(s3) {
            var a3 = { conversationID: u2.convID, conversationType: u2.convType, isDeleteConversationAllMessage: true, messageList: [], messageDeleteType: 1 }, c3 = (a3 = (u2.bus.emit(i.u.MsgDeleted, a3), [0, u2.dbConv.unreadMessageCount, 0]), false), l2 = ((l2 = (u2.dbConv.deletedMsgCount = s3, u2.dbConv.lastMessage)) && !l2.isUserInserted && l2.sentStatus == i.eb.Success && l2.messageSeq == e2 && (c3 = true, a3[0] = l2.messageSeq, u2.dbConv.lastMessage = void 0), Math.max(n2 - r2 - o2 - s3, 0));
            (a3[2] = l2) != u2.dbConv.unreadMessageCount && (c3 = true, u2.dbConv.unreadMessageCount = l2, u2.emitUnreadMessageCount(t2)), c3 && u2.emitConvChanged(i.o.Updated, t2), u2.dbMgr.addConversationList([u2.dbConv], t2 + a3.join());
          }, (a2 = 0 < s2.length) || c2(this.dbConv.deletedMsgCount), this.dbMgr.deleteAllMessageFromRemote(this.convID, this.convType, e2, s2, a2 ? c2 : void 0));
        }, d.prototype.filterMentionedInfoList = function() {
          var e2, t2, r2 = this.dbConv.mentionedInfoList;
          r2 && r2.length && (e2 = this.dbConv.deletedMsgSeqs || [], t2 = this.dbConv.readMsgSeq || 0, this.dbConv.mentionedInfoList = r2.filter(function(r3) {
            return r3.messageSeq > t2 && -1 == e2.indexOf(r3.messageSeq);
          }));
        }, d.prototype.insertDeletedMsgSeqs = function(e2, t2) {
          e2.sort(function(e3, t3) {
            return e3 - t3;
          });
          for (var r2 = [], s2 = 0; s2 < e2.length - 1; s2++) {
            var n2 = e2[s2 + 1] - e2[s2];
            if (1 < n2)
              for (var i2 = 1; i2 < n2; i2++)
                r2.push(e2[s2] + i2);
          }
          r2.length && (t2 && (t2.delSeqs = r2), (t2 = this.dbConv.deletedMsgSeqs) && t2.length && r2.push.apply(r2, u([], a(t2), false)), this.dbConv.deletedMsgSeqs = Array.from(new Set(r2)), this.filterMentionedInfoList());
        }, d.prototype.deleteLocalMessages = function(e2, t2) {
          var r2 = this, s2 = [], n2 = this.dbConv.readMsgSeq || 0, o2 = [], a2 = 0;
          return e2.forEach(function(e3) {
            var t3;
            e3.isUserInserted || e3.isBroadcastMessage || e3.sentStatus != i.eb.Success || (o2.push(e3.messageSeq), e3.direction === i.Y.Receive && e3.messageSeq > n2 && a2++, (t3 = r2.econf.msgExtraMap.get(r2.getMsgExtraKey(e3.messageSeq))) && !t3.rootRepliedSender && (t3.rootRepliedState = i.bb.Deleted, t3.rootRepliedSender = e3.senderUserID, t3.rootRepliedSentTime = e3.timestamp, s2.push(t3)));
          }), this.dbMgr.deleteMessageList(this.convID, this.convType, e2).then(function(e3) {
            return r2.afterDeleteLocalMessages(o2, a2, true, "delMsgs", e3), r2.checkReplyMsgChange(o2, true, false), s2.length && r2.dbMgr.addMessageExtraList(s2, "delRoot"), r2.lg.i(c, i.W.DelMsg, t2), o2;
          });
        }, d.prototype.afterDeleteLocalMessages = function(e2, t2, r2, s2, n2) {
          var o2, a2 = false, u2 = (e2 = (this.dbConv.deletedMsgSeqs = e2.concat(this.dbConv.deletedMsgSeqs || []), this.filterMentionedInfoList(), this.dbConv.lastMessage ? this.dbConv.lastMessage.messageID : ""), n2 ? n2.messageID : "");
          n2 && u2 != e2 && (this.dbConv.orderKey = n2.timestamp), e2 != u2 && (a2 = true), this.dbConv.lastMessage = n2, n2 = [e2, u2, 0, this.dbConv.unreadMessageCount, t2];
          0 < t2 && (t2 += this.dbConv.deletedMsgCount || 0, this.dbConv.deletedMsgCount = t2, e2 = this.dbConv.readMsgSeq || 0, u2 = this.dbConv.msgSeq || 0, o2 = this.dbConv.sendMsgCount || 0, e2 = Math.max(u2 - e2 - o2 - t2, 0), n2[2] = e2, r2 && 0 == e2 && (this.dbConv.readMsgSeq = u2, this.dbConv.sendMsgCount = 0, this.dbConv.deletedMsgCount = 0, this.updateServerReadMsgSeq(u2)), this.dbConv.unreadMessageCount != e2 && (a2 = true, this.dbConv.unreadMessageCount = e2, this.emitUnreadMessageCount(s2))), a2 && this.emitConvChanged(i.o.Updated, s2), this.dbMgr.addConversationList([this.dbConv], s2 + n2.join());
        }, d.prototype.deleteLocalAllMessage = function(e2) {
          this.dbMgr.deleteAllMessage(this.convID, this.convType);
          var t2 = this.dbConv.msgSeq || 0, r2 = (this.dbConv.sendMsgCount = 0, this.dbConv.deletedMsgCount = 0, this.dbConv.unreadMessageCount = 0, this.dbConv.readMsgSeq = t2, this.dbConv.deletedMsgMaxSeq = t2, this.dbConv.deletedMsgSeqs = [], this.dbConv.mentionedInfoList = [], this.dbConv.lastMessage = void 0, "delAllMsg");
          return this.emitConvChanged(i.o.Updated, r2), this.emitUnreadMessageCount(r2), this.updateServerReadMsgSeq(t2), this.dbMgr.addConversationList([this.dbConv], r2), this.lg.i(c, i.W.DelAllMsg, e2), Promise.resolve({ conversationID: this.convID, conversationType: this.convType });
        }, d.prototype.updateServerReadMsgSeq = function(e2) {
          this.dbConv.state || (e2 = { conv_id: this.convID, conv_type: this.convType, read_seq: e2 }, this.cnMgr.send(i.d.conv_read, e2, i.j.SDK));
        }, d.prototype.fetchSvrMessage = function(e2, t2, r2, s2, n2) {
          return n2 = this.getFetchMessageReqBody(e2, r2, s2 ? 1 : 0, n2 || 100), this.convType != i.r.Room || n2 ? (n2.degree = t2, t2 = (n2.how = r2) == i.v.Biz ? i.j.API : i.j.SDK, this.cnMgr.send(this.convTypeMap.fetchMsgList, n2, t2).then(function(t3) {
            if (t3.code)
              return t3.list = [], t3;
            var n3 = t3.max_conv_msg_seq, o2 = t3.next_conv_msg_seq, a2 = { fetch_end: t3.fetch_end, next_seq: o2, maxSeq: n3, nextSeq: o2, list: t3.msgs };
            return (r2 == i.v.SDKLogin || t3.fetch_end || !s2 && (n3 ? n3 <= e2 || n3 <= o2 : o2 <= e2)) && (a2.nextSeq = 0), a2;
          })) : Promise.resolve({ nextSeq: 0, list: [] });
        }, d.prototype.saveLocalMessage = function(e2, t2, r2) {
          e2.messageID || (e2.messageID = e2.localMessageID), e2.sentStatus = t2, e2.timestamp = this.st.getRealClientTimestamp(), e2.messageSeq = 0, e2.orderKey = (this.dbConv.maxOrderKey || 0) + 1;
          var s2 = JSON.parse(JSON.stringify(e2)), n2 = t2 == i.eb.Sending ? i.db.Sending : i.db.Sended;
          this.saveMessageList([s2], this.dbConv.msgSeq || 0, this.dbConv.state, n2), t2 != i.eb.Sending && this.emitMsgSentStatus(e2, r2);
        }, d.prototype.saveMessageList = function(e2, t2, r2, s2) {
          if (0 == e2.length)
            return Promise.resolve();
          e2.sort(function(e3, t3) {
            return e3.orderKey - t3.orderKey;
          });
          var n2, o2, a2, u2 = { maxSeq: this.dbConv.maxSeq || 0, msgSeq: this.dbConv.msgSeq || 0, maxOrderKey: this.dbConv.maxOrderKey || 0, lastMessage: this.dbConv.lastMessage || { messageID: "" } }, c2 = u2.lastMessage.orderKey || 0, l2 = e2[e2.length - 1], d2 = (this.dbConv.maxOrderKey = Math.max(u2.maxOrderKey, l2.orderKey), s2 != i.db.Fetch && u2.maxSeq + 1 != t2 || (this.dbConv.maxSeq = Math.max(u2.maxSeq, t2)), t2 = Math.max(u2.msgSeq, t2), this.dbConv.msgSeq = t2, "saveMsgs_" + s2);
          return this.convType == i.r.Room || s2 != i.db.Fetch && s2 != i.db.Push || (a2 = this.dbConv.readMsgSeq || 0, n2 = this.dbConv.sendMsgCount || 0, o2 = this.dbConv.deletedMsgCount || 0, this.convType != i.r.Group || s2 != i.db.Push || u2.msgSeq || (this.dbConv.readMsgSeq = a2 = t2 - 1), (t2 = Math.max(t2 - a2 - n2 - o2, 0)) != this.dbConv.unreadMessageCount && (this.dbConv.unreadMessageCount = t2, this.emitUnreadMessageCount(d2))), this.convType != i.r.Room && u2.lastMessage.messageID != l2.messageID && (l2.orderKey >= c2 || s2 == i.db.Push) && (this.dbConv.draft = "", this.dbConv.orderKey = l2.timestamp, this.dbConv.lastMessage = this.pb.handleDBMessage(this.econf, l2), s2 != i.db.Sending && s2 != i.db.Tips && (a2 = i.o.Added, (s2 == i.db.Sended || u2.maxOrderKey && r2 != i.q.Delete) && (a2 = this.dbConv.state == i.q.Disable ? i.o.Disabled : i.o.Updated), this.emitConvChanged(a2, d2))), this.dbMgr.addConversationList([this.dbConv], d2), this.dbMgr.addMessageList(this.convID, this.convType, e2);
        }, d.prototype.transform2Message = function(e2, t2) {
          var r2 = this.pb.decodeSvrMsg(this.econf, e2, this.convID, this.convType, this.rootReplyMsgMap);
          return this.calculateMessageOrderKey(r2, true), r2.type != i.gb.Revoke && e2.msg_info.msg_status && (r2.receiptStatus = Object(n.v)(e2.msg_info.msg_status).receipt, t2 && this.dbMgr.checkMessageStatus(r2), e2 = this.convType == i.r.Peer ? this.econf.mailHBConfig.history_c2c_msg_seq : this.dbConv.historyMsgSeq, t2 = this.convType == i.r.Peer ? r2.c2cSeq : r2.messageSeq, r2.receiptStatus == i.ab.Processing && e2 && t2 && t2 <= e2 && (r2.receiptStatus = i.ab.Expired)), r2.repliedInfo && this.isMsgDel(r2.repliedInfo.messageSeq, r2.repliedInfo.sentTime) && (r2.repliedInfo.state = 1), r2;
        }, d.prototype.withSendMessageErrorCode = function(e2, t2) {
          return t2 = Object(n.y)(6000203, t2, e2), this.convType == i.r.Group && -1 == this.auditErrorCodes.indexOf(t2.code) && (t2.code = 6000203), t2;
        }, d.prototype.calculateMessageOrderKey = function(e2, t2) {
          if (!e2.orderKey) {
            var r2 = i.m.MESSAGE_SEQ_MULTIPLIER, s2 = e2.clientSeq, n2 = e2.clientSid;
            if (!s2 || !n2)
              return e2.orderKey = e2.messageSeq * r2, e2.orderKey;
            var o2 = this.msgCaches[e2.senderUserID];
            if (!o2)
              return e2.orderKey = e2.messageSeq * r2, t2 && (this.msgCaches[e2.senderUserID] = o2 = [e2]), e2.orderKey;
            var a2 = o2.find(function(t3) {
              return t3.messageID == e2.messageID;
            });
            if (a2 && a2.orderKey)
              return e2.orderKey = a2.orderKey, a2.orderKey;
            var u2 = 0, c2 = 0, l2 = 0, d2 = 0, p = (o2.forEach(function(e3) {
              var t3 = e3.clientSeq;
              e3.clientSid == n2 && t3 && (s2 < t3 && (!c2 || t3 < c2) ? (c2 = t3, d2 = e3.messageSeq * r2) : t3 < s2 && (!u2 || u2 < t3) && (u2 = t3, l2 = e3.messageSeq * r2));
            }), e2.messageSeq * r2);
            u2 && c2 ? (p <= l2 || d2 <= p) && (p = l2 + Math.floor(Math.random() * (d2 - l2 + 1))) : p < l2 ? p = l2 + s2 - u2 : c2 && d2 < p && (p = d2 + s2 - c2), e2.orderKey = p, !a2 && t2 && o2.push(e2), 100 < o2.length && (o2.sort(function(e3, t3) {
              return e3.orderKey - t3.orderKey;
            }), o2.splice(0, 90));
          }
          return e2.orderKey;
        }, d.prototype.mergeSvrMessageList = function(e2, t2) {
          var r2, s2, n2, o2, a2, u2, l2, d2, p, h, f = this;
          this.isFetchMessageWhenLogin(e2) && (r2 = Math.max(this.dbConv.maxSeq || 0, this.dbConv.deletedMsgMaxSeq || 0), s2 = this.dbConv.msgSeq || 0, e2 == i.v.SDKHb && s2 <= r2 || (n2 = 1, o2 = [], a2 = /* @__PURE__ */ new Map(), u2 = this.convType != i.r.Room, l2 = this.econf.user.deleteAllMsgTime || 0, d2 = this.dbConv.deletedMsgSeqs || [], p = { time: new Date(), convID: this.convID, how: e2, dbSeq: r2, msgSeq: s2, emitSeq: 0 }, h = function(s3) {
            f.dbMgr && (s3.list.forEach(function(e3) {
              var t3 = e3.msg_svr_info.conv_msg_seq, s4 = e3.msg_svr_info.msg_time;
              o2.push(t3), a2.has(t3) || u2 && !(-1 == d2.indexOf(t3) && r2 < t3 && l2 < s4) || a2.set(t3, f.transform2Message(e3, true));
            }), s3.nextSeq ? f.fetchSvrMessage(s3.nextSeq, ++n2, e2, false).then(h) : (f.afterMergeSvrMsg(o2, a2, p, t2), f.lg.i(c, "mergeSvrMsgs" + a2.size, p)));
          }, e2 == i.v.SDKLogin && r2 < s2 ? this.fetchSvrMessage(s2 + 1, n2, e2, true, s2 + 1 - r2).then(h) : e2 == i.v.SDKHb && this.fetchSvrMessage(r2, n2, e2, false).then(h)));
        }, d.prototype.afterMergeSvrMsg = function(e2, t2, r2, s2) {
          var n2 = this, o2 = this.dbConv.state;
          o2 != i.q.Delete && t2.size && (this.dbConv.state = i.q.Normal), this.insertDeletedMsgSeqs(e2, r2), t2.size && this.saveMsgRepliedInfo(t2, true, true).then(function(t3) {
            var r3 = n2.convType == i.r.Peer ? n2.dbMgr.filterSaveMessage(n2.convID, n2.convType, t3) : t3;
            r3.length && n2.bus.emit(n2.convTypeMap.receiveMessage, { messageList: r3.map(function(e3) {
              return n2.pb.handleDBMessage(n2.econf, e3);
            }), fromConversationID: n2.convID }), n2.saveMessageList(t3, e2[e2.length - 1], o2, i.db.Fetch), s2 && s2(n2.filterReceiptMemberMsg(t3));
          });
        }, d.prototype.fetchMsgListFromCache = function(e2) {
          var t2 = this;
          return new Promise(function(r2) {
            e2.sort(function(e3, t3) {
              return e3 - t3;
            });
            var s2 = /* @__PURE__ */ new Map();
            if (Object.values(t2.msgCaches).forEach(function(t3) {
              t3 && t3.length && t3.forEach(function(t4) {
                var r3 = t4.messageSeq;
                -1 != e2.indexOf(r3) && s2.set(r3, t4);
              });
            }), s2.size == e2.length)
              return r2(s2);
            t2.dbMgr.getMessageListBySeqs(t2.convID, t2.convType, e2).then(r2);
          });
        }, d.prototype.updateMsgCacheList = function(e2) {
          var t2 = this;
          e2.forEach(function(e3) {
            var r2, s2 = t2.msgCaches[e3.senderUserID];
            s2 && s2.length && -1 != (r2 = s2.findIndex(function(t3) {
              return t3.messageID == e3.messageID;
            })) && (s2[r2] = e3);
          });
        }, d.prototype.fetchFileProcess = function(e2, t2, r2, s2, o2) {
          var a2 = this, u2 = { md5: e2.fileUID, file_type: r2 };
          return this.cnMgr.send(i.d.file_process, u2).then(function(u3) {
            if (u3.code)
              throw Object(n.y)(6000203, u3.message, u3.code);
            return e2.fileLocalPath && (e2.fileLocalPath = ""), a2.innerSendMsg(a2.encodeMediaMsgBody(e2, r2), e2, t2, true, i.W.SendMediaMsg, s2, o2);
          });
        }, d.prototype.emitUnreadMessageCount = function(e2) {
          this.convType != i.r.Room && this.bus.exec(i.u.IUnreadMsgCount, e2);
        }, d.prototype.emitConvChanged = function(e2, t2, r2) {
          var s2;
          this.convType != i.r.Room && this.dbConv.state != i.q.Delete && (s2 = Object(n.s)(i.m.convKeys, this.dbConv), r2 && (r2 = this.pb.handleDBMessage(this.econf, r2), s2.orderKey = r2.timestamp, s2.lastMessage = r2), this.bus.emit(i.u.ConvChanged, { infoList: [{ event: e2, conversation: s2 }] }, t2));
        }, d.prototype.initSendingMessage = function(e2, t2) {
          e2.messageID && e2.messageSeq ? (e2.extendedData = "", e2.localExtendedData = "", e2.isMentionAll = false, e2.mentionedUserIDs && (e2.mentionedUserIDs = []), e2.reactions && (e2.reactions = [])) : e2.mentionedUserIDs && e2.mentionedUserIDs.length && (e2.mentionedUserIDs = Array.from(new Set(e2.mentionedUserIDs.filter(function(e3) {
            return e3;
          })))), e2.messageID = "", e2.messageSeq = 0, e2.orderKey = 0, e2.clientSeq = ++this.econf.clientMsgSeq, e2.clientSid = this.econf.convSid, e2.localMessageID = this.convType + e2.clientSid + e2.clientSeq, e2.conversationID = this.convID, e2.conversationType = this.convType, e2.senderUserID = this.econf.user.userID, e2.direction = i.Y.Send, e2.sentStatus = i.eb.Sending, e2.timestamp = this.st.getRealClientTimestamp(), e2.isUserInserted = false, e2.isBroadcastMessage = false, e2.isServerMessage = false, e2.receiptStatus = t2.hasReceipt ? i.ab.Processing : i.ab.None, e2.rootRepliedCount = 0, e2.repliedInfo = void 0;
        }, d.prototype.emitSendingMessage = function(e2, t2, r2) {
          var s2, n2;
          if (t2 && (s2 = t2.messageSeq, o2 = t2.repliedInfo ? t2.repliedInfo.rootMessageSeq : t2.messageSeq, n2 = t2.repliedInfo ? t2.repliedInfo.rootMessageID : t2.messageID, e2.repliedInfo = { rootMessageSeq: o2, rootMessageID: n2, state: 0, messageSeq: s2 }, this.pb.handleReplyMsgInfo(e2, t2)), r2 && "function" == typeof r2.onMessageAttached)
            try {
              r2.onMessageAttached(e2);
            } catch (e3) {
            }
          var o2 = i.o.Added;
          this.dbConv.state == i.q.Delete ? this.dbConv.state = i.q.Normal : this.dbConv.maxOrderKey && (o2 = this.dbConv.state == i.q.Disable ? i.o.Disabled : i.o.Updated), this.emitConvChanged(o2, "sendingMsg_" + this.dbConv.maxOrderKey, e2);
        }, d.prototype.getMediaMessageDuration = function(e2) {
          var t2 = 0;
          return e2.type == i.gb.Audio ? t2 = +e2.audioDuration || 0 : e2.type == i.gb.Video && (t2 = +e2.videoDuration || 0), t2;
        }, d.prototype.encodeReplyMsgBody = function(e2, t2) {
          return e2 == i.gb.Combine ? this.pb.encodeMediaMsgBody(e2, { title: t2.title, summary: t2.summary }) : e2 >= i.gb.Image && e2 <= i.gb.Video ? this.encodeMediaMsgBody(t2, e2 - 10) : Object(n.k)(t2.message);
        }, d.prototype.encodeMediaMsgBody = function(e2, t2) {
          t2 = { version: "1", file_type: t2, file_name: e2.fileName || "", file_size: String(+e2.fileSize || 0), file_uid: e2.fileUID || "", file_download_url: e2.fileDownloadUrl || "" };
          var r2, s2, n2, o2, a2, u2, c2, l2, d2 = e2.type;
          return d2 == i.gb.Combine ? (t2.media_duration = e2.aesKey, o2 = { title: e2.title, summary: e2.summary, file_body: t2 }, this.pb.encodeMediaMsgBody(d2, o2)) : (d2 == i.gb.Image ? (u2 = e2.thumbnailDownloadUrl, o2 = e2.largeImageDownloadUrl, a2 = e2.originalImageWidth, c2 = e2.originalImageHeight, l2 = e2.thumbnailWidth, r2 = e2.thumbnailHeight, s2 = e2.largeImageWidth, n2 = e2.largeImageHeight, u2 && (t2.thumbnail_download_url = u2), o2 && (t2.large_image_download_url = o2), a2 && (t2.origin_width = a2), c2 && (t2.origin_height = c2), l2 && (t2.small_width = l2), r2 && (t2.small_height = r2), s2 && (t2.big_width = s2), n2 && (t2.big_height = n2)) : d2 == i.gb.Audio ? (o2 = e2.audioDuration, t2.media_duration = String(o2 || 0)) : d2 == i.gb.Video && (a2 = e2.videoDuration, u2 = e2.videoFirstFrameDownloadUrl, c2 = e2.videoFirstFrameWidth, l2 = e2.videoFirstFrameHeight, t2.media_duration = String(a2 || 0), u2 && (t2.video_first_frame_download_url = u2), c2 && (t2.frame_width = c2), l2 && (t2.frame_height = l2)), this.pb.encodeMediaMsgBody(d2, t2));
        }, d.prototype.emitMsgSentStatus = function(e2, t2) {
          t2 = { status: e2.sentStatus, reason: t2, message: e2 }, this.bus.emit(i.u.MsgSentStatus, { infos: [t2] });
        }, d.prototype.queryMessageStatus = function(e2, t2) {
          var r2 = this, s2 = e2.map(function(e3) {
            return { conv_sid: e3.clientSid, client_msg_seq: e3.clientSeq };
          });
          s2 = o(o({}, this.getAssociatedReqBody()), { room_id: this.convID, client_infos: s2 });
          return this.cnMgr.send(this.convTypeMap.msgStatusQuery, s2, i.j.SDK).then(function(s3) {
            var o2 = [];
            return s3.msgs = s3.msgs || [], s3.msgs.forEach(function(t3) {
              var s4, a2, u2, c2, l2, d2 = t3.msg_info, p = (t3 = t3.msg_svr_info, d2.msg_status), h = d2.msg_client_info;
              (l2 = (l2 = e2.find(function(e3) {
                return e3.clientSeq == h.client_msg_seq && e3.clientSid == h.conv_sid;
              })) ? JSON.parse(JSON.stringify(l2)) : null) && l2.sentStatus !== i.eb.Success && (s4 = t3.conv_msg_seq, a2 = t3.c2c_msg_seq, u2 = t3.msg_id, c2 = t3.msg_time, t3 = t3.version, l2.sentStatus = i.eb.Success, l2.messageID = u2, l2.timestamp = c2, l2.messageSeq = s4, l2.c2cSeq = a2, p && l2.receiptStatus == i.ab.Processing && (l2.receiptStatus = Object(n.v)(p).receipt), l2.fileUID && (l2.type == i.gb.Combine || l2.type >= i.gb.Image && l2.type <= i.gb.Video) && r2.pb.decodeMsgBody(r2.econf, l2, d2.msg, t3), r2.calculateMessageOrderKey(l2, true), o2.push(l2));
            }), s3.fail_list = s3.fail_list || [], s3.fail_list.forEach(function(t3) {
              var r3, s4 = t3.client_info;
              t3 = t3.reason;
              (r3 = (r3 = e2.find(function(e3) {
                return e3.clientSeq == s4.client_msg_seq && e3.clientSid == s4.conv_sid;
              })) ? JSON.parse(JSON.stringify(r3)) : null) && 1 == t3 && (r3.sentStatus = i.eb.Failed, o2.push(r3));
            }), 0 < o2.length && (t2 || r2.dbMgr.addMessageList(r2.convID, r2.convType, o2), r2.bus.emit(i.u.MsgSentStatus, { infos: o2.map(function(e3) {
              return { status: e3.sentStatus, message: r2.pb.handleDBMessage(r2.econf, e3) };
            }) })), [s3, o2[0]];
          });
        }, d.prototype.updateConvWhenSendedMessage = function(e2) {
          e2.peer_user_name && (this.dbConv.conversationName = Object(n.h)(e2.peer_user_name)), e2.peer_user_avatar && (this.dbConv.conversationAvatarUrl = Object(n.h)(e2.peer_user_avatar)), e2.send_count_after_read && (this.dbConv.sendMsgCount = e2.send_count_after_read);
        }, d.prototype.handleSendMessageFail = function(e2, t2) {
          this.dbConv.state = t2.conv_disable && this.convType == i.r.Peer ? i.q.Disable : i.q.Normal;
          var r2 = 6000104 == t2.code ? i.eb.Sending : i.eb.Failed;
          return this.saveLocalMessage(e2, r2, t2.audit_info), this.withSendMessageErrorCode(t2.code, t2.message);
        }, d.prototype.handleSendMessageSuccess = function(e2, t2, r2) {
          this.updateConvWhenSendedMessage(t2);
          var s2 = JSON.parse(JSON.stringify(e2)), n2 = (e2.orderKey = this.calculateMessageOrderKey(s2, true), this.dbConv.state);
          return this.dbConv.state = i.q.Normal, this.saveMessageList([s2], e2.messageSeq, n2, i.db.Sended), this.convType == i.r.Group && t2.receipt_seq && (s2 = this.econf.dbGroupMap.get(this.convID), (n2 = this.createMessageExtra(e2.messageSeq, e2.messageID)).receiptStatus = e2.receiptStatus, n2.receiptSeq = t2.receipt_seq, n2.unreadMemberCount = t2.unread_count || 0, n2.memberAllSeq = (null == s2 ? void 0 : s2.memberSeq) || 0, this.dbMgr.addMessageExtraList([n2], "sendMsgRsp"), +(s2 = this.econf.user).msgExtraSeq && s2.msgExtraSeq != t2.receipt_seq - 1 || (s2.msgExtraSeq = n2.receiptSeq, this.dbMgr.setUser(s2))), this.addRootReplyMsg(r2, t2.reply_count), e2 = this.pb.handleDBMessage(this.econf, e2), this.emitMsgSentStatus(e2, t2.audit_info), { message: e2 };
        }, d.prototype.innerSendMsg = function(e2, t2, r2, s2, u2, l2, d2) {
          var p, h, f = this, m = (s2 && (t2.clientSeq = ++this.econf.clientMsgSeq), { msg_type: t2.type, priority_type: r2.priority, msg: e2, payload: Object(n.k)(t2.extendedData || ""), has_receipt: r2.hasReceipt && this.convType !== i.r.Room ? 1 : void 0, conv_id: this.convID, msg_client_info: { conv_sid: t2.clientSid, client_msg_seq: t2.clientSeq } });
          e2 = o(o({}, this.getAssociatedReqBody()), { conv_id: this.convID, fetch_peer_user_info: this.convType != i.r.Peer || this.dbConv.conversationName ? void 0 : 1, msg_info: m }), t2.type == i.gb.Custom && (m.sub_msg_type = t2.subType, m.searched_content = t2.searchedContent), t2.isMentionAll && (m.at_all = true), t2.mentionedUserIDs && t2.mentionedUserIDs.length && (m.at = t2.mentionedUserIDs), t2.repliedInfo && d2 && (p = d2.type, h = t2.repliedInfo.rootMessageSeq, m.reply_info = { root_msg_seq: h, root_msg_id: t2.repliedInfo.rootMessageID, msg_seq: d2.messageSeq, msg_type: p + (d2.subType || 0), msg_id: d2.messageID, msg_time: d2.timestamp, sender_user_id: d2.senderUserID, is_server: d2.isServerMessage, msg: this.encodeReplyMsgBody(p, d2), reply_count: h == d2.messageSeq ? 0 : null == (p = this.econf.msgExtraMap.get(this.getMsgExtraKey(h))) ? void 0 : p.rootRepliedCount }), this.convType != i.r.Room && (m.offline_push = Object(n.g)(r2.pushConfig, r2.isNotifyMentionedUsers)), d2 = this.econf.cloudSetting.req_to.send_msg;
          return this.cnMgr.send(this.convTypeMap.textMsgCmd, e2, i.j.API, d2).then(function(e3) {
            if (111100 == e3.code)
              return f.dbConv.state = e3.conv_disable && f.convType == i.r.Peer ? i.q.Disable : i.q.Normal, f.updateConvWhenSendedMessage(e3), f.saveLocalMessage(t2, i.eb.Success, e3.audit_info), f.lg.i(c, u2, l2), { message: t2 };
            if (6000104 == e3.code)
              return f.queryMessageStatus([t2], true).then(function(e4) {
                var r4, n2, o3 = (e4 = a(e4, 2))[0];
                if ((e4 = e4[1]) && e4.sentStatus == i.eb.Success)
                  return r4 = e4.messageSeq, n2 = f.dbConv.state, f.dbConv.state = i.q.Normal, f.saveMessageList([e4], r4, n2, i.db.Sended), l2.result = r4, f.lg.i(c, u2, l2), Object.assign(t2, e4), { message: t2 };
                if (l2.error = f.handleSendMessageFail(t2, o3), s2)
                  throw l2.error;
                return f.lg.w(c, u2, l2), Promise.reject(l2.error);
              });
            if (e3.code) {
              if (l2.error = f.handleSendMessageFail(t2, e3), s2)
                throw l2.error;
              return f.lg.w(c, u2, l2), Promise.reject(l2.error);
            }
            var r3 = (g = e3.msg_svr_info).conv_msg_seq, o2 = g.c2c_msg_seq, d3 = g.msg_id, p2 = g.msg_time, h2 = g.msg_rsp, g = g.version;
            return (d3 = (t2.sentStatus = i.eb.Success, t2.messageID = d3, t2.timestamp = p2, t2.messageSeq = r3, t2.c2cSeq = o2, e3.msg_status)) && t2.receiptStatus == i.ab.Processing && (t2.receiptStatus = Object(n.v)(d3).receipt), f.updateC2CMsgSeq(t2.c2cSeq), (s2 || t2.fileUID) && f.pb.decodeMsgBody(f.econf, t2, h2, g), t2.type == i.gb.Text && null != (p2 = e3.audit_message_info) && p2.filtered_text && (t2.message = e3.audit_message_info.filtered_text), l2.result = t2.messageSeq, f.lg.i(c, u2, l2), f.handleSendMessageSuccess(t2, e3, m.reply_info);
          });
        }, d.prototype.getMsgExtraKey = function(e2) {
          return this.econf.user.userID + this.convType + this.convID + (e2 || "");
        }, d.prototype.createMessageExtra = function(e2, t2) {
          var r2 = this.getMsgExtraKey(e2), s2 = this.econf.msgExtraMap.get(r2);
          return s2 || (s2 = { id: r2, ownerID: this.econf.user.userID, conversationID: this.convID, conversationType: this.convType, conversationSeq: e2, messageID: t2, convReceipt: 0, receiptStatus: i.ab.Processing, receiptSeq: 0, receiptMemberListSeq: 0, readMemberCount: 0, unreadMemberCount: 0, memberSeqs: {}, reactionSeq: 0, reactions: {} }, this.econf.msgExtraMap.set(r2, s2)), t2 && !s2.messageID && (s2.messageID = t2), s2.reactions || (s2.reactions = {}), s2;
        }, d.prototype.addRootReplyMsg = function(e2, t2) {
          var r2, s2, n2;
          e2 && e2.root_msg_seq && (r2 = e2.root_msg_seq, s2 = e2.root_msg_id, (s2 = this.createMessageExtra(r2, s2)).messageID && (!s2.rootRepliedCount || s2.rootRepliedCount < t2) && this.isMsgExist(r2) && (n2 = { conversationID: this.convID, conversationType: this.convType, count: t2, messageID: s2.messageID }, this.bus.emit(i.u.MsgRepliedCount, { infos: [n2] })), s2.rootRepliedCount = t2, s2.rootRepliedSender || r2 != e2.msg_seq || (s2.rootRepliedSender = e2.sender_user_id, s2.rootRepliedSentTime = e2.msg_time), this.dbMgr.addMessageExtraList([s2], "replyCount"));
        }, d.prototype.preFetchReplyMsg = function(e2) {
          var t2 = this, r2 = [], s2 = this.econf.mailHBConfig.reply_msg_seq_count;
          Object.keys(e2).forEach(function(n2) {
            var o2, a2 = t2.createMessageExtra(+n2, ""), u2 = a2.rootRepliedCount || 0, c2 = e2[+n2];
            (!a2.rootRepliedMaxSeq || s2 < u2 && a2.rootRepliedMaxSeq < c2) && (o2 = t2.convType == i.r.Peer ? i.d.c2c_msg_reply : i.d.gp_msg_reply, t2.cnMgr.send(o2, { conv_id: t2.convID, conv_msg_seq: n2 }).then(function(e3) {
              var i2, o3, l2;
              !e3.code && e3.total_count && e3.conv_msg_seq.length && ((i2 = e3.conv_msg_seq).sort(function(e4, t3) {
                return e4 - t3;
              }), i2.find(function(e4) {
                return e4 == +n2;
              }) || i2.unshift(+n2), o3 = e3.total_count, u2 < o3 && a2.messageID && t2.isMsgExist(+n2) && (l2 = { conversationID: t2.convID, conversationType: t2.convType, count: o3, messageID: a2.messageID }, r2.push(l2)), a2.rootRepliedMaxSeq = i2[i2.length - 1], a2.rootRepliedCount = o3, e3.root_info && (e3 = (l2 = e3.root_info).peer_user_id, l2 = l2.mute_list_seq, e3 && (a2.rootRepliedSender = e3), l2 && (a2.rootRepliedSentTime = l2), !a2.rootRepliedState && t2.isMsgDel(+n2, a2.rootRepliedSentTime || 0) && (a2.rootRepliedState = 1)), t2.dbMgr.addMessageExtraList([a2], "fetchReplyMsg"), -1 != (e3 = i2.indexOf(c2)) && i2.splice(e3, 1), t2.batchFetchMsgList(i2, o3 <= s2, false));
            }));
          }), r2.length && this.bus.emit(i.u.MsgRepliedCount, { infos: r2 });
        }, d.prototype.saveMsgRepliedInfo = function(e2, t2, r2) {
          var s2, n2, o2, a2 = this;
          if (t2 && this.convType != i.r.Room && (s2 = {}, e2.forEach(function(e3) {
            var t3;
            e3.repliedInfo && (t3 = e3.repliedInfo.rootMessageSeq, e3 = Math.max(e3.messageSeq, s2[t3] || 0), s2[t3] = e3);
          }), this.preFetchReplyMsg(s2)), this.rootReplyMsgMap && this.rootReplyMsgMap.size && (n2 = [], o2 = [], this.rootReplyMsgMap.forEach(function(t3, s3) {
            var i2, u3, c2 = (c2 = null == (c2 = e2.get(s3)) ? void 0 : c2.messageID) || (null == (i2 = a2.econf.msgExtraMap.get(a2.getMsgExtraKey(s3))) ? void 0 : i2.messageID);
            c2 && (i2 = a2.createMessageExtra(s3, c2), r2 && (!i2.rootRepliedCount || i2.rootRepliedCount < t3) && a2.isMsgExist(s3) && o2.push({ conversationID: a2.convID, conversationType: a2.convType, count: t3, messageID: c2 }), c2 = i2.rootRepliedCount != t3, i2.rootRepliedCount = t3, i2.rootRepliedSender || ((u3 = e2.get(s3)) || e2.forEach(function(e3) {
              !u3 && e3.repliedInfo && e3.repliedInfo.messageSeq == s3 && (u3 = e3.repliedInfo);
            }), u3 && (c2 = true, i2.rootRepliedSender = u3.senderUserID, i2.rootRepliedSentTime = u3.timestamp || u3.sentTime)), c2 && n2.push(i2));
          }), o2.length && this.bus.emit(i.u.MsgRepliedCount, { infos: o2 }), n2.length && this.dbMgr.addMessageExtraList(n2, "replyCounts")), t2 && this.convType != i.r.Room) {
            var u2 = /* @__PURE__ */ new Map();
            if (e2.forEach(function(e3) {
              var t3;
              e3.repliedInfo && 2 == e3.repliedInfo.state && ((t3 = u2.get(e3.repliedInfo.messageSeq) || []).push(e3), u2.set(e3.repliedInfo.messageSeq, t3));
            }), u2.size)
              return this.batchFetchMsgList(Array.from(u2.keys())).then(function(t3) {
                return t3.forEach(function(e3, t4) {
                  (t4 = u2.get(t4)) && t4.forEach(function(t5) {
                    t5.repliedInfo.state = 0, a2.pb.handleReplyMsgInfo(t5, e3);
                  });
                }), (t3 = Array.from(e2.values())).sort(function(e3, t4) {
                  return e3.orderKey - t4.orderKey;
                }), Promise.resolve(t3);
              });
          }
          return (t2 = Array.from(e2.values())).sort(function(e3, t3) {
            return e3.orderKey - t3.orderKey;
          }), Promise.resolve(t2);
        }, d.prototype.getCombineMessageFile = function(e2) {
          var t2 = this, r2 = [], i2 = /* @__PURE__ */ new Set(), o2 = e2.conversationType + "_" + e2.localMessageID + "_" + e2.aesKey, a2 = s.a.getInstance().crypto.generateNonce(), u2 = (this.getCombineMessageChild(e2, r2, i2, o2, 1, a2, e2.senderUserID, e2.conversationID), {});
          i2.forEach(function(e3) {
            var r3 = t2.econf.dbUserMap.get(e3);
            r3 && (u2[e3] = { sender_user_name: Object(n.k)(r3.userName), sender_user_avatar: Object(n.k)(r3.userAvatarUrl), update_time: r3.updateTime || 0 });
          }), o2 = this.pb.encodeMsgCombineInfo({ send_user_map: u2, child: r2 }, e2.aesKey), a2 = this.st.deviceInfo.sdk_ver + "_" + e2.type + "_" + e2.aesKey;
          return n.p ? { fileName: a2, fileBody: o2 } : new File([o2], a2);
        }, d.prototype.getCombineMessageChild = function(e2, t2, r2, o2, u2, c2, l2, d2) {
          var p = this, h = [], f = a(o2.split("_"), 2), m = f[0], g = f[1];
          e2.messageList.forEach(function(e3) {
            var a2 = s.a.getInstance().crypto.generateNonce(), f2 = "0", _ = (1 < u2 && (a2 = e3.cbID.replace(e3.cbID.substring(8), c2.substring(8)), f2 = "0" == e3.parentID ? c2 : e3.parentID.replace(f2.substring(8), c2.substring(8))), { msg_type: e3.type, sender_user_id: e3.senderUserID, msg_time: e3.timestamp, cb_id: a2, root_id: g, real_root_id: g, parent_id: f2, is_server: e3.isServerMessage ? 1 : 0, root_conv_type: m, root_send_user_id: l2, root_conv_id: d2 });
            (_ = (e3.subType && (_.sub_type = e3.subType), e3.searchedContent && (_.searched_content = e3.searchedContent), e3.extendedData && (_.extended_data = e3.extendedData), e3.type == i.gb.Combine ? (_.msg = p.encodeMediaMsgBody(e3, e3.type), e3.messageList && 0 < e3.messageList.length && p.getCombineMessageChild(e3, t2, r2, o2, u2 + 1, a2, l2, d2)) : e3.type >= i.gb.Image && e3.type <= i.gb.Video ? _.msg = p.encodeMediaMsgBody(e3, e3.type - 10) : _.msg = Object(n.k)(e3.message), r2.add(e3.senderUserID), t2.push(_), JSON.parse(JSON.stringify(e3)))).rootID = o2, _.cbID = a2, _.parentID = f2, _.type == i.gb.Combine && (_.combineID = _.cbID + "-" + o2 + "-" + p.convID), h.push(_);
          }), e2.messageList = h;
        }, d.prototype.batchFetchMsgList = function(e2, t2, r2) {
          var s2 = this;
          return void 0 === t2 && (t2 = false), void 0 === r2 && (r2 = false), new Promise(function(n2) {
            var o2 = s2.dbConv.deletedMsgMaxSeq || 0, a2 = s2.dbConv.deletedMsgSeqs || [], u2 = ((e2 = e2.filter(function(e3) {
              return o2 < e3 && -1 == a2.indexOf(e3);
            })).sort(function(e3, t3) {
              return e3 - t3;
            }), /* @__PURE__ */ new Map());
            if (Object.values(s2.msgCaches).forEach(function(t3) {
              t3 && t3.length && t3.forEach(function(t4) {
                var r3 = t4.messageSeq;
                -1 != e2.indexOf(r3) && u2.set(r3, t4);
              });
            }), u2.size == e2.length)
              return n2(u2);
            s2.dbMgr.getMessageListBySeqs(s2.convID, s2.convType, e2).then(function(o3) {
              if (o3.size == e2.length)
                return n2(o3);
              var a3 = s2.convType == i.r.Peer ? i.d.c2c_fetch_msg : i.d.gp_fetch_msg, u3 = e2.filter(function(e3) {
                return !o3.has(e3);
              }).map(function(e3) {
                return { cur_list_seq: e3 - 1, count: 1 };
              });
              u3 = { conv_id: s2.convID, how: i.v.Biz, degree: 1, reqs: u3 };
              s2.cnMgr.send(a3, u3).then(function(i2) {
                var a4 = [];
                i2.msgs.forEach(function(t3) {
                  var r3 = t3.msg_svr_info.conv_msg_seq;
                  o3.has(r3) || -1 == e2.indexOf(r3) || (t3 = s2.transform2Message(t3, true), a4.push(t3), o3.set(r3, t3));
                }), s2.saveMsgRepliedInfo(o3, false, false), t2 && (i2 = e2.filter(function(e3) {
                  return !o3.has(e3);
                }), s2.checkReplyMsgChange(i2, r2, false)), s2.dbMgr.addMessageList(s2.convID, s2.convType, a4), n2(o3);
              });
            });
          });
        }, d.prototype.checkReplyMsgChange = function(e2, t2, r2) {
          var s2 = this;
          this.dbMgr.getReplyMessageListBySeqs(this.convID, this.convType, e2, true).then(function(e3) {
            var n2;
            e3.length && (t2 && s2.bus.emit(i.u.MsgRepliedInfo, { messageList: e3 }), r2 && (n2 = [], e3.forEach(function(e4) {
              var t3;
              !e4.repliedInfo || e4.repliedInfo.rootMessageSeq != e4.repliedInfo.messageSeq || (t3 = s2.econf.msgExtraMap.get(s2.getMsgExtraKey(e4.repliedInfo.rootMessageSeq))) && !t3.rootRepliedSender && (t3.rootRepliedState = i.bb.Deleted, t3.rootRepliedSender = e4.repliedInfo.senderUserID, t3.rootRepliedSentTime = e4.repliedInfo.sentTime, n2.push(t3));
            }), n2.length && s2.dbMgr.addMessageExtraList(n2, "delRoot")));
          });
        }, d.prototype.isMsgDel = function(e2, t2) {
          var r2 = this.econf.user.deleteAllMsgTime || 0, s2 = this.dbConv.deletedMsgMaxSeq || 0, n2 = this.dbConv.deletedMsgSeqs || (this.dbConv.deletedMsgSeqs = []);
          return e2 <= s2 || t2 < r2 || -1 != n2.indexOf(e2);
        }, d.prototype.isMsgExist = function(e2) {
          return !this.isMsgDel(e2, 0) && this.dbMgr.isMessageExist(this.convID, this.convType, e2);
        }, d.prototype.filterReceiptMemberMsg = function(e2) {
          return this.convType != i.r.Group ? null : e2.filter(function(e3) {
            return e3.direction == i.Y.Send && e3.messageSeq && e3.receiptStatus && e3.receiptStatus < i.ab.Expired;
          });
        }, d.prototype.mergeMessageExtra = function(e2, t2, r2, s2, n2, o2) {
          if (this.convType == i.r.Room || e2.isUserInserted || e2.sentStatus != i.eb.Success)
            return false;
          var a2 = false, u2 = e2.messageSeq, c2 = this.econf.msgExtraMap.get(this.getMsgExtraKey(u2)), l2 = c2 && c2.receiptStatus, d2 = c2 && c2.reactions, p = c2 && c2.revokeInfo && JSON.parse(c2.revokeInfo);
          e2.receiptStatus == i.ab.Processing && (o2 && (e2.direction == i.Y.Send && u2 <= r2 || e2.direction == i.Y.Receive && u2 <= s2) ? (e2.receiptStatus = i.ab.Done, a2 = true) : l2 && l2 != e2.receiptStatus && (e2.receiptStatus = l2, a2 = true)), r2 = o2 ? e2.c2cSeq : u2;
          if (e2.receiptStatus == i.ab.Processing && n2 && r2 && r2 <= n2 && (e2.receiptStatus = i.ab.Expired, a2 = true, c2 && (c2.receiptStatus = e2.receiptStatus)), d2) {
            var h, f = [];
            for (h in d2) {
              var m = d2[h];
              f.push({ conversationID: e2.conversationID, conversationType: e2.conversationType, messageID: e2.messageID, userList: m.userList, totalCount: m.totalCount, reactionType: h, isSelfIncluded: m.isSelfIncluded });
            }
            (e2.reactions = f).length && (a2 = true);
          }
          return e2.type == i.gb.Revoke && p && p.originalTextMessageContent && (e2.originalTextMessageContent = p.originalTextMessageContent, a2 = true), (s2 = e2.repliedInfo && e2.repliedInfo.messageInfo ? e2.repliedInfo.messageSeq : 0) && e2.repliedInfo ? e2.repliedInfo.messageInfo && this.isMsgDel(s2, e2.repliedInfo.sentTime) && (e2.repliedInfo.state = 1, a2 = true) : t2.length && t2.some(function(t3) {
            return t3.conversationSeq == u2 && t3.rootRepliedCount > (e2.rootRepliedCount || 0) && (e2.rootRepliedCount = t3.rootRepliedCount, a2 = true);
          }), a2;
        }, d.prototype.updateC2CMsgSeq = function(e2) {
          var t2 = this.econf.user;
          this.convType != i.r.Peer || !e2 || t2.c2cMsgSeq && t2.c2cMsgSeq != e2 - 1 || (t2.c2cMsgSeq = e2, this.dbMgr.setUser(t2));
        }, d);
        function d(e2, t2, r2, n2, i2) {
          this.lg = s.a.getInstance().lg, this.dr = s.a.getInstance().dr, this.pb = s.a.getInstance().pb, this.st = s.a.getInstance().st, this.lastSendTime = 0, this.dbConv = {}, this.mergeMsgListSeq = 0, this.msgCaches = {}, this.auditErrorCodes = [6000104, 6000221, , 6000222, 6000230, 6000231], this.dbConv.conversationID = e2, this.convID = e2, this.econf = t2, this.bus = r2, this.dbMgr = n2, this.cnMgr = i2;
        }
      }, function(e, t, r) {
        e.exports = function(e2) {
          for (var t2 = e2, r2 = t2.lib.BlockCipher, s = t2.algo, n = [], i = [], o = [], a = [], u = [], c = [], l = [], d = [], p = [], h = [], f = [], m = 0; m < 256; m++)
            f[m] = m < 128 ? m << 1 : m << 1 ^ 283;
          var g = 0, _ = 0;
          for (m = 0; m < 256; m++) {
            var b = _ ^ _ << 1 ^ _ << 2 ^ _ << 3 ^ _ << 4;
            b = b >>> 8 ^ 255 & b ^ 99, n[g] = b, i[b] = g;
            var v = f[g], y = f[v], M = f[y], k = 257 * f[b] ^ 16843008 * b;
            o[g] = k << 24 | k >>> 8, a[g] = k << 16 | k >>> 16, u[g] = k << 8 | k >>> 24, c[g] = k;
            k = 16843009 * M ^ 65537 * y ^ 257 * v ^ 16843008 * g;
            l[b] = k << 24 | k >>> 8, d[b] = k << 16 | k >>> 16, p[b] = k << 8 | k >>> 24, h[b] = k, g ? (g = v ^ f[f[f[M ^ v]]], _ ^= f[f[_]]) : g = _ = 1;
          }
          var I = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], S = s.AES = r2.extend({ _doReset: function() {
            if (!this._nRounds || this._keyPriorReset !== this._key) {
              for (var e3 = this._keyPriorReset = this._key, t3 = e3.words, r3 = e3.sigBytes / 4, s2 = 4 * ((this._nRounds = r3 + 6) + 1), i2 = this._keySchedule = [], o2 = 0; o2 < s2; o2++)
                o2 < r3 ? i2[o2] = t3[o2] : (c2 = i2[o2 - 1], o2 % r3 ? r3 > 6 && o2 % r3 == 4 && (c2 = n[c2 >>> 24] << 24 | n[c2 >>> 16 & 255] << 16 | n[c2 >>> 8 & 255] << 8 | n[255 & c2]) : (c2 = n[(c2 = c2 << 8 | c2 >>> 24) >>> 24] << 24 | n[c2 >>> 16 & 255] << 16 | n[c2 >>> 8 & 255] << 8 | n[255 & c2], c2 ^= I[o2 / r3 | 0] << 24), i2[o2] = i2[o2 - r3] ^ c2);
              for (var a2 = this._invKeySchedule = [], u2 = 0; u2 < s2; u2++) {
                o2 = s2 - u2;
                if (u2 % 4)
                  var c2 = i2[o2];
                else
                  c2 = i2[o2 - 4];
                a2[u2] = u2 < 4 || o2 <= 4 ? c2 : l[n[c2 >>> 24]] ^ d[n[c2 >>> 16 & 255]] ^ p[n[c2 >>> 8 & 255]] ^ h[n[255 & c2]];
              }
            }
          }, encryptBlock: function(e3, t3) {
            this._doCryptBlock(e3, t3, this._keySchedule, o, a, u, c, n);
          }, decryptBlock: function(e3, t3) {
            var r3 = e3[t3 + 1];
            e3[t3 + 1] = e3[t3 + 3], e3[t3 + 3] = r3, this._doCryptBlock(e3, t3, this._invKeySchedule, l, d, p, h, i);
            r3 = e3[t3 + 1];
            e3[t3 + 1] = e3[t3 + 3], e3[t3 + 3] = r3;
          }, _doCryptBlock: function(e3, t3, r3, s2, n2, i2, o2, a2) {
            for (var u2 = this._nRounds, c2 = e3[t3] ^ r3[0], l2 = e3[t3 + 1] ^ r3[1], d2 = e3[t3 + 2] ^ r3[2], p2 = e3[t3 + 3] ^ r3[3], h2 = 4, f2 = 1; f2 < u2; f2++) {
              var m2 = s2[c2 >>> 24] ^ n2[l2 >>> 16 & 255] ^ i2[d2 >>> 8 & 255] ^ o2[255 & p2] ^ r3[h2++], g2 = s2[l2 >>> 24] ^ n2[d2 >>> 16 & 255] ^ i2[p2 >>> 8 & 255] ^ o2[255 & c2] ^ r3[h2++], _2 = s2[d2 >>> 24] ^ n2[p2 >>> 16 & 255] ^ i2[c2 >>> 8 & 255] ^ o2[255 & l2] ^ r3[h2++], b2 = s2[p2 >>> 24] ^ n2[c2 >>> 16 & 255] ^ i2[l2 >>> 8 & 255] ^ o2[255 & d2] ^ r3[h2++];
              c2 = m2, l2 = g2, d2 = _2, p2 = b2;
            }
            m2 = (a2[c2 >>> 24] << 24 | a2[l2 >>> 16 & 255] << 16 | a2[d2 >>> 8 & 255] << 8 | a2[255 & p2]) ^ r3[h2++], g2 = (a2[l2 >>> 24] << 24 | a2[d2 >>> 16 & 255] << 16 | a2[p2 >>> 8 & 255] << 8 | a2[255 & c2]) ^ r3[h2++], _2 = (a2[d2 >>> 24] << 24 | a2[p2 >>> 16 & 255] << 16 | a2[c2 >>> 8 & 255] << 8 | a2[255 & l2]) ^ r3[h2++], b2 = (a2[p2 >>> 24] << 24 | a2[c2 >>> 16 & 255] << 16 | a2[l2 >>> 8 & 255] << 8 | a2[255 & d2]) ^ r3[h2++];
            e3[t3] = m2, e3[t3 + 1] = g2, e3[t3 + 2] = _2, e3[t3 + 3] = b2;
          }, keySize: 8 });
          return t2.AES = r2._createHelper(S), e2.AES;
        }(r(5), (r(95), r(8), r(22), r(98)));
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return n;
        });
        var s = { 0: "Success.", 1: "Failed.", 6000001: "The incoming parameter is invalid.", 6000002: "The SDK is not initialized.", 6000003: "Invalid AppID.", 6000004: "Trigger SDK internal frequency limit.", 6000005: "Trigger background service frequency limit.", 6000006: "Switch server internal error.", 6000007: "ZIM service internal error.", 6000010: "Failed to upload log.", 6000011: "User is not exist.", 6000012: "Trigger frequency limit when querying user information.", 6000013: "Unsupported request.", 6000014: "The ZIM service is being activated for you, please try again in five minutes.", 6000015: "Exceed DAU limit.", 6000016: "Exceed MAU limit.", 6000101: "Login failed.", 6000102: "Login failed due to background service.", 6000103: "Token is invalid.", 6000104: "Network error.", 6000106: "Token expired.", 6000107: "Token version number is wrong.", 6000108: "Token duration is too short.", 6000109: "Token duration is too long.", 6000111: "User has already logged in.", 6000121: "User is not logged in.", 6000201: "Internal error sending message.", 6000202: "Error sending message background service.", 6000203: "Message sending failed.", 6000204: "The message target does not exist.", 6000211: "File is not exist.", 6000212: "File server internal error.", 6000213: "File type is not supported.", 6000214: "File size is invalid.", 6000215: "File duration is invalid.", 6000221: "Failed to pass security audit.", 6000222: "Security audit failed.", 6000230: "Failed to pass custom security audit.", 6000270: "Call invitation failed.", 6000271: "Failed to cancel call invitation.", 6000272: "Failed to initiate call invitation service.", 6000273: "The non-initiator cancel the call invitation.", 6000274: "Uninvited users.", 6000275: "CallID already exists.", 6000276: "CallID does not exist.", 6000277: "Receipt error.", 6000278: "Revoke time is exceed.", 6000279: "The message has been revoked.", 6000280: "The message reaction type exist.", 6000281: "The user invited by the call does not exist.", 6000282: "The number of message receipts exceeds the limit.", 6000283: "User is already in call.", 6000301: "Internal error in room.", 6000302: "Error in room service.", 6000303: "Failed to create room.", 6000304: "Failed to join room.", 6000306: "Failed to leave the room.", 6000310: "Failed to query room members.", 6000311: "Failed to query room members.", 6000321: "The user is not in the room.", 6000322: "Room does not exist.", 6000323: "Room already exist.", 6000324: "The maximum number of rooms can exist at the same time.", 6000325: "The number of rooms a user can join at the same time has reached the upper limit.", 6000330: "Internal error in room attributes.", 6000331: "Failed to operate room attributes.", 6000333: "Failed to query room attributes.", 6000334: "The number of room attributes exceeds limit.", 6000335: "The key length of room attribute exceeds limit.", 6000336: "The value length of room attribute exceeds limit.", 6000337: "The total value length of the room attributes exceeds limit.", 6000350: "Internal error in room member attributes.", 6000351: "The total length of room member attributes exceeds limit.", 6000352: "The key length of room member attribute exceeds limit.", 6000353: "The value length of room member attributes exceeds limit.", 6000357: "The member number of room member attributes exceeds limit.", 6000501: "Internal error in group.", 6000502: "Error in group service.", 6000503: "Failed to create group.", 6000504: "Failed to dismiss group.", 6000505: "Failed to join group.", 6000506: "Failed to leave group.", 6000507: "Failed to kick group member.", 6000508: "Failed to invite user to group.", 6000509: "Failed to transfer group owner.", 6000510: "Failed to update group information.", 6000511: "Failed to query group information.", 6000512: "Failed to operate group attributes.", 6000513: "Failed to query group attributes.", 6000514: "Failed to update group member information.", 6000515: "Failed to query group member information.", 6000516: "Failed to query group list.", 6000517: "Failed to query group member list.", 6000521: "User is not in group.", 6000522: "User is already in the group.", 6000523: "Group does not exist.", 6000524: "Group already exists.", 6000525: "The group members have reached the limit.", 6000526: "Group attribute does not exist.", 6000527: "Cannot create group after dismissed.", 6000531: "The number of group attributes exceeds limit.", 6000532: "The key length of group attribute exceeds limit.", 6000533: "The value length of group attribute exceeds limit.", 6000534: "The total value length of the group attributes exceeds limit.", 6000541: "There is no operation permission for group-related interfaces.", 6000542: "Not allowed to join the group.", 6000543: "Need to apply to join the group.", 6000544: "Need to be invited to apply into the group.", 6000601: "Internal error in conversation.", 6000602: "Error in conversation service.", 6000603: "Conversation does not exist.", 6000604: "The number of pinned conversations has reached the upper limit.", 106120: "The number of single pass conversations states exceeds the limit.", 106121: "There are conversations with duplicate settings.", 106122: "Peer id is empty", 106123: "Not allowed to set oneself", 106124: "Already set c2c mute", 106125: "Already cancel c2c mute", 106126: "The number of undisturbed conversations exceeds the limit." }, n = function(e2, t2, r2) {
          return t2 = r2 && 6000104 != r2 ? (e2 = function(e3) {
            switch (e3) {
              case 50012:
                return 6000121;
              case 100002:
              case 100003:
              case 100004:
              case 50013:
              case 50014:
              case 104002:
                return 6000001;
              case 50008:
              case 103019:
              case 100017:
              case 103020:
              case 103034:
              case 103041:
              case 103042:
              case 103044:
              case 103016:
              case 103017:
              case 108050:
                return 6000005;
              case 102002:
                return 6000016;
              case 102003:
                return 6000015;
              case 100018:
                return 6000012;
              case 100021:
                return 6000013;
              case 50001:
              case 50002:
              case 50003:
              case 50004:
              case 50005:
              case 50007:
              case 50009:
              case 50101:
              case 50102:
              case 50105:
              case 50106:
              case 50107:
              case 50108:
              case 50110:
                return 6000006;
              case 50111:
                return 6000103;
              case 100001:
              case 102001:
              case 100005:
              case 100006:
              case 100007:
              case 100008:
              case 100009:
              case 100010:
              case 100011:
              case 101001:
              case 101002:
              case 101003:
              case 101004:
                return 6000007;
              case 105e3:
              case 105004:
              case 103033:
                return 6000011;
              case 103015:
              case 103001:
                return 6000321;
              case 103021:
                return 6000322;
              case 103032:
                return 6000323;
              case 103050:
                return 6000311;
              case 103018:
                return 6000324;
              case 103010:
                return 6000325;
              case 103022:
                return 6000334;
              case 103023:
                return 6000335;
              case 103024:
                return 6000336;
              case 103025:
                return 6000337;
              case 103039:
                return 6000352;
              case 103040:
                return 6000353;
              case 103038:
                return 6000351;
              case 103045:
                return 6000357;
              case 107003:
                return 6000271;
              case 107004:
                return 6000272;
              case 107005:
              case 61002:
              case 61003:
                return 6000276;
              case 107006:
              case 107007:
                return 6000272;
              case 107012:
                return 6000273;
              case 107014:
                return 6000274;
              case 107019:
                return 6000275;
              case 107026:
                return 6000281;
              case 111101:
                return 6000230;
              case 108065:
              case 108066:
                return 6000231;
              case 111003:
              case 111006:
              case 111007:
                return 6000221;
              case 111002:
              case 111004:
              case 111005:
                return 6000222;
              case 61004:
                return 6000272;
              case 109001:
                return 6000204;
              case 108054:
              case 106019:
                return 6000277;
              case 100039:
                return 6000282;
              case 107025:
                return 6000283;
              case 106022:
                return 6000604;
              case 100015:
              case 110002:
              case 110003:
              case 110005:
              case 110006:
              case 110007:
              case 110008:
              case 110009:
              case 110010:
              case 110011:
              case 110012:
              case 110013:
              case 110014:
              case 110015:
                return 6000212;
              case 110004:
                return 6000211;
              case 110016:
              case 110019:
              case 110021:
              case 110023:
                return 6000213;
              case 110017:
              case 110020:
              case 110022:
              case 110024:
                return 6000214;
              case 110018:
                return 6000215;
              case 108035:
              case 108051:
                return 6000521;
              case 108003:
              case 108074:
              case 108080:
              case 108081:
                return 6000541;
              case 108072:
                return 6000542;
              case 108073:
                return 6000543;
              case 108040:
                return 6000531;
              case 108041:
                return 6000532;
              case 108042:
                return 6000533;
              case 108037:
                return 6000522;
              case 108038:
              case 108039:
                return 6000514;
              case 108043:
                return 6000524;
              case 108060:
                return 6000527;
              case 108044:
              case 106011:
                return 6000523;
              case 108046:
                return 6000526;
              case 108049:
                return 6000525;
              case 100012:
                return 6000278;
              case 100013:
                return 6000279;
              case 100022:
                return 6000278;
              case 100037:
                return 6000280;
              case 106024:
              case 106025:
              case 106026:
              case 106027:
              case 106030:
              case 106034:
              case 106033:
              case 106036:
              case 106039:
              case 106103:
                return 6000001;
              case 106032:
                return 6000801;
              case 106035:
                return 6000802;
              case 106031:
                return 6000803;
              case 106112:
                return 6000284;
              case 106101:
                return 6000804;
              case 106102:
                return 6000805;
              case 106105:
                return 6000815;
              case 106106:
                return 6000816;
              case 106110:
                return 6000806;
              case 106111:
                return 6000807;
              case 106104:
                return 6000808;
              case 106028:
                return 6000810;
              default:
                return 0;
            }
          }(r2) || e2, "code: " + r2 + ", message: " + (t2 || s[e2])) : 6000121 == e2 && t2 ? t2 + ": " + s[e2] : t2 || s[e2], { code: e2 = 6000104 == r2 ? r2 : e2, message: t2 };
        };
      }, function(e, t, r) {
        e.exports = r(5).enc.Hex;
      }, function(e, t, r) {
        e.exports = r(5).enc.Utf8;
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return n;
        }), r.d(t, "b", function() {
          return d;
        });
        var s = r(19), n = (i.prototype.toString = function(e2) {
          if (this.s < 0)
            return "-" + this.negate().toString(e2);
          var t2;
          if (16 == e2)
            t2 = 4;
          else if (8 == e2)
            t2 = 3;
          else if (2 == e2)
            t2 = 1;
          else if (32 == e2)
            t2 = 5;
          else {
            if (4 != e2)
              return this.toRadix(e2);
            t2 = 2;
          }
          var r2, n2 = (1 << t2) - 1, i2 = false, o2 = "", a2 = this.t, u2 = this.DB - a2 * this.DB % t2;
          if (0 < a2--)
            for (u2 < this.DB && 0 < (r2 = this[a2] >> u2) && (i2 = true, o2 = Object(s.a)(r2)); 0 <= a2; )
              u2 < t2 ? (r2 = (this[a2] & (1 << u2) - 1) << t2 - u2, r2 |= this[--a2] >> (u2 += this.DB - t2)) : (r2 = this[a2] >> (u2 -= t2) & n2, u2 <= 0 && (u2 += this.DB, --a2)), (i2 = 0 < r2 || i2) && (o2 += Object(s.a)(r2));
          return i2 ? o2 : "0";
        }, i.prototype.negate = function() {
          var e2 = l();
          return i.ZERO.subTo(this, e2), e2;
        }, i.prototype.abs = function() {
          return this.s < 0 ? this.negate() : this;
        }, i.prototype.compareTo = function(e2) {
          var t2 = this.s - e2.s;
          if (0 != t2)
            return t2;
          var r2 = this.t;
          if (0 != (t2 = r2 - e2.t))
            return this.s < 0 ? -t2 : t2;
          for (; 0 <= --r2; )
            if (0 != (t2 = this[r2] - e2[r2]))
              return t2;
          return 0;
        }, i.prototype.bitLength = function() {
          return this.t <= 0 ? 0 : this.DB * (this.t - 1) + _(this[this.t - 1] ^ this.s & this.DM);
        }, i.prototype.mod = function(e2) {
          var t2 = l();
          return this.abs().divRemTo(e2, null, t2), this.s < 0 && 0 < t2.compareTo(i.ZERO) && e2.subTo(t2, t2), t2;
        }, i.prototype.modPowInt = function(e2, t2) {
          return t2 = new (e2 < 256 || t2.isEven() ? o : u)(t2), this.exp(e2, t2);
        }, i.prototype.intValue = function() {
          if (this.s < 0) {
            if (1 == this.t)
              return this[0] - this.DV;
            if (0 == this.t)
              return -1;
          } else {
            if (1 == this.t)
              return this[0];
            if (0 == this.t)
              return 0;
          }
          return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
        }, i.prototype.signum = function() {
          return this.s < 0 ? -1 : this.t <= 0 || 1 == this.t && this[0] <= 0 ? 0 : 1;
        }, i.prototype.copyTo = function(e2) {
          for (var t2 = this.t - 1; 0 <= t2; --t2)
            e2[t2] = this[t2];
          e2.t = this.t, e2.s = this.s;
        }, i.prototype.fromInt = function(e2) {
          this.t = 1, this.s = e2 < 0 ? -1 : 0, 0 < e2 ? this[0] = e2 : e2 < -1 ? this[0] = e2 + this.DV : this.t = 0;
        }, i.prototype.fromString = function(e2, t2) {
          var r2;
          if (16 == t2)
            r2 = 4;
          else if (8 == t2)
            r2 = 3;
          else if (256 == t2)
            r2 = 8;
          else if (2 == t2)
            r2 = 1;
          else if (32 == t2)
            r2 = 5;
          else {
            if (4 != t2)
              return void this.fromRadix(e2, t2);
            r2 = 2;
          }
          this.t = 0, this.s = 0;
          for (var s2 = e2.length, n2 = false, o2 = 0; 0 <= --s2; ) {
            var a2 = 8 == r2 ? 255 & +e2[s2] : m(e2, s2);
            a2 < 0 ? "-" == e2.charAt(s2) && (n2 = true) : (n2 = false, 0 == o2 ? this[this.t++] = a2 : o2 + r2 > this.DB ? (this[this.t - 1] |= (a2 & (1 << this.DB - o2) - 1) << o2, this[this.t++] = a2 >> this.DB - o2) : this[this.t - 1] |= a2 << o2, (o2 += r2) >= this.DB && (o2 -= this.DB));
          }
          8 == r2 && 0 != (128 & +e2[0]) && (this.s = -1, 0 < o2 && (this[this.t - 1] |= (1 << this.DB - o2) - 1 << o2)), this.clamp(), n2 && i.ZERO.subTo(this, this);
        }, i.prototype.clamp = function() {
          for (var e2 = this.s & this.DM; 0 < this.t && this[this.t - 1] == e2; )
            --this.t;
        }, i.prototype.dlShiftTo = function(e2, t2) {
          for (var r2 = this.t - 1; 0 <= r2; --r2)
            t2[r2 + e2] = this[r2];
          for (r2 = e2 - 1; 0 <= r2; --r2)
            t2[r2] = 0;
          t2.t = this.t + e2, t2.s = this.s;
        }, i.prototype.drShiftTo = function(e2, t2) {
          for (var r2 = e2; r2 < this.t; ++r2)
            t2[r2 - e2] = this[r2];
          t2.t = Math.max(this.t - e2, 0), t2.s = this.s;
        }, i.prototype.lShiftTo = function(e2, t2) {
          for (var r2 = e2 % this.DB, s2 = this.DB - r2, n2 = (1 << s2) - 1, i2 = Math.floor(e2 / this.DB), o2 = this.s << r2 & this.DM, a2 = this.t - 1; 0 <= a2; --a2)
            t2[a2 + i2 + 1] = this[a2] >> s2 | o2, o2 = (this[a2] & n2) << r2;
          for (a2 = i2 - 1; 0 <= a2; --a2)
            t2[a2] = 0;
          t2[i2] = o2, t2.t = this.t + i2 + 1, t2.s = this.s, t2.clamp();
        }, i.prototype.rShiftTo = function(e2, t2) {
          t2.s = this.s;
          var r2 = Math.floor(e2 / this.DB);
          if (r2 >= this.t)
            t2.t = 0;
          else {
            var s2 = e2 % this.DB, n2 = this.DB - s2, i2 = (1 << s2) - 1;
            t2[0] = this[r2] >> s2;
            for (var o2 = r2 + 1; o2 < this.t; ++o2)
              t2[o2 - r2 - 1] |= (this[o2] & i2) << n2, t2[o2 - r2] = this[o2] >> s2;
            0 < s2 && (t2[this.t - r2 - 1] |= (this.s & i2) << n2), t2.t = this.t - r2, t2.clamp();
          }
        }, i.prototype.subTo = function(e2, t2) {
          for (var r2 = 0, s2 = 0, n2 = Math.min(e2.t, this.t); r2 < n2; )
            s2 += this[r2] - e2[r2], t2[r2++] = s2 & this.DM, s2 >>= this.DB;
          if (e2.t < this.t) {
            for (s2 -= e2.s; r2 < this.t; )
              s2 += this[r2], t2[r2++] = s2 & this.DM, s2 >>= this.DB;
            s2 += this.s;
          } else {
            for (s2 += this.s; r2 < e2.t; )
              s2 -= e2[r2], t2[r2++] = s2 & this.DM, s2 >>= this.DB;
            s2 -= e2.s;
          }
          t2.s = s2 < 0 ? -1 : 0, s2 < -1 ? t2[r2++] = this.DV + s2 : 0 < s2 && (t2[r2++] = s2), t2.t = r2, t2.clamp();
        }, i.prototype.multiplyTo = function(e2, t2) {
          var r2 = this.abs(), s2 = e2.abs(), n2 = r2.t;
          for (t2.t = n2 + s2.t; 0 <= --n2; )
            t2[n2] = 0;
          for (n2 = 0; n2 < s2.t; ++n2)
            t2[n2 + r2.t] = r2.am(0, s2[n2], t2, n2, 0, r2.t);
          t2.s = 0, t2.clamp(), this.s != e2.s && i.ZERO.subTo(t2, t2);
        }, i.prototype.squareTo = function(e2) {
          for (var t2 = this.abs(), r2 = e2.t = 2 * t2.t; 0 <= --r2; )
            e2[r2] = 0;
          for (r2 = 0; r2 < t2.t - 1; ++r2) {
            var s2 = t2.am(r2, t2[r2], e2, 2 * r2, 0, 1);
            (e2[r2 + t2.t] += t2.am(r2 + 1, 2 * t2[r2], e2, 2 * r2 + 1, s2, t2.t - r2 - 1)) >= t2.DV && (e2[r2 + t2.t] -= t2.DV, e2[r2 + t2.t + 1] = 1);
          }
          0 < e2.t && (e2[e2.t - 1] += t2.am(r2, t2[r2], e2, 2 * r2, 0, 1)), e2.s = 0, e2.clamp();
        }, i.prototype.divRemTo = function(e2, t2, r2) {
          if (!((d2 = e2.abs()).t <= 0)) {
            var s2 = this.abs();
            if (s2.t < d2.t)
              return null != t2 && t2.fromInt(0), void (null != r2 && this.copyTo(r2));
            null == r2 && (r2 = l());
            var n2 = l(), o2 = this.s, a2 = (e2 = e2.s, this.DB - _(d2[d2.t - 1])), u2 = (0 < a2 ? (d2.lShiftTo(a2, n2), s2.lShiftTo(a2, r2)) : (d2.copyTo(n2), s2.copyTo(r2)), n2.t), c2 = n2[u2 - 1];
            if (0 != c2) {
              var d2 = c2 * (1 << this.F1) + (1 < u2 ? n2[u2 - 2] >> this.F2 : 0), p2 = this.FV / d2, h2 = (1 << this.F1) / d2, f2 = 1 << this.F2, m2 = r2.t, g2 = m2 - u2, b = null == t2 ? l() : t2;
              for (n2.dlShiftTo(g2, b), 0 <= r2.compareTo(b) && (r2[r2.t++] = 1, r2.subTo(b, r2)), i.ONE.dlShiftTo(u2, b), b.subTo(n2, n2); n2.t < u2; )
                n2[n2.t++] = 0;
              for (; 0 <= --g2; ) {
                var v = r2[--m2] == c2 ? this.DM : Math.floor(r2[m2] * p2 + (r2[m2 - 1] + f2) * h2);
                if ((r2[m2] += n2.am(0, v, r2, g2, 0, u2)) < v)
                  for (n2.dlShiftTo(g2, b), r2.subTo(b, r2); r2[m2] < --v; )
                    r2.subTo(b, r2);
              }
              null != t2 && (r2.drShiftTo(u2, t2), o2 != e2 && i.ZERO.subTo(t2, t2)), r2.t = u2, r2.clamp(), 0 < a2 && r2.rShiftTo(a2, r2), o2 < 0 && i.ZERO.subTo(r2, r2);
            }
          }
        }, i.prototype.invDigit = function() {
          if (this.t < 1)
            return 0;
          var e2 = this[0];
          if (0 == (1 & e2))
            return 0;
          var t2 = 3 & e2;
          return 0 < (t2 = (t2 = (t2 = (t2 = t2 * (2 - (15 & e2) * t2) & 15) * (2 - (255 & e2) * t2) & 255) * (2 - ((65535 & e2) * t2 & 65535)) & 65535) * (2 - e2 * t2 % this.DV) % this.DV) ? this.DV - t2 : -t2;
        }, i.prototype.isEven = function() {
          return 0 == (0 < this.t ? 1 & this[0] : this.s);
        }, i.prototype.exp = function(e2, t2) {
          if (4294967295 < e2 || e2 < 1)
            return i.ONE;
          var r2, s2 = l(), n2 = l(), o2 = t2.convert(this), a2 = _(e2) - 1;
          for (o2.copyTo(s2); 0 <= --a2; )
            t2.sqrTo(s2, n2), 0 < (e2 & 1 << a2) ? t2.mulTo(n2, o2, s2) : (r2 = s2, s2 = n2, n2 = r2);
          return t2.revert(s2);
        }, i.prototype.chunkSize = function(e2) {
          return Math.floor(Math.LN2 * this.DB / Math.log(e2));
        }, i.prototype.toRadix = function(e2) {
          if (null == e2 && (e2 = 10), 0 == this.signum() || e2 < 2 || 36 < e2)
            return "0";
          var t2 = this.chunkSize(e2), r2 = Math.pow(e2, t2), s2 = g(r2), n2 = l(), i2 = l(), o2 = "";
          for (this.divRemTo(s2, n2, i2); 0 < n2.signum(); )
            o2 = (r2 + i2.intValue()).toString(e2).substr(1) + o2, n2.divRemTo(s2, n2, i2);
          return i2.intValue().toString(e2) + o2;
        }, i.prototype.fromRadix = function(e2, t2) {
          this.fromInt(0);
          for (var r2 = this.chunkSize(t2 = null == t2 ? 10 : t2), s2 = Math.pow(t2, r2), n2 = false, o2 = 0, a2 = 0, u2 = 0; u2 < e2.length; ++u2) {
            var c2 = m(e2, u2);
            c2 < 0 ? "-" == e2.charAt(u2) && 0 == this.signum() && (n2 = true) : (a2 = t2 * a2 + c2, ++o2 >= r2 && (this.dMultiply(s2), this.dAddOffset(a2, 0), a2 = o2 = 0));
          }
          0 < o2 && (this.dMultiply(Math.pow(t2, o2)), this.dAddOffset(a2, 0)), n2 && i.ZERO.subTo(this, this);
        }, i.prototype.dMultiply = function(e2) {
          this[this.t] = this.am(0, e2 - 1, this, 0, 0, this.t), ++this.t, this.clamp();
        }, i.prototype.dAddOffset = function(e2, t2) {
          if (0 != e2) {
            for (; this.t <= t2; )
              this[this.t++] = 0;
            for (this[t2] += e2; this[t2] >= this.DV; )
              this[t2] -= this.DV, ++t2 >= this.t && (this[this.t++] = 0), ++this[t2];
          }
        }, i);
        function i(e2, t2) {
          null != e2 && (null == t2 && "string" != typeof e2 ? this.fromString(e2, 256) : this.fromString(e2, t2));
        }
        a.prototype.convert = function(e2) {
          return e2.s < 0 || 0 <= e2.compareTo(this.m) ? e2.mod(this.m) : e2;
        }, a.prototype.revert = function(e2) {
          return e2;
        }, a.prototype.reduce = function(e2) {
          e2.divRemTo(this.m, null, e2);
        }, a.prototype.mulTo = function(e2, t2, r2) {
          e2.multiplyTo(t2, r2), this.reduce(r2);
        }, a.prototype.sqrTo = function(e2, t2) {
          e2.squareTo(t2), this.reduce(t2);
        };
        var o = a;
        function a(e2) {
          this.m = e2;
        }
        c.prototype.convert = function(e2) {
          var t2 = l();
          return e2.abs().dlShiftTo(this.m.t, t2), t2.divRemTo(this.m, null, t2), e2.s < 0 && 0 < t2.compareTo(n.ZERO) && this.m.subTo(t2, t2), t2;
        }, c.prototype.revert = function(e2) {
          var t2 = l();
          return e2.copyTo(t2), this.reduce(t2), t2;
        }, c.prototype.reduce = function(e2) {
          for (; e2.t <= this.mt2; )
            e2[e2.t++] = 0;
          for (var t2 = 0; t2 < this.m.t; ++t2) {
            var r2 = 32767 & e2[t2], s2 = r2 * this.mpl + ((r2 * this.mph + (e2[t2] >> 15) * this.mpl & this.um) << 15) & e2.DM;
            for (e2[r2 = t2 + this.m.t] += this.m.am(0, s2, e2, t2, 0, this.m.t); e2[r2] >= e2.DV; )
              e2[r2] -= e2.DV, e2[++r2]++;
          }
          e2.clamp(), e2.drShiftTo(this.m.t, e2), 0 <= e2.compareTo(this.m) && e2.subTo(this.m, e2);
        }, c.prototype.mulTo = function(e2, t2, r2) {
          e2.multiplyTo(t2, r2), this.reduce(r2);
        }, c.prototype.sqrTo = function(e2, t2) {
          e2.squareTo(t2), this.reduce(t2);
        };
        var u = c;
        function c(e2) {
          this.m = e2, this.mp = e2.invDigit(), this.mpl = 32767 & this.mp, this.mph = this.mp >> 15, this.um = (1 << e2.DB - 15) - 1, this.mt2 = 2 * e2.t;
        }
        function l() {
          return new n(null);
        }
        function d(e2, t2) {
          return new n(e2, t2);
        }
        r = (t = "undefined" != typeof navigator) && "Microsoft Internet Explorer" == navigator.appName ? (n.prototype.am = function(e2, t2, r2, s2, n2, i2) {
          for (var o2 = 32767 & t2, a2 = t2 >> 15; 0 <= --i2; ) {
            var u2 = 32767 & this[e2], c2 = this[e2++] >> 15, l2 = a2 * u2 + c2 * o2;
            n2 = ((u2 = o2 * u2 + ((32767 & l2) << 15) + r2[s2] + (1073741823 & n2)) >>> 30) + (l2 >>> 15) + a2 * c2 + (n2 >>> 30), r2[s2++] = 1073741823 & u2;
          }
          return n2;
        }, 30) : t && "Netscape" != navigator.appName ? (n.prototype.am = function(e2, t2, r2, s2, n2, i2) {
          for (; 0 <= --i2; ) {
            var o2 = t2 * this[e2++] + r2[s2] + n2;
            n2 = Math.floor(o2 / 67108864), r2[s2++] = 67108863 & o2;
          }
          return n2;
        }, 26) : (n.prototype.am = function(e2, t2, r2, s2, n2, i2) {
          for (var o2 = 16383 & t2, a2 = t2 >> 14; 0 <= --i2; ) {
            var u2 = 16383 & this[e2], c2 = this[e2++] >> 14, l2 = a2 * u2 + c2 * o2;
            n2 = ((u2 = o2 * u2 + ((16383 & l2) << 14) + r2[s2] + n2) >> 28) + (l2 >> 14) + a2 * c2, r2[s2++] = 268435455 & u2;
          }
          return n2;
        }, 28);
        for (var p = (n.prototype.DB = r, n.prototype.DM = (1 << r) - 1, n.prototype.DV = 1 << r, n.prototype.FV = Math.pow(2, 52), n.prototype.F1 = 52 - r, n.prototype.F2 = 2 * r - 52, []), h = "0".charCodeAt(0), f = 0; f <= 9; ++f)
          p[h++] = f;
        for (h = "a".charCodeAt(0), f = 10; f < 36; ++f)
          p[h++] = f;
        for (h = "A".charCodeAt(0), f = 10; f < 36; ++f)
          p[h++] = f;
        function m(e2, t2) {
          return null == (e2 = p[e2.charCodeAt(t2)]) ? -1 : e2;
        }
        function g(e2) {
          var t2 = l();
          return t2.fromInt(e2), t2;
        }
        function _(e2) {
          var t2, r2 = 1;
          return 0 != (t2 = e2 >>> 16) && (e2 = t2, r2 += 16), 0 != (t2 = e2 >> 8) && (e2 = t2, r2 += 8), 0 != (t2 = e2 >> 4) && (e2 = t2, r2 += 4), 0 != (t2 = e2 >> 2) && (e2 = t2, r2 += 2), 0 != (t2 = e2 >> 1) && (e2 = t2, r2 += 1), r2;
        }
        n.ZERO = g(0), n.ONE = g(1);
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return c;
        });
        var s = r(2), n = r(1), i = r(0), o = function() {
          return (o = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, a = i.X.Group, u = 6000001, c = (l.prototype.destroy = function() {
          this.cnMgr = null, this.bus = null, this.lg = null, this.st = null, this.econf = null, this.dbMgr = null, this.dbMbMap.clear();
        }, l.prototype.setDBGroup = function(e2, t2) {
          var r2 = this;
          this.dbApplyMap = e2, t2 && (this.dbGroup = t2, this.dbGroup.mutedInfo || (this.dbGroup.mutedInfo = { mode: 0, expiredTime: 0, roles: [] }), this.dbGroup.verifyInfo || (this.dbGroup.verifyInfo = { joinMode: 0, inviteMode: 0, beInviteMode: 0 }), this.dbMbMap.size < 3 && this.dbMgr.getGroupMemberList(this.groupID).then(function(e3) {
            t2.totalMemberCount || (t2.totalMemberCount = e3.filter(function(e4) {
              return !e4.state;
            }).length);
            var s2 = r2.st.getRealClientTimestamp();
            e3.forEach(function(e4) {
              -1 != e4.muteExpiredTime && e4.muteExpiredTime <= s2 && (e4.muteExpiredTime = 0), r2.dbMbMap.set(e4.userID, e4);
            });
          }));
        }, l.prototype.create = function(e2, t2, r2) {
          var s2 = this, o2 = { time: new Date(), groupInfo: e2, config: r2, userIDs: t2 }, c2 = [], l2 = (Array.isArray(t2) && (t2 = t2.filter(function(e3) {
            return !!Object(n.n)(e3) || (c2.push({ userID: e3, reason: u }), false);
          }), t2 = Array.from(new Set(t2))), r2.groupAttributes), d = Object.keys(l2).map(function(e3) {
            return { key: e3, value: l2[e3], seq: 1 };
          }), p = { group_id: e2.groupID || "", group_name: e2.groupName || "", group_notice: r2.groupNotice || "", group_avatar: Object(n.k)(e2.groupAvatarUrl || ""), user_ids: t2, limit_info: { maxMemberCount: r2.maxMemberCount, joinMode: r2.joinMode, inviteMode: r2.inviteMode, beInviteMode: r2.beInviteMode }, attributes: d };
          return this.cnMgr.send(i.d.gp_create, p).then(function(t3) {
            return t3.code ? (o2.error = Object(n.y)(6000503, t3.message, t3.code), s2.lg.w(a, i.W.CreateGroup, o2), Promise.reject(o2.error)) : (t3.error_users.forEach(function(e3) {
              return c2.push(s2.createErrorUser(e3));
            }), s2.groupID = t3.group_id, s2.dbGroup.groupID = s2.groupID, s2.dbGroup.totalMemberCount = t3.member_count, t3.attributes = { attributes: d, seq: t3.group_attribute_seq }, t3.group_name = e2.groupName, t3.group_notice = r2.groupNotice, t3.group_avatar = p.group_avatar, t3.limit_info = p.limit_info, t3 = s2.createGroupCallback(t3), s2.lg.i(a, i.W.CreateGroup, o2), { groupInfo: s2.createGroupFullInfo(), userList: t3, errorUserList: c2 });
          });
        }, l.prototype.join = function(e2, t2) {
          var r2 = this, s2 = e2 ? i.W.JoinGroup : i.W.SendGroupJoinApp, u2 = { time: new Date(), groupID: this.groupID }, c2 = { group_id: this.groupID, user_id: null == t2 ? void 0 : t2.wording, offline_info: Object(n.g)(null == t2 ? void 0 : t2.pushConfig) };
          return this.cnMgr.send(e2 ? i.d.gp_enter : i.d.gp_apply, c2).then(function(c3) {
            return c3.code ? (u2.error = Object(n.y)(6000505, c3.message, c3.code), r2.lg.w(a, s2, u2), Promise.reject(u2.error)) : e2 && c3.group_list_seq || c3.group_info && c3.group_info.group_id ? (e2 || Object.assign(c3, c3.group_info), r2.dbGroup.totalMemberCount = c3.member_count, c3.member.member_data.user_avatar || (c3.member.member_data.user_avatar = r2.econf.user.userAvatarUrl), c3.op_user = o(o({}, c3.member.member_data), { user_id: c3.member.user_id }), c3.members = [c3.member], l2 = r2.joinGroupCallback(c3, i.O.Joined, i.K.Joined), r2.lg.i(a, s2, u2), { groupInfo: l2 }) : (c3.apply_group_info && c3.apply_group_info.create_time && (l2 = { type: i.E.Join, state: i.D.Waiting, updateTime: c3.apply_group_info.update_time, createTime: c3.apply_group_info.create_time, wording: (null == t2 ? void 0 : t2.wording) || "", seq: c3.apply_group_info.base_info.update_time, groupInfo: { groupID: r2.groupID, groupName: Object(n.h)(c3.apply_group_info.base_info.user_name), groupAvatarUrl: Object(n.h)(c3.apply_group_info.base_info.avatar) }, applyUser: Object(n.u)(r2.econf.user.userID, r2.econf) }, r2.syncGroupApplyMap(l2) ? r2.bus.emit(i.u.GroupAppUpd, { applicationList: [l2] }) : (d = i.C.Added, r2.bus.emit(i.u.GroupAppList, { action: d, applicationList: [l2] })), r2.updateGroupApplySeq(c3.apply_group_info.apply_list_seq)), void r2.lg.i(a, s2, u2));
            var l2, d;
          });
        }, l.prototype.inviteUsers = function(e2, t2, r2) {
          var s2 = this, o2 = e2 ? i.W.SendGroupInviteApps : i.W.InviteIntoGroup, c2 = { time: new Date(), groupID: this.groupID, userIDs: t2 }, l2 = [], d = (t2 = t2.filter(function(e3) {
            return !(!Object(n.n)(e3) || e3 == s2.econf.user.userID) || (l2.push({ userID: e3, reason: u }), false);
          }), t2 = Array.from(new Set(t2)), null == r2 ? void 0 : r2.wording);
          r2 = e2 ? { group_id: this.groupID, user_infos: t2.map(function(e3) {
            return { key: e3, value: d };
          }), offline_info: Object(n.g)(null == r2 ? void 0 : r2.pushConfig) } : { group_id: this.groupID, user_ids: t2 };
          return this.cnMgr.send(i.d.gp_invite, r2).then(function(t3) {
            if (t3.code)
              return c2.error = Object(n.y)(6000508, t3.message, t3.code), s2.lg.w(a, o2, c2), Promise.reject(c2.error);
            s2.dbGroup.totalMemberCount = t3.member_count, t3.error_users.forEach(function(e3) {
              return l2.push(s2.createErrorUser(e3));
            });
            var r3 = s2.checkSyncUsers(t3, "inviteUse", true), u2 = (r3.length && s2.bus.emit(i.u.GroupMemberState, { groupID: s2.groupID, state: i.R.Enter, event: i.O.Invited, userList: r3, operatedInfo: s2.createOwnerOperator() }), []), p = [];
            if (t3.apply_users && t3.apply_users.length) {
              for (var h = [s2.dbGroup.groupAppSeq || 0], f = s2.dbGroup.dataSeq, m = { groupID: s2.groupID, groupName: s2.dbGroup.groupName, groupAvatarUrl: s2.dbGroup.groupAvatarUrl }, g = (t3 = (t3.apply_users.forEach(function(t4) {
                h.push(t4.apply_list_seq);
                var r4 = { userID: t4.base_info.user_id, userName: Object(n.h)(t4.base_info.user_name), userAvatarUrl: Object(n.h)(t4.base_info.avatar) };
                Object(n.x)(r4, s2.econf), t4 = { type: i.E.Invite, state: i.D.Waiting, updateTime: t4.update_time, createTime: t4.create_time, wording: d || "", seq: f, groupInfo: m, applyUser: r4 };
                (s2.checkGroupApplyCreateTime(t4) ? p : u2).push(t4), e2 || l2.push({ userID: r4.userID, reason: 6000544 });
              }), s2.syncGroupApplyMap(), s2.dbMbMap.get(s2.econf.user.userID)), e2 && t3 && t3.memberRole < i.Q.Member && (u2.length && (t3 = i.C.Added, s2.bus.emit(i.u.GroupAppList, { action: t3, applicationList: u2 })), p.length && s2.bus.emit(i.u.GroupAppUpd, { applicationList: p })), h.sort(function(e3, t4) {
                return e3 - t4;
              }), 0); g < h.length && h[g] + 1 == h[g + 1]; g++)
                ;
              g && s2.updateGroupApplySeq(h[g], true);
            }
            return s2.lg.i(a, o2, c2), e2 ? { groupID: s2.groupID, errorUserList: l2 } : { groupID: s2.groupID, errorUserList: l2, userList: r3 };
          });
        }, l.prototype.kickMembers = function(e2) {
          var t2 = this, r2 = { time: new Date(), groupID: this.groupID, userIDs: e2 }, s2 = [], o2 = (e2 = e2.filter(function(e3) {
            return !!Object(n.n)(e3) || (s2.push({ userID: e3, reason: u }), false);
          }), e2 = Array.from(new Set(e2)), { group_id: this.groupID, user_ids: e2 });
          return this.cnMgr.send(i.d.gp_kickout, o2).then(function(o3) {
            if (o3.code)
              return r2.error = Object(n.y)(6000507, o3.message, o3.code), t2.lg.w(a, i.W.KickGroupMembers, r2), Promise.reject(r2.error);
            t2.dbGroup.totalMemberCount = o3.member_count;
            var u2 = [], c2 = [];
            return e2.forEach(function(e3) {
              var r3;
              o3.error_users.some(function(t3) {
                return t3.user_id === e3;
              }) || (r3 = t2.dbMbMap.get(e3)) && (r3.state = 1, c2.push(Object(n.t)(r3, t2.econf)), t2.dbMbMap.set(e3, r3), u2.push(r3));
            }), e2 = c2.map(function(e3) {
              return e3.userID;
            }), o3.error_users.forEach(function(e3) {
              return s2.push(t2.createErrorUser(e3));
            }), t2.updateMemberSeq(o3.member_all_seq), t2.dbMgr.addGroupMemberList(t2.groupID, u2), t2.bus.emit(i.u.GroupMemberState, { groupID: t2.groupID, state: i.R.Quit, event: i.O.KickedOut, userList: c2, operatedInfo: t2.createOwnerOperator() }), t2.lg.i(a, i.W.KickGroupMembers, r2), { groupID: t2.groupID, kickedUserIDs: e2, errorUserList: s2 };
          });
        }, l.prototype.transferOwner = function(e2) {
          var t2 = this, r2 = { time: new Date(), groupID: this.groupID, userID: e2 }, s2 = { group_id: this.groupID, group_name: e2 };
          return this.cnMgr.send(i.d.gp_owner_transfer, s2).then(function(s3) {
            return s3.code ? (r2.error = Object(n.y)(6000509, s3.message, s3.code), t2.lg.w(a, i.W.TransferGroupOwner, r2), Promise.reject(r2.error)) : (t2.transferOwnerCallback([{ userID: e2, dataSeq: s3.conv_msg_seq }, { userID: t2.econf.user.userID, dataSeq: s3.conv_list_seq }]), t2.lg.i(a, i.W.TransferGroupOwner, r2), { groupID: t2.groupID, toUserID: e2 });
          });
        }, l.prototype.update = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), type: t2, value: e2 }, o2 = [i.d.gp_mdf_notice, i.d.gp_mdf_name, i.d.gp_mdf_avatar][t2], u2 = t2 == i.I.Avatar ? { user_id: this.groupID, user_name: Object(n.k)(e2) } : { group_id: this.groupID, group_name: e2 };
          return this.cnMgr.send(o2, u2).then(function(o3) {
            if (o3.code)
              return s2.error = Object(n.y)(6000510, o3.message, o3.code), r2.lg.w(a, i.W.UpdateGroup, s2), Promise.reject(s2.error);
            r2.mergeGroupData(o3.conv_list_seq, t2, e2, r2.createOwnerOperator()), r2.lg.i(a, i.W.UpdateGroup, s2);
          });
        }, l.prototype.mute = function(e2) {
          var t2 = this, r2 = { time: new Date(), config: e2 }, s2 = (e2.duration = 0 | e2.duration, e2.mode), o2 = (s2 == i.T.None || s2 == i.T.All ? e2.roles = [] : s2 == i.T.Normal && (e2.roles = [i.Q.Member]), { group_id: this.groupID, duration: e2.duration, is_all_forbid: s2 == i.T.All, forbid_list: e2.roles });
          return this.cnMgr.send(i.d.gp_set_forbid, o2).then(function(o3) {
            if (o3.code)
              return r2.error = Object(n.y)(6000510, o3.message, o3.code), t2.lg.w(a, i.W.MuteGroup, r2), Promise.reject(r2.error);
            var u2 = { mode: s2, expiredTime: 0 < e2.duration ? o3.conv_msg_seq : e2.duration, roles: e2.roles };
            return t2.mergeGroupData(o3.conv_list_seq, i.I.Mute, u2, t2.createOwnerOperator()), t2.lg.i(a, i.W.MuteGroup, r2), { groupID: t2.groupID, isMute: s2 != i.T.None, mutedInfo: u2 };
          });
        }, l.prototype.query = function() {
          var e2 = this, t2 = { time: new Date(), groupID: this.groupID }, r2 = { group_id: this.groupID };
          return this.cnMgr.send(i.d.gp_data, r2).then(function(r3) {
            var s2 = r3.code;
            return s2 && 6000104 != s2 ? (t2.error = Object(n.y)(6000511, r3.message, s2), e2.lg.w(a, i.W.QueryGroup, t2), Promise.reject(t2.error)) : (s2 || e2.queryGroupInfoCallback(r3), e2.lg.i(a, i.W.QueryGroup, t2), { groupInfo: e2.createGroupFullInfo() });
          });
        }, l.prototype.updateAttr = function(e2) {
          var t2, r2 = this, s2 = { time: new Date(), groupID: this.groupID, params: e2 }, o2 = [], u2 = i.F.Set, c2 = Array.isArray(e2) ? (u2 = i.F.Delete, t2 = i.W.DelGroupAttrs, e2 = e2.filter(function(e3) {
            return !!Object(n.n)(e3) || (o2.push(e3), false);
          }), (e2 = Array.from(new Set(e2))).map(function(e3) {
            return { key: e3, value: "" };
          })) : (t2 = i.W.SetGroupAttr, Object.keys(e2).map(function(t3) {
            return { key: t3, value: e2[t3] };
          }));
          c2 = { group_id: this.groupID, attributes: { action: u2, attributes: c2 } };
          return this.cnMgr.send(i.d.gp_mdf_attr, c2).then(function(e3) {
            return e3.code ? (s2.error = Object(n.y)(6000512, e3.message, e3.code), r2.lg.w(a, t2, s2), Promise.reject(s2.error)) : (r2.mergeAttr(u2, e3.attributes, r2.createOwnerOperator()), e3.fail_keys.forEach(function(e4) {
              return o2.push(e4.key);
            }), r2.lg.i(a, t2, s2), { groupID: r2.groupID, errorKeys: o2 });
          });
        }, l.prototype.queryAttr = function(e2) {
          var t2 = this, r2 = { time: new Date(), groupID: this.groupID, keys: e2 }, s2 = this.dbGroup.attributes || {}, o2 = (e2 || Object.keys(s2)).map(function(e3) {
            return { key: e3, seq: (null == (e3 = s2[e3]) ? void 0 : e3.seq) || 1 };
          });
          o2 = { group_id: this.groupID, attributes: { seq: this.dbGroup.attributeSeq || 0, attributes: o2 } };
          return this.cnMgr.send(i.d.gp_attr, o2).then(function(s3) {
            var o3 = s3.code;
            return o3 && 6000104 != o3 ? (r2.error = Object(n.y)(6000513, s3.message, o3), t2.lg.w(a, i.W.QueryGroupAttrs, r2), Promise.reject(r2.error)) : (o3 || t2.mergeAttr(i.F.Query, s3.attributes), t2.lg.i(a, i.W.QueryGroupAttrs, r2), { groupID: t2.groupID, groupAttributes: t2.createAttr(e2) });
          });
        }, l.prototype.setMemberInfo = function(e2, t2, r2) {
          var s2 = this, o2 = { time: new Date(), userID: e2, value: t2 }, u2 = r2 == i.P.Nickname ? i.d.gp_member_nickname : i.d.gp_member_role, c2 = r2 == i.P.Nickname ? i.W.SetGroupMemberNickname : i.W.SetGroupMemberRole, l2 = { group_id: this.groupID };
          return r2 == i.P.Nickname ? (l2.group_name = e2, l2.group_notice = t2) : (l2.user_id = e2, l2.role = t2), this.cnMgr.send(u2, l2).then(function(u3) {
            return u3.code ? (o2.error = Object(n.y)(6000514, u3.message, u3.code), s2.lg.w(a, c2, o2), Promise.reject(o2.error)) : (s2.mergeMemberInfo(r2, u3.conv_list_seq, t2, e2), s2.lg.i(a, c2, o2), r2 == i.P.Nickname ? { groupID: s2.groupID, forUserID: e2, nickname: t2 } : { groupID: s2.groupID, forUserID: e2, role: t2 });
          });
        }, l.prototype.queryMemberInfo = function(e2) {
          var t2 = this, r2 = { time: new Date(), groupID: this.groupID, userID: e2 }, s2 = { group_id: this.groupID, user_id: e2 };
          return this.cnMgr.send(i.d.gp_member_data, s2).then(function(s3) {
            var o2 = s3.code;
            if (o2 && 6000104 != o2)
              return r2.error = Object(n.y)(6000515, s3.message, o2), t2.lg.w(a, i.W.QueryGroupMember, r2), Promise.reject(r2.error);
            var u2 = t2.dbMbMap.get(e2) || { userID: e2 };
            return o2 || (o2 = t2.st.getRealClientTimestamp(), u2 = t2.createDBMember(s3.member, o2), t2.dbMgr.addGroupMemberList(t2.groupID, [u2])), t2.lg.i(a, i.W.QueryGroupMember, r2), { groupID: t2.groupID, userInfo: Object(n.t)(u2, t2.econf) };
          });
        }, l.prototype.queryMemberList = function(e2) {
          var t2 = this;
          return new Promise(function(r2, s2) {
            var n2 = { time: new Date(), groupID: t2.groupID, config: e2 };
            t2.isFullMembers && t2.dbGroup.totalMemberCount <= t2.dbMbMap.size ? t2.queryMembersCallback(e2, false, null, n2, r2, s2) : t2.mergeSvrMemberList(i.v.Biz, function(i2) {
              t2.queryMembersCallback(e2, false, i2, n2, r2, s2);
            });
          });
        }, l.prototype.queryMemberCount = function() {
          var e2 = { groupID: this.groupID, count: this.dbGroup.totalMemberCount };
          return this.lg.i(a, i.W.QueryGroupMemberCount, e2), Promise.resolve(e2);
        }, l.prototype.muteMembers = function(e2, t2, r2) {
          var s2 = this;
          if (e2 && (!r2 || r2 < -1))
            return Promise.reject({ code: u, message: "The config instance of duration: " + r2 + " is invalid." });
          var o2 = { time: new Date(), groupID: this.groupID }, c2 = (r2 = e2 ? 0 | r2 : 0, []);
          t2 = t2.filter(function(e3) {
            return !!Object(n.n)(e3) || (c2.push({ userID: e3, reason: u }), false);
          }), t2 = Array.from(new Set(t2)), t2 = { call_id: this.groupID, user_ids: t2, timeout: r2 };
          return this.cnMgr.send(i.d.gp_member_forbid, t2).then(function(t3) {
            if (t3.code)
              return o2.error = Object(n.y)(6000514, t3.message, t3.code), s2.lg.w(a, i.W.MuteGroupMembers, o2), Promise.reject(o2.error);
            t3.error_users.forEach(function(e3) {
              return c2.push(s2.createErrorUser(e3));
            });
            var u2 = s2.st.getRealClientTimestamp();
            t3 = t3.members.map(function(e3) {
              return s2.createDBMember(e3, u2);
            });
            return s2.dbMgr.addGroupMemberList(s2.groupID, t3), s2.bus.emit(i.u.GroupMemberInfo, { groupID: s2.groupID, userList: t3.map(function(e3) {
              return Object(n.t)(e3, s2.econf);
            }), operatedInfo: s2.createOwnerOperator() }), s2.lg.i(a, i.W.MuteGroupMembers, o2), { groupID: s2.groupID, isMute: e2, duration: r2, mutedUserIDs: t3.map(function(e3) {
              return e3.userID;
            }), errorUserList: c2 };
          });
        }, l.prototype.queryMemberMutedList = function(e2) {
          var t2 = this;
          return new Promise(function(r2, s2) {
            var n2 = { time: new Date(), groupID: t2.groupID, config: e2 };
            t2.isFullMembers && t2.dbGroup.totalMemberCount <= t2.dbMbMap.size ? t2.queryMembersCallback(e2, true, null, n2, r2, s2) : t2.mergeSvrMemberList(i.v.Biz, function(i2) {
              t2.queryMembersCallback(e2, true, i2, n2, r2, s2);
            });
          });
        }, l.prototype.queryReceiptMemberList = function(e2, t2, r2, s2, o2) {
          var u2 = this;
          return new Promise(function(c2) {
            var l2 = t2.memberSeqs, d = Object.keys(l2);
            if (!o2 && d.length)
              return c2({ groupID: u2.groupID, nextFlag: 0, userList: [] });
            function p() {
              for (var e3 = {}, t3 = (u2.dbMbMap.forEach(function(t4) {
                return e3[t4.seq] = t4;
              }), d.filter(function(t4) {
                return !e3[t4];
              })), p2 = [], h2 = [], f2 = 0; f2 < t3.length; f2 += 100) {
                var g2 = u2.cnMgr.send(i.d.gp_members_by_seq, { conv_id: u2.groupID, conv_msg_seq: t3.slice(f2, f2 + 100) }, i.j.SDK);
                h2.push(g2);
              }
              Promise.all(h2).then(function(t4) {
                var r3 = u2.st.getRealClientTimestamp(), s3 = /* @__PURE__ */ new Map();
                t4.forEach(function(t5) {
                  var n2 = t5.members;
                  (t5 = t5.deleted_members) && t5.length && t5.forEach(function(t6) {
                    t6 = u2.createDBMember(t6, r3, true), s3.set(t6.userID, t6), e3[t6.seq] = t6;
                  }), n2 && n2.length && n2.forEach(function(t6) {
                    t6 = u2.createDBMember(t6, r3), s3.set(t6.userID, t6), e3[t6.seq] = t6;
                  });
                }), u2.dbMgr.addGroupMemberList(u2.groupID, Array.from(s3.values()));
              }).then(function() {
                var t4 = 0, d2 = [], h3 = [], f3 = ((f3 = Object.keys(l2)).forEach(function(t5) {
                  l2[t5] && (t5 = e3[t5]) && h3.push(t5.userID);
                }), f3.forEach(function(r3) {
                  var n2;
                  s2 && l2[r3] ? (t4++, (n2 = e3[r3]) ? d2.push(n2) : p2.push(r3)) : s2 || l2[r3] || ((n2 = e3[r3]) ? -1 == h3.indexOf(n2.userID) ? (t4++, d2.push(n2)) : delete l2[r3] : p2.push(r3));
                }), d2.sort(function(e4, t5) {
                  return e4.seq - t5.seq;
                }), d2.length), g3 = (null == (g3 = d2[d2.length - 1]) ? void 0 : g3.seq) || 0, _2 = r2.nextFlag || 0, b2 = 0, v = (0 < _2 && _2 < g3 ? b2 = d2.findIndex(function(e4) {
                  return e4.seq == _2;
                }) + 1 : g3 <= _2 && g3 && (b2 = d2.length), b2 + Math.min(i.m.MAX_QUERY_PAGE_COUNT, r2.count)), y = (d2 = d2.slice(b2, v)).length, M = (null == (M = d2[y - 1]) ? void 0 : M.seq) || 0, k = d2.map(function(e4) {
                  return Object(n.t)(e4, u2.econf);
                }), I = y == f3 || g3 == M ? 0 : M;
                Object.assign(m, { start: b2, end: v, next: M, max: g3, total: f3, totalSeq: t4, count: y, nextFlag: I, flag: p2, config: r2 }), b2 = o2 ? s2 ? i.W.QueryReceiptRead : i.W.QueryReceiptUnread : "queryReceipt";
                u2.lg.i(a, b2, m), c2({ groupID: u2.groupID, nextFlag: I, userList: k });
              });
            }
            var h = t2.receiptMemberListSeq || 0, f = e2.messageSeq, m = { time: new Date(), groupID: u2.groupID, msgSeq: f, dbSeq: h, seqs: d };
            if (t2.readMemberCount && t2.receiptStatus != i.ab.Processing && d.filter(function(e3) {
              return l2[e3];
            }).length >= t2.readMemberCount)
              return p();
            var g = 1, _ = 0, b = 0;
            u2.fetchSvrReceiptDetail(h, g, f).then(function e3(r3) {
              var s3 = r3.code && 6000104 != r3.code ? 0 : r3.next_list_seq;
              s3 && (t2.receiptMemberListSeq = s3), 0 < r3.read_count && (t2.readMemberCount = r3.read_count), 0 < r3.unread_count && (t2.unreadMemberCount = r3.unread_count), r3.cur_member_all_seq && (t2.memberAllSeq = r3.cur_member_all_seq), r3.unread_members && (b += r3.unread_members.length, r3.unread_members.forEach(function(e4) {
                return l2[e4] = 0;
              })), r3.read_members && (_ += r3.read_members.length, r3.read_members.forEach(function(e4) {
                return l2[e4] = 1;
              })), !r3.fetch_end && s3 && u2.econf.token ? u2.fetchSvrReceiptDetail(s3, ++g, f).then(e3) : (r3.read_members_len = _, 0 == (r3.unread_members_len = b) && 0 < r3.unread_count ? u2.mergeSvrMemberSeqs(t2, f, m, p) : (p(), u2.dbMgr.addMessageExtraList([t2], "receiptDetail")));
            });
          });
        }, l.prototype.updateVerifyMode = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), type: t2, mode: e2 }, o2 = ["joinMode", "inviteMode", "beInviteMode"][t2];
          t2 = { group_id: this.groupID, set_flag: [1, 2, 4][t2], limit_info: ((t2 = {})[o2] = e2, t2) };
          return this.cnMgr.send(i.d.gp_limit, t2).then(function(t3) {
            if (t3.code)
              return s2.error = Object(n.y)(6000510, t3.message, t3.code), r2.lg.w(a, i.W.UpdateGroup, s2), Promise.reject(s2.error);
            var u2, c2 = r2.dbGroup.verifyInfo[o2] != e2;
            r2.dbGroup.verifyInfo[o2] = e2, t3 = t3.conv_list_seq;
            return (r2.dbGroup.dataSeq || 0) + 1 != t3 ? r2.cnMgr.send(i.d.gp_data, { group_id: r2.groupID }).then(function(e3) {
              e3.code || r2.queryGroupInfoCallback(e3), c2 && (e3 = { groupID: r2.groupID, verifyInfo: r2.dbGroup.verifyInfo, operatedInfo: r2.createOwnerOperator() }, r2.bus.emit(i.u.GroupVerifyInfo, e3));
            }) : c2 && (u2 = { groupID: r2.groupID, verifyInfo: r2.dbGroup.verifyInfo, operatedInfo: r2.createOwnerOperator() }, r2.bus.emit(i.u.GroupVerifyInfo, u2)), r2.dbGroup.dataSeq = t3, r2.dbMgr.addGroupList([r2.dbGroup]), r2.lg.i(a, i.W.UpdateGroupVerifyMode, s2), { groupID: r2.groupID, mode: e2 };
          });
        }, l.prototype.acceptApply = function(e2, t2, r2) {
          var s2 = this, o2 = { time: new Date() }, u2 = e2 ? i.W.AcceptGroupJoinApp : i.W.AcceptGroupInviteApp, c2 = e2 ? i.d.gp_apply_accept : i.d.gp_invite_accept;
          r2 = { group_id: this.groupID, user_id: t2, offline_info: Object(n.g)(null == r2 ? void 0 : r2.pushConfig) };
          return this.cnMgr.send(c2, r2).then(function(r3) {
            return r3.code ? (o2.error = Object(n.y)(6000502, r3.message, r3.code), s2.lg.w(a, u2, o2), Promise.reject(o2.error)) : (r3 = s2.acceptApplyCallback(r3, t2, e2), s2.lg.i(a, u2, o2), e2 ? { groupID: s2.groupID, userID: t2 } : { inviterUserID: t2, groupInfo: r3 });
          });
        }, l.prototype.onPushCreate = function(e2) {
          this.dbGroup.totalMemberCount = e2.member_count, this.createGroupCallback(e2);
        }, l.prototype.onPushJoin = function(e2, t2, r2) {
          this.dbGroup.totalMemberCount = e2.member_count, e2.members = [e2.member], e2.op_user || (e2.op_user = { user_id: this.econf.user.userID, user_name: this.econf.user.userName }), this.joinGroupCallback(e2, t2, r2);
        }, l.prototype.onPushModify = function(e2) {
          var t2, r2 = this.dbGroup.dataSeq || 0, s2 = e2.group_data_seq;
          s2 && r2 <= s2 && (t2 = (r2 = e2.modify_type || 0) == i.I.Mute ? Object(n.f)(e2.value, this.st.getRealClientTimestamp()) : e2.value, this.mergeGroupData(s2, r2, t2, this.createOperator(e2.op_user)));
        }, l.prototype.onPushAttrMdf = function(e2) {
          var t2 = this.dbGroup.attributeSeq || 0, r2 = e2.attributes.seq;
          r2 && t2 <= r2 && this.mergeAttr(i.F.Push, e2.attributes, this.createOperator(e2.op_user));
        }, l.prototype.onPushOwnerTransfer = function(e2) {
          this.transferOwnerCallback([{ userID: e2.user_id }, { userID: e2.op_user.user_id }]), this.updateMemberSeq(e2.member_all_seq);
        }, l.prototype.onPushMemberChange = function(e2) {
          var t2 = this, r2 = (this.dbGroup.totalMemberCount = e2.member_count, this.dbGroup.memberSeq || 0), s2 = e2.member_all_seq;
          if (s2 && !(s2 < r2))
            switch (e2.change_type) {
              case i.N.Enter:
              case i.N.ApplyJoin:
              case i.N.Invited:
              case i.N.ApplyInvited:
                var o2 = e2.change_type == i.N.Enter || e2.change_type == i.N.ApplyJoin ? i.O.Joined : i.O.Invited;
                this.bus.emit(i.u.GroupMemberState, { groupID: this.groupID, state: i.R.Enter, event: o2, userList: this.checkSyncUsers(e2, "memberChange", true), operatedInfo: this.createOperator(e2.op_user) });
                break;
              case i.N.Quit:
              case i.N.Kickout:
              case i.N.OwnerQuit:
                o2 = this.createOperator(e2.op_user), this.bus.emit(i.u.GroupMemberState, { groupID: this.groupID, state: i.R.Quit, event: e2.change_type === i.N.Kickout ? i.O.KickedOut : i.O.Left, userList: this.kickMemberCallback(e2), operatedInfo: o2 }), e2.change_type == i.N.OwnerQuit && this.ownerQuitCallback(e2.new_owner_id, o2);
                break;
              case i.N.Modify:
              case i.N.Mute:
                var a2 = e2.change_type == i.N.Mute ? this.st.getRealClientTimestamp() : 0;
                o2 = e2.members.map(function(e3) {
                  return t2.createDBMember(e3, a2);
                });
                this.dbMgr.addGroupMemberList(this.groupID, o2), this.bus.emit(i.u.GroupMemberInfo, { groupID: this.groupID, userList: o2.map(function(e3) {
                  return Object(n.t)(e3, t2.econf);
                }), operatedInfo: this.createOperator(e2.op_user) });
            }
        }, l.prototype.onDisConnected = function() {
          this.isFullMembers = false;
        }, l.prototype.createGroupFullInfo = function() {
          return { baseInfo: { groupID: this.dbGroup.groupID, groupName: this.dbGroup.groupName || "", groupAvatarUrl: this.dbGroup.groupAvatarUrl || "" }, groupNotice: this.dbGroup.groupNotice || "", groupAttributes: this.createAttr(), notificationStatus: this.dbGroup.notificationStatus, createTime: this.dbGroup.createTime || 0, maxMemberCount: this.dbGroup.maxMemberCount || 0, mutedInfo: this.dbGroup.mutedInfo, verifyInfo: this.dbGroup.verifyInfo };
        }, l.prototype.createOwnerOperator = function() {
          var e2 = this.dbMbMap.get(this.econf.user.userID);
          return { userID: this.econf.user.userID, userName: this.econf.user.userName, memberRole: (null == e2 ? void 0 : e2.memberRole) || 0, memberNickname: (null == e2 ? void 0 : e2.memberNickname) || "" };
        }, l.prototype.createOperator = function(e2) {
          var t2 = e2.user_id, r2 = e2.user_name, s2 = e2.group_nick_name, o2 = (e2 = e2.role, this.dbMbMap.get(t2));
          return { userID: t2, userName: (null == (t2 = this.econf.dbUserMap.get(t2)) ? void 0 : t2.userName) || Object(n.h)(r2), memberRole: (o2 ? o2.memberRole : e2) || i.Q.Member, memberNickname: (o2 ? o2.memberNickname : s2) || "" };
        }, l.prototype.createDBMember = function(e2, t2, r2, s2) {
          void 0 === r2 && (r2 = false), void 0 === s2 && (s2 = false);
          var i2 = e2.user_id, a2 = this.dbMbMap.get(i2) || { userID: i2 }, u2 = (h = e2.member_data).group_nick_name, c2 = h.role, l2 = h.member_data_seq, d = h.enter_type, p = h.enter_time, h = h.op_user;
          return !(s2 = (s2 ? a2.memberNickname = "" : u2 && (a2.memberNickname = u2), c2 && (a2.memberRole = c2), t2 && (a2.muteExpiredTime = e2.member_data.forbid_expire_time, -1 != a2.muteExpiredTime && a2.muteExpiredTime <= t2 && (a2.muteExpiredTime = 0), i2 == this.econf.user.userID && this.syncGroupInfo({ mutedExpiredTime: this.getSelfMutedExpiredTime() })), d && (a2.enterType = d), p && (a2.enterTime = p), h && h.user_id && (a2.operatedUser = o(o({}, Object(n.u)(h.user_id, this.econf)), { memberRole: h.role, memberNickname: h.group_nick_name })), l2 && (a2.dataSeq = l2), e2.member_seq)) && a2.seq || (a2.seq = s2), a2.memberNickname || (a2.memberNickname = ""), a2.state = r2 ? 1 : 0, this.dbMbMap.set(i2, a2), this.econf.dbUserMap.has(i2) || (u2 = { userID: i2, userName: e2.member_data.user_name, userAvatarUrl: Object(n.h)(e2.member_data.user_avatar) }, this.econf.dbUserMap.set(i2, u2)), a2;
        }, l.prototype.createErrorUser = function(e2) {
          return { userID: e2.user_id, reason: e2.sub_code };
        }, l.prototype.createAttr = function(e2) {
          var t2 = this;
          if (!this.dbGroup.attributes)
            return this.dbGroup.attributes = {}, {};
          var r2 = {};
          return (e2 = e2 || Object.keys(this.dbGroup.attributes)).forEach(function(e3) {
            var s2 = t2.dbGroup.attributes[e3];
            s2 && !s2.state && (r2[e3] = s2.value);
          }), r2;
        }, l.prototype.createDBGroupAttr = function(e2) {
          return (e2 || []).reduce(function(e3, t2) {
            return e3[t2.key] = t2, e3;
          }, {});
        }, l.prototype.updateVerifyInfo = function(e2) {
          e2 && (this.dbGroup.maxMemberCount = e2.maxMemberCount, delete e2.maxMemberCount, this.dbGroup.verifyInfo || (this.dbGroup.verifyInfo = { joinMode: 0, inviteMode: 0, beInviteMode: 0 }), Object.assign(this.dbGroup.verifyInfo, e2));
        }, l.prototype.checkMemberInfoChange = function(e2, t2, r2) {
          if (!e2)
            return false;
          -1 != e2.muteExpiredTime && e2.muteExpiredTime <= r2 && (e2.muteExpiredTime = 0);
          r2 = e2.memberNickname || "";
          var s2 = t2.memberNickname || "", n2 = e2.memberRole || 0, i2 = t2.memberRole || 0;
          e2 = e2.muteExpiredTime || 0, t2 = t2.muteExpiredTime || 0;
          return r2 != s2 || n2 != i2 || e2 != t2;
        }, l.prototype.mergeMemberList = function(e2, t2, r2, s2) {
          var a2, u2 = this, c2 = (r2 && (a2 = this.econf.user.userID, this.dbMbMap.forEach(function(e3) {
            e3.state = a2 == e3.userID ? 0 : 1;
          })), ""), l2 = this.st.getRealClientTimestamp(), d = /* @__PURE__ */ new Map();
          if (t2.forEach(function(t3) {
            var r3 = t3.event_type, s3 = (t3 = t3.member, r3 = r3 == i.N.Quit || r3 == i.N.Kickout || r3 == i.N.OwnerQuit, (s3 = u2.dbMbMap.get(t3.user_id)) && o({}, s3));
            (t3 = u2.createDBMember(t3, l2, r3)).memberRole != i.Q.Owner || r3 || (c2 = t3.userID), e2 != i.v.SDKLogin && e2 != i.v.SDKHb || !u2.checkMemberInfoChange(s3, t3, l2) || d.set(t3.userID, Object(n.t)(t3, u2.econf));
          }), c2 && (this.dbMbMap.forEach(function(e3) {
            e3.memberRole == i.Q.Owner && e3.userID != c2 && (e3.memberRole = i.Q.Member);
          }), d.forEach(function(e3) {
            e3.memberRole == i.Q.Owner && e3.userID != c2 && (e3.memberRole = i.Q.Member);
          })), d.size && this.bus.emit(i.u.GroupMemberInfo, { groupID: this.groupID, userList: Array.from(d.values()), operatedInfo: {} }), this.dbGroup.totalMemberCount >= this.dbMbMap.size)
            return this.dbMgr.addGroupMemberList(this.groupID, Array.from(this.dbMbMap.values())), s2 && s2();
          for (var p = Array.from(this.dbMbMap.values()).filter(function(e3) {
            return e3.seq;
          }), h = [], f = 0; f < p.length; f += 100) {
            var m = this.cnMgr.send(i.d.gp_members_by_seq, { conv_id: this.groupID, conv_msg_seq: p.slice(f, f + 100).map(function(e3) {
              return e3.seq;
            }) }, i.j.SDK);
            h.push(m);
          }
          Promise.all(h).then(function(e3) {
            e3.forEach(function(e4) {
              e4.members && e4.members.length && e4.members.forEach(function(e5) {
                var t3 = u2.dbMbMap.get(e5.user_id);
                t3 && (t3.state = 0, t3.seq = e5.member_seq);
              }), e4.deleted_members && e4.deleted_members.length && e4.deleted_members.forEach(function(e5) {
                var t3 = u2.dbMbMap.get(e5.user_id);
                t3 && (t3.state = 1, t3.seq = e5.member_seq);
              });
            }), u2.dbMgr.addGroupMemberList(u2.groupID, Array.from(u2.dbMbMap.values())), s2 && s2();
          });
        }, l.prototype.syncGroupInfo = function(e2) {
          var t2 = e2.conversationName, r2 = e2.conversationAvatarUrl;
          "string" == typeof t2 && (this.dbGroup.groupName = t2), "string" == typeof r2 && (this.dbGroup.groupAvatarUrl = r2), this.dbMgr.addGroupList([this.dbGroup]), this.bus.exec(i.u.ISyncGroupInfo, this.groupID, e2);
        }, l.prototype.getSelfMutedExpiredTime = function() {
          this.dbGroup.mutedInfo || (this.dbGroup.mutedInfo = { mode: 0, expiredTime: 0, roles: [] });
          var e2 = (r2 = this.dbGroup.mutedInfo).mode, t2 = r2.expiredTime, r2 = r2.roles, s2 = (null == (n2 = this.dbMbMap.get(this.econf.user.userID)) ? void 0 : n2.memberRole) || i.Q.Member, n2 = (null == n2 ? void 0 : n2.muteExpiredTime) || 0;
          return this.dbGroup.selfMutedExpiredTime = n2, (e2 == i.T.Normal && s2 != i.Q.Owner && s2 != i.Q.Admin || e2 == i.T.All || e2 == i.T.Custom && r2 && -1 != r2.indexOf(s2)) && (this.dbGroup.selfMutedExpiredTime = -1 == t2 || -1 == n2 ? -1 : Math.max(t2 || 0, n2)), this.dbGroup.selfMutedExpiredTime;
        }, l.prototype.mergeGroupData = function(e2, t2, r2, s2) {
          e2 && (this.dbGroup.dataSeq = e2), t2 != i.I.Notice && t2 ? t2 == i.I.Name ? (this.syncGroupInfo({ conversationName: r2 }), this.bus.emit(i.u.GroupName, { groupID: this.groupID, groupName: r2, operatedInfo: s2 })) : t2 == i.I.Avatar ? (r2 = Object(n.h)(r2), this.syncGroupInfo({ conversationAvatarUrl: r2 }), this.bus.emit(i.u.GroupAvatar, { groupID: this.groupID, groupAvatarUrl: r2, operatedInfo: s2 })) : t2 == i.I.Mute ? (this.dbGroup.mutedInfo = r2, this.syncGroupInfo({ mutedExpiredTime: this.getSelfMutedExpiredTime() }), this.bus.emit(i.u.GroupMute, { groupID: this.groupID, mutedInfo: r2, operatedInfo: s2 })) : t2 == i.I.Limit ? (e2 = r2.maxMemberCount, delete r2.maxMemberCount, e2 && (this.dbGroup.maxMemberCount = e2), this.dbGroup.verifyInfo && this.dbGroup.verifyInfo.joinMode == r2.joinMode && this.dbGroup.verifyInfo.inviteMode == r2.inviteMode && this.dbGroup.verifyInfo.beInviteMode == r2.beInviteMode || (e2 = { groupID: this.groupID, verifyInfo: r2, operatedInfo: s2 }, this.bus.emit(i.u.GroupVerifyInfo, e2)), this.dbGroup.verifyInfo = r2) : t2 == i.I.SvrData && (e2 = r2.group_notice, this.dbGroup.groupNotice != e2 && (this.dbGroup.groupNotice = e2, this.bus.emit(i.u.GroupNotice, { groupID: this.groupID, groupNotice: e2, operatedInfo: s2 })), e2 = r2.group_name, this.dbGroup.groupName != e2 && (this.dbGroup.groupName = e2, this.bus.emit(i.u.GroupName, { groupID: this.groupID, groupName: e2, operatedInfo: s2 })), e2 = Object(n.h)(r2.group_avatar), this.dbGroup.groupAvatarUrl != e2 && (this.dbGroup.groupAvatarUrl = e2, this.bus.emit(i.u.GroupAvatar, { groupID: this.groupID, groupAvatarUrl: e2, operatedInfo: s2 })), this.syncGroupInfo({ conversationName: this.dbGroup.groupName, conversationAvatarUrl: this.dbGroup.groupAvatarUrl })) : (this.dbGroup.groupNotice = r2, this.bus.emit(i.u.GroupNotice, { groupID: this.groupID, groupNotice: r2, operatedInfo: s2 }));
        }, l.prototype.mergeAttr = function(e2, t2, r2) {
          var s2 = t2.seq, n2 = (t2 = t2.attributes, this.dbGroup.attributes || {}), u2 = {}, c2 = {}, l2 = [], d = { action: e2, seq: s2, attributes: t2, setAttrs: u2, delAtrrs: c2 };
          t2.forEach(function(t3) {
            var r3, s3 = t3.key, a2 = t3.value;
            t3 = t3.seq;
            e2 != i.F.Delete && t3 ? t3 && (r3 = (null == (r3 = n2[s3]) ? void 0 : r3.state) || 0, (!n2[s3] || t3 > n2[s3].seq) && (r3 = 0, u2[s3] = a2), n2[s3] = { key: s3, value: a2, seq: t3, state: r3 }) : (e2 != i.F.Query && (c2[s3] = a2), n2[s3] = o(o({}, n2[s3]), { key: s3, state: 1 }));
          }), Object.keys(u2).length && l2.push({ action: i.G.Set, groupAttributes: u2 }), Object.keys(c2).length && l2.push({ action: i.G.Delete, groupAttributes: c2 }), r2 && l2.length && this.bus.emit(i.u.GroupAttr, { groupID: this.groupID, infoList: l2, operatedInfo: r2 }), this.dbGroup.attributes = n2, s2 && (this.dbGroup.attributeSeq = s2), this.dbMgr.addGroupList([this.dbGroup]), d.dbSeq = this.dbGroup.attributeSeq, d.dbAttr = n2, this.lg.i(a, "mergeAttr", d);
        }, l.prototype.mergeMemberInfo = function(e2, t2, r2, s2) {
          var a2 = o(o({}, this.dbMbMap.get(s2)), { userID: s2 });
          t2 && (a2.dataSeq = t2), e2 === i.P.Nickname ? a2.memberNickname = r2 : e2 === i.P.Role && (a2.memberRole = r2), this.dbMbMap.set(s2, a2), this.dbMgr.addGroupMemberList(this.groupID, [a2]), this.bus.emit(i.u.GroupMemberInfo, { groupID: this.groupID, userList: [Object(n.t)(a2, this.econf)], operatedInfo: this.createOwnerOperator() });
        }, l.prototype.fetchSvrMember = function(e2, t2, r2, s2) {
          return e2 = { group_id: this.groupID, cur_list_seq: e2, count: 100, full_pull: s2, degree: t2, how: r2 }, s2 = r2 == i.v.Biz ? i.j.API : i.j.SDK, this.cnMgr.send(i.d.gp_member_list, e2, s2);
        }, l.prototype.fetchSvrReceiptDetail = function(e2, t2, r2) {
          return r2 = { group_id: this.groupID, cur_list_seq: r2, count: e2, full_pull: 100, degree: t2 }, this.cnMgr.send(i.d.msg_read_detail, r2);
        }, l.prototype.fetchSvrMemberSeq = function(e2, t2, r2, s2, n2) {
          return e2 = { group_id: this.groupID, cur_list_seq: e2, count: t2, msgSeq: r2, msgMSeq: s2, groupMSeq: n2 }, this.cnMgr.send(i.d.gp_member_seqs, e2);
        }, l.prototype.mergeSvrMemberList = function(e2, t2) {
          var r2 = this, s2 = this.dbGroup.memberSeq || 0, n2 = (this.dbGroup.totalMemberCount > this.dbMbMap.size && (s2 = Math.max(0, s2 - 2 * (this.dbGroup.totalMemberCount - this.dbMbMap.size))), { time: new Date(), groupID: this.groupID, dbSeq: s2, how: e2, count: 0 }), i2 = 1, o2 = 0, u2 = [], c2 = function() {
            r2.lg && r2.lg.i(a, "mergeSvrMember", n2);
          }, l2 = function(n3) {
            if (n3.code || !r2.dbMgr)
              return c2(), t2 && t2(n3);
            r2.dbGroup.totalMemberCount = n3.member_count;
            var a2 = n3.member_all_seq;
            if (a2 <= s2)
              return r2.isFullMembers = true, c2(), t2 && t2();
            var d = n3.cur_list_seq;
            u2.push.apply(u2, function(e3, t3, r3) {
              if (r3 || 2 === arguments.length)
                for (var s3, n4 = 0, i3 = t3.length; n4 < i3; n4++)
                  !s3 && n4 in t3 || ((s3 = s3 || Array.prototype.slice.call(t3, 0, n4))[n4] = t3[n4]);
              return e3.concat(s3 || Array.prototype.slice.call(t3));
            }([], function(e3, t3) {
              var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
              if (!r3)
                return e3;
              var s3, n4, i3 = r3.call(e3), o3 = [];
              try {
                for (; (void 0 === t3 || 0 < t3--) && !(s3 = i3.next()).done; )
                  o3.push(s3.value);
              } catch (e4) {
                n4 = { error: e4 };
              } finally {
                try {
                  s3 && !s3.done && (r3 = i3.return) && r3.call(i3);
                } finally {
                  if (n4)
                    throw n4.error;
                }
              }
              return o3;
            }(n3.change_list), false)), 1 == i2 && (o2 = n3.full_list), d < a2 ? r2.fetchSvrMember(d, ++i2, e2, o2).then(l2) : (r2.isFullMembers = true, c2(), r2.updateMemberSeq(a2, true), r2.mergeMemberList(e2, u2, !!o2, t2));
          };
          this.fetchSvrMember(s2, i2, e2, 0).then(l2);
        }, l.prototype.mergeSvrMemberSeqs = function(e2, t2, r2, s2) {
          var n2 = this, i2 = this.dbGroup.memberSeqs || {}, o2 = this.dbGroup.memberSeq || 0, a2 = this.dbGroup.memberAllSeq || 0, u2 = e2.memberAllSeq || 0, c2 = (r2.dbMemberSeq = a2, r2.msgMemberSeq = u2, r2.groupMemberSeq = o2, function() {
            var t3 = n2.econf.user.userID, r3 = e2.memberSeqs;
            Object.keys(i2).forEach(function(e3) {
              +e3 <= u2 && !r3[e3] && i2[e3] != t3 && (r3[e3] = 0);
            }), n2.dbMgr.addMessageExtraList([e2], "receiptDetail"), s2();
          });
          if (a2 && o2 <= a2)
            return c2();
          var l2 = 1, d = function(e3) {
            e3.members && e3.members.forEach(function(e4) {
              var t3 = e4.user_id, r4 = e4.cur_seq;
              e4 = e4.old_seq;
              r4 && (i2[r4] = t3), e4 && (i2[e4] = t3);
            });
            var r3 = e3.code && 6000104 != e3.code ? 0 : e3.next_seq;
            r3 && (n2.dbGroup.memberAllSeq = r3), r3 && n2.econf.token && (!e3.fetch_end || r3 < u2 || r3 < o2) ? n2.fetchSvrMemberSeq(r3, ++l2, t2, u2, o2).then(d) : (n2.dbGroup.memberSeqs = i2, n2.dbMgr.addGroupList([n2.dbGroup]), c2());
          };
          this.fetchSvrMemberSeq(a2, l2, t2, u2, o2).then(d);
        }, l.prototype.fetchSvrUsers = function(e2, t2) {
          for (var r2 = this, s2 = [], o2 = 0; o2 < e2.length; o2 += 100) {
            var a2 = this.cnMgr.send(i.d.user_fetch, { _ev_: t2, user_ids: e2.slice(o2, o2 + 100) }, i.j.SDK);
            s2.push(a2);
          }
          return Promise.all(s2).then(function(e3) {
            e3.forEach(function(e4) {
              (e4 = e4.result) && e4.length && e4.forEach(function(e5) {
                var t3 = e5.user_id, s3 = Object(n.h)(e5.user_name);
                e5 = Object(n.h)(e5.avatar);
                (t3 = (Object(n.x)({ userID: t3, userName: s3, userAvatarUrl: e5 }, r2.econf), r2.econf.syncUserTask.delete(t3), r2.econf.dbConvMap.get(r2.econf.user.userID + "0" + t3))) && (t3.conversationName = s3, t3.conversationAvatarUrl = e5);
              });
            }), r2.dbMgr.addUserList(Array.from(r2.econf.dbUserMap.values()));
          });
        }, l.prototype.createGroupCallback = function(e2) {
          return Object.assign(this.dbGroup, { id: this.econf.user.userID + e2.group_id, groupID: e2.group_id, groupNotice: e2.group_notice, notificationStatus: i.S.Notify, attributes: this.createDBGroupAttr(e2.attributes.attributes), createTime: e2.group_create_time, maxMemberCount: e2.limit_info.maxMemberCount || 0, verifyInfo: { joinMode: e2.limit_info.joinMode || 0, inviteMode: e2.limit_info.inviteMode || 0, beInviteMode: e2.limit_info.beInviteMode || 0 } }), e2.group_list_seq && (this.dbGroup.groupSeq = e2.group_list_seq), e2.attributes.seq && (this.dbGroup.attributeSeq = e2.attributes.seq), e2.member_all_seq && (this.dbGroup.memberSeq = e2.member_all_seq), this.dbGroup.mutedInfo || (this.dbGroup.mutedInfo = { mode: 0, expiredTime: 0, roles: [] }), this.dbGroup.historyMsgSeq = 0, this.syncGroupInfo({ conversationName: e2.group_name, conversationAvatarUrl: Object(n.h)(e2.group_avatar) }), this.bus.exec(i.u.IJoinedGroup, { groupID: this.groupID, groupName: this.dbGroup.groupName, groupAvatarUrl: this.dbGroup.groupAvatarUrl, msgSeq: 0, historySeq: 0 }), this.econf.dbGroupMap.set(this.groupID, this.dbGroup), this.handleCreateGroup(e2);
        }, l.prototype.handleCreateGroup = function(e2) {
          var t2, r2 = e2.op_user ? e2.op_user.user_id : this.econf.user.userID, s2 = e2.op_user ? this.createOperator(e2.op_user) : { userID: this.econf.user.userID, userName: this.econf.user.userName, memberRole: i.Q.Owner, memberNickname: "" };
          return (e2 = (t2 = ((t2 = this.dbMbMap.get(r2)) ? Object.assign(t2, s2) : this.dbMbMap.set(r2, s2), this.bus.emit(i.u.GroupState, { state: i.U.Enter, event: i.K.Created, groupInfo: this.createGroupFullInfo(), operatedInfo: s2 }), this.dbGroup.attributes && 0 < Object.keys(this.dbGroup.attributes).length && (t2 = { action: i.G.Set, groupAttributes: this.createAttr() }, this.bus.emit(i.u.GroupAttr, { groupID: this.groupID, infoList: [t2], operatedInfo: s2 })), this.bus.emit(i.u.GroupMemberState, { groupID: this.groupID, state: i.R.Enter, event: i.O.Joined, userList: [Object(n.t)(this.dbMbMap.get(r2), this.econf)], operatedInfo: s2 }), this.checkSyncUsers(e2, "createGroup", true))).filter(function(e3) {
            return e3.userID != r2;
          })).length && this.bus.emit(i.u.GroupMemberState, { groupID: this.groupID, state: i.R.Enter, event: i.O.Invited, userList: e2, operatedInfo: s2 }), t2;
        }, l.prototype.joinGroupCallback = function(e2, t2, r2) {
          var s2 = e2.group_notice, o2 = e2.group_data_seq, a2 = e2.group_list_seq, u2 = e2.properties, c2 = e2.group_create_time, l2 = e2.forbid_info;
          s2 && (this.dbGroup.groupNotice = s2), c2 && (this.dbGroup.createTime = c2), l2 ? this.dbGroup.mutedInfo = Object(n.f)(l2, this.st.getRealClientTimestamp()) : this.dbGroup.mutedInfo || (this.dbGroup.mutedInfo = { mode: 0, expiredTime: 0, roles: [] }), a2 && (this.dbGroup.groupSeq = a2), this.updateVerifyInfo(e2.limit_info), this.dbGroup.notificationStatus = i.S.Notify, o2 && (this.dbGroup.dataSeq = o2), this.dbGroup.historyMsgSeq = e2.history_msg_seq, this.dbGroup.attributes = {}, u2 ? (this.dbGroup.attributes = this.createDBGroupAttr(u2.attributes), u2.seq && (this.dbGroup.attributeSeq = u2.seq)) : this.innerQueryGroupAttr(), s2 = this.createOperator(e2.op_user), c2 = this.checkSyncUsers(e2, "joinGroup", false), this.syncGroupInfo({ conversationName: e2.group_name, conversationAvatarUrl: Object(n.h)(e2.group_avatar), mutedExpiredTime: this.getSelfMutedExpiredTime() }), this.bus.exec(i.u.IJoinedGroup, { groupID: this.groupID, groupName: this.dbGroup.groupName, groupAvatarUrl: this.dbGroup.groupAvatarUrl, msgSeq: e2.conv_msg_seq, historySeq: e2.history_msg_seq }), this.econf.dbGroupMap.set(this.groupID, this.dbGroup), l2 = this.createGroupFullInfo();
          return this.bus.emit(i.u.GroupState, { state: i.U.Enter, event: r2, groupInfo: l2, operatedInfo: s2 }), this.dbGroup.attributes && 0 < Object.keys(this.dbGroup.attributes).length && (a2 = { action: i.G.Set, groupAttributes: this.createAttr() }, this.bus.emit(i.u.GroupAttr, { groupID: this.groupID, infoList: [a2], operatedInfo: s2 })), c2.length && this.bus.emit(i.u.GroupMemberState, { groupID: this.groupID, state: i.R.Enter, event: t2, userList: c2, operatedInfo: s2 }), l2;
        }, l.prototype.acceptApplyCallback = function(e2, t2, r2) {
          var s2, a2 = { type: u2 = r2 ? i.E.Join : i.E.BeInvite, state: i.D.Accepted, updateTime: e2.apply_group_info.update_time, createTime: 0, wording: "", seq: this.dbGroup.dataSeq, groupInfo: { groupID: this.groupID, groupName: this.dbGroup.groupName, groupAvatarUrl: this.dbGroup.groupAvatarUrl }, applyUser: Object(n.u)(t2, this.econf) }, u2 = this.getApplyID(u2, t2);
          (u2 = this.dbApplyMap.get(u2)) && (a2.createTime = u2.createTime, a2.wording = u2.wording), r2 ? a2.operatedUser = o(o({}, this.createOwnerOperator()), { userAvatarUrl: this.econf.user.userAvatarUrl }) : (Object.assign(e2, e2.group_info), this.dbGroup.totalMemberCount = e2.member_count, e2.member.member_data.user_avatar || (e2.member.member_data.user_avatar = this.econf.user.userAvatarUrl), u2 = this.dbMbMap.get(t2), e2.op_user = { user_id: t2, user_name: null == (t2 = this.econf.dbUserMap.get(t2)) ? void 0 : t2.userName, group_nick_name: null == u2 ? void 0 : u2.memberNickname, role: null == u2 ? void 0 : u2.memberRole }, e2.members = [e2.member], s2 = this.joinGroupCallback(e2, i.O.Invited, i.K.Invited), a2.groupInfo.groupName = this.dbGroup.groupName, a2.groupInfo.groupAvatarUrl = this.dbGroup.groupAvatarUrl, a2.seq = this.dbGroup.dataSeq), this.syncGroupApplyMap(a2), this.bus.emit(i.u.GroupAppUpd, { applicationList: [a2] }), t2 = e2.apply_group_info.apply_list_seq;
          return r2 ? this.updateGroupApplySeq(t2) : (u2 = this.econf.user, !t2 || u2.groupAppSeq && u2.groupAppSeq + 1 != t2 || (u2.groupAppSeq = t2, this.dbMgr.setUser(u2))), s2;
        }, l.prototype.checkSyncUsers = function(e2, t2, r2) {
          var s2 = this, i2 = [], o2 = this.st.getRealClientTimestamp(), a2 = e2.members.map(function(e3) {
            var t3 = s2.createDBMember(e3, o2, false, true), r3 = t3.userID, a3 = e3.member_data.user_name;
            e3 = Object(n.h)(e3.member_data.user_avatar);
            return Object(n.x)({ userID: r3, userName: a3, userAvatarUrl: e3 }, s2.econf).userName || i2.push(r3), t3;
          });
          return this.dbMgr.addGroupMemberList(this.groupID, a2), r2 && this.updateMemberSeq(e2.member_all_seq), i2.length && this.fetchSvrUsers(i2, t2), a2.map(function(e3) {
            return Object(n.t)(e3, s2.econf);
          });
        }, l.prototype.kickMemberCallback = function(e2) {
          var t2 = this;
          this.updateMemberSeq(e2.member_all_seq), e2 = e2.members.map(function(e3) {
            return t2.createDBMember(e3, 0, true);
          });
          return this.dbMgr.addGroupMemberList(this.groupID, e2), e2.map(function(e3) {
            return Object(n.t)(e3, t2.econf);
          });
        }, l.prototype.transferOwnerCallback = function(e2) {
          var t2 = this, r2 = this.dbMbMap.get(e2[0].userID), s2 = this.dbMbMap.get(e2[1].userID);
          (r2 && s2 ? Promise.resolve([r2, s2]) : this.dbMgr.getGroupMemberList(this.groupID)).then(function(o2) {
            r2 = o2.find(function(t3) {
              return t3.userID == e2[0].userID;
            }), s2 = o2.find(function(t3) {
              return t3.userID == e2[1].userID;
            }), r2 && s2 && (r2.memberRole = i.Q.Owner, s2.memberRole = i.Q.Member, e2[0].dataSeq && (r2.dataSeq = e2[0].dataSeq), e2[1].dataSeq && (s2.dataSeq = e2[1].dataSeq), t2.dbMbMap.set(r2.userID, r2), t2.dbMbMap.set(s2.userID, s2), t2.dbMgr.addGroupMemberList(t2.groupID, [r2, s2]), t2.bus.emit(i.u.GroupMemberInfo, { groupID: t2.groupID, userList: [Object(n.t)(r2, t2.econf), Object(n.t)(s2, t2.econf)], operatedInfo: t2.pickOperator(s2) }));
          });
        }, l.prototype.ownerQuitCallback = function(e2, t2) {
          var r2 = o(o({}, this.dbMbMap.get(e2)), { userID: e2 });
          r2.memberRole = i.Q.Owner, this.dbMbMap.set(e2, r2), this.dbMgr.addGroupMemberList(this.groupID, [r2]), this.bus.emit(i.u.GroupMemberInfo, { groupID: this.groupID, userList: [Object(n.t)(r2, this.econf)], operatedInfo: t2 });
        }, l.prototype.queryMembersCallback = function(e2, t2, r2, s2, o2, u2) {
          var c2 = this, l2 = (s2.total = this.dbGroup.totalMemberCount, s2.dbTotal = this.dbMbMap.size, t2 ? i.W.QueryGroupMemberMuteds : i.W.QueryGroupMembers);
          if ((f = r2 && r2.code) && 6000104 != f)
            return s2.error = Object(n.y)(6000517, r2.message, r2.code), this.lg.i(a, l2, s2), u2(s2.error);
          s2.dbTotal = this.dbMbMap.size;
          var d = [], p = this.st.getRealClientTimestamp(), h = (r2 = ((g = Array.from(this.dbMbMap.values()).filter(function(e3) {
            var r3;
            return 1 != e3.state && (null != (r3 = c2.econf.dbUserMap.get(e3.userID)) && r3.userName || d.push(e3.userID), -1 == e3.muteExpiredTime || e3.muteExpiredTime > p || (e3.muteExpiredTime = 0, !t2));
          })).sort(function(e3, t3) {
            return e3.seq - t3.seq;
          }), (null == (f = g[g.length - 1]) ? void 0 : f.seq) || 0), e2.nextFlag), f = (u2 = 0, 0 < h && h <= r2 ? u2 = g.findIndex(function(e3) {
            return e3.seq == h;
          }) : r2 < h && r2 && (u2 = g.length), u2 + Math.min(i.m.MAX_QUERY_PAGE_COUNT, e2.count)), m = (null == (e2 = g[f]) ? void 0 : e2.seq) || 0, g = g.slice(u2, f);
          Object.assign(s2, { start: u2, end: f, max: r2, count: g.length, nextFlag: m }), this.lg.i(a, l2, s2), d.length ? this.fetchSvrUsers(d, "queryMembers").then(function() {
            var e3 = g.map(function(e4) {
              return Object(n.t)(e4, c2.econf);
            });
            o2({ groupID: c2.groupID, nextFlag: m, userList: e3 });
          }) : (e2 = g.map(function(e3) {
            return Object(n.t)(e3, c2.econf);
          }), o2({ groupID: this.groupID, nextFlag: m, userList: e2 }));
        }, l.prototype.updateMemberSeq = function(e2, t2) {
          this.dbGroup && e2 && (t2 || !this.dbGroup.memberSeq || this.dbGroup.memberSeq + 1 == e2) && (this.dbGroup.memberSeq = e2, this.dbMgr.addGroupList([this.dbGroup]));
        }, l.prototype.updateGroupApplySeq = function(e2, t2) {
          this.dbGroup && e2 && (t2 || !this.dbGroup.groupAppSeq || this.dbGroup.groupAppSeq + 1 == e2) && (this.dbGroup.groupAppSeq = e2, this.dbMgr.addGroupList([this.dbGroup]));
        }, l.prototype.pickOperator = function(e2) {
          var t2 = this.econf.dbUserMap.get(e2.userID);
          return { userID: e2.userID, userName: (null == t2 ? void 0 : t2.userName) || "", memberNickname: e2.memberNickname || "", memberRole: e2.memberRole || i.Q.Member };
        }, l.prototype.getApplyID = function(e2, t2) {
          return e2 + "_" + this.groupID + "_" + t2;
        }, l.prototype.checkGroupApplyCreateTime = function(e2) {
          var t2 = this.getApplyID(e2.type, e2.applyUser.userID), r2 = this.dbApplyMap.get(t2);
          return this.dbApplyMap.set(t2, e2), !r2 || !r2.createTime || e2.createTime && r2.state != i.D.Accepted && r2.state != i.D.Rejected || (e2.createTime = r2.createTime), !!r2;
        }, l.prototype.syncGroupApplyMap = function(e2) {
          var t2 = this, r2 = (e2 = !!e2 && this.checkGroupApplyCreateTime(e2), Array.from(this.dbApplyMap.values()).filter(function(e3) {
            return e3.groupInfo.groupID == t2.groupID;
          })), s2 = r2[0];
          return r2.forEach(function(e3) {
            e3.seq > s2.seq && (s2 = e3);
          }), r2.forEach(function(e3) {
            e3.seq = s2.seq, e3.groupInfo = s2.groupInfo;
          }), this.dbMgr.addGroupApplyList(r2), e2;
        }, l.prototype.queryGroupInfoCallback = function(e2) {
          e2.group_data_seq && (this.dbGroup.dataSeq = e2.group_data_seq), this.dbGroup.groupNotice = e2.group_notice, this.dbGroup.createTime = e2.group_create_time, this.dbGroup.mutedInfo = Object(n.f)(e2, this.st.getRealClientTimestamp()), this.updateVerifyInfo(e2.limit_info), this.syncGroupInfo({ conversationName: e2.group_name, conversationAvatarUrl: Object(n.h)(e2.group_avatar), mutedExpiredTime: this.getSelfMutedExpiredTime() });
        }, l.prototype.innerQueryGroupAttr = function() {
          var e2 = this, t2 = { group_id: this.groupID, attributes: { seq: 0 } };
          return this.cnMgr.send(i.d.gp_attr, t2).then(function(t3) {
            var r2;
            t3.code || (r2 = {}, t3.attributes.attributes.forEach(function(e3) {
              var t4 = e3.key, s2 = e3.value;
              e3 = e3.seq;
              r2[t4] = { key: t4, value: s2, seq: e3, state: e3 ? 0 : 1 };
            }), e2.dbGroup.attributes = r2, e2.dbGroup.attributeSeq = t3.attributes.seq, e2.dbMgr.addGroupList([e2.dbGroup]));
          });
        }, l);
        function l(e2, t2, r2, n2, o2) {
          this.type = i.r.Group, this.groupID = "", this.dbGroup = {}, this.isFullMembers = false, this.dbMbMap = /* @__PURE__ */ new Map(), this.dbGroup.groupID = e2, this.groupID = e2, this.econf = t2, this.lg = s.a.getInstance().lg, this.st = s.a.getInstance().st, this.bus = r2, this.dbMgr = n2, this.cnMgr = o2;
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return s;
        });
        function s(e2) {
          return "0123456789abcdefghijklmnopqrstuvwxyz".charAt(e2);
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return i;
        }), r.d(t, "b", function() {
          return o;
        }), n.prototype.init = function(e2) {
          for (var t2, r2, s2 = 0; s2 < 256; ++s2)
            this.S[s2] = s2;
          for (s2 = t2 = 0; s2 < 256; ++s2)
            t2 = t2 + this.S[s2] + e2[s2 % e2.length] & 255, r2 = this.S[s2], this.S[s2] = this.S[t2], this.S[t2] = r2;
          this.i = 0, this.j = 0;
        }, n.prototype.next = function() {
          this.i = this.i + 1 & 255, this.j = this.j + this.S[this.i] & 255;
          var e2 = this.S[this.i];
          return this.S[this.i] = this.S[this.j], this.S[this.j] = e2, this.S[e2 + this.S[this.i] & 255];
        };
        var s = n;
        function n() {
          this.i = 0, this.j = 0, this.S = [];
        }
        function i() {
          return new s();
        }
        var o = 256;
      }, function(e, t, r) {
        "use strict";
        r.r(t), r.d(t, "ZIM", function() {
          return a;
        });
        var s = r(2), n = r(1), i = r(0), o = function() {
          return (o = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, a = (r = function(e2, t2, r2, s2) {
          var n2, i2 = arguments.length, o2 = i2 < 3 ? t2 : null === s2 ? s2 = Object.getOwnPropertyDescriptor(t2, r2) : s2;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            o2 = Reflect.decorate(e2, t2, r2, s2);
          else
            for (var a2 = e2.length - 1; 0 <= a2; a2--)
              (n2 = e2[a2]) && (o2 = (i2 < 3 ? n2(o2) : 3 < i2 ? n2(t2, r2, o2) : n2(t2, r2)) || o2);
          return 3 < i2 && o2 && Object.defineProperty(t2, r2, o2), o2;
        }, u.setEventHandler = function(e2) {
          u._flutter_handler = e2;
        }, u.toJSON = function(e2) {
          return JSON.stringify(e2);
        }, u.prototype.createNotInitError = function() {
          return this.engine ? void 0 : Object(n.y)(6000002);
        }, u.getVersion = function() {
          return s.a.getInstance().getVersion();
        }, u.getInstance = function() {
          return u._instance;
        }, u.setAdvancedConfig = function(e2, t2) {
          s.a.getInstance().setAdvancedConfig(e2, t2);
        }, u.setGeofencingConfig = function(e2, t2) {
          return s.a.getInstance().setGeofencingConfig(e2, t2);
        }, u.create = function(e2) {
          if (!(e2 = "object" == typeof e2 ? e2.appID : e2) || "number" != typeof e2)
            throw t2 = Object(n.y)(6000003), new Error(JSON.stringify(o({ appID: e2, version: u.getVersion() }, t2)));
          var t2 = s.a.getInstance().createEngine(e2);
          return t2 ? u._instance = new u(t2) : null;
        }, u.prototype.destroy = function() {
          this.engine && s.a.getInstance().destroyEngine(this.engine), this.engine = null;
        }, u.prototype.setLogConfig = function(e2) {
          this.engine && s.a.getInstance().setLogConfig(e2);
        }, u.prototype.uploadLog = function() {
          return this.engine.uploadLog();
        }, u.prototype.on = function(e2, t2) {
          this.engine && this.engine.on(e2, t2);
        }, u.prototype.off = function(e2) {
          this.engine && this.engine.off(e2);
        }, u.prototype.login = function(e2, t2) {
          return this.engine.login("object" == typeof e2 ? e2.userID : e2, "object" == typeof t2 ? t2 : { userName: "object" == typeof e2 ? e2.userName : "", token: t2, isOfflineLogin: false });
        }, u.prototype.logout = function() {
          this.engine && this.engine.logout();
        }, u.prototype.renewToken = function(e2) {
          return this.engine.renewToken(e2);
        }, u.prototype.queryUsersInfo = function(e2, t2) {
          return this.engine.queryUsers(e2, t2);
        }, u.prototype.updateUserName = function(e2) {
          return this.engine.updateUserName(e2);
        }, u.prototype.updateUserAvatarUrl = function(e2) {
          return this.engine.updateUserAvatar(e2);
        }, u.prototype.updateUserExtendedData = function(e2) {
          return this.engine.updateUserExt(e2);
        }, u.prototype.updateUserOfflinePushRule = function(e2) {
          return this.engine.updateUserRule(e2);
        }, u.prototype.querySelfUserInfo = function() {
          return this.engine.querySelf();
        }, u.prototype.queryConversation = function(e2, t2) {
          return this.engine.queryConv(e2, t2);
        }, u.prototype.queryConversationList = function(e2, t2) {
          return this.engine.queryConvs(e2, t2);
        }, u.prototype.queryConversationPinnedList = function(e2) {
          return this.engine.queryPinneds(e2);
        }, u.prototype.queryConversationTotalUnreadMessageCount = function(e2) {
          return this.engine.queryUnreadCount(e2);
        }, u.prototype.deleteConversation = function(e2, t2, r2) {
          return this.engine.delConv(e2, t2, r2);
        }, u.prototype.deleteAllConversations = function(e2) {
          return this.engine.delAllConv(e2);
        }, u.prototype.clearConversationUnreadMessageCount = function(e2, t2) {
          return this.engine.clearUnreadCount(e2, t2);
        }, u.prototype.clearConversationTotalUnreadMessageCount = function() {
          return this.engine.clearAllUnreadCount();
        }, u.prototype.deleteAllConversationMessages = function(e2) {
          return this.engine.delAllConvMsgs(e2);
        }, u.prototype.setConversationNotificationStatus = function(e2, t2, r2) {
          return this.engine.setNotifyStatus(e2, t2, r2);
        }, u.prototype.updateConversationPinnedState = function(e2, t2, r2) {
          return this.engine.updatePinnedState(e2, t2, r2);
        }, u.prototype.setConversationDraft = function(e2, t2, r2) {
          return this.engine.setConvDraft(e2, t2, r2);
        }, u.prototype.setConversationMark = function(e2, t2, r2) {
          return this.engine.setConvMark(e2, t2, r2);
        }, u.prototype.sendMessage = function(e2, t2, r2, s2, n2) {
          return this.engine.sendMsg(e2, t2, r2, s2, n2);
        }, u.prototype.sendMediaMessage = function(e2, t2, r2, s2, n2) {
          return this.engine.sendMediaMsg(e2, t2, r2, s2, n2);
        }, u.prototype.deleteMessages = function(e2, t2, r2, s2) {
          return this.engine.delMsgs(e2, t2, r2, s2);
        }, u.prototype.deleteAllMessage = function(e2, t2, r2) {
          return this.engine.delAllMsg(e2, t2, r2);
        }, u.prototype.queryHistoryMessage = function(e2, t2, r2) {
          return this.engine.queryHistoryMsg(e2, t2, r2);
        }, u.prototype.insertMessageToLocalDB = function(e2, t2, r2, s2) {
          return this.engine.insertMsg(e2, t2, r2, s2);
        }, u.prototype.updateMessageLocalExtendedData = function(e2, t2) {
          return this.engine.updateMsgLocalExt(e2, t2);
        }, u.prototype.revokeMessage = function(e2, t2) {
          return this.engine.revokeMsg(e2, t2);
        }, u.prototype.queryCombineMessageDetail = function(e2) {
          return this.engine.queryCombineMsg(e2);
        }, u.prototype.sendConversationMessageReceiptRead = function(e2, t2) {
          return this.engine.sendConvReceipt(e2, t2);
        }, u.prototype.sendMessageReceiptsRead = function(e2, t2, r2) {
          return this.engine.sendMsgReceipt(e2, t2, r2);
        }, u.prototype.queryMessageReceiptsInfo = function(e2, t2, r2) {
          return this.engine.queryMsgReceipt(e2, t2, r2);
        }, u.prototype.queryGroupMessageReceiptReadMemberList = function(e2, t2, r2) {
          return this.engine.queryReceiptMembers(e2, t2, r2, true);
        }, u.prototype.queryGroupMessageReceiptUnreadMemberList = function(e2, t2, r2) {
          return this.engine.queryReceiptMembers(e2, t2, r2, false);
        }, u.prototype.addMessageReaction = function(e2, t2) {
          return this.engine.addMsgReaction(e2, t2);
        }, u.prototype.deleteMessageReaction = function(e2, t2) {
          return this.engine.delMsgReaction(e2, t2);
        }, u.prototype.queryMessageReactionUserList = function(e2, t2) {
          return this.engine.queryMsgReactions(e2, t2);
        }, u.prototype.replyMessage = function(e2, t2, r2, s2) {
          return this.engine.replyMessage(e2, t2, r2, s2);
        }, u.prototype.queryMessageRepliedList = function(e2, t2) {
          return this.engine.queryReplyMsg(e2, t2);
        }, u.prototype.queryMessages = function(e2, t2, r2) {
          return this.engine.queryMessages(e2, t2, r2);
        }, u.prototype.createRoom = function(e2, t2) {
          return this.engine.createRoom(e2, t2);
        }, u.prototype.enterRoom = function(e2, t2) {
          return this.engine.enterRoom(e2, t2);
        }, u.prototype.joinRoom = function(e2) {
          return this.engine.joinRoom(e2);
        }, u.prototype.leaveRoom = function(e2) {
          return this.engine.leaveRoom(e2);
        }, u.prototype.leaveAllRoom = function() {
          return this.engine.leaveAllRoom();
        }, u.prototype.queryRoomMemberList = function(e2, t2) {
          return this.engine.queryRoomMemberList(e2, t2);
        }, u.prototype.queryRoomMembers = function(e2, t2) {
          return this.engine.queryRoomMembers(e2, t2);
        }, u.prototype.queryRoomOnlineMemberCount = function(e2) {
          return this.engine.queryRoomOnlineMemberCount(e2);
        }, u.prototype.queryRoomAllAttributes = function(e2) {
          return this.engine.queryRoomAllAttr(e2);
        }, u.prototype.setRoomAttributes = function(e2, t2, r2) {
          return this.engine.setRoomAttr(e2, t2, r2);
        }, u.prototype.deleteRoomAttributes = function(e2, t2, r2) {
          return this.engine.delRoomAttr(e2, t2, r2);
        }, u.prototype.beginRoomAttributesBatchOperation = function(e2, t2) {
          this.engine && this.engine.beginRoomAttr(e2, t2);
        }, u.prototype.endRoomAttributesBatchOperation = function(e2) {
          return this.engine.endRoomAttr(e2);
        }, u.prototype.setRoomMembersAttributes = function(e2, t2, r2, s2) {
          return this.engine.setRoomMembersAttr(e2, t2, r2, s2);
        }, u.prototype.queryRoomMembersAttributes = function(e2, t2) {
          return this.engine.queryRoomMembersAttr(e2, t2);
        }, u.prototype.queryRoomMemberAttributesList = function(e2, t2) {
          return this.engine.queryRoomMemberAttrs(e2, t2);
        }, u.prototype.createGroup = function(e2, t2, r2) {
          return this.engine.createGroup(e2, t2, r2);
        }, u.prototype.joinGroup = function(e2) {
          return this.engine.joinGroup(true, e2);
        }, u.prototype.leaveGroup = function(e2) {
          return this.engine.leaveGroup(e2);
        }, u.prototype.dismissGroup = function(e2) {
          return this.engine.dismissGroup(e2);
        }, u.prototype.queryGroupList = function() {
          return this.engine.queryGroupList();
        }, u.prototype.updateGroupNotice = function(e2, t2) {
          return this.engine.updateGroupInfo(e2, t2, i.I.Notice).then(function() {
            return { groupID: t2, groupNotice: e2 };
          });
        }, u.prototype.updateGroupName = function(e2, t2) {
          return this.engine.updateGroupInfo(e2, t2, i.I.Name).then(function() {
            return { groupID: t2, groupName: e2 };
          });
        }, u.prototype.updateGroupAvatarUrl = function(e2, t2) {
          return this.engine.updateGroupInfo(e2, t2, i.I.Avatar).then(function() {
            return { groupID: t2, groupAvatarUrl: e2 };
          });
        }, u.prototype.muteGroup = function(e2, t2, r2) {
          return this.engine.muteGroup(e2, t2, r2);
        }, u.prototype.queryGroupInfo = function(e2) {
          return this.engine.queryGroupInfo(e2);
        }, u.prototype.setGroupAttributes = function(e2, t2) {
          return this.engine.setGroupAttr(e2, t2);
        }, u.prototype.deleteGroupAttributes = function(e2, t2) {
          return this.engine.delGroupAttr(e2, t2);
        }, u.prototype.queryGroupAttributes = function(e2, t2) {
          return this.engine.queryGroupAttr(t2, e2);
        }, u.prototype.queryGroupAllAttributes = function(e2) {
          return this.engine.queryGroupAttr(e2);
        }, u.prototype.transferGroupOwner = function(e2, t2) {
          return this.engine.transferGroupOwner(e2, t2);
        }, u.prototype.inviteUsersIntoGroup = function(e2, t2) {
          return this.engine.inviteToGroup(false, e2, t2);
        }, u.prototype.kickGroupMembers = function(e2, t2) {
          return this.engine.kickGroupMembers(e2, t2);
        }, u.prototype.queryGroupMemberList = function(e2, t2) {
          return this.engine.queryGroupMembers(e2, t2);
        }, u.prototype.queryGroupMemberCount = function(e2) {
          return this.engine.queryGroupMemberCount(e2);
        }, u.prototype.muteGroupMembers = function(e2, t2, r2, s2) {
          return this.engine.muteGroupMembers(e2, t2, r2, s2);
        }, u.prototype.queryGroupMemberMutedList = function(e2, t2) {
          return this.engine.queryGroupMemberMutedList(e2, t2);
        }, u.prototype.setGroupMemberNickname = function(e2, t2, r2) {
          return this.engine.setGroupMemberNickname(e2, t2, r2);
        }, u.prototype.setGroupMemberRole = function(e2, t2, r2) {
          return this.engine.setGroupMemberRole(e2, t2, r2);
        }, u.prototype.queryGroupMemberInfo = function(e2, t2) {
          return this.engine.queryGroupMemberInfo(e2, t2);
        }, u.prototype.updateGroupJoinMode = function(e2, t2) {
          return this.engine.updateGroupVerifyMode(e2, t2, i.V.Join);
        }, u.prototype.updateGroupInviteMode = function(e2, t2) {
          return this.engine.updateGroupVerifyMode(e2, t2, i.V.Invite);
        }, u.prototype.updateGroupBeInviteMode = function(e2, t2) {
          return this.engine.updateGroupVerifyMode(e2, t2, i.V.BeInvite);
        }, u.prototype.sendGroupJoinApplication = function(e2, t2) {
          return this.engine.joinGroup(false, e2, t2);
        }, u.prototype.acceptGroupJoinApplication = function(e2, t2, r2) {
          return this.engine.acceptGroupApply(true, e2, t2, r2);
        }, u.prototype.rejectGroupJoinApplication = function(e2, t2, r2) {
          return this.engine.rejectGroupApply(true, e2, t2, r2);
        }, u.prototype.sendGroupInviteApplications = function(e2, t2, r2) {
          return this.engine.inviteToGroup(true, e2, t2, r2);
        }, u.prototype.acceptGroupInviteApplication = function(e2, t2, r2) {
          return this.engine.acceptGroupApply(false, e2, t2, r2);
        }, u.prototype.rejectGroupInviteApplication = function(e2, t2, r2) {
          return this.engine.rejectGroupApply(false, e2, t2, r2);
        }, u.prototype.queryGroupApplicationList = function(e2) {
          return this.engine.queryGroupApplyList(e2);
        }, u.prototype.callInvite = function(e2, t2) {
          return this.engine.callInvite(e2, t2);
        }, u.prototype.callCancel = function(e2, t2, r2) {
          return this.engine.callCancel(e2, t2, r2);
        }, u.prototype.callAccept = function(e2, t2) {
          return this.engine.callAccept(e2, t2);
        }, u.prototype.callReject = function(e2, t2) {
          return this.engine.callReject(e2, t2);
        }, u.prototype.callQuit = function(e2, t2) {
          return this.engine.callQuit(e2, t2);
        }, u.prototype.callEnd = function(e2, t2) {
          return this.engine.callEnd(e2, t2);
        }, u.prototype.callJoin = function(e2, t2) {
          return this.engine.callJoin(e2, t2);
        }, u.prototype.callingInvite = function(e2, t2, r2) {
          return this.engine.callingInvite(e2, t2, r2);
        }, u.prototype.queryCallInvitationList = function(e2) {
          return this.engine.queryCalls(e2);
        }, u.prototype.searchLocalConversations = function(e2) {
          return this.engine.searchConv(e2);
        }, u.prototype.searchGlobalLocalMessages = function(e2) {
          return this.engine.searchGlobalMsg(e2);
        }, u.prototype.searchLocalMessages = function(e2, t2, r2) {
          return this.engine.searchMsg(e2, t2, r2);
        }, u.prototype.searchLocalGroups = function(e2) {
          return this.engine.searchGroup(e2);
        }, u.prototype.searchLocalGroupMembers = function(e2, t2) {
          return this.engine.searchGroupMember(e2, t2);
        }, u.prototype.searchLocalFriends = function(e2) {
          return this.engine.searchFriend(e2);
        }, u.prototype.addFriend = function(e2, t2) {
          return this.engine.addFriend(e2, t2);
        }, u.prototype.sendFriendApplication = function(e2, t2) {
          return this.engine.sendFriendApply(e2, t2);
        }, u.prototype.deleteFriends = function(e2, t2) {
          return this.engine.delFriends(e2, t2);
        }, u.prototype.checkFriendsRelation = function(e2, t2) {
          return this.engine.checkFriendsRelation(e2, t2);
        }, u.prototype.updateFriendAlias = function(e2, t2) {
          return this.engine.updateFriendAlias(e2, t2);
        }, u.prototype.updateFriendAttributes = function(e2, t2) {
          return this.engine.updateFriendAttr(e2, t2);
        }, u.prototype.acceptFriendApplication = function(e2, t2) {
          return this.engine.acceptFriendApply(e2, t2);
        }, u.prototype.rejectFriendApplication = function(e2, t2) {
          return this.engine.rejectFriendApply(e2, t2);
        }, u.prototype.queryFriendsInfo = function(e2) {
          return this.engine.queryFriendsInfo(e2);
        }, u.prototype.queryFriendList = function(e2) {
          return this.engine.queryFriendList(e2);
        }, u.prototype.queryFriendApplicationList = function(e2) {
          return this.engine.queryFriendApplyList(e2);
        }, u.prototype.addUsersToBlacklist = function(e2) {
          return this.engine.addBlacklist(e2);
        }, u.prototype.removeUsersFromBlacklist = function(e2) {
          return this.engine.removeBlacklist(e2);
        }, u.prototype.checkUserIsInBlacklist = function(e2) {
          return this.engine.checkBlacklist(e2);
        }, u.prototype.queryBlacklist = function(e2) {
          return this.engine.queryBlacklist(e2);
        }, u.TAG = " 8/2 18:19", u._instance = null, r([Object(n.q)()], u.prototype, "uploadLog", null), r([Object(n.q)()], u.prototype, "login", null), r([Object(n.q)()], u.prototype, "renewToken", null), r([Object(n.q)()], u.prototype, "queryUsersInfo", null), r([Object(n.q)()], u.prototype, "updateUserName", null), r([Object(n.q)()], u.prototype, "updateUserAvatarUrl", null), r([Object(n.q)()], u.prototype, "updateUserExtendedData", null), r([Object(n.q)()], u.prototype, "updateUserOfflinePushRule", null), r([Object(n.q)()], u.prototype, "querySelfUserInfo", null), r([Object(n.q)()], u.prototype, "queryConversation", null), r([Object(n.q)()], u.prototype, "queryConversationList", null), r([Object(n.q)()], u.prototype, "queryConversationPinnedList", null), r([Object(n.q)()], u.prototype, "queryConversationTotalUnreadMessageCount", null), r([Object(n.q)()], u.prototype, "deleteConversation", null), r([Object(n.q)()], u.prototype, "deleteAllConversations", null), r([Object(n.q)()], u.prototype, "clearConversationUnreadMessageCount", null), r([Object(n.q)()], u.prototype, "clearConversationTotalUnreadMessageCount", null), r([Object(n.q)()], u.prototype, "deleteAllConversationMessages", null), r([Object(n.q)()], u.prototype, "setConversationNotificationStatus", null), r([Object(n.q)()], u.prototype, "updateConversationPinnedState", null), r([Object(n.q)()], u.prototype, "setConversationDraft", null), r([Object(n.q)()], u.prototype, "setConversationMark", null), r([Object(n.q)()], u.prototype, "sendMessage", null), r([Object(n.q)()], u.prototype, "sendMediaMessage", null), r([Object(n.q)()], u.prototype, "deleteMessages", null), r([Object(n.q)()], u.prototype, "deleteAllMessage", null), r([Object(n.q)()], u.prototype, "queryHistoryMessage", null), r([Object(n.q)()], u.prototype, "insertMessageToLocalDB", null), r([Object(n.q)()], u.prototype, "updateMessageLocalExtendedData", null), r([Object(n.q)()], u.prototype, "revokeMessage", null), r([Object(n.q)()], u.prototype, "queryCombineMessageDetail", null), r([Object(n.q)()], u.prototype, "sendConversationMessageReceiptRead", null), r([Object(n.q)()], u.prototype, "sendMessageReceiptsRead", null), r([Object(n.q)()], u.prototype, "queryMessageReceiptsInfo", null), r([Object(n.q)()], u.prototype, "queryGroupMessageReceiptReadMemberList", null), r([Object(n.q)()], u.prototype, "queryGroupMessageReceiptUnreadMemberList", null), r([Object(n.q)()], u.prototype, "addMessageReaction", null), r([Object(n.q)()], u.prototype, "deleteMessageReaction", null), r([Object(n.q)()], u.prototype, "queryMessageReactionUserList", null), r([Object(n.q)()], u.prototype, "replyMessage", null), r([Object(n.q)()], u.prototype, "queryMessageRepliedList", null), r([Object(n.q)()], u.prototype, "queryMessages", null), r([Object(n.q)()], u.prototype, "createRoom", null), r([Object(n.q)()], u.prototype, "enterRoom", null), r([Object(n.q)()], u.prototype, "joinRoom", null), r([Object(n.q)()], u.prototype, "leaveRoom", null), r([Object(n.q)()], u.prototype, "queryRoomMemberList", null), r([Object(n.q)()], u.prototype, "queryRoomMembers", null), r([Object(n.q)()], u.prototype, "queryRoomOnlineMemberCount", null), r([Object(n.q)()], u.prototype, "queryRoomAllAttributes", null), r([Object(n.q)()], u.prototype, "setRoomAttributes", null), r([Object(n.q)()], u.prototype, "deleteRoomAttributes", null), r([Object(n.q)()], u.prototype, "endRoomAttributesBatchOperation", null), r([Object(n.q)()], u.prototype, "setRoomMembersAttributes", null), r([Object(n.q)()], u.prototype, "queryRoomMembersAttributes", null), r([Object(n.q)()], u.prototype, "queryRoomMemberAttributesList", null), r([Object(n.q)()], u.prototype, "createGroup", null), r([Object(n.q)()], u.prototype, "joinGroup", null), r([Object(n.q)()], u.prototype, "leaveGroup", null), r([Object(n.q)()], u.prototype, "dismissGroup", null), r([Object(n.q)()], u.prototype, "queryGroupList", null), r([Object(n.q)()], u.prototype, "updateGroupNotice", null), r([Object(n.q)()], u.prototype, "updateGroupName", null), r([Object(n.q)()], u.prototype, "updateGroupAvatarUrl", null), r([Object(n.q)()], u.prototype, "muteGroup", null), r([Object(n.q)()], u.prototype, "queryGroupInfo", null), r([Object(n.q)()], u.prototype, "setGroupAttributes", null), r([Object(n.q)()], u.prototype, "deleteGroupAttributes", null), r([Object(n.q)()], u.prototype, "queryGroupAttributes", null), r([Object(n.q)()], u.prototype, "queryGroupAllAttributes", null), r([Object(n.q)()], u.prototype, "transferGroupOwner", null), r([Object(n.q)()], u.prototype, "inviteUsersIntoGroup", null), r([Object(n.q)()], u.prototype, "kickGroupMembers", null), r([Object(n.q)()], u.prototype, "queryGroupMemberList", null), r([Object(n.q)()], u.prototype, "queryGroupMemberCount", null), r([Object(n.q)()], u.prototype, "muteGroupMembers", null), r([Object(n.q)()], u.prototype, "queryGroupMemberMutedList", null), r([Object(n.q)()], u.prototype, "setGroupMemberNickname", null), r([Object(n.q)()], u.prototype, "setGroupMemberRole", null), r([Object(n.q)()], u.prototype, "queryGroupMemberInfo", null), r([Object(n.q)()], u.prototype, "updateGroupJoinMode", null), r([Object(n.q)()], u.prototype, "updateGroupInviteMode", null), r([Object(n.q)()], u.prototype, "updateGroupBeInviteMode", null), r([Object(n.q)()], u.prototype, "sendGroupJoinApplication", null), r([Object(n.q)()], u.prototype, "acceptGroupJoinApplication", null), r([Object(n.q)()], u.prototype, "rejectGroupJoinApplication", null), r([Object(n.q)()], u.prototype, "sendGroupInviteApplications", null), r([Object(n.q)()], u.prototype, "acceptGroupInviteApplication", null), r([Object(n.q)()], u.prototype, "rejectGroupInviteApplication", null), r([Object(n.q)()], u.prototype, "queryGroupApplicationList", null), r([Object(n.q)()], u.prototype, "callInvite", null), r([Object(n.q)()], u.prototype, "callCancel", null), r([Object(n.q)()], u.prototype, "callAccept", null), r([Object(n.q)()], u.prototype, "callReject", null), r([Object(n.q)()], u.prototype, "callQuit", null), r([Object(n.q)()], u.prototype, "callEnd", null), r([Object(n.q)()], u.prototype, "callJoin", null), r([Object(n.q)()], u.prototype, "callingInvite", null), r([Object(n.q)()], u.prototype, "queryCallInvitationList", null), r([Object(n.q)()], u.prototype, "searchLocalConversations", null), r([Object(n.q)()], u.prototype, "searchGlobalLocalMessages", null), r([Object(n.q)()], u.prototype, "searchLocalMessages", null), r([Object(n.q)()], u.prototype, "searchLocalGroups", null), r([Object(n.q)()], u.prototype, "searchLocalGroupMembers", null), r([Object(n.q)()], u.prototype, "searchLocalFriends", null), r([Object(n.q)()], u.prototype, "addFriend", null), r([Object(n.q)()], u.prototype, "sendFriendApplication", null), r([Object(n.q)()], u.prototype, "deleteFriends", null), r([Object(n.q)()], u.prototype, "checkFriendsRelation", null), r([Object(n.q)()], u.prototype, "updateFriendAlias", null), r([Object(n.q)()], u.prototype, "updateFriendAttributes", null), r([Object(n.q)()], u.prototype, "acceptFriendApplication", null), r([Object(n.q)()], u.prototype, "rejectFriendApplication", null), r([Object(n.q)()], u.prototype, "queryFriendsInfo", null), r([Object(n.q)()], u.prototype, "queryFriendList", null), r([Object(n.q)()], u.prototype, "queryFriendApplicationList", null), r([Object(n.q)()], u.prototype, "addUsersToBlacklist", null), r([Object(n.q)()], u.prototype, "removeUsersFromBlacklist", null), r([Object(n.q)()], u.prototype, "checkUserIsInBlacklist", null), r([Object(n.q)()], u.prototype, "queryBlacklist", null), u);
        function u(e2) {
          if (!e2 || !e2.setContext)
            throw new Error("Can not use new.");
          (this.engine = e2).setContext(this);
        }
        t.default = a, n.p || "undefined" == typeof window || window.ZIM || (window.ZIM = a);
      }, function(e, t, r) {
        var s, n, i, o, a;
        e.exports = (e = r(5), r(96), r(97), s = (i = (r = e).lib).Base, n = i.WordArray, o = (i = r.algo).MD5, a = i.EvpKDF = s.extend({ cfg: s.extend({ keySize: 4, hasher: o, iterations: 1 }), init: function(e2) {
          this.cfg = this.cfg.extend(e2);
        }, compute: function(e2, t2) {
          for (var r2, s2 = this.cfg, i2 = s2.hasher.create(), o2 = n.create(), a2 = o2.words, u = s2.keySize, c = s2.iterations; a2.length < u; ) {
            r2 && i2.update(r2), r2 = i2.update(e2).finalize(t2), i2.reset();
            for (var l = 1; l < c; l++)
              r2 = i2.finalize(r2), i2.reset();
            o2.concat(r2);
          }
          return o2.sigBytes = 4 * u, o2;
        } }), r.EvpKDF = function(e2, t2, r2) {
          return a.create(r2).compute(e2, t2);
        }, e.EvpKDF);
      }, function(e, t, r) {
        "use strict";
        r.d(t, "b", function() {
          return s;
        }), r.d(t, "c", function() {
          return n;
        }), r.d(t, "a", function() {
          return i;
        });
        var s = function() {
          return function(e2, t2, r2) {
            return { value: function() {
              for (var t3 = [], s2 = 0; s2 < arguments.length; s2++)
                t3[s2] = arguments[s2];
              var n2 = e2.createNotInitError.call(this);
              return n2 ? Promise.reject(n2) : r2.value.apply(this, t3);
            } };
          };
        }, n = function(e2, t2) {
          return function(r2, s2, n2) {
            return { value: function() {
              for (var s3 = [], i2 = 0; i2 < arguments.length; i2++)
                s3[i2] = arguments[i2];
              var o = r2.createNotLoggedError.call(this, e2, t2);
              return o ? Promise.reject(o) : n2.value.apply(this, s3);
            } };
          };
        }, i = function(e2, t2, r2) {
          var s2, n2 = 0;
          return function(i2, o, a) {
            return { value: function() {
              for (var o2 = [], u = 0; u < arguments.length; u++)
                o2[u] = arguments[u];
              var c = Date.now();
              if (n2++, c - (s2 = s2 || c) < t2) {
                if (e2 < n2)
                  return Promise.reject(i2.createFrequencyLimitError.call(this, r2));
              } else
                s2 = c, n2 = 0;
              return a.value.apply(this, o2);
            } };
          };
        };
      }, function(e, t, r) {
        "use strict";
        r.d(t, "o", function() {
          return a;
        }), r.d(t, "i", function() {
          return u;
        }), r.d(t, "j", function() {
          return c;
        }), r.d(t, "l", function() {
          return l;
        }), r.d(t, "k", function() {
          return d;
        }), r.d(t, "h", function() {
          return p;
        }), r.d(t, "c", function() {
          return h;
        }), r.d(t, "b", function() {
          return f;
        }), r.d(t, "n", function() {
          return m;
        }), r.d(t, "m", function() {
          return g;
        }), r.d(t, "p", function() {
          return _;
        }), r.d(t, "r", function() {
          return b;
        }), r.d(t, "u", function() {
          return v;
        }), r.d(t, "q", function() {
          return y;
        }), r.d(t, "s", function() {
          return k;
        }), r.d(t, "t", function() {
          return I;
        }), r.d(t, "g", function() {
          return S;
        }), r.d(t, "f", function() {
          return D;
        }), r.d(t, "e", function() {
          return q;
        }), r.d(t, "a", function() {
          return w;
        }), r.d(t, "d", function() {
          return A;
        });
        var s = r(6), n = (t = r(4), r.n(t)), i = r(0), o = -1 != "web".indexOf("wx"), a = o ? "undefined" != typeof tt ? (tt._zim_platform = "douyin", tt._zim_env = tt.env.VERSION, tt) : "undefined" != typeof swan ? (swan._zim_platform = "baidu", swan._zim_env = "", swan) : "undefined" != typeof my ? (my._zim_platform = "alipay", my._zim_isAlipay = true, my._zim_env = my.getAccountInfoSync().miniProgram.envVersion, my) : "undefined" != typeof wx ? (wx._zim_platform = "weixin", wx._zim_env = wx.getAccountInfoSync().miniProgram.envVersion, wx) : null : null, u = function() {
          var e2, t2, r2 = "z_deviceID", s2 = (e2 = new Date().getTime(), "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(t3) {
            var r3 = (e2 + 16 * Math.random()) % 16 | 0;
            return e2 = Math.floor(e2 / 16), ("x" == t3 ? r3 : 3 & r3 | 8).toString(36);
          })), n2 = "";
          try {
            o ? (t2 = a.getStorageSync(a._zim_isAlipay ? { key: r2 } : r2) || "") && t2.data ? n2 = "object" == typeof t2 ? t2.data : t2 : (n2 = s2, a._zim_isAlipay ? a.setStorageSync({ key: r2, data: n2 }) : a.setStorageSync(r2, n2)) : (n2 = localStorage.getItem(r2) || "") || (n2 = s2, localStorage.setItem(r2, n2));
          } catch (t3) {
            n2 = s2;
          }
          return n2;
        }(), c = function() {
          if (!o)
            return navigator.userAgent;
          var e2 = (u2 = a.getSystemInfoSync()).brand, t2 = u2.model, r2 = u2.version, s2 = u2.system, n2 = u2.platform, i2 = u2.SDKVersion, u2 = u2.benchmarkLevel;
          return JSON.stringify({ env: a._zim_env, brand: e2, model: t2, version: r2, system: s2, platform: a._zim_platform + "," + n2, SDKVersion: i2, benchmarkLevel: u2 });
        }(), l = function() {
          return new Date().getTime() + Math.random().toString().substring(2, 7);
        }, d = function(e2) {
          return "string" == typeof e2 ? new Uint8Array(Array.from(unescape(encodeURIComponent(e2 || ""))).map(function(e3) {
            return e3.charCodeAt(0);
          })) : e2;
        }, p = function(e2) {
          if ("string" == typeof e2)
            return e2;
          if (!e2 || !e2.length)
            return "";
          e2 = String.fromCharCode.apply(String, function(e3, t2, r2) {
            if (r2 || 2 === arguments.length)
              for (var s2, n2 = 0, i2 = t2.length; n2 < i2; n2++)
                !s2 && n2 in t2 || ((s2 = s2 || Array.prototype.slice.call(t2, 0, n2))[n2] = t2[n2]);
            return e3.concat(s2 || Array.prototype.slice.call(t2));
          }([], function(e3, t2) {
            var r2 = "function" == typeof Symbol && e3[Symbol.iterator];
            if (!r2)
              return e3;
            var s2, n2, i2 = r2.call(e3), o2 = [];
            try {
              for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
                o2.push(s2.value);
            } catch (e4) {
              n2 = { error: e4 };
            } finally {
              try {
                s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
              } finally {
                if (n2)
                  throw n2.error;
              }
            }
            return o2;
          }(Array.from(e2)), false));
          try {
            return decodeURIComponent(escape(e2));
          } catch (t2) {
            return decodeURIComponent(e2);
          }
        }, h = function(e2) {
          return s.a.fromUint8Array(e2);
        }, f = function(e2) {
          return s.a.toUint8Array(e2);
        }, m = function(e2, t2) {
          return !!e2 && "string" == typeof e2 && e2.length <= i.m.MAX_ID_SIZE && (!t2 || "#" != e2[0]);
        }, g = function(e2, t2) {
          if (!e2 || "string" != typeof e2 || e2.length < 31)
            return [6000103];
          if ("04" !== e2.substring(0, 2))
            return [6000107];
          try {
            var r2 = Date.now() / 1e3, i2 = Array.from(s.a.toUint8Array(e2.substring(2, 14))), o2 = n.a.fromBytes(i2.slice(0, 8)).toInt();
            return [o2 < t2 || o2 < r2 ? 6000106 : o2 < 30 + r2 ? 6000108 : 2073600 + r2 < o2 ? 6000109 : 0, o2];
          } catch (e3) {
            return (0, console.warn)("Parse token fail for invalid Base64.", e3), [6000103];
          }
        }, _ = function(e2, t2) {
          var r2 = {};
          return e2.forEach(function(e3) {
            return r2[e3] = t2[e3];
          }), r2;
        }, b = function(e2, t2) {
          var r2 = t2.dbUserMap.get(e2) || { userID: e2 };
          return e2 && !r2.userName && t2.syncUserTask.add(e2), { userID: r2.userID, userName: r2.userName || "", userAvatarUrl: r2.userAvatarUrl || "" };
        }, v = function(e2, t2) {
          var r2 = t2.dbUserMap.get(e2.userID);
          return r2 ? (e2.userName && (r2.userName = e2.userName), e2.userAvatarUrl && (r2.userAvatarUrl = e2.userAvatarUrl), r2) : (t2.dbUserMap.set(e2.userID, e2), e2);
        }, y = function(e2, t2) {
          if (!e2)
            return {};
          var r2 = t2.dbUserMap.get(e2.userID), s2 = e2.operatedUser;
          return s2 && Object.assign(s2, b(s2.userID, t2)), { userID: e2.userID, userName: (null == r2 ? void 0 : r2.userName) || "", userAvatarUrl: (null == r2 ? void 0 : r2.userAvatarUrl) || "", memberNickname: e2.memberNickname || "", memberRole: e2.memberRole || i.Q.Member, muteExpiredTime: e2.muteExpiredTime || 0, groupEnterInfo: { enterTime: e2.enterTime || 0, enterType: e2.enterType || i.J.Unknown, operatedUser: s2 } };
        }, M = ((t = {})[i.fb.RevokeSelf] = i.cb.SelfRevoke, t[i.fb.RevokeSystem] = i.cb.SystemRevoke, t[i.fb.RevokeService] = i.cb.ServiceAPIRevoke, t[i.fb.RevokeGroupAdmin] = i.cb.GroupAdminRevoke, t[i.fb.RevokeGroupOwner] = i.cb.GroupOwnerRevoke, t[i.fb.RevokeAudit] = i.cb.AuditRevoke, t[i.fb.ReceiptDoing] = i.ab.Processing, t[i.fb.ReceiptDone] = i.ab.Done, t[i.fb.ReceiptExpired] = i.ab.Expired, t[i.fb.ReceiptFailed] = i.ab.Failed, t), k = function(e2) {
          for (var t2, r2 = 0, s2 = { revoke: 0, receipt: 0 }; e2; )
            1 & e2 && ((t2 = 1 << r2) >= i.fb.RevokeSelf && t2 <= i.fb.RevokeGroupOwner ? s2.revoke += t2 : t2 >= i.fb.ReceiptDone && t2 <= i.fb.ReceiptDoing && (s2.receipt += t2)), r2++, e2 >>= 1;
          return s2.revoke = s2.revoke >= i.fb.RevokeSelf && s2.revoke <= i.fb.RevokeGroupOwner ? M[s2.revoke] : i.cb.Unknown, s2.receipt = s2.receipt >= i.fb.ReceiptDone && s2.receipt <= i.fb.ReceiptDoing ? M[s2.receipt] : i.ab.None, s2;
        }, I = (Math.log2 || (Math.log2 = function(e2) {
          return Math.log(e2) / Math.LN2;
        }), function(e2) {
          var t2 = [];
          if (e2 && "0" != e2.toString())
            for (var r2 = 0, s2 = Math.pow(2, r2); e2.greaterThanOrEqual(s2); )
              "0" !== e2.and(s2).toString() && t2.push(Math.log2(s2) + 1), r2++, s2 = Math.pow(2, r2);
          return t2;
        }), S = function(e2, t2) {
          if (e2 && e2.title && e2.content)
            return { enable_push: 1, title: String(e2.title), content: String(e2.content), payload: String(e2.payload || ""), pushStrategyId: String(e2.resourcesID || ""), enable_force_push: t2, custom_map: e2.enableBadge || e2.voIPConfig ? { badge_increment: e2.enableBadge ? String(e2.badgeIncrement || 0) : void 0, sdk_params: e2.voIPConfig ? JSON.stringify({ voip_handle_type: e2.voIPConfig.iOSVoIPHandleType, voip_handle_value: String(e2.voIPConfig.iOSVoIPHandleValue || ""), voip_has_video: !!e2.voIPConfig.iOSVoIPHasVideo }) : void 0 } : void 0 };
        }, D = function(e2, t2) {
          var r2 = e2.is_all_forbid, s2 = e2.forbid_list;
          return -1 != (e2 = e2.forbid_expire_time) && e2 < t2 ? { mode: i.T.None, expiredTime: 0, roles: [] } : (t2 = i.T.None, 0 != e2 && r2 ? t2 = i.T.All : 1 == s2.length && s2[0] == i.Q.Member ? t2 = i.T.Normal : 0 != e2 && s2.length && (t2 = i.T.Custom), { mode: t2, expiredTime: e2, roles: s2 });
        }, q = function(e2, t2) {
          return !!e2.isPinned != !!t2.isPinned ? t2.isPinned ? 1 : -1 : t2.orderKey - e2.orderKey;
        }, C = function(e2, t2) {
          if (!e2 || !t2)
            return false;
          if (Object.keys(e2).length !== Object.keys(t2).length)
            return false;
          var r2, s2 = true;
          for (r2 in e2)
            void 0 === t2[r2] && (s2 = false), "object" == ("object" == typeof e2[r2] && typeof t2[r2]) ? s2 = C(e2[r2], t2[r2]) : e2[r2] !== t2[r2] && (s2 = false);
          return s2;
        }, w = function(e2, t2) {
          if (!e2 || !t2)
            return false;
          if (e2.length !== t2.length)
            return false;
          var r2 = true;
          return e2.forEach(function(e3, s2) {
            C(e3, t2[s2]) || (r2 = false);
          }), r2;
        }, A = function(e2, t2) {
          return !!e2 && -1 != e2.toLocaleLowerCase().indexOf(t2);
        };
      }, function(e, t, r) {
        "use strict";
        var s = r(26), n = (r.d(t, "b", function() {
          return s.a;
        }), r.d(t, "c", function() {
          return s.b;
        }), r.d(t, "d", function() {
          return s.c;
        }), r(27)), i = (r.d(t, "g", function() {
          return n.a;
        }), r.d(t, "h", function() {
          return n.b;
        }), r.d(t, "i", function() {
          return n.c;
        }), r.d(t, "D", function() {
          return n.d;
        }), r.d(t, "F", function() {
          return n.e;
        }), r.d(t, "G", function() {
          return n.f;
        }), r.d(t, "H", function() {
          return n.g;
        }), r.d(t, "I", function() {
          return n.h;
        }), r.d(t, "J", function() {
          return n.i;
        }), r.d(t, "L", function() {
          return n.j;
        }), r(28)), o = (r.d(t, "e", function() {
          return i.a;
        }), r.d(t, "f", function() {
          return i.b;
        }), r.d(t, "o", function() {
          return i.c;
        }), r.d(t, "E", function() {
          return i.d;
        }), r.d(t, "K", function() {
          return i.e;
        }), r(29), r(30), r(31)), a = (r.d(t, "a", function() {
          return o.a;
        }), r.d(t, "j", function() {
          return o.b;
        }), r.d(t, "k", function() {
          return o.c;
        }), r.d(t, "l", function() {
          return o.d;
        }), r.d(t, "m", function() {
          return o.e;
        }), r.d(t, "n", function() {
          return o.f;
        }), r.d(t, "P", function() {
          return o.g;
        }), r(32)), u = (r.d(t, "p", function() {
          return a.a;
        }), r.d(t, "q", function() {
          return a.b;
        }), r.d(t, "r", function() {
          return a.c;
        }), r.d(t, "s", function() {
          return a.d;
        }), r.d(t, "t", function() {
          return a.e;
        }), r.d(t, "u", function() {
          return a.f;
        }), r.d(t, "v", function() {
          return a.g;
        }), r.d(t, "w", function() {
          return a.h;
        }), r.d(t, "x", function() {
          return a.i;
        }), r.d(t, "y", function() {
          return a.j;
        }), r.d(t, "z", function() {
          return a.k;
        }), r.d(t, "A", function() {
          return a.l;
        }), r.d(t, "B", function() {
          return a.m;
        }), r.d(t, "C", function() {
          return a.n;
        }), r(33));
        r.d(t, "M", function() {
          return u.a;
        }), r.d(t, "N", function() {
          return u.b;
        }), r.d(t, "O", function() {
          return u.c;
        });
      }, function(e, t, r) {
        "use strict";
        var s, n, i;
        r.d(t, "a", function() {
          return s;
        }), r.d(t, "b", function() {
          return n;
        }), r.d(t, "c", function() {
          return i;
        }), (r = s = s || {})[r.Unknown = -1] = "Unknown", r[r.General = 0] = "General", r[r.Advanced = 1] = "Advanced", (t = n = n || {})[t.Unknown = -1] = "Unknown", t[t.Started = 1] = "Started", t[t.Ended = 2] = "Ended", (r = i = i || {})[r.Unknown = -1] = "Unknown", r[r.Inviting = 0] = "Inviting", r[r.Accepted = 1] = "Accepted", r[r.Rejected = 2] = "Rejected", r[r.Cancelled = 3] = "Cancelled", r[r.Received = 5] = "Received", r[r.Timeout = 6] = "Timeout", r[r.Quit = 7] = "Quit", r[r.Ended = 8] = "Ended", r[r.NotYetReceived = 9] = "NotYetReceived", r[r.BeCancelled = 10] = "BeCancelled";
      }, function(e, t, r) {
        "use strict";
        var s, n, i, o, a, u, c, l, d, p;
        r.d(t, "c", function() {
          return s;
        }), r.d(t, "a", function() {
          return n;
        }), r.d(t, "b", function() {
          return i;
        }), r.d(t, "i", function() {
          return o;
        }), r.d(t, "h", function() {
          return a;
        }), r.d(t, "d", function() {
          return u;
        }), r.d(t, "f", function() {
          return c;
        }), r.d(t, "e", function() {
          return l;
        }), r.d(t, "g", function() {
          return d;
        }), r.d(t, "j", function() {
          return p;
        }), (r = s = s || {})[r.Unknown = -1] = "Unknown", r[r.Peer = 0] = "Peer", r[r.Room = 1] = "Room", r[r.Group = 2] = "Group", (t = n = n || {})[t.Added = 0] = "Added", t[t.Updated = 1] = "Updated", t[t.Disabled = 2] = "Disabled", t[t.Deleted = 3] = "Deleted", (r = i = i || {})[r.Notify = 1] = "Notify", r[r.DoNotDisturb = 2] = "DoNotDisturb", (t = o = o || {})[t.Unknown = 0] = "Unknown", t[t.Text = 1] = "Text", t[t.Command = 2] = "Command", t[t.Image = 11] = "Image", t[t.File = 12] = "File", t[t.Audio = 13] = "Audio", t[t.Video = 14] = "Video", t[t.Barrage = 20] = "Barrage", t[t.System = 30] = "System", t[t.Revoke = 31] = "Revoke", t[t.Tips = 32] = "Tips", t[t.Combine = 100] = "Combine", t[t.Custom = 200] = "Custom", (r = a = a || {})[r.Sending = 0] = "Sending", r[r.Success = 1] = "Success", r[r.Failed = 2] = "Failed", (t = u = u || {})[t.Send = 0] = "Send", t[t.Receive = 1] = "Receive", (r = c = c || {})[r.Normal = 0] = "Normal", r[r.Deleted = 1] = "Deleted", r[r.NotFound = 2] = "NotFound", (t = l = l || {})[t.None = 0] = "None", t[t.Processing = 1] = "Processing", t[t.Done = 2] = "Done", t[t.Expired = 3] = "Expired", t[t.Failed = 4] = "Failed", (r = d = d || {})[r.Unknown = -1] = "Unknown", r[r.SelfRevoke = 0] = "SelfRevoke", r[r.SystemRevoke = 1] = "SystemRevoke", r[r.ServiceAPIRevoke = 2] = "ServiceAPIRevoke", r[r.GroupAdminRevoke = 3] = "GroupAdminRevoke", r[r.GroupOwnerRevoke = 4] = "GroupOwnerRevoke", r[r.AuditRevoke = 5] = "AuditRevoke", (t = p = p || {})[t.TwoWay = 0] = "TwoWay", t[t.OneWay = 1] = "OneWay";
      }, function(e, t, r) {
        "use strict";
        var s, n, i, o, a;
        r.d(t, "b", function() {
          return s;
        }), r.d(t, "a", function() {
          return n;
        }), r.d(t, "d", function() {
          return i;
        }), r.d(t, "c", function() {
          return o;
        }), r.d(t, "e", function() {
          return a;
        }), (r = s = s || {})[r.Disconnected = 0] = "Disconnected", r[r.Connecting = 1] = "Connecting", r[r.Connected = 2] = "Connected", r[r.Reconnecting = 3] = "Reconnecting", (t = n = n || {})[t.Success = 0] = "Success", t[t.ActiveLogin = 1] = "ActiveLogin", t[t.LoginTimeout = 2] = "LoginTimeout", t[t.LoginInterrupted = 3] = "LoginInterrupted", t[t.KickedOut = 4] = "KickedOut", t[t.Unregistered = 6] = "Unregistered", (r = i = i || {})[r.Low = 1] = "Low", r[r.Medium = 2] = "Medium", r[r.High = 3] = "High", (t = o = o || {})[t.None = 0] = "None", t[t.Include = 1] = "Include", t[t.Exclude = 2] = "Exclude", (r = a = a || {})[r.Win = 1] = "Win", r[r.IPhoneOS = 2] = "IPhoneOS", r[r.Android = 3] = "Android", r[r.MacOS = 4] = "MacOS", r[r.Linux = 5] = "Linux", r[r.Web = 6] = "Web", r[r.MiniProgram = 7] = "MiniProgram", r[r.IPadOS = 9] = "IPadOS", r[r.Unknown = 32] = "Unknown";
      }, function(e, t, r) {
      }, function(e, t, r) {
      }, function(e, t, r) {
        "use strict";
        var s, n, i, o, a, u, c;
        r.d(t, "a", function() {
          return s;
        }), r.d(t, "g", function() {
          return n;
        }), r.d(t, "f", function() {
          return i;
        }), r.d(t, "e", function() {
          return o;
        }), r.d(t, "d", function() {
          return a;
        }), r.d(t, "c", function() {
          return u;
        }), r.d(t, "b", function() {
          return c;
        }), (r = s = s || {})[r.Added = 0] = "Added", r[r.Removed = 1] = "Removed", (t = n = n || {})[t.SingleNo = 1] = "SingleNo", t[t.SingleHave = 2] = "SingleHave", t[t.BothAllNo = 3] = "BothAllNo", t[t.BothSelfHave = 4] = "BothSelfHave", t[t.BothOtherHave = 5] = "BothOtherHave", t[t.BothAllHave = 6] = "BothAllHave", (r = i = i || {})[r.Both = 0] = "Both", r[r.Single = 1] = "Single", (t = o = o || {})[t.Added = 0] = "Added", t[t.Deleted = 1] = "Deleted", (r = a = a || {})[r.None = 0] = "None", r[r.Received = 1] = "Received", r[r.Sent = 2] = "Sent", r[r.Both = 3] = "Both", (t = u = u || {})[t.Waiting = 1] = "Waiting", t[t.Accepted = 2] = "Accepted", t[t.Rejected = 3] = "Rejected", t[t.Expired = 4] = "Expired", t[t.Disabled = 5] = "Disabled", (c = c || {})[c.Added = 0] = "Added";
      }, function(e, t, r) {
        "use strict";
        var s, n, i, o, a, u, c, l, d, p, h, f, m, g;
        r.d(t, "l", function() {
          return s;
        }), r.d(t, "n", function() {
          return n;
        }), r.d(t, "g", function() {
          return i;
        }), r.d(t, "k", function() {
          return o;
        }), r.d(t, "j", function() {
          return a;
        }), r.d(t, "d", function() {
          return u;
        }), r.d(t, "m", function() {
          return c;
        }), r.d(t, "i", function() {
          return l;
        }), r.d(t, "h", function() {
          return d;
        }), r.d(t, "e", function() {
          return p;
        }), r.d(t, "f", function() {
          return h;
        }), r.d(t, "c", function() {
          return f;
        }), r.d(t, "b", function() {
          return m;
        }), r.d(t, "a", function() {
          return g;
        }), (r = s = s || {})[r.Notify = 1] = "Notify", r[r.Disturb = 2] = "Disturb", (t = n = n || {})[t.Quit = 0] = "Quit", t[t.Enter = 1] = "Enter", (r = i = i || {})[r.Created = 1] = "Created", r[r.Dismissed = 2] = "Dismissed", r[r.Joined = 3] = "Joined", r[r.Invited = 4] = "Invited", r[r.Left = 5] = "Left", r[r.KickedOut = 6] = "KickedOut", (t = o = o || {})[t.Quit = 0] = "Quit", t[t.Enter = 1] = "Enter", (r = a = a || {})[r.Joined = 1] = "Joined", r[r.Left = 2] = "Left", r[r.KickedOut = 4] = "KickedOut", r[r.Invited = 5] = "Invited", (t = u = u || {})[t.Set = 0] = "Set", t[t.Delete = 1] = "Delete", (r = c = c || {})[r.None = 0] = "None", r[r.Normal = 1] = "Normal", r[r.All = 2] = "All", r[r.Custom = 3] = "Custom", (t = l = l || {})[t.Any = 0] = "Any", t[t.Auth = 1] = "Auth", t[t.Forbid = 2] = "Forbid", (r = d = d || {})[r.Any = 0] = "Any", r[r.Admin = 1] = "Admin", (t = p = p || {})[t.None = 0] = "None", t[t.Auth = 1] = "Auth", (r = h = h || {})[r.Unknown = 0] = "Unknown", r[r.Created = 1] = "Created", r[r.JoinApply = 2] = "JoinApply", r[r.Joined = 3] = "Joined", r[r.Invited = 4] = "Invited", r[r.InviteApply = 5] = "InviteApply", (t = f = f || {})[t.None = 0] = "None", t[t.Join = 1] = "Join", t[t.Invite = 2] = "Invite", t[t.BeInvite = 3] = "BeInvite", (r = m = m || {})[r.Waiting = 1] = "Waiting", r[r.Accepted = 2] = "Accepted", r[r.Rejected = 3] = "Rejected", r[r.Expired = 4] = "Expired", r[r.Disabled = 5] = "Disabled", (g = g || {})[g.Added = 0] = "Added";
      }, function(e, t, r) {
        "use strict";
        var s, n, i;
        r.d(t, "c", function() {
          return s;
        }), r.d(t, "b", function() {
          return n;
        }), r.d(t, "a", function() {
          return i;
        }), (r = s = s || {})[r.Disconnected = 0] = "Disconnected", r[r.Connecting = 1] = "Connecting", r[r.Connected = 2] = "Connected", (t = n = n || {})[t.Success = 0] = "Success", t[t.NetworkInterrupted = 1] = "NetworkInterrupted", t[t.NetworkDisconnected = 2] = "NetworkDisconnected", t[t.RoomNotExist = 3] = "RoomNotExist", t[t.ActiveCreate = 4] = "ActiveCreate", t[t.CreateFailed = 5] = "CreateFailed", t[t.ActiveEnter = 6] = "ActiveEnter", t[t.EnterFailed = 7] = "EnterFailed", t[t.KickedOut = 8] = "KickedOut", t[t.ConnectTimeout = 9] = "ConnectTimeout", t[t.KickedOutByOtherDevice = 10] = "KickedOutByOtherDevice", (r = i = i || {})[r.Set = 0] = "Set", r[r.Delete = 1] = "Delete";
      }, function(e, t, r) {
        "use strict";
        var s, n, i, o, a, u, c, l, d, p, h, f, m, g;
        r.d(t, "c", function() {
          return s;
        }), r.d(t, "e", function() {
          return n;
        }), r.d(t, "h", function() {
          return i;
        }), r.d(t, "l", function() {
          return o;
        }), r.d(t, "k", function() {
          return a;
        }), r.d(t, "g", function() {
          return u;
        }), r.d(t, "i", function() {
          return c;
        }), r.d(t, "j", function() {
          return l;
        }), r.d(t, "f", function() {
          return d;
        }), r.d(t, "m", function() {
          return p;
        }), r.d(t, "n", function() {
          return h;
        }), r.d(t, "d", function() {
          return f;
        }), r.d(t, "b", function() {
          return m;
        }), r.d(t, "a", function() {
          return g;
        }), (r = s = s || {})[r.Cancel = 0] = "Cancel", r[r.Timeout = 1] = "Timeout", (t = n = n || {})[t.Normal = 0] = "Normal", t[t.Disable = 1] = "Disable", t[t.Delete = 2] = "Delete", (r = i = i || {})[r.Notice = 0] = "Notice", r[r.Name = 1] = "Name", r[r.Avatar = 2] = "Avatar", r[r.Mute = 3] = "Mute", r[r.Limit = 4] = "Limit", r[r.SvrData = 5] = "SvrData", (t = o = o || {})[t.Join = 0] = "Join", t[t.Invite = 1] = "Invite", t[t.BeInvite = 2] = "BeInvite", (r = a = a || {})[r.Owner = 1] = "Owner", r[r.Admin = 2] = "Admin", r[r.Member = 3] = "Member", (t = u = u || {})[t.Set = 0] = "Set", t[t.Delete = 1] = "Delete", t[t.Push = 2] = "Push", t[t.Query = 3] = "Query", (r = c = c || {})[r.None = 0] = "None", r[r.Enter = 1] = "Enter", r[r.Quit = 2] = "Quit", r[r.Modify = 3] = "Modify", r[r.Kickout = 4] = "Kickout", r[r.Invited = 5] = "Invited", r[r.OwnerQuit = 6] = "OwnerQuit", r[r.Mute = 7] = "Mute", r[r.ApplyJoin = 8] = "ApplyJoin", r[r.ApplyInvited = 9] = "ApplyInvited", (t = l = l || {})[t.Nickname = 0] = "Nickname", t[t.Role = 1] = "Role", (r = d = d || {})[r.Other = 0] = "Other", r[r.SDKLogin = 1] = "SDKLogin", r[r.SDKPush = 2] = "SDKPush", r[r.SDKHb = 3] = "SDKHb", r[r.Biz = 4] = "Biz", (t = p = p || {}).Insert = "Insert", t.Sending = "Sending", t.Sended = "Sended", t.Fetch = "Fetch", t.Push = "Push", t.Tips = "Tips", (r = h = h || {})[r.None = 0] = "None", r[r.RevokeSelf = 4] = "RevokeSelf", r[r.RevokeSystem = 8] = "RevokeSystem", r[r.RevokeService = 12] = "RevokeService", r[r.RevokeGroupAdmin = 16] = "RevokeGroupAdmin", r[r.RevokeGroupOwner = 20] = "RevokeGroupOwner", r[r.RevokeAudit = 24] = "RevokeAudit", r[r.ReceiptDone = 64] = "ReceiptDone", r[r.ReceiptExpired = 128] = "ReceiptExpired", r[r.ReceiptFailed = 192] = "ReceiptFailed", r[r.ReceiptDoing = 256] = "ReceiptDoing", r[r.VoteDoing = 1024] = "VoteDoing", r[r.VoteDone = 2048] = "VoteDone", (t = f = f || {})[t.DontDisturb = -1] = "DontDisturb", t[t.RecoverDisturb = 0] = "RecoverDisturb", t[t.HandleMessage = 1] = "HandleMessage", (r = m = m || {})[r.Insert = 0] = "Insert", r[r.Remove = 1] = "Remove", (t = g = g || {})[t.FetchAll = 0] = "FetchAll", t[t.FetchMessageList = 1] = "FetchMessageList", t[t.FetchMessageStatusList = 2] = "FetchMessageStatusList";
      }, function(e, t, r) {
        "use strict";
        r.d(t, "d", function() {
          return o;
        }), r.d(t, "c", function() {
          return s;
        }), r.d(t, "b", function() {
          return n;
        }), r.d(t, "a", function() {
          return m;
        });
        var s, n, i = function() {
          return (i = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, o = 100021, a = (r = ((r = s = s || {})[r.SDK = 0] = "SDK", r[r.API = 1] = "API", (t = n = n || {})[t.Low = 0] = "Low", t[t.Medium = 1] = "Medium", t[t.High = 2] = "High", t[t.Highest = 3] = "Highest", { req: "QueryRoomMsgReq", rsp: "QueryRoomMsgRsp", w: n.High }), t = { req: "GetStatemsgListReq", rsp: "GetStatemsgListRsp", w: n.Medium }, { req: "C2CReadReceiptReq", rsp: "C2CReadReceiptRsp", w: n.Medium }), u = { req: "RevokeMsgReq", rsp: "RevokeMsgRsp", w: n.Medium }, c = { req: "SetReactionReq", rsp: "SetReactionRsp", w: n.Medium }, l = { req: "DelReactionReq", rsp: "SetReactionRsp", w: n.Medium }, d = { req: "ReactionInfoReq", rsp: "ReactionInfoRsp", w: n.Medium }, p = { req: "ReactionListReq", rsp: "ReactionListRsp", w: n.Medium }, h = { req: "BatchFetchConvMsgReq", rsp: "BatchFetchConvMsgRsp", w: n.Medium }, f = { req: "DelReactionReq", rsp: "FetchReplyListRsp", w: n.Medium }, m = { sw_handshake: { cmd: "/sw/handshake_req", req: "HandshakeReq" }, sw_login: { cmd: "/sw/login", req: "LoginReq", rsp: "LoginRsp", w: n.Highest }, sw_logout: { cmd: "/sw/logout", req: "StCommandMsgInfo", rsp: "CodeMsg", w: n.Highest }, sw_renew_token: { cmd: "/sw/renew_token", req: "ModifyUserInfoReq", rsp: "CodeMsg", w: n.Highest }, sw_hb: { cmd: "/sw/hb", req: "ModifyUserInfoReq", rsp: "HbRsp", w: n.Highest }, swp_kickout: { cmd: "/sw/push_kickout", rsp: "ErrList" }, swp_redirect: { cmd: "/sw/push_redirect", rsp: "FriendDeletedReq" }, swp_list: { cmd: "/sw/push_list", rsp: "PushListRequest" }, swp_list_rsp: { cmd: "/sw/push_list_rsp", req: "PushListRsp" }, p_log: { cmd: "push_detaillog_report", rsp: "CodeMsg" }, mp_user_mdf: { cmd: "push_modify_userinfo", rsp: "ModifyUserInfoReq" }, mp_msg_del: { cmd: "push_conv_msg_delete", rsp: "PushDelConvMsg" }, mp_conv_del: { cmd: "push_conv_delete", rsp: "ConvInfo" }, mp_conv_read: { cmd: "push_update_readseq", rsp: "ConvInfo" }, mp_conv_pinned: { cmd: "push_conv_pinned", rsp: "PushPinnedConvChange" }, mp_conv_mark: { cmd: "push_conv_mark", rsp: "PushConvMark" }, mp_gp_notify: { cmd: "push_group_mute", rsp: "ConvInfo" }, mp_c2c_notify: { cmd: "push_c2c_mute", rsp: "PushC2cMute" }, mp_del_all_conv: { cmd: "push_del_all_conv", rsp: "StMsgClientInfo" }, mp_clean_unread: { cmd: "push_clean_unread", rsp: "StMsgClientInfo" }, mp_clean_all_msg: { cmd: "push_clean_all_msg", rsp: "StMsgClientInfo" }, mp_gp_enter: { cmd: "push_enter_group", rsp: "PushEnterGroup" }, mp_gp_quit: { cmd: "push_quit_group", rsp: "PushGroupOwnerTransfer" }, mp_bl_add: { cmd: "push_blacklist_add", rsp: "PushBlacklistAdd" }, mp_bl_del: { cmd: "push_blacklist_del", rsp: "PushBlacklistDelete" }, mp_fd_add: { cmd: "push_friend_add_to_self", rsp: "PushFriendAdd2Self" }, mp_fd_app: { cmd: "push_friend_apply_to_self", rsp: "PushFriendApply2Self" }, mp_fd_apt: { cmd: "push_friend_accept_to_self", rsp: "PushFriendAccept" }, mp_fd_rfe: { cmd: "push_friend_refuse_to_self", rsp: "PushFriendRefuse" }, mp_fd_del: { cmd: "push_friend_delete_to_self", rsp: "PushFriendAdd2Self" }, mp_fd_attr_mdf: { cmd: "push_modify_friend_attribute", rsp: "PushModifyFriendAttribute" }, mp_fd_remark_mdf: { cmd: "usermail/push_modify_friend_remark", rsp: "StGroupAttribute" }, user_mdf: { cmd: "/sw/modify_info", req: "ModifyUserInfoReq", rsp: "ConvDelRsp", w: n.Medium }, user_fetch: { cmd: "account/fetch_user_info", req: "FriendDeletedReq", rsp: "UserInfoRsp", w: n.Low }, user_zpns: { cmd: "userstate/zpns_report", req: "StGroupAttribute", rsp: "CodeMsg", w: n.Medium }, user_rule: { cmd: "account/modify_custom_push", req: "ModifyUserCustomPush", rsp: "ConvDelRsp", w: n.Medium }, user_fetch_rule: { cmd: "account/fetch_self_user_rule", req: "", rsp: "SelfUserInfoRsp", w: n.Low }, conv_hb: { cmd: "usermail/hb", req: "StMsgClientInfo", rsp: "UserMailHbRsp", w: n.Highest }, conv_list: { cmd: "usermail/convlist", req: "FriendListReq", rsp: "GetConvListRsp", w: n.Highest }, conv_del: { cmd: "usermail/del_conv", req: "UpdateReadSeqReq", rsp: "ConvDelRsp", w: n.Medium }, conv_del_all: { cmd: "usermail/del_all_conv", req: "StMsgClientInfo", rsp: "CodeMsg", w: n.Medium }, conv_read: { cmd: "usermail/update_read_seq", req: "UpdateReadSeqReq", rsp: "CodeMsg", w: n.Medium }, conv_clean_all_unread: { cmd: "usermail/clean_all_unread", req: "StMsgClientInfo", rsp: "CodeMsg", w: n.Medium }, conv_pinned: { cmd: "usermail/conv_pinned", req: "StCheckFriendFail", rsp: "ConvDelRsp", w: n.High }, conv_pinned_list: { cmd: "usermail/convpinnedlist", req: "FriendListReq", rsp: "GetConvListRsp", w: n.High }, conv_clean_all_msg: { cmd: "usermail/clean_all_msg", req: "", rsp: "ConvDelRsp", w: n.Medium }, conv_c2c_mute: { cmd: "usermail/mute", req: "C2CMuteReq", rsp: "C2CMuteRsp", w: n.Medium }, conv_gp_mute: { cmd: "group/mute", req: "GroupMuteReq", rsp: "ConvDelRsp", w: n.Medium }, conv_mute_list: { cmd: "usermail/mute_list", req: "", rsp: "GetMuteInfoListRsp", w: n.Medium }, conv_mark: { cmd: "usermail/set_conv_mark", req: "SetConvMarkReq", rsp: "SetConvMarkRsp", w: n.Medium }, conv_mark_list: { cmd: "usermail/fetch_conv_mark_list", req: "FriendListReq", rsp: "FetchConvMarkListRsp", w: n.Medium }, c2c_msg: { cmd: "c2c/msg", req: "C2CMsgReq", rsp: "C2CMsgRsp", w: n.High }, gp_msg: { cmd: "group/msg", req: "C2CMsgReq", rsp: "GroupMsgRsp", w: n.High }, rm_msg: { cmd: "room/msg", req: "RoomMsgReq", rsp: "RoomMsgRsp", w: n.High }, c2c_cmd: { cmd: "c2c/command", req: "C2CCommandReq", rsp: "C2CCommandReqRsp", w: n.High }, gp_cmd: { cmd: "group/command", req: "C2CCommandReq", rsp: "C2CCommandReqRsp", w: n.High }, rm_cmd: { cmd: "msg/room_msg", req: "RoomCommandMsgReq", rsp: "RoomMsgRsp", w: n.High }, c2c_msglist: { cmd: "usermail/msglist", req: "FetchConvMsgReq", rsp: "FetchConvMsgRsp", w: n.High }, gp_msglist: { cmd: "group/msglist", req: "FetchGroupMsgList", rsp: "FetchGroupMsgListRsp", w: n.High }, rm_msglist: { cmd: "room/room_msglist", req: "RoomMsglistReq", rsp: "RoomMsglistRsp", w: n.High }, c2c_query_msg: i({ cmd: "usermail/query_msg" }, r), gp_query_msg: i({ cmd: "group/query_msg" }, r), rm_query_msg: i({ cmd: "room/query_msg" }, r), c2c_del_msg: { cmd: "usermail/del_msg_by_msgid", req: "ConvDelMsgByMsgIdReq", rsp: "CodeMsg", w: n.Medium }, gp_del_msg: { cmd: "group/del_msg", req: "C2CReadReceiptReq", rsp: "CodeMsg", w: n.Medium }, c2c_del_all_msg: { cmd: "usermail/del_all_msg", req: "UpdateReadSeqReq", rsp: "CodeMsg", w: n.Medium }, gp_del_all_msg: { cmd: "group/del_all_msg", req: "C2CReadReceiptReq", rsp: "CodeMsg", w: n.Medium }, c2c_fetch_all_msg: { cmd: "usermail/fetch_c2c_msg", req: "FriendListReq", rsp: "FetchC2CMsgRsp", w: n.High }, p_c2c_msg: { cmd: "push_c2c_msg", rsp: "PushGroupMsg" }, p_c2c_cmd: { cmd: "push_c2c_command", rsp: "PushC2CCommand" }, p_gp_msg: { cmd: "push_group_msg", rsp: "PushGroupMsg" }, p_gp_cmd: { cmd: "push_group_command_msg", rsp: "PushGroupCommand" }, p_rm_msg: { cmd: "push_roommsg", rsp: "PushRoomMsg" }, p_rm_cmd: { cmd: "push_room_msg", rsp: "PushRoomCommand" }, p_msg_all: { cmd: "push_msg_to_all_users", rsp: "PushGroupMsg" }, file_upload: { cmd: "file/upload", req: "FileUploadReq", rsp: "FileUploadRsp", w: n.High }, file_process: { cmd: "file/process", req: "FileUploadReq", rsp: "FileProcessRsp", w: n.High }, file_del: { cmd: "file/delete", req: "FileUploadReq", rsp: "CodeMsg", w: n.Low }, c2c_msg_state_list: i({ cmd: "usermail/statemsg_list" }, t), gp_msg_state_list: i({ cmd: "group/statemsg_list" }, t), extra_msglist: { cmd: "usermail/extra_msglist", req: "FriendListReq", rsp: "GetExtraMsgListRsp", w: n.Medium }, c2c_conv_read: { cmd: "usermail/conv_read", req: "GroupGetMembersReq", rsp: "ConvDelRsp", w: n.Medium }, c2c_msg_read: i({ cmd: "usermail/read_receipt" }, a), gp_msg_read: i({ cmd: "group/read_receipt" }, a), msg_read_detail: { cmd: "usermail/receipt_detail", req: "GroupGetMembersReq", rsp: "GetGroupReadReceiptDetailRsp", w: n.Medium }, c2c_msg_revoke: i({ cmd: "usermail/msg_revoke" }, u), gp_msg_revoke: i({ cmd: "group/msg_revoke" }, u), c2c_add_reaction: i({ cmd: "usermail/add_reaction" }, c), gp_add_reaction: i({ cmd: "group/add_reaction" }, c), c2c_del_reaction: i({ cmd: "usermail/del_reaction" }, l), gp_del_reaction: i({ cmd: "group/del_reaction" }, l), c2c_get_reaction: i({ cmd: "usermail/get_reaction_info" }, d), gp_get_reaction: i({ cmd: "group/get_reaction_info" }, d), c2c_reaction_list: i({ cmd: "usermail/reaction_list" }, p), gp_reaction_list: i({ cmd: "group/reaction_list" }, p), c2c_fetch_msg: i({ cmd: "usermail/batch_fetch_conv_msg" }, h), gp_fetch_msg: i({ cmd: "group/batch_fetch_conv_msg" }, h), c2c_msg_reply: i({ cmd: "usermail/fetch_reply_list" }, f), gp_msg_reply: i({ cmd: "group/fetch_reply_list" }, f), p_read_receipt: { cmd: "push_read_receipt", rsp: "PushReadReceipt" }, p_msg_revoke: { cmd: "push_msg_revoke", rsp: "PushMsgRevoke" }, p_reaction: { cmd: "push_reaction", rsp: "PushMsgReaction" }, rm_create: { cmd: "room/create", req: "RoomCreateReq", rsp: "RoomCreateRsp", w: n.High }, rm_enter: { cmd: "room/enter", req: "RoomEnterReq", rsp: "RoomEnterRsp", w: n.High }, rm_quit: { cmd: "room/quit", req: "QueryRoomUserInfosReq", rsp: "CodeMsg", w: n.High }, rm_quit_all: { cmd: "userstate/quit_all_room", req: "", rsp: "QuitAllRoomRsp", w: n.High }, rm_info: { cmd: "room/info", req: "QueryRoomUserInfosReq", rsp: "RoomInfoRsp", w: n.Highest }, rm_userlist: { cmd: "room/userlist", req: "RoomUserlistReq", rsp: "RoomUserlistRsp", w: n.Medium }, rm_userinfos: { cmd: "room/user_infos", req: "QueryRoomUserInfosReq", rsp: "UserInfoRsp", w: n.Medium }, rm_attr: { cmd: "room/get_attributes", req: "GetRoomAttributesReq", rsp: "ModifyRoomAttributesRsp", w: n.Low }, rm_attr_mdf: { cmd: "room/modify_attributes", req: "ModifyRoomAttributesReq", rsp: "ModifyRoomAttributesRsp", w: n.Medium }, rm_user_attr_mdf: { cmd: "room/modify_user_attributes", req: "ModifyRoomUserAttributesReq", rsp: "ModifyRoomUserAttributesRsp", w: n.Medium }, rm_user_attr: { cmd: "room/get_user_attributes", req: "GetRoomUserAttributesReq", rsp: "ModifyRoomUserAttributesRsp", w: n.Medium }, rm_user_attr_list: { cmd: "room/get_user_attribute_list", req: "GetRoomUserAttributeListReq", rsp: "GetRoomUserAttributeListRsp", w: n.Medium }, p_rm_enter: { cmd: "push_room_enter", rsp: "PushRoomEnter" }, p_rm_quit: { cmd: "push_room_quit", rsp: "PushRoomEnter" }, p_rm_kickout: { cmd: "push_room_kickout", rsp: "PushRoomKickout" }, p_rm_attrs: { cmd: "push_room_attrs_modify", rsp: "PushRoomAttributesModify" }, p_rm_user_attrs: { cmd: "push_room_user_attrs_modify", rsp: "PushRoomUserAttributesModify" }, gp_create: { cmd: "group/create", req: "GroupCreateReq", rsp: "GroupCreateRsp", w: n.Medium }, gp_enter: { cmd: "group/enter", req: "GroupApplyAccept", rsp: "GroupEnterRsp", w: n.Medium }, gp_invite: { cmd: "group/invite", req: "GroupInviteReq", rsp: "GroupInviteRsp", w: n.Medium }, gp_kickout: { cmd: "group/kickout", req: "GroupInviteReq", rsp: "GroupKickOutRsp", w: n.Medium }, gp_quit: { cmd: "group/quit", req: "GroupApplyAccept", rsp: "ConvDelRsp", w: n.Medium }, gp_destroy: { cmd: "group/destroy", req: "GroupApplyAccept", rsp: "ConvDelRsp", w: n.Medium }, gp_list: { cmd: "usermail/grouplist", req: "FriendListReq", rsp: "GroupListRsp", w: n.High }, gp_infos: { cmd: "group/infos", req: "FriendDeletedReq", rsp: "GroupInfosRsp", w: n.Low }, gp_owner_transfer: { cmd: "group/owner_transfer", req: "GroupCreateReq", rsp: "ConvDelRsp", w: n.Medium }, gp_data: { cmd: "group/data", req: "GroupApplyAccept", rsp: "GroupDataRsp", w: n.Medium }, gp_data_none: { cmd: "group/simple_info", req: "GroupApplyAccept", rsp: "GroupSimpleInfoRsp", w: n.Medium }, gp_attr: { cmd: "group/get_attributes", req: "GroupGetAttributesReq", rsp: "GroupModifyAttributeRsp", w: n.Low }, gp_mdf_name: { cmd: "group/modify_group_name", req: "GroupCreateReq", rsp: "ConvDelRsp", w: n.Medium }, gp_mdf_avatar: { cmd: "group/modify_group_avatar", req: "StUserInfo", rsp: "ConvDelRsp", w: n.Medium }, gp_mdf_notice: { cmd: "group/modify_group_notice", req: "GroupCreateReq", rsp: "ConvDelRsp", w: n.Medium }, gp_mdf_attr: { cmd: "group/modify_attribute", req: "GroupModifyAttributeReq", rsp: "GroupModifyAttributeRsp", w: n.Medium }, gp_set_forbid: { cmd: "group/set_forbid", req: "GroupSetForbidReq", rsp: "ConvDelRsp", w: n.Medium }, gp_member_list: { cmd: "group/members", req: "GroupGetMembersReq", rsp: "GroupGetMembersRsp", w: n.Medium }, gp_members_by_seq: { cmd: "group/members_by_seq", req: "C2CReadReceiptReq", rsp: "GetGroupMembersByMemberSeqRsp", w: n.Medium }, gp_member_seqs: { cmd: "group/members_by_all_seq", req: "GroupGetMembersReq", rsp: "GetGroupMembersByMemberAllSeqRsp", w: n.Medium }, gp_member_data: { cmd: "group/member_data", req: "GroupMemberDataReq", rsp: "GroupMemberDataRsp", w: n.Low }, gp_member_nickname: { cmd: "group/set_nickname", req: "GroupCreateReq", rsp: "ConvDelRsp", w: n.Medium }, gp_member_role: { cmd: "group/set_member_role", req: "GroupSetMemberRoleReq", rsp: "ConvDelRsp", w: n.Medium }, gp_member_forbid: { cmd: "group/set_member_forbid", req: "CallReq", rsp: "GroupInviteRsp", w: n.Medium }, gp_limit: { cmd: "group/modify_limit", req: "ModifyGroupLimitReq", rsp: "ConvDelRsp", w: n.Medium }, gp_apply: { cmd: "group/apply", req: "GroupApplyAccept", rsp: "GroupApplyRsp", w: n.Medium, ext: { isGroup: true } }, gp_invite_accept: { cmd: "group/invite_accept", req: "GroupApplyAccept", rsp: "GroupApplyRsp", w: n.Medium, ext: { isGroup: true } }, gp_invite_reject: { cmd: "group/invite_reject", req: "GroupApplyAccept", rsp: "GroupApplyRsp", w: n.Medium, ext: { isGroup: true } }, gp_apply_accept: { cmd: "group/apply_accept", req: "GroupApplyAccept", rsp: "GroupApplyRsp", w: n.Medium }, gp_apply_reject: { cmd: "group/apply_reject", req: "GroupApplyAccept", rsp: "GroupApplyRsp", w: n.Medium }, gp_apply_list: { cmd: "group/user_apply_list", req: "GroupGetMembersReq", rsp: "UserApplyListRsp", w: n.Medium }, gp_self_apply_list: { cmd: "usermail/group_apply_list", req: "FriendListReq", rsp: "UserApplyListRsp", w: n.Medium, ext: { isGroup: true } }, p_gp_create: { cmd: "push_create_group", rsp: "PushCreateGroup" }, p_gp_invite: { cmd: "push_group_invite", rsp: "PushGroupInvite" }, p_gp_destroy: { cmd: "push_group_destroy", rsp: "PushModifyGroupData" }, p_gp_owner_transfer: { cmd: "push_group_owner_transfer", rsp: "PushGroupOwnerTransfer" }, p_gp_mdf_attr: { cmd: "push_modify_group_attribute", rsp: "PushModifyGroupAttribute" }, p_gp_mdf_data: { cmd: "push_modify_group_data", rsp: "PushModifyGroupData" }, p_gp_member_change: { cmd: "push_group_member_change", rsp: "PushGroupMemberChange" }, p_gp_member_kickout: { cmd: "push_group_member_kickout", rsp: "PushGroupOwnerTransfer" }, p_gp_apply: { cmd: "push_apply_group_state_change", rsp: "PushApplyGroupStateChange" }, p_gp_enter_apply: { cmd: "push_apply_user_state_change", rsp: "PushApplyUserStateChange" }, cl_create: { cmd: "call/create", req: "CallReq", rsp: "CallRsp", w: n.High }, cl_cancel: { cmd: "call/cancel", req: "CallReq", rsp: "CallCancelRsp", w: n.High }, cl_accept: { cmd: "call/accept", req: "StUserInfo", rsp: "CallQuitRsp", w: n.High }, cl_refuse: { cmd: "call/refuse", req: "CallQuitReq", rsp: "CallQuitRsp", w: n.High }, cl_ack: { cmd: "call/ack", req: "CallQuitReq", rsp: "CodeMsg", w: n.High }, cl_info: { cmd: "call/call_info", req: "CallQuitReq", rsp: "CallInfoRsp", w: n.Medium }, cl_invite: { cmd: "call/invite", req: "CallInviteReq", rsp: "CallInviteRsp", w: n.High }, cl_quit: { cmd: "call/quit", req: "CallQuitReq", rsp: "CallQuitRsp", w: n.High }, cl_enter: { cmd: "call/enter", req: "StUserInfo", rsp: "CallEnterRsp", w: n.High }, cl_destroy: { cmd: "call/destroy", req: "CallQuitReq", rsp: "CallQuitRsp", w: n.High }, cl_list: { cmd: "usermail/call_list", req: "FriendListReq", rsp: "CallListRsp", w: n.Medium }, p_cl_invite: { cmd: "push_call_invite", rsp: "PushCallInvited" }, p_cl_cancel: { cmd: "push_call_cancel", rsp: "PushCallCancel" }, p_cl_accept: { cmd: "push_call_accept", rsp: "PushCallAccept" }, p_cl_refuse: { cmd: "push_call_refuse", rsp: "PushCallRefuse" }, p_cl_quit: { cmd: "push_call_quit", rsp: "PushCallQuit" }, p_cl_destroy: { cmd: "push_call_destroy", rsp: "PushCallDestroy" }, p_cl_inviting: { cmd: "push_on_call_invite", rsp: "PushOnCallInvited" }, p_cl_ack: { cmd: "push_call_ack", rsp: "PushCallAck" }, p_cl_enter: { cmd: "push_call_enter", rsp: "PushCallEnter" }, p_cl_ack_timeout: { cmd: "push_call_ack_timeout", rsp: "PushCallAckTimeout" }, fd_add: { cmd: "usermail/friend_add", req: "FriendAddReq", rsp: "FriendAddRsp", w: n.High }, fd_apply: { cmd: "usermail/friend_apply", req: "FriendAddReq", rsp: "FriendApplyRsp", w: n.High }, fd_del: { cmd: "usermail/friend_delete", req: "FriendDeletedReq", rsp: "FriendAddRsp", w: n.High }, fd_check: { cmd: "usermail/friend_check", req: "FriendDeletedReq", rsp: "FriendCheckedRsp", w: n.High }, fd_mdf_remark: { cmd: "usermail/modify_friend_remark", req: "StGroupAttribute", rsp: "ConvDelRsp", w: n.High }, fd_mdf_attr: { cmd: "usermail/modify_friend_attribute", req: "ModifyFriendAttributeReq", rsp: "ModifyFriendAttributeRsp", w: n.High }, fd_accept: { cmd: "usermail/friend_accept", req: "FriendAcceptReq", rsp: "FriendAcceptRsp", w: n.High }, fd_refuse: { cmd: "usermail/friend_refuse", req: "CallQuitReq", rsp: "ConvDelRsp", w: n.High }, fd_list: { cmd: "usermail/friend_list", req: "FriendListReq", rsp: "FriendListRsp", w: n.Medium }, fd_apply_list: { cmd: "usermail/friend_apply_list", req: "FriendListReq", rsp: "FriendApplyListRsp", w: n.Medium }, p_fd_add: { cmd: "push_friend_add", rsp: "PushFriendAdd" }, p_fd_del: { cmd: "push_friend_delete", rsp: "PushFriendRefuse" }, p_fd_del_all: { cmd: "push_friend_delete_all", rsp: "ConvDelRsp" }, p_fd_apply: { cmd: "push_friend_apply", rsp: "PushFriendApply" }, p_fd_accept: { cmd: "push_friend_accept", rsp: "PushFriendAccept" }, p_fd_refuse: { cmd: "push_friend_refuse", rsp: "PushFriendRefuse" }, bl_add: { cmd: "usermail/blacklist_add", req: "FriendDeletedReq", rsp: "BlacklistAddRsp", w: n.Medium }, bl_del: { cmd: "usermail/blacklist_delete", req: "FriendDeletedReq", rsp: "BlacklistDeleteRsp", w: n.Medium }, bl_fetch: { cmd: "usermail/blacklist", req: "FriendListReq", rsp: "BlacklistRsp", w: n.Medium } };
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return n;
        }), r.d(t, "b", function() {
          return s;
        });
        var s, n = { MAX_ID_SIZE: 1024, MAX_NAME_SIZE: 2048, MAX_MESSAGE_SIZE: 49152, MAX_QUERY_PAGE_COUNT: 100, MAX_SEARCH_PAGE_COUNT: 30, MESSAGE_SEQ_MULTIPLIER: 100, get_user_attribute_qps: 5, get_user_attribute_interval: 3e4, hbTimeoutMaxCount: 3, needReloginCodeList: [50107, 103015, 103021], convKeys: ["conversationID", "conversationName", "conversationAlias", "conversationAvatarUrl", "type", "unreadMessageCount", "orderKey", "notificationStatus", "isPinned", "isDisabled", "mutedExpiredTime", "marks", "draft", "mentionedInfoList", "lastMessage"] };
        (r = s = s || {}).ILogined = "logined", r.ILogout = "logout", r.IJoinedGroup = "joinedGroup", r.ILeftGroup = "leftGroup", r.ISyncGroups = "syncGroups", r.ISyncGroupInfo = "syncGroupInfo", r.IUnreadMsgCount = "unreadMsgCount", r.IConnectedRoom = "connectedRoom", r.IConnected = "connected", r.IDisConnected = "disConnected", r.INetworkChange = "networkChange", r.IIdleFetchConvMsg = "idleFetchConvMsg", r.ITriggerHB = "triggerHB", r.IQPSSend = "QPSSend", r.Error = "error", r.ConnState = "connectionStateChanged", r.TokenExpire = "tokenWillExpire", r.UserInfoUpdated = "userInfoUpdated", r.UseRuleUpdated = "userRuleUpdated", r.ConvChanged = "conversationChanged", r.ConvUnreadMsgCount = "conversationTotalUnreadMessageCountUpdated", r.ConvMsgReceipt = "conversationMessageReceiptChanged", r.ConvAllDeleted = "conversationsAllDeleted", r.MsgRevoke = "messageRevokeReceived", r.MsgReceipt = "messageReceiptChanged", r.MsgReactions = "messageReactionsChanged", r.MsgRepliedCount = "messageRepliedCountChanged", r.MsgRepliedInfo = "messageRepliedInfoChanged", r.MsgDeleted = "messageDeleted", r.MsgSentStatus = "messageSentStatusChanged", r.RecvPeerMsg = "receivePeerMessage", r.RecvGroupMsg = "receiveGroupMessage", r.RecvRoomMsg = "receiveRoomMessage", r.BroadcastMsg = "broadcastMessageReceived", r.RoomState = "roomStateChanged", r.RoomMemberJoined = "roomMemberJoined", r.RoomMemberLeft = "roomMemberLeft", r.RoomAttr = "roomAttributesUpdated", r.RoomAttrBatch = "roomAttributesBatchUpdated", r.RoomMemberAttr = "roomMemberAttributesUpdated", r.GroupState = "groupStateChanged", r.GroupName = "groupNameUpdated", r.GroupNotice = "groupNoticeUpdated", r.GroupAvatar = "groupAvatarUrlUpdated", r.GroupAttr = "groupAttributesUpdated", r.GroupMute = "groupMutedInfoUpdated", r.GroupMemberState = "groupMemberStateChanged", r.GroupMemberInfo = "groupMemberInfoUpdated", r.GroupVerifyInfo = "groupVerifyInfoUpdated", r.GroupAppList = "groupApplicationListChanged", r.GroupAppUpd = "groupApplicationUpdated", r.CallCreate = "callInvitationCreated", r.CallRecv = "callInvitationReceived", r.CallCancel = "callInvitationCancelled", r.CallTimeout = "callInvitationTimeout", r.CallEnd = "callInvitationEnded", r.CallUserState = "callUserStateChanged", r.BlacklistUpd = "blacklistChanged", r.FriendList = "friendListChanged", r.FriendInfo = "friendInfoUpdated", r.FriendAppList = "friendApplicationListChanged", r.FriendAppUpd = "friendApplicationUpdated";
      }, function(e, t, r) {
        "use strict";
        r.d(t, "b", function() {
          return n;
        }), r.d(t, "a", function() {
          return s;
        });
        var s, n = { Log: "Log", DataReport: "DataReport", User: "User", Call: "Call", Conv: "Conversation", Group: "Group", MessageExtra: "MessageExtra", Member: "GroupMember", Message: "Message", Friend: "Friend", FriendApp: "FriendApp", Blacklist: "Blacklist", GroupApp: "GroupApp" };
        (r = s = s || {}).ID = "id", r.CombineID = "combineID";
      }, function(e, t, r) {
        "use strict";
        var s, n;
        r.d(t, "b", function() {
          return s;
        }), r.d(t, "a", function() {
          return n;
        }), (r = s = s || {}).Manager = "MGR", r.Connection = "Conn", r.Database = "DB", r.Strategy = "ST", r.User = "User", r.Conversation = "Conv", r.Room = "Room", r.Group = "Group", r.Call = "Call", r.Friend = "Friend", (t = n = n || {}).SCMD = "SCMD", t.PCMD = "PCMD", t.Create = "API.create", t.Destroy = "API.destroy", t.SetLogConfig = "API.setLogConfig", t.SetGeoFence = "API.setGeofencingConfig", t.UploadLog = "API.uploadLog", t.Login = "API.login", t.Logout = "API.logout", t.RenewToken = "API.renewToken", t.QueryUsers = "API.queryUsersInfo", t.UpdateUserName = "API.updateUserName", t.UpdateUserAvatar = "API.updateUserAvatarUrl", t.UpdateUserExt = "API.updateUserExtendedData", t.UpdateUserRule = "API.updateUserOfflinePushRule", t.QuerySelf = "API.querySelfUserRule", t.QueryConv = "API.queryConversation", t.QueryConvs = "API.queryConversationList", t.QueryPinneds = "API.queryConversationPinnedList", t.QueryUnreadCount = "API.queryConversationTotalUnreadCount", t.DelConv = "API.deleteConversation", t.DelAllConv = "API.deleteAllConversations", t.ClearUnreadCount = "API.clearConversationUnreadMessageCount", t.ClearAllUnreadCount = "API.clearConversationTotalUnreadMessageCount", t.DelAllConvMsg = "API.deleteAllConversationMessages", t.SetNotifyStatus = "API.setConversationNotificationStatus", t.UpdatePinned = "API.updateConversationPinnedState", t.SetConvDraft = "API.setConversationDraft", t.SetConvMark = "API.setConversationMark", t.SendMsg = "API.sendMessage", t.SendMediaMsg = "API.sendMediaMessage", t.DelMsg = "API.deleteMessages", t.DelAllMsg = "API.deleteAllMessage", t.QueryHistoryMsg = "API.queryHistoryMessage", t.InsertMsg = "API.insertMessageToLocalDB", t.UpdateMsgLocalExt = "API.updateMessageLocalExtendedData", t.RevokeMsg = "API.revokeMessage", t.QueryCombineMsg = "API.queryCombineMessageDetail", t.SendConvReceipt = "API.sendConversationMessageReceiptRead", t.SendReceipts = "API.sendMessageReceiptsRead", t.QueryReceipts = "API.queryMessageReceiptsInfo", t.QueryReceiptRead = "API.queryGroupMessageReceiptReadMemberList", t.QueryReceiptUnread = "API.queryGroupMessageReceiptUnreadMemberList", t.AddReaction = "API.addMessageReaction", t.DelReaction = "API.deleteMessageReaction", t.QueryReaction = "API.queryMessageReactionUserList", t.ReplyMsg = "API.replyMessage", t.QueryReplyMsg = "API.queryMessageRepliedList", t.QueryMsgs = "API.queryMessages", t.CreateRoom = "API.createRoom", t.EnterRoom = "API.enterRoom", t.JoinRoom = "API.joinRoom", t.LeaveRoom = "API.leaveRoom", t.LeaveAllRoom = "API.leaveAllRoom", t.QueryRoomMemberList = "API.queryRoomMemberList", t.QueryRoomMembers = "API.queryRoomMembers", t.QueryRoomMemberCount = "API.queryRoomOnlineMemberCount", t.SetRoomAttr = "API.setRoomAttributes", t.DelRoomAttr = "API.deleteRoomAttributes", t.QueryRoomAllAttr = "API.queryRoomAllAttributes", t.EndRoomAttr = "API.endRoomAttributesBatchOperation", t.SetRoomMembersAttr = "API.setRoomMembersAttributes", t.QueryRoomMembersAttr = "API.queryRoomMembersAttributes", t.QueryRoomMemberAttrs = "API.queryRoomMemberAttributesList", t.CreateGroup = "API.createGroup", t.JoinGroup = "API.joinGroup", t.LeaveGroup = "API.leaveGroup", t.DismissGroup = "API.dismissGroup", t.QueryGroups = "API.queryGroupList", t.UpdateGroup = "API.updateGroupInfo", t.MuteGroup = "API.muteGroup", t.QueryGroup = "API.queryGroupInfo", t.SetGroupAttr = "API.setGroupAttributes", t.DelGroupAttrs = "API.deleteGroupAttributes", t.QueryGroupAttrs = "API.queryGroupAttributes", t.TransferGroupOwner = "API.transferGroupOwner", t.InviteIntoGroup = "API.inviteUsersIntoGroup", t.KickGroupMembers = "API.kickGroupMembers", t.QueryGroupMembers = "API.queryGroupMemberList", t.QueryGroupMemberCount = "API.queryGroupMemberCount", t.MuteGroupMembers = "API.muteGroupMembers", t.QueryGroupMemberMuteds = "API.queryGroupMemberMutedList", t.SetGroupMemberNickname = "API.setGroupMemberNickname", t.SetGroupMemberRole = "API.setGroupMemberRole", t.QueryGroupMember = "API.queryGroupMemberInfo", t.UpdateGroupVerifyMode = "API.updateGroupVerifyMode", t.SendGroupJoinApp = "API.sendGroupJoinApplication", t.AcceptGroupJoinApp = "API.acceptGroupJoinApplication", t.RejectGroupJoinApp = "API.rejectGroupJoinApplication", t.SendGroupInviteApps = "API.sendGroupInviteApplications", t.AcceptGroupInviteApp = "API.acceptGroupInviteApplication", t.RejectGroupInviteApp = "API.rejectGroupInviteApplication", t.QueryGroupApps = "API.queryGroupApplicationList", t.CallInvite = "API.callInvite", t.CallCancel = "API.callCancel", t.CallAccept = "API.callAccept", t.CallReject = "API.callReject", t.CallQuit = "API.callQuit", t.CallJoin = "API.callJoin", t.CallEnd = "API.callEnd", t.CallingInvite = "API.callingInvite", t.QueryCalls = "API.queryCallInvitationList", t.AddFriend = "API.addFriend", t.SendFriendApp = "API.sendFriendApplication", t.DelFriends = "API.deleteFriends", t.CheckFriends = "API.checkFriendsRelation", t.UpdateFriendAlias = "API.updateFriendAlias", t.UpdateFriendAttr = "API.updateFriendAttributes", t.AcceptFriendApp = "API.acceptFriendApplication", t.RejectFriendApp = "API.rejectFriendApplication", t.QueryFriends = "API.queryFriendsInfo", t.QueryFriendList = "API.queryFriendList", t.QueryFriendApps = "API.queryFriendApplicationList", t.AddBlacklist = "API.addUsersToBlacklist", t.RemoveBlacklist = "API.removeUsersFromBlacklist", t.CheckBlacklist = "API.checkUserIsInBlacklist", t.QueryBlacklist = "API.queryBlacklist", t.SearchConv = "API.searchLocalConversations", t.SearchGlobalMsg = "API.searchGlobalLocalMessages", t.SearchMsg = "API.searchLocalMessages", t.SearchGroup = "API.searchLocalGroups", t.SearchGroupMember = "API.searchLocalGroupMembers", t.SearchFriend = "API.searchLocalFriends";
      }, function(e, t) {
        throw new Error("Module parse failed: Unexpected token (6:29)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n| import { ZIMLogTag } from '../zentity';\n| \n> export class ZIMFileStoreBase<T extends Record<string, any>> {\n|     private lg = ZIMManager.getInstance().lg;\n|     private logTags: string;");
      }, function(e, t) {
        throw new Error("Module parse failed: Unexpected token (40:26)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n| import { ZIMFileStoreBase } from './ZIMFileStoreBase';\n| \n> export class ZIMStoreImpl implements ZIMStoreBase {\n|     private dir = '';\n|     private userID = '';");
      }, function(e, t, r) {
        "use strict";
        r.r(t), r.d(t, "ZIMStoreImpl", function() {
          return p;
        });
        t = r(78);
        var s = r.n(t), n = r(2), i = r(1), o = r(14), a = r(0), u = function() {
          return (u = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, c = "readonly", l = "readwrite", d = a.X.Database, p = (h.prototype.destroy = function() {
          this.storeMap.forEach(function(e2) {
            return e2.close();
          }), this.storeMap.clear(), this.unloadDB();
        }, h.prototype.clearDB = function(e2) {
          var t2 = this;
          this.unloadDB(), n.a.getInstance().dr.clearDB(), this.createStaticDB().then(function(r2) {
            r2.transaction([a.t.Log], l).objectStore(a.t.Log).clear(), r2.transaction([a.t.DataReport], l).objectStore(a.t.DataReport).clear(), r2.transaction([a.t.User], l).objectStore(a.t.User).put(e2), t2.innerDeleteAllByOwnerID(r2, a.t.Call, t2.userID), t2.innerDeleteAllByOwnerID(r2, a.t.Conv, t2.userID), t2.innerDeleteAllByOwnerID(r2, a.t.Group, t2.userID), t2.innerDeleteAllByOwnerID(r2, a.t.MessageExtra, t2.userID);
          }), this.createGlobalDB().then(function(e3) {
            e3.transaction([a.t.Member], l).objectStore(a.t.Member).clear(), e3.transaction([a.t.Message], l).objectStore(a.t.Message).clear(), e3.transaction([a.t.Friend], l).objectStore(a.t.Friend).clear(), e3.transaction([a.t.FriendApp], l).objectStore(a.t.FriendApp).clear(), e3.transaction([a.t.Blacklist], l).objectStore(a.t.Blacklist).clear(), e3.transaction([a.t.GroupApp], l).objectStore(a.t.GroupApp).clear();
          });
        }, h.prototype.loadDB = function(e2) {
          var t2 = this, r2 = Date.now();
          this.createGlobalDB().then(function(e3) {
            return t2.innerGetAll(e3, a.t.Member, "loadGDB");
          }).then(function(s2) {
            s2.forEach(function(e3) {
              t2.globalMemberMap.set(e3.id, e3), t2.syncMemberToUser(e3);
            }), t2.reportLog.memberTime = Date.now() - r2, t2.handleMemberCallbackList(), setTimeout(function() {
              t2.createGlobalDB().then(function(e3) {
                var r3 = Date.now();
                t2.innerGetAll(e3, a.t.Message, "loadGDB").then(function(e4) {
                  e4.forEach(function(e5) {
                    t2.addMessageSeq(e5), t2.globalMsgMap.set(e5.id, e5), e5.type == a.gb.Combine && t2.globalCbMsgMap.set(e5.combineID, e5);
                  }), t2.reportLog.messageTime = Date.now() - r3, t2.handleMsgCallbackList();
                });
              });
            }, 1e3), e2();
          });
        }, h.prototype.unloadDB = function() {
          this.isGlobalMsg = false, this.isGlobalMember = false, this.roomMsgMap.clear(), this.globalMsgMap.clear(), this.globalMemberMap.clear(), this.globalCbMsgMap.clear(), this.searchMsgByConvCallbackList.length = 0, this.searchMsgCallbackList.length = 0, this.searchGroupsCallbackList.length = 0, this.searchMembersCallbackList.length = 0, this.getMembersCallbackList.length = 0;
        }, h.prototype.searchConversations = function(e2) {
          var t2 = this;
          return new Promise(function(r2) {
            var s2 = new Date();
            t2.innerSearchMessagesByConv(true, e2, function(n2) {
              var i2 = n2.length, o2 = Math.min(10, e2.conversationMessageCount), u2 = (n2.forEach(function(e3) {
                e3.messageList.sort(function(e4, t3) {
                  return t3.timestamp - e4.timestamp;
                }), e3.totalMessageCount > o2 && (e3.messageList = e3.messageList.slice(0, o2));
              }), n2.sort(function(e3, t3) {
                return t3.messageList[0].timestamp - e3.messageList[0].timestamp;
              }), e2.nextFlag), c2 = u2 ? n2.findIndex(function(e3) {
                return e3.messageList[0].timestamp <= u2;
              }) + 1 : 0, l2 = c2 + Math.min(20, e2.totalConversationCount), p2 = n2[l2] ? n2[l2 - 1].messageList[0].timestamp : void 0, h2 = (n2 = n2.slice(c2, l2), t2.globalMsgMap.size);
              h2 = { time: s2, dbCount: h2, start: c2, end: l2, total: i2, count: n2.length, config: e2 };
              t2.lg.i(d, a.W.SearchConv, h2), r2({ conversationSearchInfoList: n2, nextFlag: p2 });
            });
          });
        }, h.prototype.searchGlobalMessages = function(e2) {
          var t2 = this;
          return new Promise(function(r2) {
            t2.innerSearchMessages(true, "", 0, e2, function(e3, s2) {
              t2.lg.i(d, a.W.SearchGlobalMsg, s2), r2(e3);
            });
          });
        }, h.prototype.searchMessages = function(e2, t2, r2) {
          var s2 = this;
          return new Promise(function(n2) {
            s2.innerSearchMessages(true, e2, t2, r2, function(r3, i2) {
              s2.lg.i(d, a.W.SearchMsg, i2), n2({ conversationID: e2, conversationType: t2, messageList: r3.messageList, nextMessage: r3.nextMessage });
            });
          });
        }, h.prototype.searchGroups = function(e2, t2, r2, s2, n2) {
          var i2, o2 = this;
          if (!t2 && !r2)
            return s2([], 0);
          n2 || this.isGlobalMember ? (i2 = [], this.globalMemberMap.forEach(function(s3) {
            var n3 = (null == (n3 = o2.econf.dbUserMap.get(s3.userID)) ? void 0 : n3.userName) || "";
            (t2 && !r2 && o2.isSomeKeys(n3, e2) || r2 && !t2 && o2.isSomeKeys(s3.memberNickname, e2) || o2.isSomeKeys(n3, e2) && o2.isSomeKeys(s3.memberNickname, e2)) && i2.push(s3);
          }), s2(i2, this.globalMemberMap.size)) : this.searchGroupsCallbackList.push({ keywords: e2, isName: t2, isNick: r2, resolve: s2 });
        }, h.prototype.searchGroupMembers = function(e2, t2) {
          var r2 = this;
          return new Promise(function(s2) {
            var n2 = r2.filterKeys(t2.keywords);
            if (!n2 || !n2.length)
              return s2({ groupID: e2, nextFlag: 0, userList: [] });
            var o2 = new Date(), u2 = t2.isAlsoMatchGroupMemberNickname;
            r2.innerSearchGroupMember(true, e2, n2, u2, function(n3) {
              n3.sort(function(e3, t3) {
                return e3.seq - t3.seq;
              });
              var u3 = n3.length, c2 = t2.nextFlag, l2 = (null == (l2 = n3[n3.length - 1]) ? void 0 : l2.seq) || 0, p2 = 0, h2 = (l2 = (0 < c2 && c2 < l2 ? p2 = n3.findIndex(function(e3) {
                return e3.seq == c2;
              }) : l2 <= c2 && l2 && (p2 = n3.length - 1), p2 + Math.min(a.m.MAX_SEARCH_PAGE_COUNT, t2.count)), (null == (h2 = n3[l2]) ? void 0 : h2.seq) || 0), f = (n3 = n3.slice(p2, l2).map(function(e3) {
                return Object(i.t)(e3, r2.econf);
              }), r2.globalMemberMap.size);
              f = { time: o2, dbCount: f, start: p2, end: l2, total: u3, count: n3.length, nextFlag: h2, groupID: e2, config: t2 };
              r2.lg.i(d, a.W.SearchGroupMember, f), s2({ groupID: e2, nextFlag: h2, userList: n3 });
            });
          });
        }, h.prototype.getFileInfo = function(e2) {
          return new Promise(function(t2, r2) {
            try {
              var n2 = e2.size, i2 = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice, a2 = 1048576, u2 = Math.ceil(n2 / a2), c2 = new s.a.ArrayBuffer(), l2 = new FileReader(), d2 = 0, p2 = (l2.onload = function() {
                var s2 = l2.result || l2.content;
                s2 ? (c2.append(s2), ++d2 < u2 ? p2() : t2({ md5: c2.end(), name: e2.name, size: n2 })) : r2(Object(o.a)(6000214));
              }, l2.onerror = function() {
                r2(Object(o.a)(6000211));
              }, function() {
                var t3 = d2 * a2, r3 = Math.min(t3 + a2, n2);
                t3 = i2.call(e2, t3, r3);
                l2.readAsArrayBuffer(t3);
              });
              p2();
            } catch (e3) {
              r2(e3);
            }
          });
        }, h.prototype.uploadFile = function(e2, t2, r2) {
          return new Promise(function(s2, n2) {
            var i2 = new XMLHttpRequest(), o2 = (i2.onreadystatechange = function() {
              if (4 == i2.readyState) {
                if (200 != i2.status)
                  return n2({ code: 6000212, message: i2.responseText });
                s2();
              }
            }, i2.upload.addEventListener("progress", r2), i2.onerror = function() {
              return n2({ code: 6000212, message: "upload file onerror." });
            }, i2.ontimeout = function() {
              return n2({ code: 6000104, message: "upload file ontimeout." });
            }, i2.open(e2.method, e2.url, true), i2.timeout = 6e5, e2.headers);
            o2 && (delete o2["User-Agent"], delete o2["user-agent"], Object.keys(o2).forEach(function(e3) {
              return i2.setRequestHeader(e3, o2[e3]);
            })), i2.send(t2);
          });
        }, h.prototype.downloadFile = function(e2, t2) {
          return new Promise(function(r2, s2) {
            var n2 = new XMLHttpRequest();
            n2.responseType = "arraybuffer", n2.open("GET", e2, true), n2.onerror = function() {
              return s2({ code: 6000212, message: t2 });
            }, n2.onload = function() {
              n2.response && 200 == n2.status ? r2(new Uint8Array(n2.response)) : s2({ code: 6000212, message: t2 });
            }, n2.send();
          });
        }, h.prototype.setUserID = function(e2) {
          this.userID = e2;
        }, h.prototype.setUser = function(e2) {
          var t2 = this;
          this.createStaticDB().then(function(r2) {
            return t2.batchAdd(r2, a.t.User, [e2]);
          });
        }, h.prototype.getUserList = function() {
          var e2 = this;
          return this.createStaticDB().then(function(t2) {
            return e2.innerGetAll(t2, a.t.User);
          });
        }, h.prototype.addUserList = function(e2) {
          var t2 = this;
          this.createStaticDB().then(function(r2) {
            return t2.batchAdd(r2, a.t.User, e2);
          });
        }, h.prototype.addConversationList = function(e2, t2) {
          var r2 = this, s2 = this.userID, n2 = { _action_: t2 };
          e2.forEach(function(t3) {
            t3.id || (t3.id = r2.appendID(t3.type + t3.conversationID)), t3.ownerID || (t3.ownerID = s2), t3.state = t3.state || a.q.Normal, e2.length < 11 && (n2[t3.conversationID] = [t3.state + "," + t3.unreadMessageCount + "," + t3.maxSeq + "," + t3.maxOrderKey, t3.msgSeq + "," + t3.readMsgSeq + "," + t3.sendMsgCount + "," + t3.deletedMsgCount].join(";"));
          }), this.createStaticDB().then(function(t3) {
            return r2.batchAdd(t3, a.t.Conv, e2, n2);
          });
        }, h.prototype.getConversationList = function() {
          var e2 = this;
          return this.createStaticDB().then(function(t2) {
            return e2.innerGetListByOwnerID(t2, a.t.Conv);
          });
        }, h.prototype.addGroupList = function(e2) {
          var t2 = this, r2 = this.userID, s2 = {};
          e2.forEach(function(n2) {
            n2.id || (n2.id = t2.appendID(n2.groupID)), n2.ownerID || (n2.ownerID = r2), e2.length < 11 && (s2[n2.groupID] = [n2.dataSeq, n2.attributeSeq, n2.memberSeq].join());
          }), this.createStaticDB().then(function(r3) {
            return t2.batchAdd(r3, a.t.Group, e2, s2);
          });
        }, h.prototype.deleteGroupList = function(e2) {
          var t2 = this, r2 = (this.isGlobalMember && this.globalMemberMap.forEach(function(r3) {
            -1 != e2.indexOf(r3.ownerID) && t2.globalMemberMap.delete(r3.id);
          }), e2.map(function(e3) {
            return t2.createGlobalDB().then(function(r3) {
              return t2.innerDeleteAllByOwnerID(r3, a.t.Member, e3);
            }), t2.appendID(e3);
          }));
          this.createStaticDB().then(function(e3) {
            return t2.batchDelete(e3, a.t.Group, r2);
          });
        }, h.prototype.getGroupList = function() {
          var e2 = this;
          return this.createStaticDB().then(function(t2) {
            return e2.innerGetListByOwnerID(t2, a.t.Group);
          });
        }, h.prototype.addGroupApplyList = function(e2) {
          var t2 = this, r2 = e2.map(function(e3) {
            return u(u({}, e3), { id: e3.type + "_" + e3.groupInfo.groupID + "_" + e3.applyUser.userID, applyUser: e3.applyUser.userID });
          });
          this.createGlobalDB().then(function(e3) {
            return t2.batchAdd(e3, a.t.GroupApp, r2);
          });
        }, h.prototype.getGroupApplyList = function() {
          var e2 = this;
          return this.createGlobalDB().then(function(t2) {
            return e2.innerGetAll(t2, a.t.GroupApp);
          });
        }, h.prototype.addGroupMemberList = function(e2, t2) {
          var r2 = this, s2 = { _groupID_: e2 };
          t2 = t2.filter(function(n2) {
            var i2 = r2.globalMemberMap.get(n2.id);
            return !(r2.isGlobalMember && i2 && n2.seq < i2.seq || (n2.id || (n2.id = e2 + "_" + n2.userID), n2.ownerID || (n2.ownerID = e2), t2.length < 11 && (s2[n2.userID] = n2.seq), r2.isGlobalMember && (r2.globalMemberMap.set(n2.id, n2), r2.syncMemberToUser(n2)), 0));
          }), this.createGlobalDB().then(function(e3) {
            return r2.batchAdd(e3, a.t.Member, t2, s2);
          });
        }, h.prototype.getGroupMemberList = function(e2) {
          var t2, r2 = this;
          return this.isGlobalMember ? (t2 = [], this.globalMemberMap.forEach(function(r3) {
            r3.ownerID == e2 && t2.push(r3);
          }), Promise.resolve(t2)) : new Promise(function(t3) {
            return r2.getMembersCallbackList.push({ groupID: e2, resolve: t3 });
          });
        }, h.prototype.addMessageList = function(e2, t2, r2) {
          var s2 = this;
          return t2 == a.r.Room ? (r2.forEach(function(e3) {
            s2.roomMsgMap.set(e3.localMessageID, e3);
          }), Promise.resolve()) : (r2.forEach(function(e3) {
            e3.id = e3.localMessageID, s2.globalMsgMap.set(e3.localMessageID, e3), e3.type == a.gb.Combine && s2.globalCbMsgMap.set(e3.combineID, e3);
          }), this.createGlobalDB().then(function(n2) {
            return new Promise(function(i2) {
              s2.batchAdd(n2, a.t.Message, r2, { convID: e2, type: t2 }, i2);
            });
          }));
        }, h.prototype.deleteAllMessage = function(e2, t2) {
          var r2 = this;
          this.globalMsgMap.forEach(function(s2) {
            s2.conversationID == e2 && s2.conversationType == t2 && r2.globalMsgMap.delete(s2.id);
          }), this.globalCbMsgMap.forEach(function(s2) {
            s2.conversationID == e2 && s2.conversationType == t2 && r2.globalCbMsgMap.delete(s2.combineID);
          }), this.createGlobalDB().then(function(s2) {
            return r2.innerDeleteAllByOwnerID(s2, a.t.Message, [t2, e2]);
          });
        }, h.prototype.deleteMessageList = function(e2, t2, r2) {
          var s2 = this;
          if (t2 == a.r.Room)
            return r2.forEach(function(e3) {
              s2.roomMsgMap.delete(e3.localMessageID);
            }), Promise.resolve(void 0);
          var n2 = r2.map(function(e3) {
            return s2.globalMsgMap.delete(e3.localMessageID), e3.type == a.gb.Combine && s2.globalCbMsgMap.delete(e3.combineID), e3.localMessageID;
          });
          return this.createGlobalDB().then(function(r3) {
            return new Promise(function(i2) {
              s2.batchDelete(r3, a.t.Message, n2, function() {
                var n3;
                if (s2.isGlobalMsg)
                  return n3 = { orderKey: 0 }, s2.globalMsgMap.forEach(function(r4) {
                    r4.conversationID == e2 && r4.conversationType == t2 && r4.orderKey > n3.orderKey && (n3 = r4);
                  }), i2(n3.messageID ? n3 : void 0);
                var o2 = s2.seq++, u2 = new Date(), l2 = r3.transaction([a.t.Message], c).objectStore(a.t.Message).index("ownerID").getAll([t2, e2]);
                l2.onsuccess = function() {
                  var r4 = ((r4 = l2.result || []).sort(function(e3, t3) {
                    return t3.orderKey - e3.orderKey;
                  }), r4[0]);
                  s2.addMessageSeq(r4), s2.lg.i(d, "getLastMsg", { seq: o2, time: u2, convID: e2, type: t2, msg: r4 }), i2(r4);
                }, l2.onerror = function(r4) {
                  r4 = r4.target && r4.target.error && r4.target.error.message, s2.lg.i(d, "getLastMsg", { seq: o2, time: u2, convID: e2, type: t2, onerror: r4 }), i2(void 0);
                };
              });
            });
          });
        }, h.prototype.getDeleteMessageCount = function(e2, t2, r2, s2) {
          var n2;
          this.isGlobalMsg ? (n2 = 0, this.globalMsgMap.forEach(function(s3) {
            s3.conversationID == e2 && s3.conversationType == t2 && s3.direction == a.Y.Receive && -1 != r2.indexOf(s3.messageSeq) && n2++;
          }), s2(n2)) : this.getDelMsgCountCallbackList.push({ convID: e2, type: t2, delSeqs: r2, resolve: s2 });
        }, h.prototype.deleteAllMessageFromRemote = function(e2, t2, r2, s2, n2) {
          var i2, o2, u2 = this;
          this.isGlobalMsg ? (i2 = 0, o2 = [], this.globalMsgMap.forEach(function(n3) {
            if (n3.conversationID == e2 && n3.conversationType == t2) {
              if (n3.sentStatus == a.eb.Success && !n3.isUserInserted && (n3.direction == a.Y.Receive && -1 != s2.indexOf(n3.messageSeq) && i2++, n3.messageSeq <= r2))
                return u2.globalMsgMap.delete(n3.id), void u2.globalCbMsgMap.delete(n3.combineID);
              o2.push(n3);
            }
          }), n2 && n2(i2), this.createGlobalDB().then(function(r3) {
            return u2.innerDeleteAllByOwnerID(r3, a.t.Message, [t2, e2], function() {
              return u2.batchAdd(r3, a.t.Message, o2);
            });
          })) : this.delAllMsgCallbackList.push({ convID: e2, type: t2, maxSeq: r2, delSeqs: s2, resolve: n2 });
        }, h.prototype.deleteMessageListFromRemote = function(e2, t2, r2, s2, n2) {
          var i2, o2, u2, c2, l2 = this;
          this.isGlobalMsg ? (o2 = { orderKey: i2 = 0 }, u2 = [], c2 = [], this.globalMsgMap.forEach(function(n3) {
            n3.conversationID == e2 && n3.conversationType == t2 && (n3.sentStatus != a.eb.Success || n3.isUserInserted || -1 == r2.indexOf(n3.messageSeq) ? n3.orderKey > o2.orderKey && (o2 = n3) : (l2.globalMsgMap.delete(n3.id), n3.type == a.gb.Combine && l2.globalCbMsgMap.delete(n3.combineID), u2.push(n3.id), c2.push(n3), n3.direction == a.Y.Receive && n3.messageSeq > s2 && i2++));
          }), n2(c2, i2, o2.messageID ? o2 : void 0), this.createGlobalDB().then(function(e3) {
            return l2.batchDelete(e3, a.t.Message, u2);
          })) : this.delMsgsCallbackList.push({ convID: e2, type: t2, seqs: r2, readSeq: s2, resolve: n2 });
        }, h.prototype.clearMessage = function(e2) {
          var t2, r2 = this;
          e2 && (t2 = [], this.isGlobalMsg && this.globalMsgMap.forEach(function(s2) {
            s2.timestamp > e2 ? t2.push(s2) : r2.globalMsgMap.delete(s2.id);
          }), this.createGlobalDB().then(function(e3) {
            var s2 = e3.transaction([a.t.Message], l).objectStore(a.t.Message);
            s2.clear(), t2.forEach(function(e4) {
              return s2.put(e4);
            }), r2.lg.i(d, "clearMsg" + t2.length);
          }));
        }, h.prototype.clearRoomMessage = function(e2) {
          var t2 = this;
          this.roomMsgMap.forEach(function(r2, s2) {
            r2.conversationID == e2 && t2.roomMsgMap.delete(s2);
          }), this.lg.i(d, "clearRoom" + e2);
        }, h.prototype.getMessageList = function(e2, t2) {
          var r2, s2 = this, n2 = t2.count, i2 = t2.reverse, o2 = e2.conversationID, u2 = e2.type;
          return u2 == a.r.Room ? (t2 = Array.from(this.roomMsgMap.values()).filter(function(e3) {
            return e3.conversationID == o2;
          }), Promise.resolve(t2)) : this.isGlobalMsg && this.globalMsgMap.size ? (r2 = [], this.globalMsgMap.forEach(function(e3) {
            e3.conversationID == o2 && e3.conversationType == u2 && r2.push(e3);
          }), e2 = { convID: o2, type: u2, reverse: i2, queryCount: n2, count: r2.length }, this.lg.i(d, "getMsgs", e2), Promise.resolve(r2)) : this.createGlobalDB().then(function(e3) {
            return new Promise(function(t3) {
              var r3 = { seq: s2.seq++, time: new Date(), convID: o2, type: u2, reverse: i2, queryCount: n2, count: 0 }, l2 = e3.transaction([a.t.Message], c).objectStore(a.t.Message).index("ownerID").getAll([u2, o2]);
              l2.onsuccess = function() {
                var e4 = l2.result || [];
                e4.forEach(function(e5) {
                  return s2.addMessageSeq(e5);
                }), r3.count = e4.length, s2.lg.i(d, "getMsgs", r3), t3(e4);
              }, l2.onerror = function(e4) {
                r3.onerror = e4.target && e4.target.error && e4.target.error.message, s2.lg.i(d, "getMsgs", r3), t3([]);
              };
            });
          });
        }, h.prototype.getMessageListBySeqs = function(e2, t2, r2) {
          var s2 = this, n2 = /* @__PURE__ */ new Map();
          return this.isGlobalMsg && this.globalMsgMap.size ? (this.globalMsgMap.forEach(function(s3) {
            s3.conversationID != e2 || s3.conversationType != t2 || s3.sentStatus != a.eb.Success || s3.isUserInserted || -1 == r2.indexOf(s3.messageSeq) || n2.set(s3.messageSeq, s3);
          }), Promise.resolve(n2)) : this.createGlobalDB().then(function(i2) {
            return new Promise(function(o2) {
              var u2 = s2.seq++, l2 = new Date(), p2 = i2.transaction([a.t.Message], c).objectStore(a.t.Message).index("ownerID").getAll([t2, e2]);
              p2.onsuccess = function() {
                (p2.result || []).forEach(function(e3) {
                  s2.addMessageSeq(e3);
                  var t3 = e3.messageSeq;
                  e3.sentStatus != a.eb.Success || e3.isUserInserted || -1 == r2.indexOf(t3) || n2.set(t3, e3);
                });
                var i3 = { seq: u2, time: l2, convID: e2, type: t2, count: n2.size, seqs: r2 };
                s2.lg.i(d, "getMsgSeqs", i3), o2(n2);
              }, p2.onerror = function(n3) {
                n3 = n3.target && n3.target.error && n3.target.error.message, s2.lg.i(d, "getMsgSeqs", { seq: u2, time: l2, convID: e2, type: t2, seqs: r2, onerror: n3 }), o2(/* @__PURE__ */ new Map());
              };
            });
          });
        }, h.prototype.getMessageByIndexID = function(e2, t2, r2, s2) {
          var n2, i2, o2 = this;
          return t2 == a.r.Room ? (i2 = s2 == a.s.CombineID ? "combineID" : "localMessageID", this.roomMsgMap.forEach(function(e3) {
            e3[i2] == r2 && (n2 = e3);
          }), Promise.resolve(n2)) : s2 == a.s.CombineID && this.globalCbMsgMap.has(r2) ? Promise.resolve(this.globalCbMsgMap.get(r2)) : s2 == a.s.ID && this.globalMsgMap.has(r2) ? Promise.resolve(this.globalMsgMap.get(r2)) : this.createGlobalDB().then(function(t3) {
            return new Promise(function(n3) {
              var i3 = o2.seq++, u2 = new Date(), l2 = t3.transaction([a.t.Message], c).objectStore(a.t.Message).index(s2).get(r2);
              l2.onsuccess = function() {
                o2.lg.i(d, "getMsgByID", { seq: i3, time: u2, indexType: s2, convID: e2 });
                var t4 = l2.result;
                if (t4 && t4.sentStatus == a.eb.Success && !t4.isUserInserted)
                  return o2.addMessageSeq(t4), t4.id && o2.globalMsgMap.set(t4.id, t4), t4.combineID && o2.globalCbMsgMap.set(t4.combineID, t4), n3(t4);
                n3();
              }, l2.onerror = function(t4) {
                t4 = t4.target && t4.target.error && t4.target.error.message, o2.lg.i(d, "getMsgByID", { seq: i3, time: u2, indexType: s2, convID: e2, onerror: t4 }), n3();
              };
            });
          });
        }, h.prototype.getReplyMessageListBySeqs = function(e2, t2, r2, s2) {
          var n2 = this, i2 = [];
          return this.globalMsgMap.forEach(function(n3) {
            n3.repliedInfo && !n3.repliedInfo.state && n3.conversationID == e2 && n3.conversationType == t2 && -1 != r2.indexOf(n3.repliedInfo.messageSeq) && (s2 ? (n3.repliedInfo.state = 1, i2.push(n3)) : n3.repliedInfo.messageInfo.type != a.gb.Revoke && (n3.repliedInfo.messageInfo = { type: a.gb.Revoke }, i2.push(n3)));
          }), i2.length && (i2.sort(function(e3, t3) {
            return e3.orderKey - t3.orderKey;
          }), this.createGlobalDB().then(function(e3) {
            return n2.batchAdd(e3, a.t.Message, i2);
          })), Promise.resolve(i2);
        }, h.prototype.getReplyMessageListByRootSeq = function(e2, t2, r2) {
          var s2, n2 = this;
          return this.isGlobalMsg && this.globalMsgMap.size ? (s2 = [], this.globalMsgMap.forEach(function(n3) {
            (n3.messageSeq == r2 || n3.repliedInfo && n3.repliedInfo.rootMessageSeq == r2 && n3.sentStatus == a.eb.Success) && n3.conversationID == e2 && n3.conversationType == t2 && s2.push(n3);
          }), Promise.resolve(s2)) : this.createGlobalDB().then(function(s3) {
            return new Promise(function(i2) {
              var o2 = n2.seq++, u2 = new Date(), l2 = s3.transaction([a.t.Message], c).objectStore(a.t.Message).index("ownerID").getAll([t2, e2]);
              l2.onsuccess = function() {
                var s4 = (l2.result || []).filter(function(e3) {
                  return n2.addMessageSeq(e3), e3.repliedInfo ? e3.repliedInfo.rootMessageSeq == r2 && e3.sentStatus == a.eb.Success : e3.messageSeq == r2;
                }), c2 = { seq: o2, time: u2, convID: e2, type: t2, rootSeq: r2, count: s4.length };
                n2.lg.i(d, "getReplyMsgs", c2), i2(s4);
              }, l2.onerror = function(s4) {
                s4 = s4.target && s4.target.error && s4.target.error.message, n2.lg.i(d, "getReplyMsgs", { seq: o2, time: u2, convID: e2, type: t2, rootSeq: r2, onerror: s4 }), i2([]);
              };
            });
          });
        }, h.prototype.checkMessageStatus = function(e2) {
          var t2;
          !e2.receiptStatus || e2.conversationType == a.r.Room || (t2 = this.globalMsgMap.get(e2.localMessageID)) && e2.receiptStatus < t2.receiptStatus && (e2.receiptStatus = t2.receiptStatus);
        }, h.prototype.isMessageExist = function(e2, t2, r2) {
          var s2 = false;
          return this.globalMsgMap.forEach(function(n2) {
            s2 || n2.messageSeq != r2 || e2 != n2.conversationID || n2.conversationType != t2 || (s2 = true);
          }), s2;
        }, h.prototype.filterSaveMessage = function(e2, t2, r2) {
          var s2 = this;
          return r2.filter(function(e3) {
            return !s2.globalMsgMap.has(e3.localMessageID);
          });
        }, h.prototype.addMessageExtraList = function(e2, t2) {
          var r2 = this;
          this.createStaticDB().then(function(s2) {
            return r2.batchAdd(s2, a.t.MessageExtra, e2, { _action_: t2 });
          });
        }, h.prototype.getMessageExtraList = function() {
          var e2 = this;
          return this.createStaticDB().then(function(t2) {
            return e2.innerGetListByOwnerID(t2, a.t.MessageExtra);
          });
        }, h.prototype.deleteMessageExtraList = function(e2) {
          var t2 = this;
          this.createStaticDB().then(function(r2) {
            return t2.batchDelete(r2, a.t.MessageExtra, e2);
          });
        }, h.prototype.addCallList = function(e2) {
          var t2 = this;
          e2.forEach(function(e3) {
            e3.id || (e3.id = t2.appendID(e3.callID)), e3.ownerID || (e3.ownerID = t2.userID);
          }), this.createStaticDB().then(function(r2) {
            return t2.batchAdd(r2, a.t.Call, e2);
          });
        }, h.prototype.getCallList = function() {
          var e2 = this;
          return this.createStaticDB().then(function(t2) {
            return e2.innerGetListByOwnerID(t2, a.t.Call);
          });
        }, h.prototype.addFriendList = function(e2) {
          var t2 = this;
          this.createGlobalDB().then(function(r2) {
            return t2.batchAdd(r2, a.t.Friend, e2);
          });
        }, h.prototype.deleteFriendList = function(e2, t2) {
          var r2 = this;
          void 0 === t2 && (t2 = false), this.createGlobalDB().then(function(s2) {
            return t2 ? s2.transaction([a.t.Friend], l).objectStore(a.t.Friend).clear() : r2.batchDelete(s2, a.t.Friend, e2);
          });
        }, h.prototype.getFriendList = function() {
          var e2 = this;
          return this.createGlobalDB().then(function(t2) {
            return e2.innerGetAll(t2, a.t.Friend);
          });
        }, h.prototype.addFriendApplicationList = function(e2) {
          var t2 = this;
          this.createGlobalDB().then(function(r2) {
            return t2.batchAdd(r2, a.t.FriendApp, e2);
          });
        }, h.prototype.getFriendApplicationList = function() {
          var e2 = this;
          return this.createGlobalDB().then(function(t2) {
            return e2.innerGetAll(t2, a.t.FriendApp);
          });
        }, h.prototype.addBlacklist = function(e2) {
          var t2 = this;
          this.createGlobalDB().then(function(r2) {
            return t2.batchAdd(r2, a.t.Blacklist, e2);
          });
        }, h.prototype.deleteBlacklist = function(e2) {
          var t2 = this;
          this.createGlobalDB().then(function(r2) {
            return t2.batchDelete(r2, a.t.Blacklist, e2);
          });
        }, h.prototype.getBlacklist = function() {
          var e2 = this;
          return this.createGlobalDB().then(function(t2) {
            return e2.innerGetAll(t2, a.t.Blacklist);
          });
        }, h.prototype.createStaticDB = function() {
          var e2 = this, t2 = this.dbNameMap.static, r2 = this.storeMap.get(t2);
          return r2 ? Promise.resolve(r2) : new Promise(function(r3) {
            return e2.openStaticDB(t2, r3, new Date());
          });
        }, h.prototype.createGlobalDB = function() {
          var e2 = this, t2 = this.dbNameMap.global + this.userID, r2 = this.storeMap.get(t2);
          return r2 ? Promise.resolve(r2) : new Promise(function(r3) {
            return e2.openGlobalDB(t2, r3, new Date());
          });
        }, h.prototype.openStaticDB = function(e2, t2, r2) {
          var s2 = this, n2 = indexedDB.open(e2, 4);
          n2.onsuccess = function() {
            n2.onsuccess = null, s2.initStaticStore(n2.result, n2.transaction, e2, t2, { time: r2, event: "onsucc" });
          }, n2.onupgradeneeded = function(i2) {
            var o2;
            n2.onupgradeneeded = null, i2.newVersion && i2.newVersion > i2.oldVersion && (o2 = { time: r2, event: "onupgrade", ver: [i2.oldVersion, i2.newVersion] }, i2 = i2.target.result, s2.initStaticStore(i2, n2.transaction, e2, t2, o2));
          }, n2.onerror = function(i2) {
            i2 = "Static open onerror: " + (i2.target && i2.target.error && i2.target.error.message), s2.lg.i(d, s2.action.create, { time: r2, onerror: i2 }), s2.storeMap.delete(e2), indexedDB.deleteDatabase(e2), n2.onsuccess = null, n2.onupgradeneeded = null, n2.onerror = null, s2.openStaticDB(e2, t2, r2);
          }, n2.onblocked = function() {
            s2.lg.i(d, s2.action.create, { time: r2, onerror: "Static open onblocked" });
          };
        }, h.prototype.openGlobalDB = function(e2, t2, r2) {
          var s2 = this, n2 = indexedDB.open(e2, 3);
          n2.onsuccess = function() {
            n2.onsuccess = null, s2.initGlobalStore(n2.result, n2.transaction, e2, t2, { time: r2, event: "onsucc" });
          }, n2.onupgradeneeded = function(i2) {
            var o2;
            n2.onupgradeneeded = null, i2.newVersion && i2.newVersion > i2.oldVersion && (o2 = { time: r2, event: "onupgrade", ver: [i2.oldVersion, i2.newVersion] }, i2 = i2.target.result, s2.initGlobalStore(i2, n2.transaction, e2, t2, o2));
          }, n2.onerror = function(i2) {
            i2 = "Global open onerror: " + (i2.target && i2.target.error && i2.target.error.message), s2.lg.i(d, s2.action.create, { time: r2, onerror: i2 }), s2.storeMap.delete(e2), indexedDB.deleteDatabase(e2), n2.onsuccess = null, n2.onupgradeneeded = null, n2.onerror = null, s2.openGlobalDB(e2, t2, r2);
          }, n2.onblocked = function() {
            s2.lg.i(d, s2.action.create, { time: r2, onerror: "Global open onblocked" });
          };
        }, h.prototype.initStaticStore = function(e2, t2, r2, s2, i2) {
          var o2 = this, u2 = !(e2.onclose = function() {
            return o2.storeMap.delete(r2);
          });
          if (u2 = (e2.objectStoreNames.contains(a.t.Log) || (u2 = true, e2.createObjectStore(a.t.Log)), e2.objectStoreNames.contains(a.t.DataReport) || (u2 = true, e2.createObjectStore(a.t.DataReport)), e2.objectStoreNames.contains(a.t.User) || (u2 = true, e2.createObjectStore(a.t.User, { keyPath: "userID" })), e2.objectStoreNames.contains(a.t.Conv) || (u2 = true, e2.createObjectStore(a.t.Conv, { keyPath: "id" }).createIndex("ownerID", "ownerID")), e2.objectStoreNames.contains(a.t.Group) || (u2 = true, e2.createObjectStore(a.t.Group, { keyPath: "id" }).createIndex("ownerID", "ownerID")), e2.objectStoreNames.contains(a.t.MessageExtra) || (u2 = true, e2.createObjectStore(a.t.MessageExtra, { keyPath: "id" }).createIndex("ownerID", "ownerID")), e2.objectStoreNames.contains(a.t.Call) || (u2 = true, e2.createObjectStore(a.t.Call, { keyPath: "id" }).createIndex("ownerID", "ownerID")), i2.isCreate = u2, this.storeMap.get(r2)))
            return i2.db = "Static is opened", this.lg.i(d, this.action.create, i2), s2(u2);
          t2 ? t2.oncomplete = function() {
            o2.storeMap.set(r2, e2), o2.lg.setDB(e2), n.a.getInstance().dr.setDB(e2), s2(e2), i2.db = "Static oncomplete", o2.lg.i(d, o2.action.create, i2);
          } : (this.storeMap.set(r2, e2), this.lg.setDB(e2), n.a.getInstance().dr.setDB(e2), s2(e2), i2.db = "Static", this.lg.i(d, this.action.create, i2));
        }, h.prototype.initGlobalStore = function(e2, t2, r2, s2, n2) {
          var i2, o2 = this, u2 = !(e2.onclose = function() {
            return o2.storeMap.delete(r2);
          });
          if (e2.objectStoreNames.contains(a.t.Message) || (u2 = true, (i2 = e2.createObjectStore(a.t.Message, { keyPath: "id" })).createIndex("ownerID", ["conversationType", "conversationID"]), i2.createIndex("combineID", "combineID")), e2.objectStoreNames.contains(a.t.Member) || (u2 = true, (i2 = e2.createObjectStore(a.t.Member, { keyPath: "id" })).createIndex("ownerID", "ownerID")), e2.objectStoreNames.contains(a.t.Friend) || (u2 = true, e2.createObjectStore(a.t.Friend, { keyPath: "userID" })), e2.objectStoreNames.contains(a.t.FriendApp) || (u2 = true, e2.createObjectStore(a.t.FriendApp, { keyPath: "applyUser.userID" })), e2.objectStoreNames.contains(a.t.Blacklist) || (u2 = true, e2.createObjectStore(a.t.Blacklist, { keyPath: "userID" })), e2.objectStoreNames.contains(a.t.GroupApp) || (u2 = true, e2.createObjectStore(a.t.GroupApp, { keyPath: "id" })), t2) {
            try {
              (i2 = t2.objectStore(a.t.Message)).createIndex("combineID", "combineID");
            } catch (e3) {
            }
            t2.oncomplete = function() {
              o2.storeMap.set(r2, e2), s2(e2), u2 && (n2.db = "Global oncomplete", o2.lg.i(d, o2.action.create, n2));
            };
          } else
            this.storeMap.set(r2, e2), s2(e2), u2 && (n2.db = "Global", this.lg.i(d, this.action.create, n2));
        }, h.prototype.batchAdd = function(e2, t2, r2, s2, n2) {
          var i2 = this;
          if (!r2.length)
            return n2 && n2();
          var o2 = this.seq++, a2 = new Date(), u2 = e2.transaction([t2], l).objectStore(t2);
          t2 = "ba" + t2, u2.transaction.oncomplete = function() {
            i2.lg.i(d, t2, { seq: o2, time: a2, total: r2.length, flag: s2 }), n2 && n2();
          }, u2.transaction.onerror = function(e3) {
            e3 = e3.target && e3.target.error && e3.target.error.message, i2.lg.i(d, t2, { seq: o2, time: a2, onerror: "onerror: " + e3, flag: s2 }), n2 && n2();
          }, u2.transaction.onabort = function() {
            i2.lg.i(d, t2, { seq: o2, time: a2, onerror: "onabort", flag: s2 }), n2 && n2();
          };
          try {
            r2.forEach(function(e3) {
              return u2.put(e3);
            });
          } catch (e3) {
          }
        }, h.prototype.batchDelete = function(e2, t2, r2, s2) {
          var n2 = this;
          if (!e2.objectStoreNames.contains(t2) || !r2.length)
            return s2 && s2();
          var i2 = this.seq++, o2 = new Date(), a2 = e2.transaction([t2], l).objectStore(t2);
          t2 = "bd" + t2, a2.transaction.oncomplete = function() {
            n2.lg.i(d, t2, { seq: i2, time: o2, total: r2.length }), s2 && s2();
          }, a2.transaction.onerror = function(e3) {
            e3 = e3.target && e3.target.error && e3.target.error.message, e3 = { seq: i2, time: o2, total: r2.length, onerror: "onerror: " + e3 }, n2.lg.i(d, t2, e3);
          }, a2.transaction.onabort = function() {
            var e3 = { seq: i2, time: o2, total: r2.length, onerror: "onabort" };
            n2.lg.i(d, t2, e3);
          }, r2.forEach(function(e3) {
            return a2.delete(e3);
          });
        }, h.prototype.innerDeleteAllByOwnerID = function(e2, t2, r2, s2) {
          var n2, i2, o2, a2, u2 = this;
          e2.objectStoreNames.contains(t2) && (n2 = this.seq++, i2 = new Date(), o2 = e2.transaction([t2], l).objectStore(t2), a2 = o2.index("ownerID").getAllKeys(r2), t2 = "da" + t2, a2.onsuccess = function() {
            var e3 = a2.result || [];
            o2.transaction.oncomplete = function() {
              u2.lg.i(d, t2, { seq: n2, time: i2, total: e3.length, ownerID: r2 }), s2 && s2();
            }, e3.forEach(function(e4) {
              return o2.delete(e4);
            });
          }, a2.onerror = function(e3) {
            e3 = e3.target && e3.target.error && e3.target.error.message, u2.lg.i(d, t2, { seq: n2, time: i2, ownerID: r2, onerror: e3 });
          });
        }, h.prototype.innerGetListByOwnerID = function(e2, t2) {
          var r2 = this;
          return e2.objectStoreNames.contains(t2) ? new Promise(function(s2) {
            var n2 = r2.seq++, i2 = new Date(), o2 = e2.transaction([t2], c).objectStore(t2).index("ownerID").getAll(r2.userID);
            t2 = "ga" + t2 + "s", o2.onsuccess = function() {
              var e3 = o2.result || [];
              r2.lg.i(d, t2, { seq: n2, time: i2, total: e3.length }), s2(e3);
            }, o2.onerror = function(e3) {
              e3 = e3.target && e3.target.error && e3.target.error.message, r2.lg.i(d, t2, { seq: n2, time: i2, onerror: e3 }), s2([]);
            };
          }) : Promise.resolve([]);
        }, h.prototype.innerGetAll = function(e2, t2, r2) {
          var s2 = this;
          return e2.objectStoreNames.contains(t2) ? new Promise(function(n2) {
            var i2 = s2.seq++, o2 = new Date(), a2 = e2.transaction([t2], c).objectStore(t2).getAll();
            t2 = "ga" + t2, a2.onsuccess = function() {
              var e3 = a2.result || [];
              s2.lg.i(d, t2, { seq: i2, time: o2, total: e3.length, pid: r2 }), n2(e3);
            }, a2.onerror = function(e3) {
              e3 = e3.target && e3.target.error && e3.target.error.message, s2.lg.i(d, t2, { seq: i2, time: o2, onerror: e3, pid: r2 }), n2([]);
            };
          }) : Promise.resolve([]);
        }, h.prototype.appendID = function(e2) {
          return this.userID + e2;
        }, h.prototype.addMessageSeq = function(e2) {
          e2 && "number" != typeof e2.messageSeq && (e2.messageSeq = e2.isUserInserted || e2.sentStatus != a.eb.Success ? 0 : e2.conversationSeq);
        }, h.prototype.filterKeys = function(e2) {
          return e2 && e2.length && (e2 = e2.filter(function(e3) {
            return "string" == typeof e3 && e3 && e3.trim().length;
          }).map(function(e3) {
            return e3.toLocaleLowerCase();
          })).length ? e2 : null;
        }, h.prototype.isMsgKeywords = function(e2, t2) {
          if (t2) {
            if (e2.type == a.gb.Combine)
              return t2.every(function(t3) {
                return Object(i.d)(e2.title, t3) || Object(i.d)(e2.summary, t3);
              });
            var r2 = e2.type == a.gb.Custom ? e2.searchedContent : e2.message || e2.fileName || e2.fileDownloadUrl;
            return !!r2 && t2.every(function(e3) {
              return Object(i.d)(r2, e3);
            });
          }
          return true;
        }, h.prototype.isMsgType = function(e2, t2, r2, s2) {
          var n2 = !s2 || !s2.length, i2 = !r2 || !r2.length;
          return n2 && i2 || (n2 && !i2 ? -1 != r2.indexOf(e2) : e2 == a.gb.Custom && -1 != s2.indexOf(t2));
        }, h.prototype.isMsgTimeRange = function(e2, t2, r2) {
          return !t2 && !r2 || (!r2 && t2 ? t2 < e2 : (!t2 && r2 || t2 < e2) && e2 < r2);
        }, h.prototype.isSomeKeys = function(e2, t2) {
          return !t2 || !!e2 && t2.some(function(t3) {
            return Object(i.d)(e2, t3);
          });
        }, h.prototype.isEveryKeys = function(e2, t2) {
          return !t2 || !!e2 && t2.every(function(t3) {
            return Object(i.d)(e2, t3);
          });
        }, h.prototype.handleMsgCallbackList = function() {
          var e2 = this;
          this.isGlobalMsg = true, this.isGlobalMember && (this.reportLog.messageCount = this.globalMsgMap.size, this.dr.reportSDKEvent("/sdk/log", { error_message: JSON.stringify(this.reportLog) })), this.searchMsgCallbackList.forEach(function(t2) {
            e2.innerSearchMessages(false, t2.convID, t2.type, t2.config, t2.resolve);
          }), this.searchMsgByConvCallbackList.forEach(function(t2) {
            e2.innerSearchMessagesByConv(false, t2.config, t2.resolve);
          }), this.searchMsgCallbackList.length = 0, this.searchMsgByConvCallbackList.length = 0, this.getDelMsgCountCallbackList.forEach(function(t2) {
            e2.getDeleteMessageCount(t2.convID, t2.type, t2.delSeqs, t2.resolve);
          }), this.delMsgsCallbackList.forEach(function(t2) {
            e2.deleteMessageListFromRemote(t2.convID, t2.type, t2.seqs, t2.readSeq, t2.resolve);
          }), this.delAllMsgCallbackList.forEach(function(t2) {
            e2.deleteAllMessageFromRemote(t2.convID, t2.type, t2.maxSeq, t2.delSeqs, t2.resolve);
          }), this.getDelMsgCountCallbackList.length = 0, this.delMsgsCallbackList.length = 0, this.delAllMsgCallbackList.length = 0;
        }, h.prototype.handleMemberCallbackList = function() {
          var e2 = this;
          this.isGlobalMember = true, this.isGlobalMsg && (this.reportLog.memberCount = this.globalMemberMap.size, this.dr.reportSDKEvent("/sdk/log", { error_message: JSON.stringify(this.reportLog) })), this.searchGroupsCallbackList.forEach(function(t2) {
            e2.searchGroups(t2.keywords, t2.isName, t2.isNick, t2.resolve, true);
          }), this.searchMembersCallbackList.forEach(function(t2) {
            e2.innerSearchGroupMember(false, t2.groupID, t2.keywords, t2.isNick, t2.resolve);
          }), this.searchGroupsCallbackList.length = 0, this.searchMembersCallbackList.length = 0, this.getMembersCallbackList.forEach(function(t2) {
            var r2 = t2.groupID, s2 = (t2 = t2.resolve, []);
            e2.globalMemberMap.forEach(function(e3) {
              e3.ownerID == r2 && s2.push(e3);
            }), t2(s2);
          }), this.getMembersCallbackList.length = 0;
        }, h.prototype.innerSearchMessagesByConv = function(e2, t2, r2) {
          var s2, n2 = this;
          if (t2.keywords = this.filterKeys(t2.keywords), t2.senderUserIDs = this.filterKeys(t2.senderUserIDs), !(t2.keywords && t2.keywords.length || t2.messageTypes && t2.messageTypes.length || t2.subMessageTypes && t2.subMessageTypes.length || t2.senderUserIDs && t2.senderUserIDs.length || t2.startTime && !(t2.startTime < 0) || t2.endTime && !(t2.endTime < 0)))
            return r2([]);
          e2 && !this.isGlobalMsg ? this.searchMsgByConvCallbackList.push({ config: t2, resolve: r2 }) : (s2 = /* @__PURE__ */ new Map(), this.globalMsgMap.forEach(function(e3) {
            var r3, i2;
            e3.type != a.gb.Revoke && n2.isMsgKeywords(e3, t2.keywords) && n2.isMsgTimeRange(e3.timestamp, t2.startTime, t2.endTime) && n2.isMsgType(e3.type, e3.subType, t2.messageTypes, t2.subMessageTypes) && n2.isSomeKeys(e3.senderUserID, t2.senderUserIDs) && (r3 = e3.conversationType + e3.conversationID, (i2 = s2.get(r3) || { conversationID: e3.conversationID, conversationType: e3.conversationType, totalMessageCount: 0, messageList: [] }).totalMessageCount += 1, i2.messageList.push(e3), s2.set(r3, i2));
          }), r2(Array.from(s2.values())));
        }, h.prototype.innerSearchMessages = function(e2, t2, r2, s2, n2) {
          var i2, o2, u2, c2, l2, d2, p2 = this;
          if (s2.keywords = this.filterKeys(s2.keywords), s2.senderUserIDs = this.filterKeys(s2.senderUserIDs), !(s2.keywords && s2.keywords.length || s2.messageTypes && s2.messageTypes.length || s2.subMessageTypes && s2.subMessageTypes.length || s2.senderUserIDs && s2.senderUserIDs.length || s2.startTime && !(s2.startTime < 0) || s2.endTime && !(s2.endTime < 0)))
            return n2({ messageList: [] }, { convID: t2, config: s2 });
          e2 && !this.isGlobalMsg ? this.searchMsgCallbackList.push({ convID: t2, type: r2, config: s2, resolve: n2 }) : (l2 = [], this.globalMsgMap.forEach(function(e3) {
            (!t2 || e3.conversationID == t2 && e3.conversationType == r2) && e3.type != a.gb.Revoke && p2.isMsgKeywords(e3, s2.keywords) && p2.isMsgTimeRange(e3.timestamp, s2.startTime, s2.endTime) && p2.isMsgType(e3.type, e3.subType, s2.messageTypes, s2.subMessageTypes) && p2.isSomeKeys(e3.senderUserID, s2.senderUserIDs) && l2.push(e3), e3.type == a.gb.Combine && e3.messageList && (!t2 || e3.conversationID == t2 && e3.conversationType == r2) && e3.messageList.forEach(function(t3) {
              t3.type != a.gb.Revoke && p2.isMsgKeywords(t3, s2.keywords) && p2.isMsgTimeRange(t3.timestamp, s2.startTime, s2.endTime) && p2.isMsgType(t3.type, t3.subType, s2.messageTypes, s2.subMessageTypes) && p2.isSomeKeys(t3.senderUserID, s2.senderUserIDs) && -1 == l2.indexOf(e3) && l2.push(e3);
            });
          }), e2 = l2.length, s2.order ? l2.sort(function(e3, t3) {
            return e3.timestamp - t3.timestamp;
          }) : l2.sort(function(e3, t3) {
            return t3.timestamp - e3.timestamp;
          }), u2 = (o2 = (i2 = s2.nextMessage ? s2.nextMessage.id : "") ? l2.findIndex(function(e3) {
            return i2 === e3.id;
          }) + 1 : 0) + Math.min(a.m.MAX_SEARCH_PAGE_COUNT, s2.count), c2 = l2[u2] ? l2[u2 - 1] : void 0, l2 = l2.slice(o2, u2), s2.nextMessage = i2, d2 = this.globalMsgMap.size, d2 = { time: new Date(), dbCount: d2, start: o2, end: u2, total: e2, count: l2.length, convID: t2, config: s2 }, n2({ messageList: l2, nextMessage: c2 }, d2));
        }, h.prototype.innerSearchGroupMember = function(e2, t2, r2, s2, n2) {
          var i2, o2 = this;
          e2 && !this.isGlobalMember ? this.searchMembersCallbackList.push({ groupID: t2, keywords: r2, isNick: s2, resolve: n2 }) : (i2 = [], this.globalMemberMap.forEach(function(e3) {
            var n3 = (null == (n3 = o2.econf.dbUserMap.get(e3.userID)) ? void 0 : n3.userName) || "";
            e3.ownerID == t2 && (o2.isEveryKeys(n3, r2) || s2 && o2.isEveryKeys(e3.memberNickname, r2)) && i2.push(e3);
          }), n2(i2));
        }, h.prototype.syncMemberToUser = function(e2) {
          var t2 = e2.userName, r2 = e2.memberAvatarUrl, s2 = this.econf.dbUserMap.get(e2.userID);
          s2 ? (t2 && !s2.userName && (s2.userName = t2), r2 && !s2.userAvatarUrl && (s2.userAvatarUrl = r2)) : (s2 = { userID: e2.userID, userName: t2, userAvatarUrl: r2 }, this.econf.dbUserMap.set(e2.userID, s2));
        }, h);
        function h(e2) {
          this.econf = e2, this.lg = n.a.getInstance().lg, this.dr = n.a.getInstance().dr, this.dbNameMap = { static: "", global: "" }, this.storeMap = /* @__PURE__ */ new Map(), this.seq = 1, this.userID = "", this.action = { delete: "delete", create: "create" }, this.isGlobalMsg = false, this.isGlobalMember = false, this.reportLog = { messageTime: 0, memberTime: 0, messageCount: 0, memberCount: 0 }, this.roomMsgMap = /* @__PURE__ */ new Map(), this.globalMsgMap = /* @__PURE__ */ new Map(), this.globalMemberMap = /* @__PURE__ */ new Map(), this.globalCbMsgMap = /* @__PURE__ */ new Map(), this.searchMsgByConvCallbackList = [], this.searchMsgCallbackList = [], this.searchGroupsCallbackList = [], this.searchMembersCallbackList = [], this.getMembersCallbackList = [], this.getDelMsgCountCallbackList = [], this.delMsgsCallbackList = [], this.delAllMsgCallbackList = [], this.dbNameMap.static = "ZIMSDKSTATIC" + e2.appID, this.dbNameMap.global = "ZIMSDKGLOBAL" + e2.appID, this.createStaticDB();
        }
      }, function(e, t, r) {
        "use strict";
        e.exports = d;
        var s, n = r(9), i = n.LongBits, o = n.base64, a = n.utf8;
        function u(e2, t2, r2) {
          this.fn = e2, this.len = t2, this.next = void 0, this.val = r2;
        }
        function c() {
        }
        function l(e2) {
          this.head = e2.head, this.tail = e2.tail, this.len = e2.len, this.next = e2.states;
        }
        function d() {
          this.len = 0, this.head = new u(c, 0, 0), this.tail = this.head, this.states = null;
        }
        function p() {
          return n.Buffer ? function() {
            return (d.create = function() {
              return new s();
            })();
          } : function() {
            return new d();
          };
        }
        function h(e2, t2, r2) {
          t2[r2] = 255 & e2;
        }
        function f(e2, t2) {
          this.len = e2, this.next = void 0, this.val = t2;
        }
        function m(e2, t2, r2) {
          for (; e2.hi; )
            t2[r2++] = 127 & e2.lo | 128, e2.lo = (e2.lo >>> 7 | e2.hi << 25) >>> 0, e2.hi >>>= 7;
          for (; 127 < e2.lo; )
            t2[r2++] = 127 & e2.lo | 128, e2.lo = e2.lo >>> 7;
          t2[r2++] = e2.lo;
        }
        function g(e2, t2, r2) {
          t2[r2] = 255 & e2, t2[r2 + 1] = e2 >>> 8 & 255, t2[r2 + 2] = e2 >>> 16 & 255, t2[r2 + 3] = e2 >>> 24;
        }
        d.create = p(), d.alloc = function(e2) {
          return new n.Array(e2);
        }, n.Array !== Array && (d.alloc = n.pool(d.alloc, n.Array.prototype.subarray)), d.prototype._push = function(e2, t2, r2) {
          return this.tail = this.tail.next = new u(e2, t2, r2), this.len += t2, this;
        }, (f.prototype = Object.create(u.prototype)).fn = function(e2, t2, r2) {
          for (; 127 < e2; )
            t2[r2++] = 127 & e2 | 128, e2 >>>= 7;
          t2[r2] = e2;
        }, d.prototype.uint32 = function(e2) {
          return this.len += (this.tail = this.tail.next = new f((e2 >>>= 0) < 128 ? 1 : e2 < 16384 ? 2 : e2 < 2097152 ? 3 : e2 < 268435456 ? 4 : 5, e2)).len, this;
        }, d.prototype.int32 = function(e2) {
          return e2 < 0 ? this._push(m, 10, i.fromNumber(e2)) : this.uint32(e2);
        }, d.prototype.sint32 = function(e2) {
          return this.uint32((e2 << 1 ^ e2 >> 31) >>> 0);
        }, d.prototype.int64 = d.prototype.uint64 = function(e2) {
          return e2 = i.from(e2), this._push(m, e2.length(), e2);
        }, d.prototype.sint64 = function(e2) {
          return e2 = i.from(e2).zzEncode(), this._push(m, e2.length(), e2);
        }, d.prototype.bool = function(e2) {
          return this._push(h, 1, e2 ? 1 : 0);
        }, d.prototype.sfixed32 = d.prototype.fixed32 = function(e2) {
          return this._push(g, 4, e2 >>> 0);
        }, d.prototype.sfixed64 = d.prototype.fixed64 = function(e2) {
          return e2 = i.from(e2), this._push(g, 4, e2.lo)._push(g, 4, e2.hi);
        }, d.prototype.float = function(e2) {
          return this._push(n.float.writeFloatLE, 4, e2);
        }, d.prototype.double = function(e2) {
          return this._push(n.float.writeDoubleLE, 8, e2);
        };
        var _ = n.Array.prototype.set ? function(e2, t2, r2) {
          t2.set(e2, r2);
        } : function(e2, t2, r2) {
          for (var s2 = 0; s2 < e2.length; ++s2)
            t2[r2 + s2] = e2[s2];
        };
        d.prototype.bytes = function(e2) {
          var t2, r2 = e2.length >>> 0;
          return r2 ? (n.isString(e2) && (t2 = d.alloc(r2 = o.length(e2)), o.decode(e2, t2, 0), e2 = t2), this.uint32(r2)._push(_, r2, e2)) : this._push(h, 1, 0);
        }, d.prototype.string = function(e2) {
          var t2 = a.length(e2);
          return t2 ? this.uint32(t2)._push(a.write, t2, e2) : this._push(h, 1, 0);
        }, d.prototype.fork = function() {
          return this.states = new l(this), this.head = this.tail = new u(c, 0, 0), this.len = 0, this;
        }, d.prototype.reset = function() {
          return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new u(c, 0, 0), this.len = 0), this;
        }, d.prototype.ldelim = function() {
          var e2 = this.head, t2 = this.tail, r2 = this.len;
          return this.reset().uint32(r2), r2 && (this.tail.next = e2.next, this.tail = t2, this.len += r2), this;
        }, d.prototype.finish = function() {
          for (var e2 = this.head.next, t2 = this.constructor.alloc(this.len), r2 = 0; e2; )
            e2.fn(e2.val, t2, r2), r2 += e2.len, e2 = e2.next;
          return t2;
        }, d._configure = function(e2) {
          s = e2, d.create = p(), s._configure();
        };
      }, function(e, t, r) {
        "use strict";
        e.exports = u;
        var s, n = r(9), i = n.LongBits, o = n.utf8;
        function a(e2, t2) {
          return RangeError("index out of range: " + e2.pos + " + " + (t2 || 1) + " > " + e2.len);
        }
        function u(e2) {
          this.buf = e2, this.pos = 0, this.len = e2.length;
        }
        function c() {
          return n.Buffer ? function(e2) {
            return (u.create = function(e3) {
              return n.Buffer.isBuffer(e3) ? new s(e3) : d(e3);
            })(e2);
          } : d;
        }
        var l, d = "undefined" != typeof Uint8Array ? function(e2) {
          if (e2 instanceof Uint8Array || Array.isArray(e2))
            return new u(e2);
          throw Error("illegal buffer");
        } : function(e2) {
          if (Array.isArray(e2))
            return new u(e2);
          throw Error("illegal buffer");
        };
        function p() {
          var e2 = new i(0, 0), t2 = 0;
          if (!(4 < this.len - this.pos)) {
            for (; t2 < 3; ++t2) {
              if (this.pos >= this.len)
                throw a(this);
              if (e2.lo = (e2.lo | (127 & this.buf[this.pos]) << 7 * t2) >>> 0, this.buf[this.pos++] < 128)
                return e2;
            }
            return e2.lo = (e2.lo | (127 & this.buf[this.pos++]) << 7 * t2) >>> 0, e2;
          }
          for (; t2 < 4; ++t2)
            if (e2.lo = (e2.lo | (127 & this.buf[this.pos]) << 7 * t2) >>> 0, this.buf[this.pos++] < 128)
              return e2;
          if (e2.lo = (e2.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e2.hi = (e2.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128)
            return e2;
          if (t2 = 0, 4 < this.len - this.pos) {
            for (; t2 < 5; ++t2)
              if (e2.hi = (e2.hi | (127 & this.buf[this.pos]) << 7 * t2 + 3) >>> 0, this.buf[this.pos++] < 128)
                return e2;
          } else
            for (; t2 < 5; ++t2) {
              if (this.pos >= this.len)
                throw a(this);
              if (e2.hi = (e2.hi | (127 & this.buf[this.pos]) << 7 * t2 + 3) >>> 0, this.buf[this.pos++] < 128)
                return e2;
            }
          throw Error("invalid varint encoding");
        }
        function h(e2, t2) {
          return (e2[t2 - 4] | e2[t2 - 3] << 8 | e2[t2 - 2] << 16 | e2[t2 - 1] << 24) >>> 0;
        }
        function f() {
          if (this.pos + 8 > this.len)
            throw a(this, 8);
          return new i(h(this.buf, this.pos += 4), h(this.buf, this.pos += 4));
        }
        u.create = c(), u.prototype._slice = n.Array.prototype.subarray || n.Array.prototype.slice, u.prototype.uint32 = (l = 4294967295, function() {
          if (l = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128 || (l = (l | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128 || (l = (l | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128 || (l = (l | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128 || (l = (l | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128 || !((this.pos += 5) > this.len))))))
            return l;
          throw this.pos = this.len, a(this, 10);
        }), u.prototype.int32 = function() {
          return 0 | this.uint32();
        }, u.prototype.sint32 = function() {
          var e2 = this.uint32();
          return e2 >>> 1 ^ -(1 & e2) | 0;
        }, u.prototype.bool = function() {
          return 0 !== this.uint32();
        }, u.prototype.fixed32 = function() {
          if (this.pos + 4 > this.len)
            throw a(this, 4);
          return h(this.buf, this.pos += 4);
        }, u.prototype.sfixed32 = function() {
          if (this.pos + 4 > this.len)
            throw a(this, 4);
          return 0 | h(this.buf, this.pos += 4);
        }, u.prototype.float = function() {
          if (this.pos + 4 > this.len)
            throw a(this, 4);
          var e2 = n.float.readFloatLE(this.buf, this.pos);
          return this.pos += 4, e2;
        }, u.prototype.double = function() {
          if (this.pos + 8 > this.len)
            throw a(this, 4);
          var e2 = n.float.readDoubleLE(this.buf, this.pos);
          return this.pos += 8, e2;
        }, u.prototype.bytes = function() {
          var e2 = this.uint32(), t2 = this.pos, r2 = this.pos + e2;
          if (r2 > this.len)
            throw a(this, e2);
          return this.pos += e2, Array.isArray(this.buf) ? this.buf.slice(t2, r2) : t2 === r2 ? new this.buf.constructor(0) : this._slice.call(this.buf, t2, r2);
        }, u.prototype.string = function() {
          var e2 = this.bytes();
          return o.read(e2, 0, e2.length);
        }, u.prototype.skip = function(e2) {
          if ("number" == typeof e2) {
            if (this.pos + e2 > this.len)
              throw a(this, e2);
            this.pos += e2;
          } else
            do {
              if (this.pos >= this.len)
                throw a(this);
            } while (128 & this.buf[this.pos++]);
          return this;
        }, u.prototype.skipType = function(e2) {
          switch (e2) {
            case 0:
              this.skip();
              break;
            case 1:
              this.skip(8);
              break;
            case 2:
              this.skip(this.uint32());
              break;
            case 3:
              for (; 4 != (e2 = 7 & this.uint32()); )
                this.skipType(e2);
              break;
            case 5:
              this.skip(4);
              break;
            default:
              throw Error("invalid wire type " + e2 + " at offset " + this.pos);
          }
          return this;
        }, u._configure = function(e2) {
          s = e2, u.create = c(), s._configure();
          var t2 = n.Long ? "toLong" : "toNumber";
          n.merge(u.prototype, { int64: function() {
            return p.call(this)[t2](false);
          }, uint64: function() {
            return p.call(this)[t2](true);
          }, sint64: function() {
            return p.call(this).zzDecode()[t2](false);
          }, fixed64: function() {
            return f.call(this)[t2](true);
          }, sfixed64: function() {
            return f.call(this)[t2](false);
          } });
        };
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return a;
        });
        var s = r(83), n = r(88), i = r(3), o = function() {
          return (o = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, a = (u.prototype.setDB = function(e2) {
          var t2 = this;
          this.store ? this.store.setDB(e2).then(function(e3) {
            t2.config.isProd && e3.forEach(function(e4) {
              return t2.pendingQueue.enqueue(e4);
            });
          }) : this.db = e2;
        }, u.prototype.clearDB = function() {
          this.pendingQueue.clear(), this.store && this.store.clear();
        }, u.prototype.init = function(e2) {
          return function(e3, t2, r2, s2) {
            return new (r2 = r2 || Promise)(function(n2, i2) {
              function o2(e4) {
                try {
                  u2(s2.next(e4));
                } catch (e5) {
                  i2(e5);
                }
              }
              function a2(e4) {
                try {
                  u2(s2.throw(e4));
                } catch (e5) {
                  i2(e5);
                }
              }
              function u2(e4) {
                var t3;
                e4.done ? n2(e4.value) : ((t3 = e4.value) instanceof r2 ? t3 : new r2(function(e5) {
                  e5(t3);
                })).then(o2, a2);
              }
              u2((s2 = s2.apply(e3, t2 || [])).next());
            });
          }(this, void 0, void 0, function() {
            var t2, n2 = this;
            return function(e3, t3) {
              var r2, s2, n3, i2 = { label: 0, sent: function() {
                if (1 & n3[0])
                  throw n3[1];
                return n3[1];
              }, trys: [], ops: [] }, o2 = { next: a2(0), throw: a2(1), return: a2(2) };
              return "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
                return this;
              }), o2;
              function a2(o3) {
                return function(a3) {
                  var u2 = [o3, a3];
                  if (r2)
                    throw new TypeError("Generator is already executing.");
                  for (; i2; )
                    try {
                      if (r2 = 1, s2 && (n3 = 2 & u2[0] ? s2.return : u2[0] ? s2.throw || ((n3 = s2.return) && n3.call(s2), 0) : s2.next) && !(n3 = n3.call(s2, u2[1])).done)
                        return n3;
                      switch (s2 = 0, (u2 = n3 ? [2 & u2[0], n3.value] : u2)[0]) {
                        case 0:
                        case 1:
                          n3 = u2;
                          break;
                        case 4:
                          return i2.label++, { value: u2[1], done: false };
                        case 5:
                          i2.label++, s2 = u2[1], u2 = [0];
                          continue;
                        case 7:
                          u2 = i2.ops.pop(), i2.trys.pop();
                          continue;
                        default:
                          if (!(n3 = 0 < (n3 = i2.trys).length && n3[n3.length - 1]) && (6 === u2[0] || 2 === u2[0])) {
                            i2 = 0;
                            continue;
                          }
                          if (3 === u2[0] && (!n3 || u2[1] > n3[0] && u2[1] < n3[3])) {
                            i2.label = u2[1];
                            break;
                          }
                          if (6 === u2[0] && i2.label < n3[1]) {
                            i2.label = n3[1], n3 = u2;
                            break;
                          }
                          if (n3 && i2.label < n3[2]) {
                            i2.label = n3[2], i2.ops.push(u2);
                            break;
                          }
                          n3[2] && i2.ops.pop(), i2.trys.pop();
                          continue;
                      }
                      u2 = t3.call(e3, i2);
                    } catch (a4) {
                      u2 = [6, a4], s2 = 0;
                    } finally {
                      r2 = n3 = 0;
                    }
                  if (5 & u2[0])
                    throw u2[1];
                  return { value: u2[0] ? u2[1] : void 0, done: true };
                };
              }
            }(this, function(a2) {
              return this.config = o(o({}, i.b), e2), this.logger = new s.a(this.miniProgram), this.logger.setLogUrlParams({ product: this.product, signature: this.config.token || "", appid: this.config.appID, id_name: this.config.userID || "", deviceid: this.config.deviceID || "" }), this.logger.setLogServer(this.config.serverUrl || ""), this.logger.setPostSucCallback(this.postSucHandler.bind(this)), this.logger.setPostFailCallback(function(e3) {
                e3.push.apply(e3, function(e4, t3, r2) {
                  if (r2 || 2 === arguments.length)
                    for (var s2, n3 = 0, i2 = t3.length; n3 < i2; n3++)
                      !s2 && n3 in t3 || ((s2 = s2 || Array.prototype.slice.call(t3, 0, n3))[n3] = t3[n3]);
                  return e4.concat(s2 || Array.prototype.slice.call(t3));
                }([], function(e4, t3) {
                  var r2 = "function" == typeof Symbol && e4[Symbol.iterator];
                  if (!r2)
                    return e4;
                  var s2, n3, i2 = r2.call(e4), o2 = [];
                  try {
                    for (; (void 0 === t3 || 0 < t3--) && !(s2 = i2.next()).done; )
                      o2.push(s2.value);
                  } catch (e5) {
                    n3 = { error: e5 };
                  } finally {
                    try {
                      s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
                    } finally {
                      if (n3)
                        throw n3.error;
                    }
                  }
                  return o2;
                }(n2.pendingQueue.readStoreData(1)), false)), n2.store.setItems(e3);
              }), this.initPendingQueue(), t2 = r(45)("./" + (this.miniProgram ? "zego.impl.wx" : "zego.impl.web")).createZegoStore, this.store = t2(this.config.appID, this.miniProgram), (this.db || this.miniProgram) && this.store.setDB(this.db).then(function(e3) {
                n2.config.isProd && e3.forEach(function(e4) {
                  return n2.pendingQueue.enqueue(e4);
                });
              }), [2];
            });
          });
        }, u.prototype.pause = function() {
          this.isPaused = true;
        }, u.prototype.startReport = function(e2) {
          var t2 = e2.get("userID"), r2 = e2.get("token");
          return !(!t2 || "string" != typeof t2) && (!(!r2 || "string" != typeof r2) && (this.startCommonField = e2, this.config.userID = t2, this.config.token = r2, this.logger.setLogUrlParams({ product: this.product, signature: this.config.token, appid: this.config.appID, id_name: this.config.userID || "", deviceid: this.config.deviceID || "" }), (t2 = e2.get("serverUrl")) && (this.config.serverUrl = t2, this.logger.setLogServer(this.config.serverUrl)), this.config.userID && this.config.token && this.config.serverUrl && (e2 = (r2 = this.pendingQueue.getPendingDataInfo()).pendingDataSize, t2 = r2.size, this.checkPendingQueue(e2, t2)), true));
        }, u.prototype.resume = function() {
          this.isPaused = false;
          var e2 = (t2 = this.pendingQueue.getPendingDataInfo()).pendingDataSize, t2 = t2.size;
          this.checkPendingQueue(e2, t2);
        }, u.prototype.report = function(e2, t2) {
          void 0 === t2 && (t2 = false);
          var r2 = Object(i.g)();
          r2 = { key: new Date().getTime() + "_" + r2, value: e2 };
          return this.config.isProd && this.pendingQueue.enqueue(r2), !this.config.isProd && t2 || this.store.setItems([r2]), true;
        }, u.prototype.postSucHandler = function(e2) {
          this.store.removeItems(e2);
          var t2 = (e2 = this.pendingQueue.getPendingDataInfo()).pendingDataSize;
          e2 = e2.size;
          this.checkPendingQueue(t2, e2);
        }, u.prototype.checkPendingQueue = function(e2, t2) {
          if (e2 > this.config.reportSize || t2 > this.config.reportNum) {
            if ((this.isPaused || !this.config.userID || !this.config.token || !this.config.serverUrl) && (e2 >= this.cacheMaxSize || i.a.totalAvailCache <= 0))
              return this.store.setItems(this.pendingQueue.readStoreData(this.cacheDelPer));
            if (!this.logger.reportAllowed() && (e2 >= this.cacheMaxSize || i.a.totalAvailCache <= 0))
              return this.store.setItems(this.pendingQueue.readStoreData(this.cacheDelPer));
            e2 = (t2 = this.pendingQueue.readReportData(this.config.reportSize)).totalLen, t2 = t2.reportDataArr, this.logger.report(t2), this.pendingQueue.refresh(e2);
          }
        }, u.prototype.initPendingQueue = function() {
          var e2 = this;
          this.pendingQueue = new n.a(), this.pendingQueue.setListener({ enCallback: function(t2, r2, s2) {
            e2.checkPendingQueue(s2, r2);
          } });
        }, u);
        function u(e2, t2) {
          this.product = e2, this.miniProgram = t2, this.QUEUE_MAX = 100, this.cacheMaxSize = i.a.cacheMaxSize, this.cacheDelPer = i.a.cacheDelPer, this.forceDataTotalLen = 0, this.isPaused = false;
        }
      }, function(e, t, r) {
        var s = { "./zego.impl.web": 46, "./zego.impl.web.ts": 46, "./zego.impl.wx": 47, "./zego.impl.wx.ts": 47 };
        function n(e2) {
          return e2 = i(e2), r(e2);
        }
        function i(e2) {
          if (r.o(s, e2))
            return s[e2];
          throw (e2 = new Error("Cannot find module '" + e2 + "'")).code = "MODULE_NOT_FOUND", e2;
        }
        n.keys = function() {
          return Object.keys(s);
        }, n.resolve = i, (e.exports = n).id = 45;
      }, function(e, t, r) {
        "use strict";
        r.r(t), r.d(t, "createZegoStore", function() {
          return i;
        }), r.d(t, "createZegoWebSocket", function() {
          return o;
        });
        var s = (n.prototype.setDB = function(e2) {
          return this.store = e2, this.getAll();
        }, n.prototype.clear = function() {
          this.buffer.length = 0;
        }, n.prototype.setItems = function(e2) {
          var t2;
          if (this.store)
            try {
              var r2 = this.store.transaction([this.tname], "readwrite").objectStore(this.tname);
              e2.forEach(function(e3) {
                return r2.put(e3.value, e3.key);
              });
            } catch (e3) {
            }
          else
            (t2 = this.buffer).push.apply(t2, function(e3, t3, r3) {
              if (r3 || 2 === arguments.length)
                for (var s2, n2 = 0, i2 = t3.length; n2 < i2; n2++)
                  !s2 && n2 in t3 || ((s2 = s2 || Array.prototype.slice.call(t3, 0, n2))[n2] = t3[n2]);
              return e3.concat(s2 || Array.prototype.slice.call(t3));
            }([], function(e3, t3) {
              var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
              if (!r3)
                return e3;
              var s2, n2, i2 = r3.call(e3), o2 = [];
              try {
                for (; (void 0 === t3 || 0 < t3--) && !(s2 = i2.next()).done; )
                  o2.push(s2.value);
              } catch (e4) {
                n2 = { error: e4 };
              } finally {
                try {
                  s2 && !s2.done && (r3 = i2.return) && r3.call(i2);
                } finally {
                  if (n2)
                    throw n2.error;
                }
              }
              return o2;
            }(e2), false));
        }, n.prototype.removeItems = function(e2) {
          var t2;
          this.store && (t2 = this.store.transaction([this.tname], "readwrite").objectStore(this.tname), e2.forEach(function(e3) {
            return t2.delete(e3.key);
          }));
        }, n.prototype.getAll = function() {
          var e2 = this;
          return new Promise(function(t2) {
            var r2 = e2.store.transaction([e2.tname], "readonly").objectStore(e2.tname);
            r2.getAllKeys().onsuccess = function(e3) {
              var s2 = e3.target.result;
              r2.getAll().onsuccess = function(e4) {
                e4 = e4.target.result.map(function(e5, t3) {
                  return { key: s2[t3], value: e5 };
                }), t2(e4);
              };
            };
          });
        }, n);
        function n() {
          this.buffer = [], this.tname = "DataReport";
        }
        function i() {
          return new s();
        }
        function o(e2, t2) {
          var r2 = [];
          return (e2 = (Object.keys(t2).forEach(function(e3) {
            r2.push(e3 + "=" + t2[e3]);
          }), new WebSocket(e2 + "?" + r2.join("&")))).binaryType = "arraybuffer", e2;
        }
      }, function(e, t) {
        throw new Error("Module parse failed: Unexpected token (4:20)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n| import { ReportDataItem, ZegoStore, ZegoWebSocket } from '../../common/zego.entity';\n| \n> class ZegoStoreImpl implements ZegoStore {\n|     isAlipay = false;\n|     isReadAll = false;");
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return o;
        });
        var s = r(91), n = r(7), i = function() {
          return (i = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, o = (a.prototype.init = function(e2) {
          return function(e3, t2, r2, s2) {
            return new (r2 = r2 || Promise)(function(n2, i2) {
              function o2(e4) {
                try {
                  u(s2.next(e4));
                } catch (e5) {
                  i2(e5);
                }
              }
              function a2(e4) {
                try {
                  u(s2.throw(e4));
                } catch (e5) {
                  i2(e5);
                }
              }
              function u(e4) {
                var t3;
                e4.done ? n2(e4.value) : ((t3 = e4.value) instanceof r2 ? t3 : new r2(function(e5) {
                  e5(t3);
                })).then(o2, a2);
              }
              u((s2 = s2.apply(e3, t2 || [])).next());
            });
          }(this, void 0, void 0, function() {
            var t2;
            return function(e3, t3) {
              var r2, s2, n2, i2 = { label: 0, sent: function() {
                if (1 & n2[0])
                  throw n2[1];
                return n2[1];
              }, trys: [], ops: [] }, o2 = { next: a2(0), throw: a2(1), return: a2(2) };
              return "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
                return this;
              }), o2;
              function a2(o3) {
                return function(a3) {
                  var u = [o3, a3];
                  if (r2)
                    throw new TypeError("Generator is already executing.");
                  for (; i2; )
                    try {
                      if (r2 = 1, s2 && (n2 = 2 & u[0] ? s2.return : u[0] ? s2.throw || ((n2 = s2.return) && n2.call(s2), 0) : s2.next) && !(n2 = n2.call(s2, u[1])).done)
                        return n2;
                      switch (s2 = 0, (u = n2 ? [2 & u[0], n2.value] : u)[0]) {
                        case 0:
                        case 1:
                          n2 = u;
                          break;
                        case 4:
                          return i2.label++, { value: u[1], done: false };
                        case 5:
                          i2.label++, s2 = u[1], u = [0];
                          continue;
                        case 7:
                          u = i2.ops.pop(), i2.trys.pop();
                          continue;
                        default:
                          if (!(n2 = 0 < (n2 = i2.trys).length && n2[n2.length - 1]) && (6 === u[0] || 2 === u[0])) {
                            i2 = 0;
                            continue;
                          }
                          if (3 === u[0] && (!n2 || u[1] > n2[0] && u[1] < n2[3])) {
                            i2.label = u[1];
                            break;
                          }
                          if (6 === u[0] && i2.label < n2[1]) {
                            i2.label = n2[1], n2 = u;
                            break;
                          }
                          if (n2 && i2.label < n2[2]) {
                            i2.label = n2[2], i2.ops.push(u);
                            break;
                          }
                          n2[2] && i2.ops.pop(), i2.trys.pop();
                          continue;
                      }
                      u = t3.call(e3, i2);
                    } catch (a4) {
                      u = [6, a4], s2 = 0;
                    } finally {
                      r2 = n2 = 0;
                    }
                  if (5 & u[0])
                    throw u[1];
                  return { value: u[0] ? u[1] : void 0, done: true };
                };
              }
            }(this, function(s2) {
              return t2 = this.miniProgram ? "zego.fileHandler" : "zego.storeHandler", this.fileConfig = i({ maxSize: 5e6, maxFiles: 3, dropPer: 1 }, e2), t2 = r(114)("./" + t2).ZegoStoreImpl, this.storeHandler = new t2(this.product, this.fileConfig, this.miniProgram), [2];
            });
          });
        }, a.prototype.setDB = function(e2) {
          this.storeHandler.setDB(e2);
        }, a.prototype.setLogLevel = function(e2) {
          return void 0 !== (e2 = n.a[e2]) && (this.logLevel = e2, true);
        }, a.prototype.setHeaderInfo = function(e2) {
          this.storeHandler.storeData(e2);
        }, a.prototype.setCommonField = function(e2) {
          return "[object Map]" === Object.prototype.toString.call(e2) && null != e2.get("userID") && "string" == typeof e2.get("userID") && "" !== e2.get("userID") && (this.commonField = e2, this.isUserIDExist = true);
        }, a.prototype.write = function(e2, t2, r2, s2) {
          var i2 = n.a[t2];
          return void 0 !== i2 && (e2 = this.logParams(e2, r2, s2), this.logLevel !== n.a.DISABLE && this.logLevel <= i2 && ("debug" == t2 || "report" == t2 || "info" == t2 ? console.info : console.warn)(e2), this.logRemoteLevel !== n.a.DISABLE && this.logRemoteLevel <= i2 && this.storeHandler.storeData(e2), true);
        }, a.prototype.upload = function(e2, t2, r2) {
          return this.storeHandler.upload(e2, t2, r2);
        }, a.prototype.logParams = function(e2, t2, r2) {
          return "[" + this.getCurrentTime() + "][" + e2 + "][" + t2 + "]:" + r2;
        }, a.prototype.getCurrentTime = function() {
          var e2 = new Date();
          return "" + (this.D[e2.getMonth() + 1] || e2.getMonth() + 1) + (this.D[e2.getDate()] || e2.getDate()) + " " + e2.toLocaleTimeString("zh-CN") + "." + e2.getMilliseconds();
        }, a);
        function a(e2, t2, r2) {
          this.product = e2, this.miniProgram = t2, this.logLevel = n.a.INFO, this.logRemoteLevel = 0, this.isUserIDExist = false, this.D = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09"], this.stateCenter = s.a.getInstance(), this.init(r2);
        }
      }, function(e, t) {
        throw new Error('Module parse failed: Unexpected token (1:31)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> function formDataArray(boundary: string, name: string, value: string): number[] {\n|     return toUtf8Bytes(`${boundary}\\r\\nContent-Disposition: form-data; name="${name}"\\r\\n\\r\\n${value}\\r\\n`);\n| }');
      }, function(e, t) {
        throw new Error("Module parse failed: Unexpected token (5:27)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n| import { convertFormData } from './formdata';\n| \n> export class ZegoStoreImpl implements ZegoStore {\n|     basePath = '';\n|     fileManager: any;");
      }, function(e, t, r) {
        "use strict";
        r.r(t), r.d(t, "ZegoStoreImpl", function() {
          return i;
        });
        t = r(92);
        var s = r.n(t), n = r(7), i = (o.prototype.setDB = function(e2) {
          this.store = e2, setTimeout(this.writeData, 1e4);
        }, o.prototype.storeData = function(e2) {
          e2 && this.buffer.push(e2), 100 < this.buffer.length && this.writeData();
        }, o.prototype.upload = function(e2, t2, r2) {
          var s2 = this, n2 = { time: new Date(), readTime: 0, appID: e2.appID, userID: e2.userID, version: e2.version, action: t2, apicall: r2, total: 0, files: "", key: "" };
          return this.readData(n2, r2).then(function(t3) {
            var r3, i2;
            if (t3)
              return r3 = new Date().getTime(), (i2 = new FormData()).append("logs", t3), i2.append("id_name", e2.userID), i2.append("appid", e2.appID), i2.append("timestamp", r3 + ""), i2.append("token", e2.token), i2.append("deviceid", e2.deviceID || ""), i2.append("product", e2.product), i2.append("req_sdk", "1"), new Promise(function(t4, r4) {
                s2.postFile(e2.uploadURL, i2, n2, t4, r4);
              });
          });
        }, o.prototype.postFile = function(e2, t2, r2, s2, n2) {
          var i2 = this, o2 = new XMLHttpRequest();
          o2.open("post", e2), o2.onreadystatechange = function() {
            var a, u;
            4 == o2.readyState && (200 <= o2.status && o2.status < 300 || 304 == o2.status ? 0 === (a = JSON.parse(o2.responseText)).code ? (u = r2.time, r2.time = Date.now() - u.getTime() + "," + u.toLocaleTimeString("zh-CN"), (0, console.log)(JSON.stringify(r2)), i2.postFailCount = 0, i2.clearUploaded(), s2()) : 4 == a.code && (i2.postFailCount++, i2.postFailCount < 3 ? i2.postFile(e2, t2, r2, s2, n2) : (i2.postFailCount = 0, n2(a))) : (i2.postFailCount = 0, n2({ code: 1001, message: "upload fail" })));
          }, o2.send(t2);
        }, o.prototype.readData = function(e2, t2) {
          return function(e3, t3, r2, s2) {
            return new (r2 = r2 || Promise)(function(n2, i2) {
              function o2(e4) {
                try {
                  u(s2.next(e4));
                } catch (e5) {
                  i2(e5);
                }
              }
              function a(e4) {
                try {
                  u(s2.throw(e4));
                } catch (e5) {
                  i2(e5);
                }
              }
              function u(e4) {
                var t4;
                e4.done ? n2(e4.value) : ((t4 = e4.value) instanceof r2 ? t4 : new r2(function(e5) {
                  e5(t4);
                })).then(o2, a);
              }
              u((s2 = s2.apply(e3, t3 || [])).next());
            });
          }(this, void 0, void 0, function() {
            var r2 = this;
            return function(e3, t3) {
              var r3, s2, n2, i2 = { label: 0, sent: function() {
                if (1 & n2[0])
                  throw n2[1];
                return n2[1];
              }, trys: [], ops: [] }, o2 = { next: a(0), throw: a(1), return: a(2) };
              return "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
                return this;
              }), o2;
              function a(o3) {
                return function(a2) {
                  var u = [o3, a2];
                  if (r3)
                    throw new TypeError("Generator is already executing.");
                  for (; i2; )
                    try {
                      if (r3 = 1, s2 && (n2 = 2 & u[0] ? s2.return : u[0] ? s2.throw || ((n2 = s2.return) && n2.call(s2), 0) : s2.next) && !(n2 = n2.call(s2, u[1])).done)
                        return n2;
                      switch (s2 = 0, (u = n2 ? [2 & u[0], n2.value] : u)[0]) {
                        case 0:
                        case 1:
                          n2 = u;
                          break;
                        case 4:
                          return i2.label++, { value: u[1], done: false };
                        case 5:
                          i2.label++, s2 = u[1], u = [0];
                          continue;
                        case 7:
                          u = i2.ops.pop(), i2.trys.pop();
                          continue;
                        default:
                          if (!(n2 = 0 < (n2 = i2.trys).length && n2[n2.length - 1]) && (6 === u[0] || 2 === u[0])) {
                            i2 = 0;
                            continue;
                          }
                          if (3 === u[0] && (!n2 || u[1] > n2[0] && u[1] < n2[3])) {
                            i2.label = u[1];
                            break;
                          }
                          if (6 === u[0] && i2.label < n2[1]) {
                            i2.label = n2[1], n2 = u;
                            break;
                          }
                          if (n2 && i2.label < n2[2]) {
                            i2.label = n2[2], i2.ops.push(u);
                            break;
                          }
                          n2[2] && i2.ops.pop(), i2.trys.pop();
                          continue;
                      }
                      u = t3.call(e3, i2);
                    } catch (a3) {
                      u = [6, a3], s2 = 0;
                    } finally {
                      r3 = n2 = 0;
                    }
                  if (5 & u[0])
                    throw u[1];
                  return { value: u[0] ? u[1] : void 0, done: true };
                };
              }
            }(this, function(n2) {
              return [2, new Promise(function(n3) {
                var i2 = 0, o2 = [{ datas: [], size: 0 }], a = r2.store.transaction([r2.tname], "readonly").objectStore(r2.tname);
                a.getAll().onsuccess = function(u) {
                  if (u.target.result.forEach(function(e3) {
                    o2[i2].size > r2.fileConfig.maxSize && (o2[++i2] = { datas: [], size: 0 }), o2[i2].datas.push(e3), o2[i2].size += e3.length + 1;
                  }), 0 == i2 && !t2)
                    return n3(null);
                  a.getAllKeys().onsuccess = function(t3) {
                    r2.lastUploadKey = t3.target.result.pop();
                    var i3 = (t3 = new s.a()).folder("log");
                    i3 && 1 < o2[0].size ? (e2.readTime = Date.now() - e2.time, e2.files = o2.map(function(e3) {
                      return e3.size;
                    }), e2.key = r2.lastUploadKey, o2[o2.length - 1].datas.push(JSON.stringify(e2)), o2.forEach(function(e3, t4) {
                      return i3.file("" + r2.product + t4 + ".txt", e3.datas.join("\n"));
                    }), t3.generateAsync({ type: "blob", compression: "DEFLATE", compressionOptions: { level: 9 } }).then(function(t4) {
                      e2.total = t4.size, n3(t4);
                    })) : n3(null);
                  };
                };
              })];
            });
          });
        }, o.prototype.clearUploaded = function() {
          var e2, t2, r2 = this;
          this.lastUploadKey ? (e2 = IDBKeyRange.lowerBound(this.lastUploadKey, true), this.lastUploadKey = "", t2 = [], this.store.transaction([this.tname], "readonly").objectStore(this.tname).openCursor(e2).onsuccess = function(e3) {
            var s2, i2, o2;
            if (!(e3 = e3.target.result))
              return (s2 = r2.store.transaction([r2.tname], "readwrite").objectStore(r2.tname)).clear(), i2 = Object(n.b)(), o2 = new Date().getTime() + "_", void t2.forEach(function(e4, t3) {
                return s2.put(e4, o2 + i2 + "_" + r2.padStart(t3 / 100));
              });
            t2.push(e3.value), e3.continue();
          }) : this.store.transaction([this.tname], "readwrite").objectStore(this.tname).clear();
        }, o.prototype.padStart = function(e2) {
          return String(e2).replace(".", "");
        }, o);
        function o(e2, t2) {
          var r2 = this;
          this.product = e2, this.fileConfig = t2, this.buffer = [], this.tname = "Log", this.postFailCount = 0, this.lastUploadKey = "", this.writeData = function() {
            if (r2.store) {
              var e3 = Object(n.b)(), t3 = new Date().getTime() + "_";
              try {
                var s2 = r2.store.transaction([r2.tname], "readwrite").objectStore(r2.tname);
                r2.buffer.forEach(function(n2, i2) {
                  return s2.put(n2, t3 + e3 + "_" + r2.padStart(i2 / 100));
                }), r2.buffer.length = 0;
              } catch (e4) {
              }
              setTimeout(r2.writeData, 1e4);
            }
          };
        }
      }, function(e, t) {
        var r, s;
        e = e.exports = {};
        function n() {
          throw new Error("setTimeout has not been defined");
        }
        function i() {
          throw new Error("clearTimeout has not been defined");
        }
        try {
          r = "function" == typeof setTimeout ? setTimeout : n;
        } catch (e2) {
          r = n;
        }
        try {
          s = "function" == typeof clearTimeout ? clearTimeout : i;
        } catch (e2) {
          s = i;
        }
        function o(e2) {
          if (r === setTimeout)
            return setTimeout(e2, 0);
          if ((r === n || !r) && setTimeout)
            return (r = setTimeout)(e2, 0);
          try {
            return r(e2, 0);
          } catch (t2) {
            try {
              return r.call(null, e2, 0);
            } catch (t3) {
              return r.call(this, e2, 0);
            }
          }
        }
        var a, u = [], c = false, l = -1;
        function d() {
          c && a && (c = false, a.length ? u = a.concat(u) : l = -1, u.length && p());
        }
        function p() {
          if (!c) {
            for (var e2 = o(d), t2 = (c = true, u.length); t2; ) {
              for (a = u, u = []; ++l < t2; )
                a && a[l].run();
              l = -1, t2 = u.length;
            }
            a = null, c = false, function(e3) {
              if (s === clearTimeout)
                return clearTimeout(e3);
              if ((s === i || !s) && clearTimeout)
                return (s = clearTimeout)(e3);
              try {
                s(e3);
              } catch (t3) {
                try {
                  return s.call(null, e3);
                } catch (t4) {
                  return s.call(this, e3);
                }
              }
            }(e2);
          }
        }
        function h(e2, t2) {
          this.fun = e2, this.array = t2;
        }
        function f() {
        }
        e.nextTick = function(e2) {
          var t2 = new Array(arguments.length - 1);
          if (1 < arguments.length)
            for (var r2 = 1; r2 < arguments.length; r2++)
              t2[r2 - 1] = arguments[r2];
          u.push(new h(e2, t2)), 1 !== u.length || c || o(p);
        }, h.prototype.run = function() {
          this.fun.apply(null, this.array);
        }, e.title = "browser", e.browser = true, e.env = {}, e.argv = [], e.version = "", e.versions = {}, e.on = f, e.addListener = f, e.once = f, e.off = f, e.removeListener = f, e.removeAllListeners = f, e.emit = f, e.prependListener = f, e.prependOnceListener = f, e.listeners = function(e2) {
          return [];
        }, e.binding = function(e2) {
          throw new Error("process.binding is not supported");
        }, e.cwd = function() {
          return "/";
        }, e.chdir = function(e2) {
          throw new Error("process.chdir is not supported");
        }, e.umask = function() {
          return 0;
        };
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return l;
        });
        t = r(13);
        var s = r.n(t), n = (t = r(15), r.n(t)), i = (t = r(16), r.n(t)), o = (t = r(54), r.n(t)), a = (t = r(8), r.n(t)), u = r(6), c = r(55), l = (Object.defineProperty(d.prototype, "publicKey", { get: function() {
          return "-----BEGIN RSA Public Key-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvJiiECE5EzRdVNpj0EYo\nZuPxuALJHft7vrbFJ2Z5W3oq8NWWkS4+L88vkMGOcHh2ORPCI6afuEzYUrtfbMeQ\nKY15UlCKv0pLy/K8ryY340LrXZ7ODywrZn9XArQO6BrBDjshf280oRfOGthNLQbg\nzjbXR52ohdVdMMbFO/cA+8zXLDCAP7Aec7eCFGfaXlgKaqS/hEkGTU13jnaq/Xjq\nzI2TwkZTiG4TE3xxjeoTxrRm13gS0/J0uM4A0xDTAgfDfs+veQO+0Lnivl3UmywQ\nekZgQNHyDQzgsVtsIP9QTNEanQI37LjiBkcHI99YwPspzJjSzVG6tsFZBcbr/lqO\nOQIDAQAB\n-----END RSA Public Key-----";
        }, enumerable: false, configurable: true }), d.prototype.encrypt = function(e2, t2, r2) {
          return e2 = s.a.encrypt(this.u82Word(e2), t2, r2).toString(), u.a.toUint8Array(e2);
        }, d.prototype.decrypt = function(e2, t2, r2) {
          return this.word2U8(s.a.decrypt(u.a.fromUint8Array(e2), t2, r2));
        }, d.prototype.encryptString = function(e2, t2) {
          return s.a.encrypt(e2, t2.cryptoConfig.appIDKey, t2.cryptoConfig.appIDIV).toString();
        }, d.prototype.decryptString = function(e2, t2) {
          return s.a.decrypt(e2, t2.cryptoConfig.appIDKey, t2.cryptoConfig.appIDIV).toString(i.a);
        }, d.prototype.generateK1Sign = function(e2) {
          var t2 = this.generateNonce();
          e2.cryptoConfig.key1 = i.a.parse(t2), e2.cryptoConfig.iv1 = { iv: n.a.parse(a()(t2).toString().toLowerCase()) }, e2 = new c.a(this.publicKey).encrypt(t2);
          return this.word2U8(n.a.parse(e2));
        }, d.prototype.decryptK2Sign = function(e2, t2) {
          try {
            t2.cryptoConfig.key2 = s.a.decrypt(u.a.fromUint8Array(e2), t2.cryptoConfig.key1, t2.cryptoConfig.iv1), t2.cryptoConfig.iv2 = { iv: a()(t2.cryptoConfig.key2) };
          } catch (e3) {
          }
        }, d.prototype.generateNonce = function() {
          var e2 = Math.random().toString().substring(2, 18);
          return e2.length < 16 && (e2 += e2.substring(0, 16 - e2.length)), e2;
        }, d.prototype.generateKeyIV = function(e2) {
          return [i.a.parse(e2), { iv: n.a.parse(a()(e2).toString().toLowerCase()) }];
        }, d.prototype.generateAppIDKey = function(e2) {
          var t2 = a()(String(e2.appID)).toString().toLowerCase();
          e2.cryptoConfig.appIDKey = i.a.parse(t2), e2.cryptoConfig.appIDIV = { iv: n.a.parse(t2) };
        }, d.prototype.md5 = function(e2) {
          return this.word2U8(a()(e2));
        }, d.prototype.md5Bytes = function(e2) {
          return this.word2U8(a()(this.u82Word(e2)));
        }, d.prototype.word2U8 = function(e2) {
          for (var t2 = e2.words, r2 = e2.sigBytes, s2 = new Uint8Array(r2), n2 = 0; n2 < r2; n2++) {
            var i2 = t2[n2 >>> 2] >>> 24 - n2 % 4 * 8 & 255;
            s2[n2] = i2;
          }
          return s2;
        }, d.prototype.u82Word = function(e2) {
          for (var t2 = e2.length, r2 = [], s2 = 0; s2 < t2; s2++)
            r2[s2 >>> 2] |= (255 & e2[s2]) << 24 - s2 % 4 * 8;
          return o.a.create(r2, t2);
        }, d);
        function d() {
        }
      }, function(e, t, r) {
        var s;
        e.exports = (s = r(5), function() {
          var e2, t2;
          "function" == typeof ArrayBuffer && (e2 = s.lib.WordArray, t2 = e2.init, (e2.init = function(e3) {
            if ((e3 = (e3 = e3 instanceof ArrayBuffer ? new Uint8Array(e3) : e3) instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && e3 instanceof Uint8ClampedArray || e3 instanceof Int16Array || e3 instanceof Uint16Array || e3 instanceof Int32Array || e3 instanceof Uint32Array || e3 instanceof Float32Array || e3 instanceof Float64Array ? new Uint8Array(e3.buffer, e3.byteOffset, e3.byteLength) : e3) instanceof Uint8Array) {
              for (var r2 = e3.byteLength, s2 = [], n = 0; n < r2; n++)
                s2[n >>> 2] |= e3[n] << 24 - n % 4 * 8;
              t2.call(this, s2, r2);
            } else
              t2.apply(this, arguments);
          }).prototype = e2);
        }(), s.lib.WordArray);
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return u;
        });
        var s = r(17), n = r(56), i = r(57), o = r(58), a = r(59), u = (c.prototype.parseKey = function(e2) {
          try {
            var t2 = 0, r2 = 0, n2 = /^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/.test(e2) ? i.a.decode(e2) : o.a.unarmor(e2), u2 = a.a.decode(n2);
            if (9 === (u2 = 3 === u2.sub.length ? u2.sub[2].sub[0] : u2).sub.length)
              t2 = u2.sub[1].getHexStringValue(), this.n = Object(s.b)(t2, 16), r2 = u2.sub[2].getHexStringValue(), this.e = parseInt(r2, 16);
            else {
              if (2 !== u2.sub.length)
                return false;
              var c2 = u2.sub[1].sub[0];
              t2 = c2.sub[0].getHexStringValue();
              this.n = Object(s.b)(t2, 16), r2 = c2.sub[1].getHexStringValue(), this.e = parseInt(r2, 16);
            }
            return true;
          } catch (e3) {
            return false;
          }
        }, c.prototype.pkcs1pad2 = function(e2, t2) {
          for (var r2 = [], i2 = e2.length - 1; 0 <= i2 && 0 < t2; ) {
            var o2 = e2.charCodeAt(i2--);
            o2 < 128 ? r2[--t2] = o2 : 127 < o2 && o2 < 2048 ? (r2[--t2] = 63 & o2 | 128, r2[--t2] = o2 >> 6 | 192) : (r2[--t2] = 63 & o2 | 128, r2[--t2] = o2 >> 6 & 63 | 128, r2[--t2] = o2 >> 12 | 224);
          }
          r2[--t2] = 0;
          for (var a2 = new n.a(), u2 = []; 2 < t2; ) {
            for (u2[0] = 0; 0 == u2[0]; )
              a2.nextBytes(u2);
            r2[--t2] = u2[0];
          }
          return r2[--t2] = 2, r2[--t2] = 0, new s.a(r2);
        }, c.prototype.encrypt = function(e2) {
          for (var t2 = this.n.bitLength() + 7 >> 3, r2 = this.pkcs1pad2(e2, t2).modPowInt(this.e, this.n).toString(16), s2 = r2.length, n2 = 0; n2 < 2 * t2 - s2; n2++)
            r2 = "0" + r2;
          return r2;
        }, c);
        function c(e2) {
          this.e = 0, this.parseKey(e2);
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return c;
        });
        var s, n = r(20), i = [], o = 0, a = void 0;
        if ("undefined" != typeof window && window.crypto && window.crypto.getRandomValues) {
          var u = new Uint32Array(256);
          for (window.crypto.getRandomValues(u), a = 0; a < u.length; ++a)
            i[o++] = 255 & u[a];
        }
        l.prototype.nextBytes = function(e2) {
          for (var t2 = 0; t2 < e2.length; ++t2)
            e2[t2] = function() {
              if (null == s) {
                for (s = Object(n.a)(); o < n.b; ) {
                  var e3 = Math.floor(65536 * Math.random());
                  i[o++] = 255 & e3;
                }
                for (s.init(i), o = 0; o < i.length; ++o)
                  i[o] = 0;
                o = 0;
              }
              return s.next();
            }();
        };
        var c = l;
        function l() {
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return n;
        });
        var s, n = { decode: function(e2) {
          if (void 0 === s) {
            var t2 = "0123456789ABCDEF", r2 = " \f\n\r	\xA0\u2028\u2029";
            for (s = {}, a = 0; a < 16; ++a)
              s[t2.charAt(a)] = a;
            for (t2 = t2.toLowerCase(), a = 10; a < 16; ++a)
              s[t2.charAt(a)] = a;
            for (a = 0; a < r2.length; ++a)
              s[r2.charAt(a)] = -1;
          }
          for (var n2 = [], i = 0, o = 0, a = 0; a < e2.length; ++a) {
            var u = e2.charAt(a);
            if ("=" == u)
              break;
            if (-1 != (u = s[u])) {
              if (void 0 === u)
                throw new Error("Illegal character at offset " + a);
              i |= u, 2 <= ++o ? (n2[n2.length] = i, o = i = 0) : i <<= 4;
            }
          }
          if (o)
            throw new Error("Hex encoding incomplete: 4 bits missing");
          return n2;
        } };
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return n;
        });
        var s, n = { decode: function(e2) {
          if (void 0 === s) {
            var t2 = "= \f\n\r	\xA0\u2028\u2029";
            for (s = /* @__PURE__ */ Object.create(null), o = 0; o < 64; ++o)
              s["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(o)] = o;
            for (s["-"] = 62, s._ = 63, o = 0; o < t2.length; ++o)
              s[t2.charAt(o)] = -1;
          }
          for (var r2 = [], n2 = 0, i = 0, o = 0; o < e2.length; ++o) {
            var a = e2.charAt(o);
            if ("=" == a)
              break;
            if (-1 != (a = s[a])) {
              if (void 0 === a)
                throw new Error("Illegal character at offset " + o);
              n2 |= a, 4 <= ++i ? (r2[r2.length] = n2 >> 16, r2[r2.length] = n2 >> 8 & 255, r2[r2.length] = 255 & n2, i = n2 = 0) : n2 <<= 6;
            }
          }
          switch (i) {
            case 1:
              throw new Error("Base64 encoding incomplete: at least 2 bits missing");
            case 2:
              r2[r2.length] = n2 >> 10;
              break;
            case 3:
              r2[r2.length] = n2 >> 16, r2[r2.length] = n2 >> 8 & 255;
          }
          return r2;
        }, re: /-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/, unarmor: function(e2) {
          var t2 = n.re.exec(e2);
          if (t2)
            if (t2[1])
              e2 = t2[1];
            else {
              if (!t2[2])
                throw new Error("RegExp out of sync");
              e2 = t2[2];
            }
          return n.decode(e2);
        } };
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return o;
        });
        var s = r(60), n = (i.prototype.get = function(e2) {
          if ((e2 = void 0 === e2 ? this.pos++ : e2) >= this.enc.length)
            throw new Error("Requesting byte offset " + e2 + " on a stream of length " + this.enc.length);
          return "string" == typeof this.enc ? this.enc.charCodeAt(e2) : this.enc[e2];
        }, i.prototype.hexByte = function(e2) {
          return this.hexDigits.charAt(e2 >> 4 & 15) + this.hexDigits.charAt(15 & e2);
        }, i.prototype.hexDump = function(e2, t2, r2) {
          for (var s2 = "", n2 = e2; n2 < t2; ++n2)
            if (s2 += this.hexByte(this.get(n2)), true !== r2)
              switch (15 & n2) {
                case 7:
                  s2 += "  ";
                  break;
                case 15:
                  s2 += "\n";
                  break;
                default:
                  s2 += " ";
              }
          return s2;
        }, i);
        function i(e2, t2) {
          this.hexDigits = "0123456789ABCDEF", e2 instanceof i ? (this.enc = e2.enc, this.pos = e2.pos) : (this.enc = e2, this.pos = t2);
        }
        a.prototype.posStart = function() {
          return this.stream.pos;
        }, a.prototype.posEnd = function() {
          return this.stream.pos + this.header + Math.abs(this.length);
        }, a.prototype.toHexString = function() {
          return this.stream.hexDump(this.posStart(), this.posEnd(), true);
        }, a.decodeLength = function(e2) {
          var t2 = 127 & (r2 = e2.get());
          if (t2 == r2)
            return t2;
          if (6 < t2)
            throw new Error("Length over 48 bits not supported at position " + (e2.pos - 1));
          if (0 == t2)
            return null;
          for (var r2 = 0, s2 = 0; s2 < t2; ++s2)
            r2 = 256 * r2 + e2.get();
          return r2;
        }, a.prototype.getHexStringValue = function() {
          var e2 = this.toHexString(), t2 = 2 * this.header, r2 = 2 * this.length;
          return e2.substr(t2, r2);
        }, a.decode = function(e2) {
          function t2() {
            var e3 = [];
            if (null !== i2) {
              for (var t3 = o2 + i2; r2.pos < t3; )
                e3[e3.length] = a.decode(r2);
              if (r2.pos != t3)
                throw new Error("Content size is not correct for container starting at offset " + o2);
            } else
              try {
                for (; ; ) {
                  var s3 = a.decode(r2);
                  if (s3.tag.isEOC())
                    break;
                  e3[e3.length] = s3;
                }
                i2 = o2 - r2.pos;
              } catch (e4) {
                throw new Error("Exception while decoding undefined length content: " + e4);
              }
            return e3;
          }
          var r2 = e2 instanceof n ? e2 : new n(e2, 0), s2 = (e2 = new n(r2), new u(r2)), i2 = a.decodeLength(r2), o2 = r2.pos, c2 = o2 - e2.pos, l = null;
          if (s2.tagConstructed)
            l = t2();
          else if (s2.isUniversal() && (3 == s2.tagNumber || 4 == s2.tagNumber))
            try {
              if (3 == s2.tagNumber && 0 != r2.get())
                throw new Error("BIT STRINGs with unused bits cannot encapsulate.");
              l = t2();
              for (var d = 0; d < l.length; ++d)
                if (l[d].tag.isEOC())
                  throw new Error("EOC is not supposed to be actual content.");
            } catch (e3) {
              l = null;
            }
          if (null === l) {
            if (null === i2)
              throw new Error("We can't skip over an invalid tag with undefined length at offset " + o2);
            r2.pos = o2 + Math.abs(i2);
          }
          return new a(e2, c2, i2, s2, l);
        };
        var o = a;
        function a(e2, t2, r2, s2, n2) {
          if (!(s2 instanceof u))
            throw new Error("Invalid tag value.");
          this.stream = e2, this.header = t2, this.length = r2, this.tag = s2, this.sub = n2;
        }
        c.prototype.isUniversal = function() {
          return 0 === this.tagClass;
        }, c.prototype.isEOC = function() {
          return 0 === this.tagClass && 0 === this.tagNumber;
        };
        var u = c;
        function c(e2) {
          var t2 = e2.get();
          if (this.tagClass = t2 >> 6, this.tagConstructed = 0 != (32 & t2), this.tagNumber = 31 & t2, 31 == this.tagNumber) {
            for (var r2 = new s.a(); t2 = e2.get(), r2.mulAdd(128, 127 & t2), 128 & t2; )
              ;
            this.tagNumber = r2.simplify();
          }
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return s;
        }), n.prototype.mulAdd = function(e2, t2) {
          for (var r2, s2 = this.buf, n2 = s2.length, i = 0; i < n2; ++i)
            (r2 = s2[i] * e2 + t2) < 1e13 ? t2 = 0 : r2 -= 1e13 * (t2 = 0 | r2 / 1e13), s2[i] = r2;
          0 < t2 && (s2[i] = t2);
        }, n.prototype.sub = function(e2) {
          for (var t2, r2 = this.buf, s2 = r2.length, n2 = 0; n2 < s2; ++n2)
            e2 = (t2 = r2[n2] - e2) < 0 ? (t2 += 1e13, 1) : 0, r2[n2] = t2;
          for (; 0 === r2[r2.length - 1]; )
            r2.pop();
        }, n.prototype.simplify = function() {
          var e2 = this.buf;
          return 1 == e2.length ? e2[0] : this;
        };
        var s = n;
        function n(e2) {
          this.buf = [+e2 || 0];
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return I;
        });
        var s = r(6), n = r(2), i = r(62), o = r(63), a = r(64), u = r(67), c = r(73), l = r(74), d = r(75), p = r(77), h = r(1), f = r(0), m = (t = function(e2, t2, r2, s2) {
          var n2, i2 = arguments.length, o2 = i2 < 3 ? t2 : null === s2 ? s2 = Object.getOwnPropertyDescriptor(t2, r2) : s2;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            o2 = Reflect.decorate(e2, t2, r2, s2);
          else
            for (var a2 = e2.length - 1; 0 <= a2; a2--)
              (n2 = e2[a2]) && (o2 = (i2 < 3 ? n2(o2) : 3 < i2 ? n2(t2, r2, o2) : n2(t2, r2)) || o2);
          return 3 < i2 && o2 && Object.defineProperty(t2, r2, o2), o2;
        }, f.X.Database), g = f.X.Manager, _ = f.X.User, b = f.X.Conversation, v = f.X.Room, y = f.X.Group, M = f.X.Call, k = f.X.Friend, I = (S.prototype.handleBizPushEvent = function(e2, t2, r2) {
          var s2 = "";
          switch (e2) {
            case f.d.p_c2c_msg.cmd:
            case f.d.p_rm_msg.cmd:
            case f.d.p_gp_msg.cmd:
              return s2 = this.cvMgr.onPushMessage(t2, e2), this.addMsgPushEvent(e2, r2, s2, t2);
            case f.d.p_c2c_cmd.cmd:
            case f.d.p_rm_cmd.cmd:
            case f.d.p_gp_cmd.cmd:
              return s2 = this.cvMgr.onPushCommand(t2, e2), this.addMsgPushEvent(e2, r2, s2, t2);
            case f.d.p_msg_all.cmd:
              return this.cvMgr.onPushBroadcastMessage(t2), this.addMsgPushEvent(e2, r2, "", t2);
            case f.d.p_read_receipt.cmd:
              return this.cvMgr.onPushReadReceipt(t2);
            case f.d.p_msg_revoke.cmd:
              return this.cvMgr.onPushMsgRevoke(t2);
            case f.d.p_reaction.cmd:
              return this.cvMgr.onPushReaction(t2);
            case f.d.p_rm_enter.cmd:
              return this.gpMgr.onPushRoomEnter(t2);
            case f.d.p_rm_quit.cmd:
              return this.gpMgr.onPushRoomQuit(t2);
            case f.d.p_rm_kickout.cmd:
              return this.gpMgr.onPushRoomKickout(t2);
            case f.d.p_rm_attrs.cmd:
              return this.gpMgr.onPushRoomAttrMdf(t2);
            case f.d.p_rm_user_attrs.cmd:
              return this.gpMgr.onPushRoomUserAttrMdf(t2);
            case f.d.p_gp_create.cmd:
              return this.gpMgr.onPushGroupCreate(t2);
            case f.d.p_gp_invite.cmd:
              return this.gpMgr.onPushGroupJoin(t2, false);
            case f.d.p_gp_member_kickout.cmd:
              return this.gpMgr.onPushGroupDestroy(t2, f.K.KickedOut);
            case f.d.p_gp_destroy.cmd:
              return this.gpMgr.onPushGroupDestroy(t2, f.K.Dismissed);
            case f.d.p_gp_mdf_data.cmd:
              return this.gpMgr.onPushGroupDataModify(t2);
            case f.d.p_gp_mdf_attr.cmd:
              return this.gpMgr.onPushGroupAttrMdf(t2);
            case f.d.p_gp_owner_transfer.cmd:
              return this.gpMgr.onPushGroupOwnerTransfer(t2);
            case f.d.p_gp_member_change.cmd:
              return this.gpMgr.onPushGroupMemberChange(t2);
            case f.d.p_gp_apply.cmd:
              return this.gpMgr.onPushGroupApply(t2);
            case f.d.p_gp_enter_apply.cmd:
              return this.gpMgr.onPushGroupEnterApply(t2);
            case f.d.p_cl_invite.cmd:
              return this.clMgr.onPushCallInvited(t2);
            case f.d.p_cl_cancel.cmd:
              return this.clMgr.onPushCallCancel(t2);
            case f.d.p_cl_accept.cmd:
              return this.clMgr.onPushCallAccept(t2);
            case f.d.p_cl_refuse.cmd:
              return this.clMgr.onPushCallReject(t2);
            case f.d.p_cl_inviting.cmd:
              return this.clMgr.onPushCallingInvite(t2);
            case f.d.p_cl_quit.cmd:
              return this.clMgr.onPushCallQuit(t2);
            case f.d.p_cl_destroy.cmd:
              return this.clMgr.onPushCallEnd(t2);
            case f.d.p_cl_ack.cmd:
              return this.clMgr.onPushCallAck(t2);
            case f.d.p_cl_enter.cmd:
              return this.clMgr.onPushCallEnter(t2);
            case f.d.p_cl_ack_timeout.cmd:
              return this.clMgr.onPushCallAckTimeout(t2);
            case f.d.p_fd_add.cmd:
              return this.fdMgr.onPushFriendAdded(t2);
            case f.d.p_fd_del.cmd:
              return this.fdMgr.onPushFriendDeleted(t2);
            case f.d.p_fd_del_all.cmd:
              return this.fdMgr.onPushFriendAllDeleted(t2);
            case f.d.p_fd_apply.cmd:
              return this.fdMgr.onPushFriendApply(t2);
            case f.d.p_fd_accept.cmd:
              return this.fdMgr.onPushFriendAccept(t2);
            case f.d.p_fd_refuse.cmd:
              return this.fdMgr.onPushFriendReject(t2);
            case f.d.p_log.cmd:
              return this.lg.upload("push", true);
            case f.d.mp_user_mdf.cmd:
              return this.urMgr.onPushUpdateSelf(t2);
            case f.d.mp_msg_del.cmd:
              return this.cvMgr.onPushMsgDelete(t2);
            case f.d.mp_conv_del.cmd:
              return this.cvMgr.onPushConvDelete(t2);
            case f.d.mp_conv_read.cmd:
              return this.cvMgr.onPushConvRead(t2);
            case f.d.mp_conv_pinned.cmd:
              return this.cvMgr.onPushConvPinned(t2);
            case f.d.mp_conv_mark.cmd:
              return this.cvMgr.onPushConvMark(t2);
            case f.d.mp_gp_notify.cmd:
              return this.cvMgr.onPushConvNotify(t2);
            case f.d.mp_c2c_notify.cmd:
              return this.cvMgr.onPushC2CMute(t2);
            case f.d.mp_del_all_conv.cmd:
              return this.cvMgr.onPushConvAllDelete(t2);
            case f.d.mp_clean_unread.cmd:
              return this.cvMgr.onPushCleanAllUnread(t2);
            case f.d.mp_clean_all_msg.cmd:
              return this.cvMgr.onPushCleanAllMsgs(t2);
            case f.d.mp_gp_enter.cmd:
              return this.gpMgr.onPushGroupJoin(t2, true);
            case f.d.mp_gp_quit.cmd:
              return this.gpMgr.onPushGroupDestroy(t2, f.K.Left);
            case f.d.mp_bl_add.cmd:
              return this.fdMgr.onPushBlacklistAdded(t2);
            case f.d.mp_bl_del.cmd:
              return this.fdMgr.onPushBlacklistDeleted(t2);
            case f.d.mp_fd_add.cmd:
              return this.fdMgr.onPushFriendAdded(t2, true);
            case f.d.mp_fd_del.cmd:
              return this.fdMgr.onPushFriendDeleted(t2, true);
            case f.d.mp_fd_app.cmd:
              return this.fdMgr.onPushFriendApply(t2, true);
            case f.d.mp_fd_apt.cmd:
              return this.fdMgr.onPushFriendAccept(t2);
            case f.d.mp_fd_rfe.cmd:
              return this.fdMgr.onPushFriendReject(t2);
            case f.d.mp_fd_attr_mdf.cmd:
              return this.fdMgr.onPushFriendAttrMdf(t2);
            case f.d.mp_fd_remark_mdf.cmd:
              return this.fdMgr.onPushFriendRemarkUpdated(t2);
          }
        }, S.prototype.addMsgPushEvent = function(e2, t2, r2, s2) {
          (t2 < -200 || 200 < t2) && this.dr.reportPushEvent(e2, t2, r2, s2), 0 < t2 && this.msgPushMap[e2].times.push(t2);
        }, S.prototype.addMsgPushDelay = function(e2, t2, r2) {
          var s2, n2, i2, o2 = t2.length;
          o2 < 1 || (n2 = t2[s2 = 0], i2 = 0, t2.forEach(function(e3) {
            s2 += e3, e3 < n2 && (n2 = e3), i2 < e3 && (i2 = e3);
          }), t2.length = 0, r2.flag = true, r2[e2 + "_count"] = o2, r2[e2 + "_ave_time_consumed"] = Math.floor(s2 / o2), r2[e2 + "_max_time_consumed"] = i2, r2[e2 + "_min_time_consumed"] = n2);
        }, S.prototype.createNotLoggedError = function(e2, t2) {
          var r2;
          if (!this.econf.user.userID || !this.econf.token)
            return r2 = Object(h.y)(6000121, t2), this.lg.w(e2, t2, r2), r2;
        }, S.prototype.setZPNsContext = function(e2) {
          var t2 = e2.pushSDKVersion.length, r2 = e2.pushID.length, n2 = new Uint8Array(9 + t2 + r2);
          n2[0] = 175, n2[1] = 0, n2[2] = 1, n2[3] = 1, n2[4] = 7, n2[5] = 0, n2[6] = t2, n2[7] = r2 >> 8, n2[8] = r2 - (n2[7] << 8), n2.set(Object(h.k)(e2.pushSDKVersion), 9), n2.set(Object(h.k)(e2.pushID), 9 + t2), r2 = s.a.fromUint8Array(n2);
          this.econf.ZPNsPushID = r2, this.urMgr && this.urMgr.reportZPNs(), e2.base64 = r2, this.lg.i(g, "ZPNs", e2);
        }, S.prototype.setContext = function(e2) {
          this.bus.setContext(e2);
        }, S.prototype.destroy = function() {
          this.bus && this.bus.off(), this.bus = null, this.gpMgr.destroy(), this.gpMgr = null, this.cvMgr.destroy(), this.cvMgr = null, this.urMgr.destroy(), this.urMgr = null, this.clMgr.destroy(), this.clMgr = null, this.fdMgr.destroy(), this.fdMgr = null, this.cnMgr.destroy(), this.cnMgr = null, this.dbMgr.destroy(), this.dbMgr = null, this.lg = null, this.econf = null;
        }, S.prototype.uploadLog = function() {
          return this.lg.upload("apicall", true);
        }, S.prototype.on = function(e2, t2) {
          var r2 = this;
          "function" == typeof t2 && (this.bus.on(e2, t2), this.evLog.on.length || setTimeout(function() {
            r2.lg.i(g, "API.on", r2.evLog.on.join()), r2.evLog.on.length = 0;
          }, 10), this.evLog.on.push(e2));
        }, S.prototype.off = function(e2) {
          var t2 = this;
          this.bus.off(e2), this.evLog.off.length || setTimeout(function() {
            t2.lg.i(g, "API.off", t2.evLog.off.join()), t2.evLog.off.length = 0;
          }, 10), this.evLog.off.push(e2);
        }, S.prototype.login = function(e2, t2) {
          var r2 = this.pv.validID("userID", e2, _, f.W.Login);
          return r2 ? Promise.reject(r2) : this.urMgr.login(e2, t2);
        }, S.prototype.logout = function() {
          this.urMgr.logout();
        }, S.prototype.renewToken = function(e2) {
          return this.urMgr.renewToken(e2);
        }, S.prototype.queryUsers = function(e2, t2) {
          var r2 = this.pv.validArray("userIDs", e2, _, f.W.QueryUsers);
          return r2 ? Promise.reject(r2) : this.cvMgr.queryUsers(e2, t2);
        }, S.prototype.updateUserName = function(e2) {
          var t2 = this.pv.validName("userName", e2, _, f.W.UpdateUserName);
          return t2 ? Promise.reject(t2) : this.urMgr.updateName(e2);
        }, S.prototype.updateUserAvatar = function(e2) {
          var t2 = this.pv.validName("userAvatarUrl", e2, _, f.W.UpdateUserAvatar);
          return t2 ? Promise.reject(t2) : this.urMgr.updateAvatar(e2);
        }, S.prototype.updateUserExt = function(e2) {
          var t2 = this.pv.validName("extendedData", e2, _, f.W.UpdateUserExt);
          return t2 ? Promise.reject(t2) : this.urMgr.updateExt(e2);
        }, S.prototype.updateUserRule = function(e2) {
          var t2 = this.pv.updateRule(e2);
          return t2 ? Promise.reject(t2) : this.urMgr.updateRule(e2);
        }, S.prototype.querySelf = function() {
          return this.urMgr.querySelf();
        }, S.prototype.queryConv = function(e2, t2) {
          var r2 = this.pv.validConvIDAndType(e2, t2, f.W.QueryConv);
          return r2 ? Promise.reject(r2) : this.cvMgr.query(e2, t2);
        }, S.prototype.queryConvs = function(e2, t2) {
          var r2 = this.pv.validCount(e2, b, f.W.QueryConvs);
          return r2 ? Promise.reject(r2) : this.cvMgr.queryList(e2, t2);
        }, S.prototype.queryPinneds = function(e2) {
          var t2 = this.pv.validCount(e2, b, f.W.QueryPinneds);
          return t2 ? Promise.reject(t2) : this.cvMgr.queryPinneds(e2);
        }, S.prototype.queryUnreadCount = function(e2) {
          return this.cvMgr.queryUnreadCount(e2);
        }, S.prototype.delConv = function(e2, t2, r2) {
          var s2 = this.pv.validConvIDAndType(e2, t2, f.W.DelConv);
          return s2 ? Promise.reject(s2) : this.cvMgr.delete(e2, t2, r2);
        }, S.prototype.delAllConv = function(e2) {
          return this.cvMgr.deleteAll(e2);
        }, S.prototype.clearUnreadCount = function(e2, t2) {
          var r2 = this.pv.validConvIDAndType(e2, t2, f.W.ClearUnreadCount);
          return r2 ? Promise.reject(r2) : this.cvMgr.clearUnreadCount(e2, t2);
        }, S.prototype.clearAllUnreadCount = function() {
          return this.cvMgr.clearAllUnreadCount();
        }, S.prototype.delAllConvMsgs = function(e2) {
          return this.cvMgr.delAllConvMsgs(e2);
        }, S.prototype.setNotifyStatus = function(e2, t2, r2) {
          var s2 = this.pv.setNotifyStatus(e2, t2, r2);
          return s2 ? Promise.reject(s2) : this.cvMgr.setNotifyStatus(e2, t2, r2);
        }, S.prototype.updatePinnedState = function(e2, t2, r2) {
          var s2 = this.pv.validConvIDAndType(t2, r2, f.W.UpdatePinned);
          return s2 ? Promise.reject(s2) : this.cvMgr.updatePinnedState(!!e2, t2, r2);
        }, S.prototype.setConvDraft = function(e2, t2, r2) {
          var s2 = this.pv.setConvDraft(t2, r2, e2);
          return s2 ? Promise.reject(s2) : this.cvMgr.setConvDraft(e2, t2, r2);
        }, S.prototype.setConvMark = function(e2, t2, r2) {
          var s2 = this.pv.setConvMark(e2, r2);
          return s2 ? Promise.reject(s2) : this.cvMgr.setMark(e2, !!t2, r2);
        }, S.prototype.sendMsg = function(e2, t2, r2, s2, n2) {
          var i2, o2 = this.pv.sendMsg(e2, t2, r2, s2) || this.pv.sendCombineMsg(e2, this.econf.cloudSetting.scale.cb_msg_title_len, this.econf.cloudSetting.scale.cb_msg_summary_len);
          return o2 ? (i2 = { status: f.eb.Failed, message: e2 }, this.bus.emit(f.u.MsgSentStatus, { infos: [i2] }), Promise.reject(o2)) : this.cvMgr.sendMsg(e2, t2, r2, s2, n2);
        }, S.prototype.sendMediaMsg = function(e2, t2, r2, s2, n2) {
          var i2, o2 = e2;
          return (e2 = this.pv.sendMediaMsg(e2, t2, r2, s2)) ? (i2 = { status: f.eb.Failed, message: o2 }, this.bus.emit(f.u.MsgSentStatus, { infos: [i2] }), Promise.reject(e2)) : this.cvMgr.sendMediaMsg(o2, t2, r2, s2, n2);
        }, S.prototype.delMsgs = function(e2, t2, r2, s2) {
          s2 = Object.assign({ isAlsoDeleteServerMessage: true }, s2);
          var n2 = this.pv.delMsgs(e2, t2, r2, s2);
          return n2 ? Promise.reject(n2) : e2.length || s2.isAlsoDeleteServerMessage ? this.cvMgr.delMsgs(e2, t2, r2, s2) : Promise.resolve({ conversationID: t2, conversationType: r2 });
        }, S.prototype.delAllMsg = function(e2, t2, r2) {
          var s2 = this.pv.validConvIDAndType(e2, t2, f.W.DelAllMsg);
          return s2 ? Promise.reject(s2) : this.cvMgr.delAllMsg(e2, t2, r2);
        }, S.prototype.queryHistoryMsg = function(e2, t2, r2) {
          var s2 = this.pv.queryHistoryMsg(e2, t2, r2);
          return s2 ? Promise.reject(s2) : r2.count < 1 ? Promise.resolve({ conversationID: e2, conversationType: t2, messageList: [] }) : this.cvMgr.queryHistoryMsg(e2, t2, r2);
        }, S.prototype.insertMsg = function(e2, t2, r2, s2) {
          var n2 = this.pv.insertMsg(e2, t2, r2, s2);
          return n2 ? Promise.reject(n2) : this.cvMgr.insertMsg(e2, t2, r2, s2);
        }, S.prototype.updateMsgLocalExt = function(e2, t2) {
          var r2 = this.pv.updateMsgLocalExt(e2, t2);
          return r2 ? Promise.reject(r2) : this.cvMgr.updateMsgLocalExt(e2, t2);
        }, S.prototype.revokeMsg = function(e2, t2) {
          var r2 = this.pv.validSDKMsg(e2, f.W.RevokeMsg);
          return r2 ? Promise.reject(r2) : this.cvMgr.revokeMsg(e2, t2);
        }, S.prototype.queryCombineMsg = function(e2) {
          var t2 = this.pv.queryCombineMsg(e2);
          return t2 ? Promise.reject(t2) : this.cvMgr.queryCombineMsg(e2);
        }, S.prototype.sendConvReceipt = function(e2, t2) {
          var r2 = this.pv.sendConvReceipt(e2, t2);
          return r2 ? Promise.reject(r2) : this.cvMgr.sendConvReceipt(e2, t2);
        }, S.prototype.sendMsgReceipt = function(e2, t2, r2) {
          var s2 = this.pv.sendMsgReceipt(e2, t2, r2);
          return s2 ? Promise.reject(s2) : this.cvMgr.sendMsgReceipt(e2, t2, r2);
        }, S.prototype.queryMsgReceipt = function(e2, t2, r2) {
          var s2 = this.pv.queryMsgReceipt(e2, t2, r2);
          return s2 ? Promise.reject(s2) : this.cvMgr.queryMsgReceipt(e2, t2, r2);
        }, S.prototype.queryReceiptMembers = function(e2, t2, r2, s2) {
          var n2 = this.econf.user.userID;
          return (n2 = this.pv.queryReceiptMembers(e2, t2, r2, s2, n2)) ? Promise.reject(n2) : r2.count < 1 || e2.direction == f.Y.Receive ? Promise.resolve({ groupID: t2, nextFlag: 0, userList: [] }) : this.gpMgr.queryReceiptMembers(e2, t2, r2, s2, true);
        }, S.prototype.addMsgReaction = function(e2, t2) {
          var r2 = this.pv.msgReaction(e2, t2, true);
          return r2 ? Promise.reject(r2) : this.cvMgr.addMsgReaction(e2, t2);
        }, S.prototype.delMsgReaction = function(e2, t2) {
          var r2 = this.pv.msgReaction(e2, t2);
          return r2 ? Promise.reject(r2) : this.cvMgr.delMsgReaction(e2, t2);
        }, S.prototype.queryMsgReactions = function(e2, t2) {
          var r2 = this.pv.queryMsgBase(e2, t2, f.W.QueryReaction, false);
          return r2 ? Promise.reject(r2) : this.cvMgr.queryMsgReactions(e2, t2);
        }, S.prototype.replyMessage = function(e2, t2, r2, s2) {
          var n2 = this.econf.cloudSetting.scale.cb_msg_title_len, i2 = this.econf.cloudSetting.scale.cb_msg_summary_len;
          return (n2 = this.pv.replyMsg(e2, t2, r2, n2, i2)) ? Promise.reject(n2) : this.cvMgr.replyMessage(e2, t2, r2, s2);
        }, S.prototype.queryReplyMsg = function(e2, t2) {
          var r2 = this.pv.queryMsgBase(e2, t2, f.W.QueryReplyMsg, true);
          return r2 ? Promise.reject(r2) : this.cvMgr.queryReplyMsg(e2, t2);
        }, S.prototype.queryMessages = function(e2, t2, r2) {
          var s2 = this.pv.validConvIDAndType(t2, r2, f.W.QueryMsgs);
          return s2 ? Promise.reject(s2) : this.cvMgr.queryMessages(e2, t2, r2);
        }, S.prototype.createRoom = function(e2, t2) {
          var r2 = this.pv.createRoom(e2, t2);
          return r2 ? Promise.reject(r2) : this.gpMgr.createRoom(e2, t2);
        }, S.prototype.enterRoom = function(e2, t2) {
          var r2 = this.pv.createRoom(e2, t2, true);
          return r2 ? Promise.reject(r2) : this.gpMgr.createRoom(e2, t2, true);
        }, S.prototype.joinRoom = function(e2) {
          var t2 = this.pv.validID("roomID", e2, v, f.W.JoinRoom);
          return t2 ? Promise.reject(t2) : this.gpMgr.joinRoom(e2);
        }, S.prototype.leaveRoom = function(e2) {
          var t2 = this.pv.validID("roomID", e2, v, f.W.LeaveRoom);
          return t2 ? Promise.reject(t2) : this.gpMgr.leaveRoom(e2);
        }, S.prototype.leaveAllRoom = function() {
          return this.gpMgr.leaveAllRoom();
        }, S.prototype.queryRoomMemberList = function(e2, t2) {
          var r2 = this.pv.validCount(t2, v, f.W.QueryRoomMemberList, "roomID", e2);
          return r2 ? Promise.reject(r2) : t2.count < 1 ? Promise.resolve({ roomID: e2, memberList: [], nextFlag: t2.nextFlag || "" }) : this.gpMgr.queryRoomMemberList(e2, t2);
        }, S.prototype.queryRoomMembers = function(e2, t2) {
          var r2 = this.pv.validIDAndArray("roomID", t2, "userIDs", e2, v, f.W.QueryRoomMemberList);
          return r2 ? Promise.reject(r2) : this.gpMgr.queryRoomMembers(e2, t2);
        }, S.prototype.queryRoomOnlineMemberCount = function(e2) {
          var t2 = this.pv.validID("roomID", e2, v, f.W.QueryRoomMemberCount);
          return t2 ? Promise.reject(t2) : this.gpMgr.queryRoomOnlineMemberCount(e2);
        }, S.prototype.queryRoomAllAttr = function(e2) {
          var t2 = this.pv.validID("roomID", e2, v, f.W.QueryRoomAllAttr);
          return t2 ? Promise.reject(t2) : this.gpMgr.queryRoomAllAttr(e2);
        }, S.prototype.setRoomAttr = function(e2, t2, r2) {
          var s2 = this.pv.setRoomAttr(e2, t2);
          return s2 ? Promise.reject(s2) : this.gpMgr.setRoomAttr(e2, t2, r2);
        }, S.prototype.delRoomAttr = function(e2, t2, r2) {
          var s2 = this.pv.validIDAndArray("roomID", t2, "keys", e2, v, f.W.DelRoomAttr);
          return s2 ? Promise.reject(s2) : this.gpMgr.delRoomAttr(e2, t2, r2);
        }, S.prototype.beginRoomAttr = function(e2, t2) {
          this.gpMgr.beginRoomAttr(e2, t2);
        }, S.prototype.endRoomAttr = function(e2) {
          var t2 = this.pv.validID("roomID", e2, v, f.W.EndRoomAttr);
          return t2 ? Promise.reject(t2) : this.gpMgr.endRoomAttr(e2);
        }, S.prototype.setRoomMembersAttr = function(e2, t2, r2, s2) {
          var n2 = this.pv.setRoomMembersAttr(e2, t2, r2);
          return n2 ? Promise.reject(n2) : this.gpMgr.setRoomMembersAttr(e2, t2, r2, s2);
        }, S.prototype.queryRoomMembersAttr = function(e2, t2) {
          var r2 = this.pv.validIDAndArray("roomID", t2, "userIDs", e2, v, f.W.QueryRoomMembersAttr);
          return r2 ? Promise.reject(r2) : this.gpMgr.queryRoomMembersAttr(e2, t2);
        }, S.prototype.queryRoomMemberAttrs = function(e2, t2) {
          var r2 = this.pv.validID("roomID", e2, v, f.W.QueryRoomMemberAttrs);
          return r2 ? Promise.reject(r2) : this.gpMgr.queryRoomMemberAttrs(e2, t2);
        }, S.prototype.createGroup = function(e2, t2, r2) {
          e2 = Object.assign({}, e2), r2 = Object.assign({ groupAttributes: {}, groupNotice: "" }, r2);
          var s2 = this.pv.createGroup(e2, t2, r2);
          return s2 ? Promise.reject(s2) : this.gpMgr.createGroup(e2, t2, r2);
        }, S.prototype.joinGroup = function(e2, t2, r2) {
          var s2 = e2 ? f.W.JoinGroup : f.W.SendGroupJoinApp;
          return (s2 = this.pv.validID("groupID", t2, y, s2)) ? Promise.reject(s2) : this.gpMgr.joinGroup(e2, t2, r2);
        }, S.prototype.leaveGroup = function(e2) {
          var t2 = this.pv.validID("groupID", e2, y, f.W.LeaveGroup);
          return t2 ? Promise.reject(t2) : this.gpMgr.leaveGroup(e2);
        }, S.prototype.dismissGroup = function(e2) {
          var t2 = this.pv.validID("groupID", e2, y, f.W.DismissGroup);
          return t2 ? Promise.reject(t2) : this.gpMgr.dismissGroup(e2);
        }, S.prototype.queryGroupList = function() {
          return this.gpMgr.queryGroupList();
        }, S.prototype.updateGroupInfo = function(e2, t2, r2) {
          var s2 = this.pv.validIDAndName("groupID", t2, ["groupNotice", "groupName", "groupAvatarUrl"][r2], e2, y, f.W.UpdateGroup);
          return s2 ? Promise.reject(s2) : this.gpMgr.updateGroupInfo(e2, t2, r2);
        }, S.prototype.muteGroup = function(e2, t2, r2) {
          return r2 = Object.assign({ mode: f.T.All, duration: -1, roles: [] }, r2), e2 || (r2.mode = f.T.None, r2.duration = 0, r2.roles = []), (e2 = this.pv.muteGroup(t2, r2, e2)) ? Promise.reject(e2) : this.gpMgr.muteGroup(t2, r2);
        }, S.prototype.queryGroupInfo = function(e2) {
          var t2 = this.pv.validID("groupID", e2, y, f.W.QueryGroup);
          return t2 ? Promise.reject(t2) : this.gpMgr.queryGroupInfo(e2);
        }, S.prototype.setGroupAttr = function(e2, t2) {
          var r2 = this.pv.setGroupAttr(e2, t2);
          return r2 ? Promise.reject(r2) : this.gpMgr.setGroupAttr(e2, t2);
        }, S.prototype.delGroupAttr = function(e2, t2) {
          var r2 = this.pv.validIDAndArray("groupID", t2, "keys", e2, y, f.W.DelGroupAttrs);
          return r2 ? Promise.reject(r2) : this.gpMgr.delGroupAttr(e2, t2);
        }, S.prototype.queryGroupAttr = function(e2, t2) {
          var r2 = this.pv.queryGroupAttr(e2, t2);
          return r2 ? Promise.reject(r2) : this.gpMgr.queryGroupAttr(e2, t2);
        }, S.prototype.transferGroupOwner = function(e2, t2) {
          var r2 = this.pv.validTwoID("toUserID", e2, "groupID", t2, y, f.W.TransferGroupOwner);
          return r2 ? Promise.reject(r2) : this.gpMgr.transferGroupOwner(e2, t2);
        }, S.prototype.inviteToGroup = function(e2, t2, r2, s2) {
          var n2 = this.pv.validIDAndArray("groupID", r2, "userIDs", t2, y, e2 ? f.W.SendGroupInviteApps : f.W.InviteIntoGroup);
          return n2 ? Promise.reject(n2) : this.gpMgr.inviteToGroup(e2, t2, r2, s2);
        }, S.prototype.kickGroupMembers = function(e2, t2) {
          var r2 = this.pv.validIDAndArray("groupID", t2, "userIDs", e2, y, f.W.KickGroupMembers);
          return r2 ? Promise.reject(r2) : this.gpMgr.kickGroupMembers(e2, t2);
        }, S.prototype.queryGroupMembers = function(e2, t2) {
          t2 = Object.assign({ count: 100, nextFlag: 0 }, t2);
          var r2 = this.pv.validCount(t2, y, f.W.QueryGroupMembers, "groupID", e2);
          return r2 ? Promise.reject(r2) : t2.count < 1 ? Promise.resolve({ groupID: e2, userList: [], nextFlag: t2.nextFlag }) : this.gpMgr.queryGroupMembers(e2, t2);
        }, S.prototype.queryGroupMemberCount = function(e2) {
          var t2 = this.pv.validID("groupID", e2, y, f.W.QueryGroupMemberCount);
          return t2 ? Promise.reject(t2) : this.gpMgr.queryGroupMemberCount(e2);
        }, S.prototype.muteGroupMembers = function(e2, t2, r2, s2) {
          var n2 = this.pv.validIDAndArray("groupID", r2, "userIDs", t2, y, f.W.MuteGroupMembers);
          return n2 ? Promise.reject(n2) : this.gpMgr.muteGroupMembers(e2, t2, r2, s2);
        }, S.prototype.queryGroupMemberMutedList = function(e2, t2) {
          t2 = Object.assign({ count: 100, nextFlag: 0 }, t2);
          var r2 = this.pv.validCount(t2, y, f.W.QueryGroupMemberMuteds, "groupID", e2);
          return r2 ? Promise.reject(r2) : t2.count < 1 ? Promise.resolve({ groupID: e2, userList: [], nextFlag: t2.nextFlag }) : this.gpMgr.queryGroupMemberMutedList(e2, t2);
        }, S.prototype.setGroupMemberNickname = function(e2, t2, r2) {
          var s2 = this.pv.setMemberNickname(e2, t2, r2);
          return s2 ? Promise.reject(s2) : this.gpMgr.setGroupMemberNickname(e2, t2, r2);
        }, S.prototype.setGroupMemberRole = function(e2, t2, r2) {
          var s2 = this.pv.setMemberRole(e2, t2, r2);
          return s2 ? Promise.reject(s2) : this.gpMgr.setGroupMemberRole(e2, t2, r2);
        }, S.prototype.queryGroupMemberInfo = function(e2, t2) {
          var r2 = this.pv.validTwoID("userID", e2, "groupID", t2, y, f.W.QueryGroupMember);
          return r2 ? Promise.reject(r2) : this.gpMgr.queryGroupMemberInfo(e2, t2);
        }, S.prototype.updateGroupVerifyMode = function(e2, t2, r2) {
          var s2 = this.pv.updateGroupVerifyMode(e2, t2, r2);
          return s2 ? Promise.reject(s2) : this.gpMgr.updateGroupVerifyMode(e2, t2, r2);
        }, S.prototype.acceptGroupApply = function(e2, t2, r2, s2) {
          var n2 = this.pv.validTwoID("userID", t2, "groupID", r2, y, "API.acceptGroupApplication");
          return n2 ? Promise.reject(n2) : this.gpMgr.acceptGroupApply(e2, t2, r2, s2);
        }, S.prototype.rejectGroupApply = function(e2, t2, r2, s2) {
          var n2 = this.pv.validTwoID("userID", t2, "groupID", r2, y, "API.rejectGroupApplication");
          return n2 ? Promise.reject(n2) : this.gpMgr.rejectGroupApply(e2, t2, r2, s2);
        }, S.prototype.queryGroupApplyList = function(e2) {
          e2 = Object.assign({ count: 100, nextFlag: 0 }, e2);
          var t2 = this.pv.validCount(e2, y, f.W.QueryGroupApps);
          return t2 ? Promise.reject(t2) : e2.count < 1 ? Promise.resolve({ applicationList: [], nextFlag: e2.nextFlag }) : this.gpMgr.queryGroupApplyList(e2);
        }, S.prototype.callInvite = function(e2, t2) {
          var r2 = this.pv.callInvite(e2, t2);
          return r2 ? Promise.reject(r2) : this.clMgr.callInvite(e2, t2);
        }, S.prototype.callCancel = function(e2, t2, r2) {
          var s2 = this.pv.validCallID(t2, f.W.CallCancel);
          return s2 ? Promise.reject(s2) : this.clMgr.callCancel(e2, t2, r2);
        }, S.prototype.callAccept = function(e2, t2) {
          var r2 = this.pv.validCallID(e2, f.W.CallAccept);
          return r2 ? Promise.reject(r2) : this.clMgr.callAccept(e2, t2);
        }, S.prototype.callReject = function(e2, t2) {
          var r2 = this.pv.validCallID(e2, f.W.CallReject);
          return r2 ? Promise.reject(r2) : this.clMgr.callReject(e2, t2);
        }, S.prototype.callQuit = function(e2, t2) {
          var r2 = this.pv.validCallID(e2, f.W.CallQuit);
          return r2 ? Promise.reject(r2) : this.clMgr.callQuit(e2, t2);
        }, S.prototype.callJoin = function(e2, t2) {
          var r2 = this.pv.validCallID(e2, f.W.CallJoin);
          return r2 ? Promise.reject(r2) : this.clMgr.callJoin(e2, t2);
        }, S.prototype.callEnd = function(e2, t2) {
          var r2 = this.pv.validCallID(e2, f.W.CallEnd);
          return r2 ? Promise.reject(r2) : this.clMgr.callEnd(e2, t2);
        }, S.prototype.callingInvite = function(e2, t2, r2) {
          var s2 = this.pv.validIDAndArray("callID", t2, "invitees", e2, M, f.W.CallingInvite);
          return s2 ? Promise.reject(s2) : this.clMgr.callingInvite(e2, t2, r2);
        }, S.prototype.queryCalls = function(e2) {
          return this.clMgr.queryList(e2);
        }, S.prototype.searchConv = function(e2) {
          var t2 = this;
          if (h.p)
            return Promise.resolve({ conversationSearchInfoList: [] });
          var r2 = this.pv.searchConv(e2);
          return r2 ? Promise.reject(r2) : this.dbMgr.searchConversations(e2).then(function(e3) {
            return e3.conversationSearchInfoList.forEach(function(e4) {
              e4.messageList = e4.messageList.map(function(e5) {
                return t2.pb.handleDBMessage(t2.econf, e5);
              });
            }), e3;
          });
        }, S.prototype.searchGlobalMsg = function(e2) {
          var t2 = this;
          if (h.p)
            return Promise.resolve({ messageList: [] });
          var r2 = this.pv.searchMsg(e2, f.W.SearchGlobalMsg);
          return r2 ? Promise.reject(r2) : this.dbMgr.searchGlobalMessages(e2).then(function(e3) {
            return e3.messageList = e3.messageList.map(function(e4) {
              return t2.pb.handleDBMessage(t2.econf, e4);
            }), e3;
          });
        }, S.prototype.searchMsg = function(e2, t2, r2) {
          var s2 = this;
          if (h.p)
            return Promise.resolve({ conversationID: e2, conversationType: t2, messageList: [] });
          var n2 = this.pv.validConvIDAndType(e2, t2, f.W.SearchMsg) || this.pv.searchMsg(r2, f.W.SearchMsg);
          return n2 ? Promise.reject(n2) : this.dbMgr.searchMessages(e2, t2, r2).then(function(e3) {
            return e3.messageList = e3.messageList.map(function(e4) {
              return s2.pb.handleDBMessage(s2.econf, e4);
            }), e3;
          });
        }, S.prototype.searchGroup = function(e2) {
          if (h.p)
            return Promise.resolve({ nextFlag: 0, groupSearchInfoList: [] });
          var t2 = this.pv.searchBase(e2, f.W.SearchGroup);
          return t2 ? Promise.reject(t2) : this.gpMgr.searchGroups(e2);
        }, S.prototype.searchGroupMember = function(e2, t2) {
          if (h.p)
            return Promise.resolve({ nextFlag: 0, groupID: e2, userList: [] });
          var r2 = this.pv.validID("groupID", e2, m, f.W.SearchGroupMember) || this.pv.searchBase(t2, f.W.SearchGroupMember);
          return r2 ? Promise.reject(r2) : this.dbMgr.searchGroupMembers(e2, t2);
        }, S.prototype.searchFriend = function(e2) {
          if (h.p)
            return Promise.resolve({ nextFlag: 0, friendInfoList: [] });
          var t2 = this.pv.searchBase(e2, f.W.SearchFriend);
          return t2 ? Promise.reject(t2) : this.fdMgr.searchFriends(e2);
        }, S.prototype.addFriend = function(e2, t2) {
          var r2 = this.pv.addFriend(e2, t2);
          return r2 ? Promise.reject(r2) : this.fdMgr.addFriend(e2, t2);
        }, S.prototype.sendFriendApply = function(e2, t2) {
          var r2 = this.pv.addFriend(e2, t2);
          return r2 ? Promise.reject(r2) : this.fdMgr.sendFriendApply(e2, t2);
        }, S.prototype.delFriends = function(e2, t2) {
          var r2 = this.pv.validArray("userIDs", e2, k, f.W.DelFriends);
          return r2 ? Promise.reject(r2) : this.fdMgr.deleteFriends(e2, t2);
        }, S.prototype.checkFriendsRelation = function(e2, t2) {
          var r2 = this.pv.validArray("userIDs", e2, k, f.W.CheckFriends);
          return r2 ? Promise.reject(r2) : this.fdMgr.checkFriendsRelation(e2, t2);
        }, S.prototype.updateFriendAlias = function(e2, t2) {
          var r2 = this.pv.updateFriendAlias(e2, t2);
          return r2 ? Promise.reject(r2) : this.fdMgr.updateFriendAlias(e2, t2);
        }, S.prototype.updateFriendAttr = function(e2, t2) {
          var r2 = this.pv.updateFriendAttr(e2, t2);
          return r2 ? Promise.reject(r2) : this.fdMgr.updateFriendAttr(e2, t2);
        }, S.prototype.acceptFriendApply = function(e2, t2) {
          var r2 = this.pv.acceptFriendApply(e2, t2);
          return r2 ? Promise.reject(r2) : this.fdMgr.acceptFriendApply(e2, t2);
        }, S.prototype.rejectFriendApply = function(e2, t2) {
          return this.fdMgr.rejectFriendApply(e2, t2);
        }, S.prototype.queryFriendsInfo = function(e2) {
          var t2 = this.pv.validArray("userIDs", e2, k, f.W.QueryFriends, 20);
          return t2 ? Promise.reject(t2) : this.fdMgr.queryFriendsInfo(e2);
        }, S.prototype.queryFriendList = function(e2) {
          var t2 = this.pv.validCount(e2, k, f.W.QueryFriendList);
          return t2 ? Promise.reject(t2) : this.fdMgr.queryFriendList(e2);
        }, S.prototype.queryFriendApplyList = function(e2) {
          var t2 = this.pv.validCount(e2, k, f.W.QueryFriendApps);
          return t2 ? Promise.reject(t2) : this.fdMgr.queryFriendApplyList(e2);
        }, S.prototype.addBlacklist = function(e2) {
          var t2 = this.pv.validArray("userIDs", e2, k, f.W.AddBlacklist);
          return t2 ? Promise.reject(t2) : this.fdMgr.addBlacklist(e2);
        }, S.prototype.removeBlacklist = function(e2) {
          var t2 = this.pv.validArray("userIDs", e2, k, f.W.RemoveBlacklist);
          return t2 ? Promise.reject(t2) : this.fdMgr.removeBlacklist(e2);
        }, S.prototype.checkBlacklist = function(e2) {
          var t2 = this.pv.validID("userID", e2, k, f.W.CheckBlacklist);
          return t2 ? Promise.reject(t2) : this.fdMgr.checkBlacklist(e2);
        }, S.prototype.queryBlacklist = function(e2) {
          var t2 = this.pv.validCount(e2, k, f.W.QueryBlacklist);
          return t2 ? Promise.reject(t2) : this.fdMgr.queryBlacklist(e2);
        }, t([Object(h.r)(_, f.W.RenewToken)], S.prototype, "renewToken", null), t([Object(h.r)(_, f.W.QueryUsers)], S.prototype, "queryUsers", null), t([Object(h.r)(_, f.W.UpdateUserName)], S.prototype, "updateUserName", null), t([Object(h.r)(_, f.W.UpdateUserAvatar)], S.prototype, "updateUserAvatar", null), t([Object(h.r)(_, f.W.UpdateUserExt)], S.prototype, "updateUserExt", null), t([Object(h.r)(_, f.W.UpdateUserRule)], S.prototype, "updateUserRule", null), t([Object(h.r)(_, f.W.QuerySelf)], S.prototype, "querySelf", null), t([Object(h.r)(b, f.W.QueryConv)], S.prototype, "queryConv", null), t([Object(h.r)(b, f.W.QueryConvs)], S.prototype, "queryConvs", null), t([Object(h.r)(b, f.W.QueryPinneds)], S.prototype, "queryPinneds", null), t([Object(h.r)(b, f.W.QueryUnreadCount)], S.prototype, "queryUnreadCount", null), t([Object(h.r)(b, f.W.DelConv)], S.prototype, "delConv", null), t([Object(h.r)(b, f.W.DelAllConv)], S.prototype, "delAllConv", null), t([Object(h.r)(b, f.W.ClearUnreadCount)], S.prototype, "clearUnreadCount", null), t([Object(h.r)(b, f.W.ClearAllUnreadCount)], S.prototype, "clearAllUnreadCount", null), t([Object(h.r)(b, f.W.DelAllConvMsg)], S.prototype, "delAllConvMsgs", null), t([Object(h.r)(b, f.W.SetNotifyStatus)], S.prototype, "setNotifyStatus", null), t([Object(h.r)(b, f.W.UpdatePinned)], S.prototype, "updatePinnedState", null), t([Object(h.r)(b, f.W.SetConvDraft)], S.prototype, "setConvDraft", null), t([Object(h.r)(b, f.W.SetConvMark)], S.prototype, "setConvMark", null), t([Object(h.r)(b, f.W.SendMsg)], S.prototype, "sendMsg", null), t([Object(h.r)(b, f.W.SendMediaMsg)], S.prototype, "sendMediaMsg", null), t([Object(h.r)(b, f.W.DelMsg)], S.prototype, "delMsgs", null), t([Object(h.r)(b, f.W.DelAllMsg)], S.prototype, "delAllMsg", null), t([Object(h.r)(b, f.W.QueryHistoryMsg)], S.prototype, "queryHistoryMsg", null), t([Object(h.r)(b, f.W.InsertMsg)], S.prototype, "insertMsg", null), t([Object(h.r)(b, f.W.InsertMsg)], S.prototype, "updateMsgLocalExt", null), t([Object(h.r)(b, f.W.RevokeMsg)], S.prototype, "revokeMsg", null), t([Object(h.r)(b, f.W.QueryCombineMsg)], S.prototype, "queryCombineMsg", null), t([Object(h.r)(b, f.W.SendConvReceipt)], S.prototype, "sendConvReceipt", null), t([Object(h.r)(b, f.W.SendReceipts)], S.prototype, "sendMsgReceipt", null), t([Object(h.r)(b, f.W.QueryReceipts)], S.prototype, "queryMsgReceipt", null), t([Object(h.r)(b, "API.queryReceiptMembers")], S.prototype, "queryReceiptMembers", null), t([Object(h.r)(b, f.W.AddReaction)], S.prototype, "addMsgReaction", null), t([Object(h.r)(b, f.W.DelReaction)], S.prototype, "delMsgReaction", null), t([Object(h.r)(b, f.W.QueryReaction)], S.prototype, "queryMsgReactions", null), t([Object(h.r)(b, f.W.ReplyMsg)], S.prototype, "replyMessage", null), t([Object(h.r)(b, f.W.QueryReplyMsg)], S.prototype, "queryReplyMsg", null), t([Object(h.r)(b, f.W.QueryMsgs)], S.prototype, "queryMessages", null), t([Object(h.r)(v, f.W.CreateRoom)], S.prototype, "createRoom", null), t([Object(h.r)(v, f.W.EnterRoom)], S.prototype, "enterRoom", null), t([Object(h.r)(v, f.W.JoinRoom)], S.prototype, "joinRoom", null), t([Object(h.r)(v, f.W.LeaveRoom)], S.prototype, "leaveRoom", null), t([Object(h.r)(v, f.W.LeaveRoom)], S.prototype, "leaveAllRoom", null), t([Object(h.r)(v, f.W.QueryRoomMemberList)], S.prototype, "queryRoomMemberList", null), t([Object(h.r)(v, f.W.QueryRoomMemberList)], S.prototype, "queryRoomMembers", null), t([Object(h.r)(v, f.W.QueryRoomMemberCount)], S.prototype, "queryRoomOnlineMemberCount", null), t([Object(h.r)(v, f.W.QueryRoomAllAttr)], S.prototype, "queryRoomAllAttr", null), t([Object(h.r)(v, f.W.SetRoomAttr)], S.prototype, "setRoomAttr", null), t([Object(h.r)(v, f.W.DelRoomAttr)], S.prototype, "delRoomAttr", null), t([Object(h.r)(v, f.W.EndRoomAttr)], S.prototype, "endRoomAttr", null), t([Object(h.r)(v, f.W.SetRoomMembersAttr)], S.prototype, "setRoomMembersAttr", null), t([Object(h.r)(v, f.W.QueryRoomMembersAttr)], S.prototype, "queryRoomMembersAttr", null), t([Object(h.r)(v, f.W.QueryRoomMemberAttrs)], S.prototype, "queryRoomMemberAttrs", null), t([Object(h.r)(y, f.W.CreateGroup)], S.prototype, "createGroup", null), t([Object(h.r)(y, f.W.JoinGroup)], S.prototype, "joinGroup", null), t([Object(h.r)(y, f.W.LeaveGroup)], S.prototype, "leaveGroup", null), t([Object(h.r)(y, f.W.DismissGroup)], S.prototype, "dismissGroup", null), t([Object(h.r)(y, f.W.QueryGroups)], S.prototype, "queryGroupList", null), t([Object(h.r)(y, f.W.UpdateGroup)], S.prototype, "updateGroupInfo", null), t([Object(h.r)(y, f.W.MuteGroup)], S.prototype, "muteGroup", null), t([Object(h.r)(y, f.W.QueryGroup)], S.prototype, "queryGroupInfo", null), t([Object(h.r)(y, f.W.SetGroupAttr)], S.prototype, "setGroupAttr", null), t([Object(h.r)(y, f.W.DelGroupAttrs)], S.prototype, "delGroupAttr", null), t([Object(h.r)(y, f.W.QueryGroupAttrs)], S.prototype, "queryGroupAttr", null), t([Object(h.r)(y, f.W.TransferGroupOwner)], S.prototype, "transferGroupOwner", null), t([Object(h.r)(y, f.W.InviteIntoGroup)], S.prototype, "inviteToGroup", null), t([Object(h.r)(y, f.W.KickGroupMembers)], S.prototype, "kickGroupMembers", null), t([Object(h.r)(y, f.W.QueryGroupMembers)], S.prototype, "queryGroupMembers", null), t([Object(h.r)(y, f.W.QueryGroupMemberCount)], S.prototype, "queryGroupMemberCount", null), t([Object(h.r)(y, f.W.MuteGroupMembers)], S.prototype, "muteGroupMembers", null), t([Object(h.r)(y, f.W.QueryGroupMemberMuteds)], S.prototype, "queryGroupMemberMutedList", null), t([Object(h.r)(y, f.W.SetGroupMemberNickname)], S.prototype, "setGroupMemberNickname", null), t([Object(h.r)(y, f.W.SetGroupMemberRole)], S.prototype, "setGroupMemberRole", null), t([Object(h.r)(y, f.W.QueryGroupMember)], S.prototype, "queryGroupMemberInfo", null), t([Object(h.r)(y, f.W.UpdateGroupVerifyMode)], S.prototype, "updateGroupVerifyMode", null), t([Object(h.r)(y, "API.acceptGroupApplication")], S.prototype, "acceptGroupApply", null), t([Object(h.r)(y, "API.rejectGroupApplication")], S.prototype, "rejectGroupApply", null), t([Object(h.r)(y, f.W.QueryGroupApps)], S.prototype, "queryGroupApplyList", null), t([Object(h.r)(M, f.W.CallInvite)], S.prototype, "callInvite", null), t([Object(h.r)(M, f.W.CallCancel)], S.prototype, "callCancel", null), t([Object(h.r)(M, f.W.CallAccept)], S.prototype, "callAccept", null), t([Object(h.r)(M, f.W.CallReject)], S.prototype, "callReject", null), t([Object(h.r)(M, f.W.CallQuit)], S.prototype, "callQuit", null), t([Object(h.r)(M, f.W.CallJoin)], S.prototype, "callJoin", null), t([Object(h.r)(M, f.W.CallEnd)], S.prototype, "callEnd", null), t([Object(h.r)(M, f.W.CallingInvite)], S.prototype, "callingInvite", null), t([Object(h.r)(M, f.W.QueryCalls)], S.prototype, "queryCalls", null), t([Object(h.r)(m, f.W.SearchConv)], S.prototype, "searchConv", null), t([Object(h.r)(m, f.W.SearchGlobalMsg)], S.prototype, "searchGlobalMsg", null), t([Object(h.r)(m, f.W.SearchMsg)], S.prototype, "searchMsg", null), t([Object(h.r)(m, f.W.SearchGroup)], S.prototype, "searchGroup", null), t([Object(h.r)(m, f.W.SearchGroupMember)], S.prototype, "searchGroupMember", null), t([Object(h.r)(m, f.W.SearchFriend)], S.prototype, "searchFriend", null), t([Object(h.r)(k, f.W.AddFriend)], S.prototype, "addFriend", null), t([Object(h.r)(k, f.W.SendFriendApp)], S.prototype, "sendFriendApply", null), t([Object(h.r)(k, f.W.DelFriends)], S.prototype, "delFriends", null), t([Object(h.r)(k, f.W.DelFriends)], S.prototype, "checkFriendsRelation", null), t([Object(h.r)(k, f.W.UpdateFriendAlias)], S.prototype, "updateFriendAlias", null), t([Object(h.r)(k, f.W.UpdateFriendAttr)], S.prototype, "updateFriendAttr", null), t([Object(h.r)(k, f.W.AcceptFriendApp)], S.prototype, "acceptFriendApply", null), t([Object(h.r)(k, f.W.RejectFriendApp)], S.prototype, "rejectFriendApply", null), t([Object(h.r)(k, f.W.QueryFriends)], S.prototype, "queryFriendsInfo", null), t([Object(h.r)(k, f.W.QueryFriendList)], S.prototype, "queryFriendList", null), t([Object(h.r)(k, f.W.QueryFriendApps)], S.prototype, "queryFriendApplyList", null), t([Object(h.r)(k, f.W.AddBlacklist)], S.prototype, "addBlacklist", null), t([Object(h.r)(k, f.W.RemoveBlacklist)], S.prototype, "removeBlacklist", null), t([Object(h.r)(k, f.W.CheckBlacklist)], S.prototype, "checkBlacklist", null), t([Object(h.r)(k, f.W.QueryBlacklist)], S.prototype, "queryBlacklist", null), S);
        function S(e2, t2) {
          var s2 = this, m2 = (this.repeatedPushMap = {}, this.pushTimer = 0, this.msgPushMap = ((m2 = {})[f.d.p_c2c_msg.cmd] = { name: "peer_msg", times: [] }, m2[f.d.p_rm_msg.cmd] = { name: "room_msg", times: [] }, m2[f.d.p_gp_msg.cmd] = { name: "group_msg", times: [] }, m2[f.d.p_c2c_cmd.cmd] = { name: "peer_cmd", times: [] }, m2[f.d.p_rm_cmd.cmd] = { name: "room_cmd", times: [] }, m2[f.d.p_gp_cmd.cmd] = { name: "group_cmd", times: [] }, m2[f.d.p_msg_all.cmd] = { name: "broadcast", times: [] }, m2), this.evLog = { on: [], off: [] }, this.onConnectedEvent = function(e3) {
            s2.urMgr.onConnected(e3);
          }, this.onDisConnectedEvent = function(e3) {
            s2.urMgr.onDisConnected(e3);
          }, this.onPushEvent = function(e3, t3, r2) {
            var n2;
            e3 === f.d.swp_list.cmd ? (1 == t3.qos_flag && (n2 = { code: 0, message: "", server_send_time: t3.send_time, push_responses: t3.push_requests.map(function(e4) {
              return { key: e4.sub_cmd, value: e4.msg_id };
            }) }, s2.cnMgr.sendNoRsp(f.d.swp_list_rsp.cmd, n2)), t3.push_requests.forEach(function(e4) {
              s2.handleBizPushEvent(e4.sub_cmd, e4.msg_body, r2);
              var t4 = s2.repeatedPushMap[e4.sub_cmd + e4.msg_id] || 0;
              s2.repeatedPushMap[e4.sub_cmd + e4.msg_id] = t4 + 1;
            })) : "Accesshub" === e3 ? s2.urMgr.onPushAccesshub(t3) : (s2.dr.reportNetworkReq(e3, t3), e3 === f.d.swp_kickout.cmd ? s2.urMgr.onPushKickout(t3) : e3 === f.d.swp_redirect.cmd && s2.urMgr.onPushRedirect(t3.user_ids));
          }, this.onLogined = function() {
            s2.pushTimer || (s2.pushTimer = setInterval(s2.reportPushEvent, 6e4));
          }, this.onLogout = function() {
            s2.pushTimer && clearInterval(s2.pushTimer), s2.pushTimer = 0;
          }, this.reportPushEvent = function() {
            var e3, t3;
            s2.dr && s2.lg && (e3 = { flag: false }, Object.values(s2.msgPushMap).forEach(function(t4) {
              var r2 = t4.name;
              t4 = t4.times;
              return s2.addMsgPushDelay(r2, t4, e3);
            }), e3.flag && (delete e3.flag, s2.dr.reportSDKEvent("/sdk/msg/push_delay", e3)), e3 = { flag: false }, Object.keys(s2.repeatedPushMap).forEach(function(t4) {
              1 < s2.repeatedPushMap[t4] && (e3.flag = true, e3[t4] = s2.repeatedPushMap[t4]);
            }), (s2.repeatedPushMap = e3).flag && s2.dr.reportPushEvent("repeated", 0, "", e3), s2.lg.hbLog.length && (t3 = s2.lg.hbLog.reduce(function(e4, t4) {
              var r2 = t4.id, s3 = t4.time;
              t4 = function(e5, t5) {
                var r3 = {};
                for (n2 in e5)
                  Object.prototype.hasOwnProperty.call(e5, n2) && t5.indexOf(n2) < 0 && (r3[n2] = e5[n2]);
                if (null != e5 && "function" == typeof Object.getOwnPropertySymbols)
                  for (var s4 = 0, n2 = Object.getOwnPropertySymbols(e5); s4 < n2.length; s4++)
                    t5.indexOf(n2[s4]) < 0 && Object.prototype.propertyIsEnumerable.call(e5, n2[s4]) && (r3[n2[s4]] = e5[n2[s4]]);
                return r3;
              }(t4, ["id", "time"]);
              return e4[r2] ? e4[r2][s3] = t4 : e4[r2] = ((r2 = {})[s3] = t4, r2), e4;
            }, {}), s2.lg.hbLog.length = 0, s2.lg.i(_, "hb", t3)));
          }, this.bus = new c.a(), this.econf = n.a.getInstance().st.initEngine(e2, t2, this.bus), this.lg = n.a.getInstance().lg, this.dr = n.a.getInstance().dr, this.pb = n.a.getInstance().pb, this.pv = new i.a(this.lg), this.bus.add(f.u.ILogined, this.onLogined), this.bus.add(f.u.ILogout, this.onLogout), r(99)("./" + (h.p ? "ZIMFileStoreImpl" : "ZIMIDBImpl")).ZIMStoreImpl);
          this.dbMgr = new m2(this.econf), this.cnMgr = new a.a(this.econf, this.bus), this.cnMgr.initEvent(this.onConnectedEvent, this.onDisConnectedEvent, this.onPushEvent), this.gpMgr = new d.a(this.econf, this.bus, this.cnMgr, this.dbMgr), this.urMgr = new p.a(this.econf, this.bus, this.cnMgr, this.dbMgr), this.clMgr = new o.a(this.econf, this.bus, this.cnMgr, this.dbMgr), this.cvMgr = new u.a(this.econf, this.bus, this.cnMgr, this.dbMgr, this.gpMgr), this.fdMgr = new l.a(this.econf, this.bus, this.cnMgr, this.dbMgr);
        }
      }, function(e, t, r) {
        "use strict";
        function s(e2, t2) {
          return void 0 === t2 && (t2 = false), "string" == typeof e2 && (t2 || !!e2);
        }
        function n(e2) {
          return "number" == typeof e2 && 0 <= e2;
        }
        r.d(t, "a", function() {
          return m;
        });
        var i = r(1), o = r(0), a = 6000001, u = o.X.User, c = o.X.Conversation, l = o.X.Room, d = o.X.Group, p = o.X.Friend, h = o.X.Call, f = o.X.Database, m = (g.prototype.validID = function(e2, t2, r2, s2) {
          var n2;
          if (!Object(i.n)(e2))
            return n2 = Object(i.y)(a, e2 + " is invalid."), this.lg.w(r2, s2, ((r2 = { error: n2 })[e2] = t2, r2)), n2;
        }, g.prototype.validCallID = function(e2, t2) {
          var r2;
          if (!s(e2) || 20 < e2.length)
            return r2 = Object(i.y)(a, "callID is invalid or its length exceeds 20."), this.lg.w(h, t2, { error: r2, callID: e2 }), r2;
        }, g.prototype.validName = function(e2, t2, r2, s2) {
          var n2;
          if (!this._isValidName(t2))
            return n2 = Object(i.y)(a, e2 + " is invalid."), this.lg.w(r2, s2, ((r2 = { error: n2 })[e2] = t2, r2)), n2;
        }, g.prototype.validTwoID = function(e2, t2, r2, s2, n2, o2) {
          var u2 = "";
          if (!Object(i.n)(t2) && (u2 = e2 + " is invalid.") || !Object(i.n)(s2) && (u2 = r2 + " is invalid."))
            return u2 = Object(i.y)(a, u2), this.lg.w(n2, o2, ((n2 = { error: u2 })[e2] = t2, n2[r2] = s2, n2)), u2;
        }, g.prototype.validTwoName = function(e2, t2, r2, s2, n2, o2) {
          var u2 = "";
          if (!this._isValidName(t2) && (u2 = e2 + " is invalid.") || !this._isValidName(s2) && (u2 = r2 + " is invalid."))
            return u2 = Object(i.y)(a, u2), this.lg.w(n2, o2, ((n2 = { error: u2 })[e2] = t2, n2[r2] = s2, n2)), u2;
        }, g.prototype.validIDAndName = function(e2, t2, r2, s2, n2, o2) {
          var u2 = "";
          if (!Object(i.n)(t2) && (u2 = e2 + " is invalid.") || !this._isValidName(s2) && (u2 = r2 + " is invalid."))
            return u2 = Object(i.y)(a, u2), this.lg.w(n2, o2, ((n2 = { error: u2 })[e2] = t2, n2[r2] = s2, n2)), u2;
        }, g.prototype.validCount = function(e2, t2, r2, s2, o2) {
          var u2 = "";
          if (e2 && n(e2.count) ? s2 && !Object(i.n)(o2) && (u2 = s2 + " is invalid.") : u2 = "The config or its count is invalid.")
            return o2 = Object(i.y)(a, u2), this.lg.w(t2, r2, { error: o2, config: e2 }), o2;
        }, g.prototype.validArray = function(e2, t2, r2, n2, o2) {
          var u2;
          if (!Array.isArray(t2) || !t2.length || t2.some(function(e3) {
            return !s(e3);
          }) || o2 && t2.length > o2)
            return u2 = e2 + " is invalid", o2 && t2.length > o2 && (u2 += " or its length exceeds " + o2), u2 += " or each of its elements must be a valid string type.", o2 = Object(i.y)(a, u2), this.lg.w(r2, n2, ((u2 = { error: o2 })[e2] = t2, u2)), o2;
        }, g.prototype.validIDAndArray = function(e2, t2, r2, n2, o2, u2, c2) {
          var l2 = "";
          if (!Object(i.n)(t2) && (l2 = e2 + " is invalid.") || (!Array.isArray(n2) || !n2.length || n2.some(function(e3) {
            return !s(e3);
          }) || c2 && n2.length > c2) && (l2 = r2 + " is invalid or each of its elements must be a valid string type."))
            return c2 = Object(i.y)(a, l2), this.lg.w(o2, u2, ((l2 = { error: c2 })[e2] = t2, l2[r2] = n2, l2)), c2;
        }, g.prototype.updateRule = function(e2) {
          var t2;
          if (!e2 || !Array.isArray(e2.notToReceiveOfflinePushPlatforms) || !Array.isArray(e2.onlinePlatforms) || e2.notToReceiveOfflinePushPlatforms.some(function(e3) {
            return !o.hb[e3];
          }) || e2.onlinePlatforms.some(function(e3) {
            return !o.hb[e3];
          }))
            return t2 = Object(i.y)(a, "The offlinePushRule is invalid."), this.lg.w(u, o.W.UpdateUserRule, { error: t2, offlinePushRule: e2 }), t2;
        }, g.prototype.validConvIDAndType = function(e2, t2, r2) {
          var s2 = "";
          if (Object(i.n)(e2) ? t2 !== o.r.Peer && t2 !== o.r.Group && (s2 = "conversationType is invalid.") : s2 = "conversationID is invalid.")
            return s2 = Object(i.y)(a, s2), this.lg.w(c, r2, { error: s2, conversationID: e2, conversationType: t2 }), s2;
        }, g.prototype.validSDKMsg = function(e2, t2) {
          var r2 = this._checkSDKMsg(e2);
          if (r2)
            return r2 = Object(i.y)(a, r2), this.lg.w(c, t2, { error: r2, message: e2 }), r2;
        }, g.prototype.setNotifyStatus = function(e2, t2, r2) {
          var s2 = "";
          if ((Object(i.n)(t2) ? r2 !== o.r.Group && r2 !== o.r.Peer && (s2 = "conversationType is not support.") : s2 = "conversationID is invalid.") || e2 !== o.p.Notify && e2 !== o.p.DoNotDisturb && (s2 = "status is invalid."))
            return s2 = Object(i.y)(a, s2), this.lg.w(c, o.W.SetNotifyStatus, { error: s2, conversationID: t2, conversationType: r2, status: e2 }), s2;
        }, g.prototype.setConvDraft = function(e2, t2, r2) {
          var s2 = o.W.SetConvDraft, n2 = this.validConvIDAndType(e2, t2, s2);
          return n2 || ("string" != typeof r2 ? (n2 = Object(i.y)(a, "draft is invalid."), this.lg.w(c, s2, { error: n2, conversationID: e2, conversationType: t2, draft: r2 }), n2) : void 0);
        }, g.prototype.setConvMark = function(e2, t2) {
          var r2 = "";
          if ("number" != typeof e2 || e2 < 1 || 20 < e2 ? r2 = "markType is between 1 and 20." : (!Array.isArray(t2) || !t2.length) && (r2 = "infos is invalid."))
            return r2 = Object(i.y)(a, r2), this.lg.w(c, o.W.SetConvMark, { error: r2, markType: e2, infos: t2 }), r2;
        }, g.prototype.sendMsg = function(e2, t2, r2, s2) {
          var n2 = "";
          if ((Object(i.n)(t2) ? !this._checkConvType(r2) && (n2 = "conversationType is invalid.") : n2 = "toConversationID is invalid.") || !e2 && (n2 = "message is invalid.") || !s2 && (n2 = "config is invalid.") || !this._checkMsgType(e2.type, r2) && (n2 = "message type is invalid.") || !this._checkMsgPriority(s2.priority) && (n2 = "config priority is invalid.") || !this._checkMsgContent(r2, e2.type, e2.message) && (n2 = "The message instance of message is invalid.") || !this._checkMsgReceipt(r2, e2.type, s2.hasReceipt) && (n2 = "The message type is not support setting receipt.") || !this._checkSubType(e2) && (n2 = "The message subType is invalid."))
            return n2 = Object(i.y)(a, n2), this.lg.w(c, o.W.SendMsg, { error: n2, toConversationID: t2, conversationType: r2, message: e2, config: s2 }), n2;
        }, g.prototype.sendMediaMsg = function(e2, t2, r2, s2) {
          var n2 = "";
          if ((Object(i.n)(t2) ? !this._checkConvType(r2) && (n2 = "conversationType is invalid.") : n2 = "toConversationID is invalid.") || !e2 && (n2 = "message is invalid.") || !s2 && (n2 = "config is invalid.") || !this._checkMediaMsgType(e2.type) && (n2 = "message type is invalid.") || !this._checkMsgPriority(s2.priority) && (n2 = "config priority is invalid.") || !this._checkMsgReceipt(r2, e2.type, s2.hasReceipt) && (n2 = "The message type is not support setting receipt.") || !e2.fileLocalPath && !e2.fileDownloadUrl && (n2 = "The message instance of fileLocalPath and fileDownloadUrl is empty."))
            return n2 = Object(i.y)(a, n2), this.lg.w(c, o.W.SendMediaMsg, { error: n2, toConversationID: t2, conversationType: r2, message: e2, config: s2 }), n2;
        }, g.prototype.delMsgs = function(e2, t2, r2, s2) {
          if (n2 = this.validConvIDAndType(t2, r2, o.W.DelMsg))
            return n2;
          var n2 = "";
          return Array.isArray(e2) && 0 != e2.length ? e2.some(function(e3) {
            return !e3.messageID || e3.conversationID != t2 || e3.conversationType != r2;
          }) && (n2 = "Some messages int the message list in the conversationID are illegal messages.") : n2 = "messageList is invalid.", n2 ? (n2 = Object(i.y)(a, n2), this.lg.w(c, o.W.DelMsg, { error: n2, messageList: e2, config: s2 }), n2) : void 0;
        }, g.prototype.queryHistoryMsg = function(e2, t2, r2) {
          var s2 = "";
          if ((Object(i.n)(e2) ? !this._checkConvType(t2) && (s2 = "conversationType is invalid.") : s2 = "conversationID is invalid.") || (!r2 || !n(r2.count)) && (s2 = "The config or its count is invalid."))
            return r2 = Object(i.y)(a, s2), this.lg.w(c, o.W.QueryHistoryMsg, { error: r2, conversationID: e2, conversationType: t2 }), r2;
        }, g.prototype.insertMsg = function(e2, t2, r2, s2) {
          var n2 = "";
          if ((Object(i.n)(t2) ? !this._checkConvType(r2) && (n2 = "conversationType is invalid.") : n2 = "conversationID is invalid.") || !Object(i.n)(s2) && (n2 = "senderUserID is invalid.") || !e2 && (n2 = "message is invalid.") || !this._checkInsertMsgType(e2.type) && (n2 = "message type is invalid.") || !this._checkInsertMsgContent(e2) && (n2 = "The message instance of message is invalid."))
            return n2 = Object(i.y)(a, n2), this.lg.w(c, o.W.InsertMsg, { error: n2, conversationID: t2, conversationType: r2, senderUserID: s2, message: e2 }), n2;
        }, g.prototype.updateMsgLocalExt = function(e2, t2) {
          var r2 = "";
          if (this._isValidName(e2) ? (!t2 || !t2.conversationID || !t2.messageID) && (r2 = "message is invalid.") : r2 = "localExtendedData is invalid.")
            return r2 = Object(i.y)(a, r2), this.lg.w(c, o.W.UpdateMsgLocalExt, { error: r2, localExtendedData: e2, message: t2 }), r2;
        }, g.prototype.sendCombineMsg = function(e2, t2, r2) {
          var n2, u2 = this;
          if (e2.type === o.gb.Combine)
            return n2 = "", (!s(e2.title) || e2.title.length > t2) && (n2 = "The combine message title is invalid or its length exceeds " + t2 + ".") || (!s(e2.summary) || e2.summary.length > r2) && (n2 = "The combine message summary is invalid or its length exceeds " + r2 + ".") || (!Array.isArray(e2.messageList) || !e2.messageID && 0 == e2.messageList.length) && (n2 = "The combine message list is invalid.") || e2.messageList.some(function(e3) {
              return u2._checkSubMsg(e3);
            }) && (n2 = "The combine message list includes invalid message.") ? (n2 = Object(i.y)(a, n2), this.lg.w(c, o.W.SendMsg, { error: n2, message: e2, tl: t2, sl: r2 }), n2) : void 0;
        }, g.prototype.queryCombineMsg = function(e2) {
          var t2;
          if (!e2 || e2.type != o.gb.Combine || !e2.combineID)
            return t2 = Object(i.y)(a, "The combine message is invalid."), this.lg.w(c, o.W.QueryCombineMsg, { error: t2, message: e2 }), t2;
        }, g.prototype.sendConvReceipt = function(e2, t2) {
          var r2 = "";
          if (Object(i.n)(e2) ? t2 !== o.r.Peer && (r2 = "conversationType is invalid.") : r2 = "conversationID is invalid.")
            return r2 = Object(i.y)(a, r2), this.lg.w(c, o.W.SendConvReceipt, { error: r2, conversationID: e2, conversationType: t2 }), r2;
        }, g.prototype.sendMsgReceipt = function(e2, t2, r2) {
          if (s2 = this.validConvIDAndType(t2, r2, o.W.SendReceipts))
            return s2;
          var s2 = "";
          return Array.isArray(e2) && 0 != e2.length ? e2.every(function(e3) {
            return e3.direction != o.Y.Receive || e3.receiptStatus != o.ab.Processing || !e3.messageID || !e3.messageSeq || e3.conversationID != t2 || e3.conversationType != r2;
          }) && (s2 = "Every message in the conversationID is not received receipt processing message.") : s2 = "messageList is invalid.", s2 ? (s2 = Object(i.y)(a, s2), this.lg.w(c, o.W.SendReceipts, { error: s2, conversationID: t2, conversationType: r2, messageList: e2 }), s2) : void 0;
        }, g.prototype.queryMsgReceipt = function(e2, t2, r2) {
          if (s2 = this.validConvIDAndType(t2, r2, o.W.QueryReceipts))
            return s2;
          var s2 = "";
          return Array.isArray(e2) && 0 != e2.length ? e2.every(function(e3) {
            return !e3.receiptStatus || !e3.messageID || !e3.messageSeq || e3.conversationID != t2 || e3.conversationType != r2;
          }) && (s2 = "Every messages in the conversationID is not receipt message.") : s2 = "messageList is invalid.", s2 ? (s2 = Object(i.y)(a, s2), this.lg.w(c, o.W.QueryReceipts, { error: s2, conversationID: t2, conversationType: r2, messageList: e2 }), s2) : void 0;
        }, g.prototype.queryReceiptMembers = function(e2, t2, r2, s2, u2) {
          var l2 = "";
          if ((Object(i.n)(t2) ? (!r2 || !n(r2.count)) && (l2 = "The config or its count is invalid.") : l2 = "groupID is invalid.") || (!e2 || e2.senderUserID != u2 || e2.sentStatus != o.eb.Success || !e2.receiptStatus) && (l2 = "The message instance is not a successful receipt message sent by self.") || this._isInvalidBizMsgType(e2.type) && (l2 = "The message type is not support.") || (e2.conversationID !== t2 || e2.conversationType !== o.r.Group) && (l2 = "The message instance is not belong the groupID."))
            return u2 = Object(i.y)(a, l2), l2 = s2 ? o.W.QueryReceiptRead : o.W.QueryReceiptUnread, this.lg.w(c, l2, { error: u2, groupID: t2, message: e2, config: r2 }), u2;
        }, g.prototype.msgReaction = function(e2, t2, r2) {
          var n2;
          r2 = r2 ? o.W.AddReaction : o.W.DelReaction;
          if (n2 = s(e2) ? this._checkSDKMsg(t2) : "reactionType is invalid.")
            return e2 = Object(i.y)(a, n2), this.lg.w(c, r2, { error: e2, message: t2 }), e2;
        }, g.prototype.queryMsgBase = function(e2, t2, r2, s2) {
          var o2;
          if (o2 = !t2 || !n(t2.count) || !t2.count || 100 < t2.count ? "The config or its count is invalid or its count exceeds 100." : this._checkSDKMsg(e2, "message", s2))
            return s2 = Object(i.y)(a, o2), this.lg.w(c, r2, { error: s2, message: e2, config: t2 }), s2;
        }, g.prototype.replyMsg = function(e2, t2, r2, s2, n2) {
          var u2 = "";
          return (u2 = this._checkSDKMsg(t2, "toOriginMessage")) || !e2 && (u2 = "message is invalid.") || this._isInvalidBizMsgType(e2.type) && (u2 = "The message type is not suppor.") ? (u2 = Object(i.y)(a, u2), this.lg.w(c, o.W.ReplyMsg, { error: u2, message: e2 }), u2) : this._checkMediaMsgType(e2.type) ? this.sendMediaMsg(e2, t2.conversationID, t2.conversationType, r2) : this.sendMsg(e2, t2.conversationID, t2.conversationType, r2) || this.sendCombineMsg(e2, s2, n2);
        }, g.prototype.createRoom = function(e2, t2, r2) {
          var s2 = "";
          if ((e2 ? !Object(i.n)(e2.roomID) && (s2 = "The roomInfo instance of roomID is invalid.") : s2 = "roomInfo is invalid.") || !this._isValidName(e2.roomName) && (s2 = "The roomInfo instance of roomName is invalid.") || t2 && t2.roomAttributes && !this._isValidAttr(t2.roomAttributes, true) && (s2 = "The Key and Value of the roomAttributes property of the config instance only support string types."))
            return s2 = Object(i.y)(a, s2), r2 = r2 ? o.W.EnterRoom : o.W.CreateRoom, this.lg.w(l, r2, { error: s2, roomInfo: e2, config: t2 }), s2;
        }, g.prototype.setRoomAttr = function(e2, t2) {
          var r2 = "";
          if (Object(i.n)(t2) ? !this._isValidAttr(e2) && (r2 = "The Key and Value of the roomAttributes only support string types.") : r2 = "roomID is invalid.")
            return r2 = Object(i.y)(a, r2), this.lg.w(l, o.W.SetRoomAttr, { error: r2, roomID: t2, roomAttributes: e2 }), r2;
        }, g.prototype.setRoomMembersAttr = function(e2, t2, r2) {
          var n2 = "";
          if ((Object(i.n)(r2) ? !this._isValidAttr(e2) && (n2 = "The Key and Value of the attributes only support string types.") : n2 = "roomID is invalid.") || (!Array.isArray(t2) || !t2.length || t2.some(function(e3) {
            return !s(e3);
          })) && (n2 = "Every one of userIDs must be a valid string type."))
            return t2 = Object(i.y)(a, n2), this.lg.w(l, o.W.SetRoomMembersAttr, { error: t2, roomID: r2, attributes: e2 }), t2;
        }, g.prototype.createGroup = function(e2, t2, r2) {
          var s2 = String(e2.groupID || "").trim(), n2 = "";
          if ((s2 && !Object(i.n)(s2, true) ? n2 = "The groupInfo instance of groupID is invalid." : !this._isValidName(e2.groupName) && (n2 = "The groupInfo instance of groupName is invalid.")) || !this._isValidName(e2.groupAvatarUrl) && (n2 = "The groupInfo instance of groupAvatarUrl is invalid.") || !this._isValidName(r2.groupNotice) && (n2 = "The config instance of groupNotice is invalid.") || t2 && !Array.isArray(t2) && (n2 = "Every one of userIDs must be a valid string type.") || !this._isValidAttr(r2.groupAttributes, true) && (n2 = "The Key and Value of the groupAttributes property of the config instance only support string types."))
            return s2 = Object(i.y)(a, n2), this.lg.w(d, o.W.CreateGroup, { error: s2, groupInfo: e2, config: r2, userIDs: t2 }), s2;
        }, g.prototype.muteGroup = function(e2, t2, r2) {
          var s2 = "";
          if ((Object(i.n)(e2) ? (r2 && (!t2.mode || !t2.duration) || -1 == [0, 1, 2, 3].indexOf(t2.mode)) && (s2 = "The config instance or its mode is invalid.") : s2 = "groupID is invalid.") || ("number" != typeof t2.duration || t2.duration < -1) && (s2 = "The config instance of duration is invalid.") || t2.mode == o.T.Custom && (!Array.isArray(t2.roles) || !t2.roles.length || "3" == t2.roles.join()) && (s2 = "The config instance of roles is invalid."))
            return s2 = Object(i.y)(a, s2), this.lg.w(d, o.W.MuteGroup, { error: s2, groupID: e2, isMute: r2, config: t2 }), s2;
        }, g.prototype.setGroupAttr = function(e2, t2) {
          var r2 = "";
          if (Object(i.n)(t2) ? !this._isValidAttr(e2) && (r2 = "The Key and Value of the groupAttributes only support string types.") : r2 = "groupID is invalid.")
            return r2 = Object(i.y)(a, r2), this.lg.w(d, o.W.SetGroupAttr, { error: r2, groupID: t2, groupAttributes: e2 }), r2;
        }, g.prototype.queryGroupAttr = function(e2, t2) {
          var r2 = "";
          if (Object(i.n)(e2) ? Array.isArray(t2) && (!t2.length || t2.some(function(e3) {
            return !s(e3);
          })) && (r2 = "Every one of kyes must be a valid string type.") : r2 = "groupID is invalid.")
            return r2 = Object(i.y)(a, r2), this.lg.w(d, o.W.QueryGroupAttrs, { error: r2, groupID: e2, keys: t2 }), r2;
        }, g.prototype.setMemberNickname = function(e2, t2, r2) {
          var s2 = "";
          if ((this._isValidName(e2) ? !Object(i.n)(t2) && (s2 = "forUserID is invalid.") : s2 = "nickname is invalid.") || !Object(i.n)(r2) && (s2 = "groupID is invalid."))
            return s2 = Object(i.y)(a, s2), this.lg.w(d, o.W.SetGroupMemberNickname, { error: s2, groupID: r2, forUserID: t2, nickname: e2 }), s2;
        }, g.prototype.setMemberRole = function(e2, t2, r2) {
          var s2 = "";
          if ((n(e2) ? !Object(i.n)(t2) && (s2 = "forUserID is invalid.") : s2 = "role is invalid.") || !Object(i.n)(r2) && (s2 = "groupID is invalid."))
            return s2 = Object(i.y)(a, s2), this.lg.w(d, o.W.SetGroupMemberRole, { error: s2, groupID: r2, forUserID: t2, role: e2 }), s2;
        }, g.prototype.updateGroupVerifyMode = function(e2, t2, r2) {
          var s2 = "";
          if ((Object(i.n)(t2) ? "number" != typeof e2 : s2 = "groupID is invalid.") || (r2 == o.V.Join && (e2 < 0 || 2 < e2) || r2 != o.V.Join && (e2 < 0 || 1 < e2)) && (s2 = "mode is invalid."))
            return s2 = Object(i.y)(a, s2), this.lg.w(d, o.W.UpdateGroupVerifyMode, { error: s2, groupID: t2, mode: e2, type: r2 }), s2;
        }, g.prototype.callInvite = function(e2, t2) {
          var r2 = "";
          if (Array.isArray(e2) && e2.length ? t2 && "number" == typeof t2.timeout && (t2.timeout % 1 != 0 || t2.timeout < 1 || 600 < t2.timeout) && (r2 = "The config of timeout is invalid or its size exceeds 600.") : r2 = "invitees is invalid.")
            return r2 = Object(i.y)(a, r2), this.lg.w(h, o.W.CallInvite, { error: r2, invitees: e2, config: t2 }), r2;
        }, g.prototype.searchConv = function(e2) {
          var t2 = "";
          if ((e2 ? !n(e2.totalConversationCount) && (t2 = "The config instance of totalConversationCount is invalid.") : t2 = "config is invalid.") || !n(e2.conversationMessageCount) && (t2 = "The config instance of conversationMessageCount is invalid.") || Array.isArray(e2.keywords) && (5 < e2.keywords.length || e2.keywords.some(function(e3) {
            return !e3;
          })) && (t2 = "The config instance of keywords is invalid or its length exceeds 5.") || Array.isArray(e2.senderUserIDs) && (5 < e2.senderUserIDs.length || e2.senderUserIDs.some(function(e3) {
            return !e3;
          })) && (t2 = "The config instance of senderUserIDs is invalid or its length exceeds 5."))
            return t2 = Object(i.y)(a, t2), this.lg.w(f, o.W.SearchConv, { config: e2, error: t2 }), t2;
        }, g.prototype.searchMsg = function(e2, t2) {
          var r2 = "";
          if ((e2 ? !n(e2.count) && (r2 = "The config instance of count is invalid.") : r2 = "config is invalid.") || Array.isArray(e2.keywords) && (5 < e2.keywords.length || e2.keywords.some(function(e3) {
            return !e3;
          })) && (r2 = "The config instance of keywords is invalid or its length exceeds 5.") || Array.isArray(e2.senderUserIDs) && (5 < e2.senderUserIDs.length || e2.senderUserIDs.some(function(e3) {
            return !e3;
          })) && (r2 = "The config instance of senderUserIDs is invalid or its length exceeds 5."))
            return r2 = Object(i.y)(a, r2), this.lg.w(f, t2, { config: e2, error: r2 }), r2;
        }, g.prototype.searchBase = function(e2, t2) {
          var r2 = "";
          if ((e2 ? !n(e2.count) && (r2 = "The config instance of count is invalid.") : r2 = "config is invalid.") || (!Array.isArray(e2.keywords) || !e2.keywords.length || 5 < e2.keywords.length || e2.keywords.some(function(e3) {
            return !e3;
          })) && (r2 = "The config instance of keywords is invalid or its length exceeds 5."))
            return r2 = Object(i.y)(a, r2), this.lg.w(f, t2, { error: r2, config: e2 }), r2;
        }, g.prototype.addFriend = function(e2, t2) {
          var r2 = "";
          if ((Object(i.n)(e2) ? !t2 && (r2 = "config is invalid.") : r2 = "userID is invalid.") || "string" == typeof t2.wording && 1024 < t2.wording.length && (r2 = "The config instance of wording is invalid or its length exceeds 1024.") || "string" == typeof t2.friendAlias && 256 < t2.friendAlias.length && (r2 = "The config instance of friendAlias is invalid or its length exceeds 256.") || t2.friendAttributes && !this._isValidAttr(t2.friendAttributes, true) && (r2 = "The config instance of friendAttributes is invalid."))
            return r2 = Object(i.y)(a, r2), this.lg.w(p, o.W.AddFriend, { error: r2, userID: e2, config: t2 }), r2;
        }, g.prototype.updateFriendAlias = function(e2, t2) {
          var r2 = "";
          if (Object(i.n)(t2) ? (!s(e2, true) || 256 < e2.length) && (r2 = "friendAlias is invalid or its length exceeds 256.") : r2 = "userID is invalid.")
            return r2 = Object(i.y)(a, r2), this.lg.w(p, o.W.UpdateFriendAlias, { error: r2, userID: t2, friendAlias: e2 }), r2;
        }, g.prototype.updateFriendAttr = function(e2, t2) {
          var r2 = "";
          if (Object(i.n)(t2) ? e2 && !this._isValidAttr(e2, true) && (r2 = "The config instance of friendAttributes is invalid.") : r2 = "userID is invalid.")
            return r2 = Object(i.y)(a, r2), this.lg.w(p, o.W.UpdateFriendAlias, { error: r2, userID: t2, friendAttributes: e2 }), r2;
        }, g.prototype.acceptFriendApply = function(e2, t2) {
          var r2 = "";
          if ((Object(i.n)(e2) ? t2 && "string" == typeof t2.friendAlias && 256 < t2.friendAlias.length && (r2 = "The config instance of friendAlias is invalid or its length exceeds 256.") : r2 = "userID is invalid.") || t2 && t2.friendAttributes && !this._isValidAttr(t2.friendAttributes, true) && (r2 = "The config instance of friendAttributes is invalid."))
            return r2 = Object(i.y)(a, r2), this.lg.w(p, o.W.AcceptFriendApp, { error: r2, userID: e2, config: t2 }), r2;
        }, g.prototype._checkMsgContent = function(e2, t2, r2) {
          return !((t2 === o.gb.Text || t2 === o.gb.Custom || t2 === o.gb.Barrage && e2 === o.r.Room) && ("string" != typeof r2 || !r2 || !r2.trim() || Object(i.k)(r2).length > o.m.MAX_MESSAGE_SIZE) || !(t2 !== o.gb.Command || r2 instanceof Uint8Array && r2.length && !(r2.length > o.m.MAX_MESSAGE_SIZE) && Object(i.h)(r2).trim()));
        }, g.prototype._checkMsgPriority = function(e2) {
          return e2 === o.Z.Low || e2 === o.Z.Medium || e2 === o.Z.High;
        }, g.prototype._checkMsgType = function(e2, t2) {
          return e2 === o.gb.Text || e2 === o.gb.Custom || e2 === o.gb.Combine || e2 === o.gb.Command || t2 === o.r.Room && e2 === o.gb.Barrage;
        }, g.prototype._checkMediaMsgType = function(e2) {
          return e2 === o.gb.Image || e2 === o.gb.File || e2 === o.gb.Audio || e2 === o.gb.Video;
        }, g.prototype._checkInsertMsgType = function(e2) {
          return e2 === o.gb.Text || e2 === o.gb.System || e2 === o.gb.Custom || e2 === o.gb.Image || e2 === o.gb.File || e2 === o.gb.Audio || e2 === o.gb.Video;
        }, g.prototype._checkInsertMsgContent = function(e2) {
          var t2 = e2.message;
          return !(!(e2.type !== o.gb.Text && e2.type !== o.gb.System && e2.type !== o.gb.Custom || "string" == typeof t2 && t2 && t2.trim() && !(Object(i.k)(t2).length > o.m.MAX_MESSAGE_SIZE)) || e2.type >= o.gb.Image && e2.type <= o.gb.Video && !e2.fileLocalPath && !e2.fileDownloadUrl || !(e2.type != o.gb.Combine || e2.title && e2.summary));
        }, g.prototype._checkConvType = function(e2) {
          return e2 === o.r.Peer || e2 === o.r.Room || e2 === o.r.Group;
        }, g.prototype._checkMsgReceipt = function(e2, t2, r2) {
          return !r2 || e2 != o.r.Room && t2 != o.gb.Command && t2 != o.gb.Barrage;
        }, g.prototype._checkSubType = function(e2) {
          return e2.type !== o.gb.Custom || e2.type == o.gb.Custom && 0 <= e2.subType && e2.subType <= 200;
        }, g.prototype._isInvalidBizMsgType = function(e2, t2) {
          var r2 = !e2 || e2 == o.gb.Command || e2 == o.gb.Barrage || e2 == o.gb.Tips;
          return (t2 = void 0 !== t2 && t2) ? r2 : r2 || e2 == o.gb.Revoke;
        }, g.prototype._checkSDKMsg = function(e2, t2, r2) {
          void 0 === t2 && (t2 = "message"), void 0 === r2 && (r2 = false);
          var s2 = "";
          return (!e2 || !e2.conversationID || e2.isUserInserted || e2.isBroadcastMessage || e2.sentStatus != o.eb.Success) && (s2 = "The " + t2 + " instance is not a successful message.") || this._isInvalidBizMsgType(e2.type, r2) && (s2 = "The " + t2 + " type is not support.") || e2.conversationType !== o.r.Peer && e2.conversationType !== o.r.Group && (s2 = "The " + t2 + " conversation type is not support."), s2;
        }, g.prototype._checkSubMsg = function(e2) {
          var t2 = "";
          return !e2 || e2.isUserInserted || e2.isBroadcastMessage || 1 != e2.sentStatus ? t2 = "The message instance is not a successful message." : this._isInvalidBizMsgType(e2.type) && (t2 = "The message type is not support."), t2;
        }, g);
        function g(e2) {
          this.lg = e2, this._isValidName = function(e3) {
            return "string" == typeof e3 && e3.length <= o.m.MAX_NAME_SIZE;
          }, this._isValidAttr = function(e3, t2) {
            return !(!e3 || "[object Object]" !== Object.prototype.toString.call(e3)) && (e3 = Object.values(e3), !(!t2 && !e3.length) && e3.every(function(e4) {
              return "string" == typeof e4;
            }));
          };
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return d;
        });
        var s = r(2), n = r(1), i = r(0), o = function() {
          return (o = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, a = function(e2, t2) {
          var r2 = "function" == typeof Symbol && e2[Symbol.iterator];
          if (!r2)
            return e2;
          var s2, n2, i2 = r2.call(e2), o2 = [];
          try {
            for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
              o2.push(s2.value);
          } catch (e3) {
            n2 = { error: e3 };
          } finally {
            try {
              s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
            } finally {
              if (n2)
                throw n2.error;
            }
          }
          return o2;
        }, u = function(e2, t2, r2) {
          if (r2 || 2 === arguments.length)
            for (var s2, n2 = 0, i2 = t2.length; n2 < i2; n2++)
              !s2 && n2 in t2 || ((s2 = s2 || Array.prototype.slice.call(t2, 0, n2))[n2] = t2[n2]);
          return e2.concat(s2 || Array.prototype.slice.call(t2));
        }, c = i.X.Call, l = 6000272, d = (p.prototype.destroy = function() {
          this.onLogout(), this.cnMgr = null, this.bus = null, this.lg = null;
        }, p.prototype.callInvite = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), invitees: e2, config: t2 }, a2 = (t2.mode = t2.mode || i.g.General, t2.timeout = +t2.timeout || 90, e2 = Array.from(new Set(e2.filter(function(e3) {
            return Object(n.n)(e3);
          }))), Object(n.l)()), u2 = { call_id: a2, call_mode: t2.mode, timeout: t2.timeout, user_ids: e2, payload: this.encodeExtendedData(t2), offline_info: Object(n.g)(t2.pushConfig), check_ack_timeout: !!t2.enableNotReceivedCheck };
          return this.cnMgr.send(i.d.cl_create, u2).then(function(d2) {
            if (d2.code)
              return s2.error = Object(n.y)(l, d2.message, d2.code), r2.lg.w(c, i.W.CallInvite, s2), Promise.reject(s2.error);
            r2.updateCallListSeq(d2.call_list_seq), d2.timeout || (d2.timeout = u2.timeout), e2.map(function(e3) {
              r2.createInviteTimeout(a2, e3, d2.timeout);
            });
            var p2 = d2.create_time, h = ((m = {})[r2.econf.user.userID] = { userID: r2.econf.user.userID, state: i.i.Accepted, extendedData: "", acceptTime: 0, quitTime: 0, timeout: 0 }, m), f = d2.new_err_list.map(function(e3) {
              return { userID: e3.user_id, reason: e3.sub_code };
            }), m = d2.err_list.map(function(e3) {
              return { userID: e3.user_id, state: r2.translateUserState(e3, _), extendedData: "" };
            }), g = e2.filter(function(e3) {
              return !f.find(function(t3) {
                return t3.userID == e3;
              });
            }).map(function(e3) {
              return e3 = { userID: e3, state: i.i.Inviting, extendedData: "" }, h[e3.userID] = o(o({}, e3), { acceptTime: 0, quitTime: 0, timeout: d2.timeout }), e3;
            }), _ = (g.unshift({ userID: r2.econf.user.userID, state: i.i.Accepted, extendedData: "" }), r2.bus.emit(i.u.CallUserState, { callID: a2, callUserList: g }), { callID: a2, caller: r2.econf.user.userID, mode: t2.mode, state: i.h.Started, extendedData: t2.extendedData, createTime: p2, endTime: 0, timeout: d2.timeout, inviter: r2.econf.user.userID, callDuration: 0, userDuration: 0, callUserMap: h });
            return r2.dbCallMap.set(a2, _), r2.dbMgr.addCallList([_]), r2.lg.i(c, i.W.CallInvite, s2), r2.bus.emit(i.u.CallCreate, { callID: a2, mode: _.mode, caller: _.caller, extendedData: _.extendedData, timeout: _.timeout, createTime: _.createTime, callUserList: _.callUserMap ? Object.values(_.callUserMap).map(function(e3) {
              return r2.pickCallUser(e3);
            }) : [] }), { callID: a2, timeout: d2.timeout, errorUserList: f, errorInvitees: m };
          });
        }, p.prototype.callCancel = function(e2, t2, r2, s2) {
          var o2 = this, a2 = (void 0 === s2 && (s2 = i.f.Cancel), { time: new Date(), callID: t2, state: s2, config: r2, invitees: e2 });
          if (this.checkCallAPI(t2, a2, i.W.CallCancel))
            return Promise.reject(a2.error);
          e2 = Array.from(new Set(e2.filter(function(e3) {
            return Object(n.n)(e3);
          })));
          var u2 = r2.extendedData || "", d2 = (r2 = { call_id: t2, user_ids: e2, timeout: s2, payload: this.encodeExtendedData(r2), offline_info: Object(n.g)(r2.pushConfig) }, s2 == i.f.Cancel ? i.j.API : i.j.SDK);
          return this.cnMgr.send(i.d.cl_cancel, r2, d2).then(function(r3) {
            if (r3.code)
              return a2.error = Object(n.y)(l, r3.message, r3.code), s2 || o2.lg.w(c, i.W.CallCancel, a2), Promise.reject(a2.error);
            o2.updateCallListSeq(r3.now_time);
            var d3, p2 = r3.err_list.map(function(e3) {
              return e3.user_id;
            }), h = o2.dbCallMap.get(t2);
            return h && (s2 == i.f.Timeout ? (h.mode == i.g.General && (h.state = i.h.Ended), (d3 = e2.filter(function(e3) {
              return -1 == p2.indexOf(e3);
            }).map(function(e3) {
              e3 = { userID: e3, state: i.i.Timeout, extendedData: u2 };
              var t3 = h.callUserMap[e3.userID];
              return t3 && (t3.state = e3.state), e3;
            })).length && (o2.bus.emit(i.u.CallUserState, { callID: t2, callUserList: d3 }), o2.bus.emit("callInviteesAnsweredTimeout", { callID: t2, invitees: d3.map(function(e3) {
              return e3.userID;
            }) }))) : s2 == i.f.Cancel && o2.isMainDevice(i.i.Accepted, r3.call_user_session_id) && (r3 = !e2.length, d3 = (e2 = r3 ? Object.keys(h.callUserMap).filter(function(e3) {
              return e3 !== h.caller;
            }) : e2).filter(function(e3) {
              return -1 == p2.indexOf(e3);
            }).map(function(e3) {
              e3 = { userID: e3, state: i.i.BeCancelled, extendedData: u2 };
              var t3 = h.callUserMap[e3.userID];
              return t3 && (t3.state = e3.state, t3.extendedData = u2), e3;
            }), r3 && (h.state = i.h.Ended, (r3 = h.callUserMap[o2.econf.user.userID]) && (r3.state = i.i.Cancelled, r3.extendedData = u2), d3.unshift({ userID: o2.econf.user.userID, state: i.i.Cancelled, extendedData: u2 })), d3.length && o2.bus.emit(i.u.CallUserState, { callID: t2, callUserList: d3 })), o2.dbMgr.addCallList([h])), s2 || o2.lg.i(c, i.W.CallCancel, a2), { callID: t2, errorInvitees: p2 };
          });
        }, p.prototype.callAccept = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), callID: e2, config: t2 };
          if (this.checkCallAPI(e2, s2, i.W.CallAccept))
            return Promise.reject(s2.error);
          var o2 = { user_id: e2, user_name: this.encodeExtendedData(t2) };
          return this.cnMgr.send(i.d.cl_accept, o2).then(function(o3) {
            if (o3.code)
              return s2.error = Object(n.y)(l, o3.message, o3.code), r2.lg.w(c, i.W.CallAccept, s2), Promise.reject(s2.error);
            r2.updateCallListSeq(o3.talk_time);
            var a2, u2 = +o3.quit_time, d2 = (o3 = r2.dbCallMap.get(e2)) && o3.callUserMap[r2.econf.user.userID];
            return o3 && d2 && (o3.mode == i.g.General && (o3.state = i.h.Ended), d2.state = i.i.Accepted, d2.acceptTime = u2, d2.extendedData = t2.extendedData || "", 2 == (a2 = Object.values(o3.callUserMap)).length && a2.forEach(function(e3) {
              return e3.acceptTime = u2;
            }), r2.dbMgr.addCallList([o3]), r2.bus.emit(i.u.CallUserState, { callID: e2, callUserList: [r2.pickCallUser(d2)] })), r2.lg.i(c, i.W.CallAccept, s2), { callID: e2 };
          });
        }, p.prototype.callReject = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), callID: e2, config: t2 };
          if (this.checkCallAPI(e2, s2, i.W.CallReject))
            return Promise.reject(s2.error);
          var o2 = { call_id: e2, payload: this.encodeExtendedData(t2) };
          return this.cnMgr.send(i.d.cl_refuse, o2).then(function(o3) {
            if (o3.code)
              return s2.error = Object(n.y)(l, o3.message, o3.code), r2.lg.w(c, i.W.CallReject, s2), Promise.reject(s2.error);
            r2.updateCallListSeq(o3.talk_time);
            var a2 = (o3 = r2.dbCallMap.get(e2)) && o3.callUserMap[r2.econf.user.userID];
            return o3 && a2 && (a2.state = i.i.Rejected, o3.state = i.h.Ended, a2.extendedData = t2.extendedData || "", r2.dbMgr.addCallList([o3]), r2.bus.emit(i.u.CallUserState, { callID: e2, callUserList: [r2.pickCallUser(a2)] })), r2.lg.i(c, i.W.CallReject, s2), { callID: e2 };
          });
        }, p.prototype.callingInvite = function(e2, t2, r2) {
          var s2 = this, a2 = { time: new Date(), callID: t2, invitees: e2, config: r2 };
          if (this.checkCallAPI(t2, a2, i.W.CallingInvite))
            return Promise.reject(a2.error);
          var u2 = [];
          e2 = Array.from(new Set(e2.filter(function(e3) {
            return !!Object(n.n)(e3) || (u2.push({ userID: e3, reason: 6000001 }), false);
          }))), r2 = { call_id: t2, user_ids: e2, offline_info: Object(n.g)(r2.pushConfig) };
          return this.cnMgr.send(i.d.cl_invite, r2).then(function(r3) {
            if (r3.code)
              return a2.error = Object(n.y)(l, r3.message, r3.code), s2.lg.w(c, i.W.CallInvite, a2), Promise.reject(a2.error);
            r3.err_list.forEach(function(e3) {
              return u2.push({ userID: e3.user_id, reason: e3.sub_code });
            });
            var d2, p2, h = s2.dbCallMap.get(t2);
            return h && (d2 = e2.filter(function(e3) {
              return !u2.find(function(t3) {
                return t3.userID == e3;
              });
            }).map(function(e3) {
              return e3 = { userID: e3, state: i.i.Inviting, extendedData: "" }, h.callUserMap[e3.userID] = o(o({}, e3), { acceptTime: 0, quitTime: 0, timeout: h.timeout }), e3;
            }), s2.dbMgr.addCallList([h]), p2 = null == (p2 = h.callUserMap[s2.econf.user.userID]) ? void 0 : p2.state, s2.isMainDevice(p2, r3.call_user_session_id) ? (s2.bus.emit(i.u.CallUserState, { callID: t2, callUserList: d2 }), e2.map(function(e3) {
              clearTimeout(s2.receiveTimer[t2 + e3]), s2.createInviteTimeout(t2, e3, r3.timeout);
            })) : setTimeout(function() {
              e2.forEach(function(e3) {
                e3 = h.callUserMap[e3], h.state != i.h.Started || (null == e3 ? void 0 : e3.state) != i.i.Inviting && (null == e3 ? void 0 : e3.state) != i.i.Received || (e3.state = i.i.Timeout);
              });
            }, 1e3 * r3.timeout)), s2.lg.i(c, i.W.CallingInvite, a2), { callID: t2, errorUserList: u2 };
          });
        }, p.prototype.callQuit = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), callID: e2, config: t2 };
          if (this.checkCallAPI(e2, s2, i.W.CallQuit))
            return Promise.reject(s2.error);
          var o2 = { call_id: e2, payload: this.encodeExtendedData(t2), offline_info: Object(n.g)(t2.pushConfig) };
          return this.cnMgr.send(i.d.cl_quit, o2).then(function(o3) {
            if (o3.code)
              return s2.error = Object(n.y)(l, o3.message, o3.code), r2.lg.w(c, i.W.CallQuit, s2), Promise.reject(s2.error);
            r2.updateCallListSeq(o3.call_list_seq);
            var a2, u2, d2 = r2.dbCallMap.get(e2), p2 = d2 && d2.callUserMap[r2.econf.user.userID];
            return d2 && p2 && (a2 = p2.state, p2.state = i.i.Quit, d2.state = i.h.Ended, p2.extendedData = t2.extendedData || "", p2.quitTime = +o3.quit_time, d2.userDuration = (p2.quitTime - p2.acceptTime) / 1e3 | 0, d2.endTime = Object.values(d2.callUserMap).some(function(e3) {
              return e3.state == i.i.Accepted;
            }) ? 0 : +o3.quit_time, Object.values(d2.callUserMap).every(function(e3) {
              return e3.state == i.i.Quit;
            }) && (d2.endTime = 0), u2 = 0, Object.values(d2.callUserMap).forEach(function(e3) {
              var t3 = e3.state;
              e3 = e3.acceptTime;
              t3 != i.i.Rejected && t3 != i.i.Timeout && t3 != i.i.Quit || (u2 ? e3 < u2 && (u2 = e3) : u2 = e3 || 0);
            }), u2 && (d2.callDuration = (p2.quitTime - u2) / 1e3 | 0), r2.dbMgr.addCallList([d2]), o3 = o3.call_user_session_id, r2.isMainDevice(a2, o3) && r2.bus.emit(i.u.CallUserState, { callID: e2, callUserList: [r2.pickCallUser(p2)] })), r2.lg.i(c, i.W.CallQuit, s2), { callID: e2, createTime: (null == d2 ? void 0 : d2.createTime) || 0, acceptTime: (null == p2 ? void 0 : p2.acceptTime) || (null == d2 ? void 0 : d2.createTime) || 0, quitTime: (null == p2 ? void 0 : p2.quitTime) || 0 };
          });
        }, p.prototype.callJoin = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), callID: e2, config: t2 };
          return this.checkCallAPI(e2, s2, i.W.CallJoin) ? Promise.reject(s2.error) : (t2 = { user_id: e2, user_name: this.encodeExtendedData(t2) }, this.cnMgr.send(i.d.cl_enter, t2).then(function(t3) {
            if (t3.code)
              return s2.error = Object(n.y)(l, t3.message, t3.code), r2.lg.w(c, i.W.CallJoin, s2), Promise.reject(s2.error);
            r2.updateCallListSeq(t3.call_list_seq);
            var a2 = [], u2 = r2.dbCallMap.get(e2) || { callID: e2, caller: t3.caller, mode: i.g.Advanced, state: i.h.Started, createTime: t3.create_time, endTime: 0, extendedData: Object(n.h)(t3.payload), callDuration: 0, userDuration: 0, callUserMap: {} };
            return u2.state = i.h.Started, u2.timeout = t3.timeout, t3.user_state_list.map(function(e3) {
              e3 = { userID: e3.user_id, state: r2.translateUserState(e3, u2), extendedData: Object(n.h)(e3.extended_data), acceptTime: e3.acceptTime, quitTime: e3.quit_time }, u2.callUserMap[e3.userID] = o(o({}, e3), { timeout: u2.timeout }), a2.push(r2.pickCallUser(e3));
            }), r2.dbCallMap.set(e2, u2), r2.dbMgr.addCallList([u2]), { callID: e2, createTime: t3.create_time, joinTime: t3.accept_time, extendedData: Object(n.h)(t3.extended_data), callUserList: a2 };
          }));
        }, p.prototype.callEnd = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), callID: e2, config: t2 };
          if (this.checkCallAPI(e2, s2, i.W.CallEnd))
            return Promise.reject(s2.error);
          var o2 = { call_id: e2, payload: this.encodeExtendedData(t2), offline_info: Object(n.g)(t2.pushConfig) };
          return this.cnMgr.send(i.d.cl_destroy, o2).then(function(o3) {
            if (o3.code)
              return s2.error = Object(n.y)(l, o3.message, o3.code), r2.lg.w(c, i.W.CallEnd, s2), Promise.reject(s2.error);
            r2.updateCallListSeq(o3.call_list_seq);
            var a2, u2, d2 = o3.talk_time, p2 = r2.dbCallMap.get(e2), h = p2 && p2.callUserMap[r2.econf.user.userID];
            return p2 && h && (a2 = h.state, p2.state = i.h.Ended, p2.endTime = d2, r2.calculateCallDuration(p2), r2.dbMgr.addCallList([p2]), u2 = { callID: e2, mode: p2.mode, caller: p2.caller, operatedUserID: r2.econf.user.userID, endTime: d2, extendedData: t2.extendedData }, o3 = o3.quit_time, h.extendedData = t2.extendedData, h.state = i.i.Ended, r2.dbMgr.addCallList([p2]), r2.isMainDevice(a2, o3) && (r2.bus.emit(i.u.CallEnd, u2), r2.bus.emit(i.u.CallUserState, { callID: e2, callUserList: [{ userID: h.userID, state: h.state, extendedData: h.extendedData }] }))), r2.lg.i(c, i.W.CallEnd, s2), { callID: e2, createTime: (null == p2 ? void 0 : p2.createTime) || 0, acceptTime: (null == h ? void 0 : h.acceptTime) || 0, endTime: d2 };
          });
        }, p.prototype.queryList = function(e2) {
          var t2, r2 = this, s2 = Array.from(this.dbCallMap.values()).sort(function(e3, t3) {
            return t3.createTime - e3.createTime;
          }), n2 = { config: e2, total: s2.length, count: 0 }, o2 = 100 < e2.count ? 100 : e2.count, a2 = (e2 = (e2 = e2.nextFlag || 0) || 0, s2.length > o2 ? (e2 = (t2 = (e2 + 1) * o2) >= (s2 = (a2 = e2 * o2) > s2.length ? [] : s2).length ? 0 : e2 + 1, s2 = s2.slice(a2, t2), n2.start = a2, n2.end = t2) : e2 = 0, 0 == o2 && (e2 = 0), n2.count = s2.length, s2.map(function(e3) {
            return r2.getCallInfoFromDB(e3);
          }));
          return this.lg.i(c, i.W.QueryCalls, n2), Promise.resolve({ callList: a2, nextFlag: e2 });
        }, p.prototype.onPushCallInvited = function(e2) {
          var t2, r2, s2, a2, u2 = this, c2 = e2.call_id, l2 = (this.updateCallListSeq(e2.call_list_seq), this.dbCallMap.get(c2)), d2 = l2 && l2.callUserMap[this.econf.user.userID];
          l2 && d2 && d2.state != i.i.Inviting || (t2 = e2.timeout || 0, r2 = {}, s2 = [], e2.user_state_list.forEach(function(e3) {
            4 != e3.sub_code && (e3 = { userID: e3.user_id, state: u2.translateUserState(e3, l2), extendedData: "" }, s2.push(e3), r2[e3.userID] = o(o({}, e3), { acceptTime: 0, quitTime: 0, timeout: t2 }));
          }), l2 || (l2 = { callID: c2, caller: e2.caller, mode: e2.call_mode == i.g.Advanced ? i.g.Advanced : i.g.General, state: i.h.Started, createTime: e2.create_time, endTime: 0, extendedData: Object(n.h)(e2.payload), timeout: t2, inviter: e2.caller, userDuration: 0, callDuration: 0, callUserMap: r2 }, this.dbCallMap.set(c2, l2)), this.dbMgr.addCallList([l2]), l2.mode, a2 = l2.caller, l2.caller, l2.extendedData, l2.createTime, l2.timeout, a2 !== this.econf.user.userID ? this.queryCallInfo(l2, true, "push", s2) : e2.call_user_session_id !== this.econf.sessionID.toString() && setTimeout(function() {
            (null == l2 ? void 0 : l2.state) == i.h.Started && s2.filter(function(e3) {
              return e3.userID !== a2;
            }).forEach(function(e3) {
              (null == l2 ? void 0 : l2.callUserMap[e3.userID].state) != i.i.Inviting && (null == l2 ? void 0 : l2.callUserMap[e3.userID].state) != i.i.Received || (l2.callUserMap[e3.userID].state = i.i.Timeout);
            });
          }, 1e3 * t2));
        }, p.prototype.onPushCallCancel = function(e2) {
          var t2, r2, s2, o2, c2, l2, d2 = this, p2 = e2.call_id, h = (this.updateCallListSeq(e2.call_list_seq), this.dbCallMap.get(p2));
          h && (l2 = null == (t2 = h.callUserMap[this.econf.user.userID]) ? void 0 : t2.state, t2 && t2.state != i.i.Timeout ? (c2 = e2.state == i.f.Timeout ? i.f.Timeout : i.f.Cancel, r2 = e2.call_user_session_id, c2 == i.f.Timeout ? this.isSelfNotInCall(h, "PushTimeout") || (s2 = [], e2.user_ids.forEach(function(e3) {
            (e3 = h.callUserMap[e3]) && e3.state !== i.i.Timeout && (e3.state = i.i.Timeout, s2.push(d2.pickCallUser(e3)));
          }), -1 != e2.user_ids.indexOf(this.econf.user.userID) && (h.state = i.h.Ended, t2 && (t2.state = i.i.Timeout), r2 || this.bus.emit(i.u.CallTimeout, { callID: p2, mode: h.mode })), this.checkEndCallState(h), this.isMainDevice(l2, r2) && s2.length && this.bus.emit(i.u.CallUserState, { callID: p2, callUserList: s2 })) : ((o2 = h.callUserMap[e2.operator]) && (o2.extendedData = Object(n.h)(e2.extended_data)), c2 = e2.user_ids.reduce(function(e3, t3) {
            return t3 !== o2.userID && h.callUserMap[t3] && (h.callUserMap[t3].state = i.i.BeCancelled, e3.push({ userID: t3, state: i.i.BeCancelled, extendedData: "" })), e3;
          }, []), Object.values(h.callUserMap).length == e2.user_ids.length && o2 && (o2.state = i.i.Cancelled, c2.unshift(o2)), c2.find(function(e3) {
            return e3.userID == d2.econf.user.userID;
          }) && (h.state = i.h.Ended), l2 = { callID: p2, mode: h.mode, inviter: e2.caller, extendedData: Object(n.h)(e2.extended_data) }, this.isMainDevice(t2.state, r2) && (h.mode != i.g.General && !e2.user_ids.includes(this.econf.user.userID) || this.bus.emit(i.u.CallCancel, l2), this.bus.emit(i.u.CallUserState, { callID: p2, callUserList: h.mode == i.g.General ? [{ userID: l2.inviter, state: i.i.Cancelled, extendedData: l2.extendedData }] : u([], a(c2), false) }))), this.dbMgr.addCallList([h])) : h.state = i.h.Ended);
        }, p.prototype.onPushCallAccept = function(e2) {
          var t2, r2 = e2.call_id, s2 = (this.updateCallListSeq(e2.call_list_seq), this.dbCallMap.get(r2)), o2 = s2 && s2.callUserMap[e2.invitee], a2 = s2 && (null == (a2 = s2.callUserMap[this.econf.user.userID]) ? void 0 : a2.state);
          s2 && o2 && a2 != i.i.Cancelled && a2 != i.i.BeCancelled && (o2.state = i.i.Accepted, o2.extendedData = Object(n.h)(e2.extended_data), o2.acceptTime = e2.accept_time, (t2 = s2.callUserMap[e2.caller]) && !t2.acceptTime && (t2.acceptTime = o2.acceptTime), this.dbMgr.addCallList([s2]), t2 = e2.call_user_session_id, this.checkEndCallState(s2), this.isMainDevice(a2, t2) && (this.bus.emit(i.u.CallUserState, { callID: r2, callUserList: [this.pickCallUser(o2)] }), this.bus.emit("callInvitationAccepted", { callID: r2, invitee: o2.userID, extendedData: o2.extendedData })));
        }, p.prototype.onPushCallReject = function(e2) {
          var t2 = e2.call_id, r2 = (this.updateCallListSeq(e2.call_list_seq), this.dbCallMap.get(t2)), s2 = r2 && r2.callUserMap[e2.invitee], o2 = r2 && (null == (o2 = r2.callUserMap[this.econf.user.userID]) ? void 0 : o2.state);
          r2 && s2 && o2 != i.i.Cancelled && o2 != i.i.BeCancelled && (s2.state = i.i.Rejected, s2.extendedData = Object(n.h)(e2.extended_data), this.dbMgr.addCallList([r2]), this.checkEndCallState(r2), e2 = e2.call_user_session_id, this.isMainDevice(o2, e2) && (this.bus.emit(i.u.CallUserState, { callID: t2, callUserList: [this.pickCallUser(s2)] }), this.bus.emit("callInvitationRejected", { callID: t2, invitee: s2.userID, extendedData: s2.extendedData })), this.econf.user.userID == s2.userID && (r2.state = i.h.Ended));
        }, p.prototype.onPushCallingInvite = function(e2) {
          var t2, r2, s2, o2, a2, u2 = this, l2 = e2.call_id, d2 = (this.updateCallListSeq(e2.call_list_seq), e2.call_user_session_id), p2 = e2.timeout, h = this.dbCallMap.get(l2) || { callID: l2, caller: e2.caller, mode: i.g.Advanced, state: i.h.Started, createTime: e2.create_time, endTime: 0, extendedData: Object(n.h)(e2.payload), callDuration: 0, userDuration: 0, callUserMap: {} };
          h.inviter = e2.invitee, h.timeout = e2.timeout, !e2.user_state_list.find(function(e3) {
            return e3.user_id == u2.econf.user.userID;
          }) && this.isSelfNotInCall(h) || (r2 = null == (r2 = h.callUserMap[this.econf.user.userID]) ? void 0 : r2.state, s2 = e2.user_state_list.reduce(function(e3, t3) {
            return 4 != t3.sub_code && (e3[t3.user_id] = { userID: t3.user_id, state: u2.translateUserState(t3, h), extendedData: "", acceptTime: 0, quitTime: 0, timeout: p2 }), e3;
          }, {}), Object.assign(h.callUserMap, s2), this.dbCallMap.set(l2, h), o2 = [], e2.user_state_list.forEach(function(e3) {
            var r3 = h && h.callUserMap[e3.user_id];
            e3.sub_code || e3.user_id != u2.econf.user.userID || (t2 = true, h.state = i.h.Started), r3 && o2.push(u2.pickCallUser(r3));
          }), o2.length && !t2 && (e2.invitee !== this.econf.user.userID && o2.forEach(function(e3) {
            clearTimeout(u2.inviterTimer[l2 + e3.userID]);
          }), this.isMainDevice(r2, d2) && this.bus.emit(i.u.CallUserState, { callID: l2, callUserList: o2 })), a2 = { isMain: d2 == this.econf.sessionID.toString(), callUserList: o2 }, e2.invitee == this.econf.user.userID ? d2 && d2 == this.econf.sessionID.toString() ? o2.map(function(t3) {
            u2.createInviteTimeout(e2.call_id, t3.userID, p2);
          }) : setTimeout(function() {
            h.state == i.h.Started && o2.forEach(function(e3) {
              h.callUserMap[e3.userID].state != i.i.Inviting && h.callUserMap[e3.userID].state != i.i.Received || (h.callUserMap[e3.userID].state = i.i.Timeout);
            }), u2.lg.i(c, "onPushCallingInvite timeout", a2);
          }, 1e3 * p2) : this.queryCallInfo(h, true, "push", o2), this.lg.i(c, "onPushCallingInvite", a2));
        }, p.prototype.onPushCallQuit = function(e2) {
          var t2, r2 = e2.call_id, s2 = (this.updateCallListSeq(e2.call_list_seq), this.dbCallMap.get(r2)), o2 = s2 && s2.callUserMap[e2.invitee];
          s2 && o2 && !this.isSelfNotInCall(s2) && (t2 = null == (t2 = s2.callUserMap[this.econf.user.userID]) ? void 0 : t2.state, o2.state = i.i.Quit, o2.extendedData = Object(n.h)(e2.payload), o2.quitTime = e2.quit_time, o2.acceptTime || (o2.acceptTime = e2.accept_time), this.dbMgr.addCallList([s2]), e2 = e2.call_user_session_id, this.checkEndCallState(s2), this.isMainDevice(t2, e2) && this.bus.emit(i.u.CallUserState, { callID: r2, callUserList: [this.pickCallUser(o2)] }), this.econf.user.userID == o2.userID && (s2.state = i.h.Ended));
        }, p.prototype.onPushCallEnter = function(e2) {
          var t2, r2, s2, o2 = this, a2 = e2.call_id, u2 = (this.updateCallListSeq(e2.call_list_seq), this.dbCallMap.get(a2));
          (u2 && !this.isSelfNotInCall(u2) || e2.user_id === this.econf.user.userID) && (u2 ? e2.user_id == this.econf.user.userID && (u2.state = i.h.Started) : (u2 = { callID: a2, caller: this.econf.user.userID, mode: i.g.Advanced, state: i.h.Started, extendedData: Object(n.h)(e2.call_payload), createTime: e2.create_time, endTime: 0, timeout: e2.timeout, inviter: e2.caller, callDuration: 0, userDuration: 0, callUserMap: {} }, this.dbCallMap.set(a2, u2)), t2 = null == (t2 = u2.callUserMap[this.econf.user.userID]) ? void 0 : t2.state, (s2 = e2.user_state_list.find(function(t3) {
            return t3.user_id == e2.user_id;
          })) && (r2 = e2.call_user_session_id, s2 = { userID: s2.user_id, state: this.translateUserState(s2, u2), extendedData: Object(n.h)(e2.payload) }, e2.user_state_list.forEach(function(t3) {
            u2 && (u2.callUserMap[t3.user_id] = { userID: t3.user_id, state: o2.translateUserState(t3, u2), extendedData: Object(n.h)(t3.extended_data), acceptTime: t3.accept_time, quitTime: 0, timeout: t3.residue_timeout_time }, t3.user_id == e2.user_id && (u2.callUserMap[t3.user_id].extendedData = Object(n.h)(e2.payload), u2.callUserMap[t3.user_id].acceptTime = e2.enter_time));
          }), this.dbMgr.addCallList([u2]), this.isMainDevice(t2, r2) && this.bus.emit(i.u.CallUserState, { callID: a2, callUserList: [s2] })));
        }, p.prototype.onPushCallAckTimeout = function(e2) {
          var t2, r2, s2 = this, n2 = e2.call_id, o2 = this.dbCallMap.get(n2);
          o2 && !this.isSelfNotInCall(o2) && null != (r2 = e2.invitees) && r2.length && (t2 = [], e2.invitees.forEach(function(e3) {
            (e3 = o2.callUserMap[e3]) && e3.state !== i.i.Received && (e3.state = i.i.NotYetReceived, t2.push(s2.pickCallUser(e3)));
          }), r2 = null == (r2 = o2.callUserMap[this.econf.user.userID]) ? void 0 : r2.state, this.dbMgr.addCallList([o2]), e2 = e2.session_id, this.isMainDevice(r2, e2) && t2.length && this.bus.emit(i.u.CallUserState, { callID: n2, callUserList: t2 }));
        }, p.prototype.onPushCallEnd = function(e2) {
          var t2, r2, s2, o2, a2 = e2.call_id, u2 = this.dbCallMap.get(a2);
          u2 && (t2 = null == (t2 = u2.callUserMap[this.econf.user.userID]) ? void 0 : t2.state, u2.state = i.h.Ended, u2.endTime = e2.destroy_time, this.calculateCallDuration(u2), this.dbMgr.addCallList([u2]), r2 = { callID: a2, mode: u2.mode, caller: u2.caller, operatedUserID: e2.operator || u2.caller, extendedData: Object(n.h)(e2.payload), endTime: u2.endTime }, s2 = u2.callUserMap[e2.operator || u2.caller], o2 = e2.call_user_session_id, s2 && (s2.state = i.i.Ended, s2.extendedData = Object(n.h)(e2.payload), this.dbMgr.addCallList([u2])), this.isMainDevice(t2, o2) && !this.isSelfNotInCall(u2) && (this.bus.emit(i.u.CallEnd, r2), this.bus.emit(i.u.CallUserState, { callID: a2, callUserList: [{ userID: s2.userID, state: s2.state, extendedData: s2.extendedData }] })));
        }, p.prototype.onPushCallAck = function(e2) {
          var t2, r2 = e2.call_id, s2 = this.dbCallMap.get(r2), n2 = s2 && s2.callUserMap[e2.invitee];
          s2 && n2 && !this.isSelfNotInCall(s2) && n2.state != i.i.Received && (t2 = null == (t2 = s2.callUserMap[this.econf.user.userID]) ? void 0 : t2.state, n2.state = i.i.Received, this.dbMgr.addCallList([s2]), s2 = e2.call_user_session_id, this.isMainDevice(t2, s2) && this.bus.emit(i.u.CallUserState, { callID: r2, callUserList: [this.pickCallUser(n2)] }));
        }, p.prototype.registerInnerEvent = function() {
          this.bus.add(i.u.ILogined, this.onLogined.bind(this)), this.bus.add(i.u.ILogout, this.onLogout.bind(this)), this.bus.add(i.u.IConnected, this.onConnected.bind(this)), this.bus.add(i.u.INetworkChange, this.onNetworkChange.bind(this)), this.bus.add(i.u.ITriggerHB, this.onTriggerHB.bind(this));
        }, p.prototype.onLogined = function() {
          var e2 = this;
          this.dbMgr.getCallList().then(function(t2) {
            t2.forEach(function(t3) {
              e2.dbCallMap.set(t3.callID, t3), t3.state != i.h.Started || e2.isSelfNotInCall(t3) || e2.queryCallInfo(t3, false, "onLogined");
            });
          }), this.mergeSvrCallList(i.v.SDKLogin);
        }, p.prototype.onLogout = function() {
          this.dbCallMap.clear();
        }, p.prototype.onConnected = function() {
          this.mergeSvrCallList(i.v.SDKHb, "onConnected");
        }, p.prototype.onNetworkChange = function(e2) {
          this.online = e2;
        }, p.prototype.onTriggerHB = function() {
          this.mergeSvrCallList(i.v.SDKHb, "hb");
        }, p.prototype.checkEndCallState = function(e2) {
          var t2, r2 = [];
          for (t2 in e2.callUserMap)
            r2.push(e2.callUserMap[t2]);
          e2.mode == i.g.General && r2.every(function(e3) {
            return e3.state == i.i.Accepted || e3.state == i.i.Rejected || e3.state == i.i.Timeout;
          }) && (e2.state = i.h.Ended), e2.mode == i.g.Advanced && r2.every(function(e3) {
            return e3.state == i.i.Quit;
          }) && (e2.state = i.h.Ended);
        }, p.prototype.mergeSvrCallList = function(e2, t2) {
          var r2, s2, a2, u2, l2 = this, d2 = +this.econf.user.callSeq || 0, p2 = this.econf.mailHBConfig.call_list_seq;
          (!p2 || p2 <= d2) && "onConnected" !== t2 || (r2 = { time: new Date(), dbSeq: d2, hbSeq: p2, how: e2, action: t2 }, s2 = 1, a2 = 0, u2 = function(d3) {
            var p3;
            d3.list.forEach(function(e3) {
              var r3, s3, a3, u3, c2, p4, h = e3.call_status, f = l2.dbCallMap.get(e3.call_id), m = !(null != f && f.callUserMap[l2.econf.user.userID]);
              f ? (r3 = e3.call_user_list.some(function(e4) {
                return l2.translateUserState(e4, f) == i.i.Ended;
              }), f.endTime = e3.destroy_time, s3 = [], p4 = !l2.isSelfNotInCall(f), h == i.h.Ended && e3.call_user_list.forEach(function(e4) {
                var t3, r4 = null == f ? void 0 : f.callUserMap[e4.user_id];
                e4.user_id == l2.econf.user.userID && (t3 = null == r4 ? void 0 : r4.state, m = (m = t3 == i.i.Accepted && e4.user_session_id == l2.econf.sessionID.toString()) || t3 == i.i.Received || t3 == i.i.Inviting || 0 == e4.user_session_id), r4 && e4.user_state ? (t3 = l2.translateUserState(e4, f), r4.state !== t3 && t3 !== i.i.Unknown && r4.state !== i.i.Ended && (r4.state = t3, r4.extendedData = Object(n.h)(e4.extended_data), r4.timeout = e4.residue_timeout_time, r4.acceptTime = e4.accept_time, r4.quitTime = e4.quit_time, s3.push(l2.pickCallUser(o({}, r4))), f && (f.callUserMap[r4.userID] = o({}, r4)))) : (t3 = { userID: e4.user_id, state: l2.translateUserState(e4, f), extendedData: Object(n.h)(e4.extended_data), acceptTime: e4.accept_time, quitTime: e4.quit_time, timeout: e4.residue_timeout_time }, s3.push(l2.pickCallUser(o({}, t3))), f && (f.callUserMap[t3.userID] = o({}, t3)));
              }), a3 = false, c2 = s3.find(function(e4) {
                return e4.state == i.i.Cancelled;
              }), s3.length && m && (h !== i.h.Ended && l2.bus.emit(i.u.CallUserState, { callID: f.callID, callUserList: s3 }), (null == (u3 = s3.find(function(e4) {
                return e4.userID == l2.econf.user.userID;
              })) ? void 0 : u3.state) == i.i.Timeout && (a3 = true, l2.bus.emit(i.u.CallTimeout, { callID: f.callID, mode: f.mode })), c2 && (a3 = true, l2.bus.emit(i.u.CallCancel, { callID: f.callID, mode: f.mode, inviter: f.inviter, extendedData: c2.extendedData }))), f.state == i.h.Started && h == i.h.Ended && (u3 = { callID: f.callID, mode: f.mode, caller: f.caller, operatedUserID: f.caller, extendedData: Object(n.h)(d3.payload), endTime: f.endTime }, m && f.mode == i.g.Advanced && p4 && !a3 && r3 && (f.state = i.h.Ended, l2.bus.emit(i.u.CallEnd, u3))), (f.state = h) == i.h.Started && l2.queryCallInfo(f, false, "merge0")) : (c2 = e3.user_timeout, f = { callID: e3.call_id, caller: e3.caller, createTime: e3.create_time, endTime: e3.destroy_time, mode: e3.call_mode == i.g.Advanced ? i.g.Advanced : i.g.General, state: h, extendedData: Object(n.h)(e3.payload), timeout: c2, inviter: e3.inviter, callDuration: 0, userDuration: 0, callUserMap: e3.call_user_list.reduce(function(e4, t3) {
                var r4 = l2.translateUserState(t3, f);
                return 4 != t3.sub_code && r4 !== i.i.Unknown && (e4[t3.user_id] = { userID: t3.user_id, state: r4, extendedData: Object(n.h)(t3.extended_data), acceptTime: t3.accept_time, quitTime: t3.quit_time, timeout: t3.residue_timeout_time }), t3.user_id == l2.econf.user.userID && (m = r4 == i.i.Accepted && t3.user_session_id == l2.econf.sessionID.toString() || 0 == t3.user_session_id), e4;
              }, {}) }, l2.dbCallMap.set(f.callID, f), "onConnected" == t2 && (null == (p4 = f.callUserMap[l2.econf.user.userID]) ? void 0 : p4.state) == i.i.Timeout && l2.bus.emit(i.u.CallTimeout, { callID: f.callID, mode: f.mode }), f.caller == l2.econf.user.userID && m && l2.bus.emit(i.u.CallCreate, { callID: f.callID, mode: f.mode, caller: f.caller, extendedData: f.extendedData, timeout: f.timeout, createTime: f.createTime, callUserList: f.callUserMap ? Object.values(f.callUserMap).map(function(e4) {
                return l2.pickCallUser(e4);
              }) : [] }), l2.queryCallInfo(f, true, "merge1"));
            }), a2 += d3.list.length, d3.nextFlag && l2.econf.token ? l2.fetchSvrCall(d3.nextFlag, ++s2, e2).then(u2) : (l2.updateCallListSeq(("hb" != t2 || 0 != a2) && d3.cur || d3.max, true), p3 = Array.from(l2.dbCallMap.values()), l2.dbMgr.addCallList(p3), "onConnected" == t2 && 0 == a2 && l2.dbCallMap.forEach(function(e3) {
              e3.state == i.h.Started && l2.queryCallInfo(e3, false, "onConnected");
            }), l2.lg.i(c, "mergeSvrCalls", r2));
          }, this.fetchSvrCall(d2, s2, e2).then(u2));
        }, p.prototype.fetchSvrCall = function(e2, t2, r2) {
          return this.cnMgr.send(i.d.cl_list, { cur_list_seq: e2, count: 100, full_pull: t2, how: r2 }, i.j.SDK).then(function(t3) {
            if (t3.code)
              return { cur: 0, list: [] };
            var r3 = t3.cur_list_seq, s2 = t3.max_list_seq, n2 = t3.fetch_end;
            return { nextFlag: n2 || s2 <= r3 || r3 <= e2 || s2 <= e2 ? 0 : r3, cur: r3, max: s2, list: t3.calls, fetch_end: n2 };
          });
        }, p.prototype.queryCallInfo = function(e2, t2, r2, s2) {
          var a2, u2 = this;
          e2.state != i.h.Ended && (a2 = { call_id: e2.callID, action: r2 }, this.cnMgr.send(i.d.cl_info, a2, i.j.SDK).then(function(a3) {
            if (a3.code)
              6000104 !== a3.code && (e2.state = i.h.Ended);
            else {
              var c2 = [], l2 = {}, d2 = 0, p2 = (t2 || u2.diffCallUserState(e2, a3, r2), a3.user_list.forEach(function(t3) {
                var r3, s3;
                4 != t3.user_state && (r3 = { userID: t3.user_id, state: u2.translateUserState(t3, e2), extendedData: Object(n.h)(t3.extended_data) }, c2.push(r3), s3 = t3.accept_time, l2[r3.userID] = o(o({}, r3), { acceptTime: s3, quitTime: t3.quit_time, timeout: t3.residue_timeout_time }), s3 && (d2 = d2 ? Math.min(s3, d2) : s3), u2.callSessionIDMap[e2.callID] || (u2.callSessionIDMap[e2.callID] = {}), u2.callSessionIDMap[e2.callID][r3.userID] = t3.user_session_id);
              }), l2[u2.econf.user.userID]), h = (l2[e2.caller] && (l2[e2.caller].acceptTime = d2), a3.now_time), f = p2 && p2.acceptTime, m = (h && f && e2.state == i.h.Started && (e2.userDuration = (h - f) / 1e3 | 0), e2.callUserMap = l2, u2.dbMgr.addCallList([e2]), u2.isSelfNotInCall(e2) && (e2.state = i.h.Ended), { callID: e2.callID, mode: e2.mode, caller: e2.caller, inviter: e2.inviter, extendedData: e2.extendedData, createTime: e2.createTime, timeout: p2.timeout, callUserList: c2 });
              if (t2 && p2)
                switch (p2.state != i.i.Inviting && p2.state != i.i.Accepted && p2.state != i.i.Received || a3.user_list.forEach(function(t3) {
                  (t3 = l2[t3.user_id]).state == i.i.Inviting && t3.timeout && u2.createReceiveTimeout(e2.callID, t3.userID, t3.timeout);
                }), p2.state) {
                  case i.i.Inviting:
                    u2.callAck(e2.callID), e2.state = i.h.Started, u2.bus.emit(i.u.CallRecv, m);
                    break;
                  case i.i.Received:
                    e2.state = i.h.Started, s2 && !s2.some(function(e3) {
                      return e3.userID == p2.userID;
                    }) || u2.bus.emit(i.u.CallRecv, m);
                    break;
                  case i.i.Timeout:
                    e2.state = i.h.Ended, u2.bus.emit(i.u.CallTimeout, { callID: e2.callID, mode: e2.mode });
                }
              !t2 && "merge0" == r2 && (null == p2 ? void 0 : p2.state) == i.i.Inviting && p2.timeout && (u2.callAck(e2.callID), u2.bus.emit(i.u.CallRecv, m), c2.map(function(t3) {
                u2.createReceiveTimeout(e2.callID, t3.userID, p2.timeout);
              })), t2 || "onConnected" != r2 || a3.user_list.forEach(function(t3) {
                (t3 = l2[t3.user_id]).state != i.i.Inviting && t3.state != i.i.Received || u2.createReceiveTimeout(e2.callID, t3.userID, t3.timeout);
              });
            }
          }));
        }, p.prototype.diffCallUserState = function(e2, t2, r2) {
          var s2 = this, o2 = { action: r2, call: e2.callID, userState: "" }, l2 = e2.callUserMap, d2 = null == (d2 = l2[this.econf.user.userID]) ? void 0 : d2.state, p2 = [], h = "", f = (t2.user_list.forEach(function(t3) {
            var r3 = l2[t3.user_id], i2 = (o2.userState += t3.user_id + ":" + t3.user_state + "-" + !!e2 + ",", s2.translateUserState(t3, e2));
            r3 && r3.state === i2 || (p2.push({ userID: t3.user_id, state: i2, extendedData: Object(n.h)(t3.extended_data) || "" }), o2[t3.user_id] = (null == r3 ? void 0 : r3.state) + "," + i2), t3.user_id == s2.econf.user.userID && (h = null == t3.user_session_id ? "0" : t3.user_session_id);
          }), p2.find(function(e3) {
            return e3.userID == s2.econf.user.userID;
          }) || {});
          f && f.state == i.i.Inviting && this.bus.emit(i.u.CallRecv, { callUserList: e2.callUserMap ? Object.values(e2.callUserMap).map(function(e3) {
            return s2.pickCallUser(e3);
          }) : [], caller: e2.caller, createTime: e2.createTime, extendedData: e2.extendedData, inviter: t2.inviter, timeout: t2.user_timeout, callID: e2.callID, mode: t2.mode }), f && f.state == i.i.Timeout && this.bus.emit(i.u.CallTimeout, { callID: e2.callID, mode: e2.mode }), t2 = p2.find(function(e3) {
            return e3.state == i.i.Cancelled && e3.userID !== (null === f ? void 0 : f.userID);
          }), "onLogined" == r2 && f && t2 && this.bus.emit(i.u.CallCancel, { callID: e2.callID, inviter: e2.inviter, mode: e2.mode, extendedData: t2.extendedData }), r2 = this.isMainDevice(d2, h);
          o2.isMain = r2, o2.selfOldState = d2, this.lg.i(c, "diffCallUserState", o2), p2.length && r2 && this.bus.emit(i.u.CallUserState, { callID: e2.callID, callUserList: u([], a(p2), false) });
        }, p.prototype.callAck = function(e2) {
          var t2 = this, r2 = { call_id: e2 }, s2 = this.dbCallMap.get(e2), n2 = s2 && s2.callUserMap[this.econf.user.userID];
          (null == n2 ? void 0 : n2.state) === i.i.Inviting && this.cnMgr.send(i.d.cl_ack, r2, i.j.SDK).then(function(r3) {
            !r3.code && s2 && n2 && (n2.state = i.i.Received, t2.dbMgr.addCallList([s2]), t2.bus.emit(i.u.CallUserState, { callID: e2, callUserList: [t2.pickCallUser(n2)] }));
          });
        }, p.prototype.createInviteTimeout = function(e2, t2, r2) {
          var s2 = this, n2 = e2 + t2;
          this.inviterTimer[n2] && clearTimeout(this.inviterTimer[n2]), this.inviterTimer[n2] = setTimeout(function() {
            var r3 = s2.dbCallMap.get(e2);
            !r3 || r3.state == i.h.Ended && r3.mode == i.g.Advanced || (r3 = r3.callUserMap[t2]).state != i.i.Inviting && r3.state != i.i.Received && r3.state != i.i.NotYetReceived && r3.state != i.i.Unknown || s2.callCancel([t2], e2, { extendedData: "" }, i.f.Timeout);
          }, 1e3 * r2);
        }, p.prototype.createReceiveTimeout = function(e2, t2, r2) {
          var s2 = this, n2 = e2 + t2;
          this.receiveTimer[n2] && clearTimeout(this.receiveTimer[n2]), this.receiveTimer[n2] = setTimeout(function() {
            var r3, n3, o2, a2, u2;
            !s2.online || (r3 = s2.dbCallMap.get(e2)) && r3.state !== i.h.Ended && (o2 = !(n3 = []), (u2 = r3.callUserMap[t2]).state != i.i.Received && u2.state != i.i.Inviting || (n3.push({ userID: u2.userID, state: i.i.Timeout, extendedData: u2.extendedData }), t2 == s2.econf.user.userID ? o2 = true : u2.state = i.i.Timeout), a2 = !(u2 = null == (u2 = s2.callSessionIDMap[e2]) ? void 0 : u2[s2.econf.user.userID]) || u2 == s2.econf.sessionID.toString(), u2 = { sid: u2, callUserList: n3.length }, s2.lg.i(c, "createReceiveTimeout", u2), a2 && n3.length && s2.bus.emit(i.u.CallUserState, { callID: e2, callUserList: n3 }), o2 && (r3.callUserMap[s2.econf.user.userID].state = i.i.Timeout, r3.state = i.h.Ended, s2.bus.emit(i.u.CallTimeout, { callID: r3.callID, mode: r3.mode })));
          }, 1e3 * r2);
        }, p.prototype.translateUserState = function(e2, t2) {
          var r2 = e2.call_state_list || [], s2 = e2.user_state || e2.sub_code;
          r2 = (r2 = r2.sort(function(e3, t3) {
            return e3.start_version - t3.start_version;
          })).shift();
          return (s2 = s2 || (null == r2 ? void 0 : r2.state)) ? 1 == s2 ? i.i.Accepted : 2 == s2 ? i.i.Rejected : 3 == s2 ? t2 && e2.user_id != t2.caller ? i.i.BeCancelled : i.i.Cancelled : 5 == s2 ? i.i.Received : 7 == s2 ? i.i.Quit : 8 == s2 ? i.i.Ended : 9 == s2 ? i.i.Timeout : 10 == s2 ? i.i.NotYetReceived : i.i.Unknown : i.i.Inviting;
        }, p.prototype.calculateCallDuration = function(e2) {
          var t2 = 0;
          Object.values(e2.callUserMap).forEach(function(e3) {
            0 < (e3 = e3.acceptTime) && (!t2 || e3 < t2) && (t2 = e3);
          }), e2.callDuration = t2 ? (e2.endTime - t2) / 1e3 | 0 : 0;
        }, p.prototype.pickCallUser = function(e2) {
          return { userID: e2.userID, state: e2.state, extendedData: e2.extendedData };
        }, p.prototype.encodeExtendedData = function(e2) {
          return (e2 = (null == e2 ? void 0 : e2.extendedData) || "") ? Object(n.k)(e2) : void 0;
        }, p.prototype.updateCallListSeq = function(e2, t2) {
          var r2 = this.econf.user;
          !e2 || !t2 && +r2.callSeq && r2.callSeq != e2 - 1 || (r2.callSeq = e2, this.dbMgr.setUser(r2));
        }, p.prototype.isSelfNotInCall = function(e2, t2) {
          var r2, s2;
          return !!e2.callUserMap && (!(r2 = !(r2 = e2.callUserMap[this.econf.user.userID]) || r2.state == i.i.Timeout || r2.state == i.i.Cancelled || r2.state == i.i.BeCancelled || r2.state == i.i.Rejected || r2.state == i.i.Quit) && t2 && (s2 = { action: t2, call: e2.callID }, Object.values(e2.callUserMap).forEach(function(e3) {
            return s2[e3.userID] = e3.state;
          }), this.lg.i(c, "isSelfNotInCall", s2)), r2);
        }, p.prototype.isMainDevice = function(e2, t2) {
          return e2 == i.i.Accepted && t2 == this.econf.sessionID.toString() || e2 == i.i.Received || e2 == i.i.Inviting || 0 == t2;
        }, p.prototype.getCallInfoFromDB = function(e2) {
          var t2 = this;
          return { callID: e2.callID, caller: e2.caller, mode: e2.mode, state: e2.state, inviter: e2.inviter, extendedData: e2.extendedData, createTime: e2.createTime, endTime: e2.endTime, callUserList: e2.callUserMap ? Object.values(e2.callUserMap).map(function(e3) {
            return t2.pickCallUser(e3);
          }) : [] };
        }, p.prototype.checkCallAPI = function(e2, t2, r2) {
        }, p);
        function p(e2, t2, r2, n2) {
          this.lg = s.a.getInstance().lg, this.dbCallMap = /* @__PURE__ */ new Map(), this.receiveTimer = {}, this.inviterTimer = {}, this.callSessionIDMap = {}, this.online = true, this.econf = e2, this.bus = t2, this.cnMgr = r2, this.dbMgr = n2, this.registerInnerEvent();
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return l;
        });
        var s = r(2), n = r(65), i = r(1), o = r(0), a = r(66), u = function() {
          return (u = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, c = o.X.Connection, l = (d.prototype.initEvent = function(e2, t2, r2) {
          this.onConnectedEvent = e2, this.onDisConnectedEvent = t2, this.onPushEvent = r2;
        }, d.prototype.create = function(e2) {
          return !e2 && this.connection && this.connection.isOpen ? Promise.resolve() : (this.streamID++, this.close(), (e2 = new a.a(this.bus, this.econf)).onconnected = this.onConnectedEvent, e2.ondisconnected = this.onDisConnectedEvent, e2.onmessage = this.onmessage, this.connection = e2, this.initUrls(), this.initSessionID(), e2.create(this.urls));
        }, d.prototype.close = function() {
          this.connection && this.connection.destroy(), this.connection = null;
        }, d.prototype.destroy = function() {
          this.requestMap.clear(), this.qpsStgy.destroy(), this.close(), this.lg = null, this.dr = null, this.pb = null, this.econf = null;
        }, d.prototype.sendDispatch = function(e2) {
          var t2 = ++this.seq, r2 = (e2 = this.pb.encodeHubGetAppConf(this.streamID, t2, this.econf, e2), this.connection.send(e2), { time: new Date(), seq: t2, cmd: "AccesshubGetAppConfig" });
          this.createReq(t2, this.econf.cloudSetting.req_to.def, r2), t2 = ++this.seq, e2 = this.pb.encodeHubDispatch(this.streamID, t2, this.econf), this.connection.send(e2), r2 = { time: new Date(), seq: t2, cmd: "AccesshubDispatch" }, this.createReq(t2, this.econf.cloudSetting.req_to.def, r2), t2 = ++this.seq, e2 = this.pb.encodeHubGetSvrAddr(this.streamID, t2, this.econf), this.connection.send(e2), r2 = { time: new Date(), seq: t2, cmd: "AccesshubGetSvraddr" }, this.createReq(t2, this.econf.cloudSetting.req_to.def, r2);
        }, d.prototype.sendHttp = function(e2, t2, r2) {
          var s2 = ++this.seq;
          r2 = this.pb.encodeHubHTTP(this.streamID, s2, this.econf, e2, t2, r2), this.connection.send(r2), r2 = { time: new Date(), seq: s2, rsize: 0, cmd: "AccesshubHTTP", http: e2, body: t2 };
          return this.createReq(s2, this.econf.cloudSetting.req_to.def, r2);
        }, d.prototype.send = function(e2, t2, r2, s2, n2) {
          return void 0 === r2 && (r2 = o.j.API), void 0 === s2 && (s2 = this.econf.cloudSetting.req_to.def), void 0 === n2 && (n2 = true), this.connection && this.econf.serverUserID ? this.qpsStgy.canPass(e2.w, 1) ? this.sendInner(e2.cmd, t2, r2, s2, n2) : this.createQPSReq(e2.cmd, t2, r2, s2, n2, e2.w) : Promise.resolve(Object(i.y)(6000104));
        }, d.prototype.sendHB = function(e2, t2) {
          return this.sendInner(e2, t2, o.j.SDK, this.econf.cloudSetting.req_to.def, false);
        }, d.prototype.sendNoRsp = function(e2, t2) {
          if (this.connection && this.econf.serverUserID) {
            e2 = this.generateHeader(e2, o.j.SDK), e2 = this.pb.encodeReq(e2, t2, this.streamID, this.econf);
            try {
              this.connection.send(e2);
            } catch (e3) {
            }
          }
        }, d.prototype.responseReq = function(e2, t2, r2) {
          var s2, n2;
          return this.requestMap.has(e2) ? (s2 = (n2 = this.requestMap.get(e2)).timer, n2 = n2.resolve, clearTimeout(s2), t2 && (this.requestMap.delete(e2), n2({ code: r2 })), e2) : 0;
        }, d.prototype.initUrls = function() {
          if (!this.urls.length) {
            var e2 = this.st.advancedConfig.geoFence.host.accesshub;
            if (e2)
              this.urls[0] = e2;
            else {
              this.urls[0] = this.st.advancedConfig.geoFence.hostMap[1].host.accesshub;
              try {
                var t2 = i.p ? i.p.getStorageSync(i.p._zisAlipay ? { key: this.urlKey } : this.urlKey) : localStorage.getItem(this.urlKey);
                if (!t2 || "object" == typeof t2 && !t2.data)
                  return;
                this.urls = s.a.getInstance().crypto.decryptString("object" == typeof t2 ? t2.data : t2, this.econf).split(",");
              } catch (e3) {
              }
            }
          }
        }, d.prototype.saveUrls = function() {
          if (this.urls.length) {
            var e2 = s.a.getInstance().crypto.encryptString(this.urls.join(","), this.econf);
            if (i.p)
              i.p._zisAlipay ? i.p.setStorageSync({ key: this.urlKey, data: e2 }) : i.p.setStorageSync(this.urlKey, e2);
            else
              try {
                localStorage.setItem(this.urlKey, e2);
              } catch (e3) {
              }
          }
        }, d.prototype.initSessionID = function() {
          try {
            var e2 = i.p ? i.p.getStorageSync(i.p._zisAlipay ? { key: this.sessionKey } : this.sessionKey) : localStorage.getItem(this.sessionKey);
            if (!e2 || "object" == typeof e2 && !e2.data)
              return;
            var t2 = "object" == typeof e2 ? e2.data : e2, r2 = t2.indexOf("_");
            t2.substring(r2 + 1) == this.econf.user.userID && (this.sessionID = t2.substring(0, r2));
          } catch (e3) {
          }
        }, d.prototype.saveSessionID = function() {
          var e2 = this.econf.sessionID + "_" + this.econf.user.userID;
          if (i.p)
            i.p._zisAlipay ? i.p.setStorageSync({ key: this.sessionKey, data: e2 }) : i.p.setStorageSync(this.sessionKey, e2);
          else
            try {
              localStorage.setItem(this.sessionKey, e2);
            } catch (e3) {
            }
        }, d.prototype.initQPSEvent = function() {
          this.bus.add(o.u.IQPSSend, this.sendQPSReq.bind(this));
        }, d.prototype.sendInner = function(e2, t2, r2, s2, n2) {
          var a2 = this.generateHeader(e2, r2), u2 = a2.seq;
          e2 == o.d.sw_login.cmd && (t2._seq = u2), this.dr.beginNetworkReq(e2, u2, r2, t2), r2 = this.pb.encodeReq(a2, t2, this.streamID, this.econf);
          try {
            this.connection.send(r2);
          } catch (e3) {
            return Promise.resolve(Object(i.y)(6000104));
          }
          return n2 = n2 ? { time: new Date(), seq: u2, caller: a2.caller_type, size: r2.length, rsize: -1, cmd: e2, body: t2 } : null, this.createReq(u2, s2, n2, e2);
        }, d.prototype.sendQPSReq = function(e2) {
          var t2 = this.requestMap.get(e2);
          if (t2) {
            var r2 = t2.timeout, s2 = (n2 = t2.header).cmd, n2 = (this.dr.beginNetworkReq(s2, e2, n2.caller_type, t2.body), this.pb.encodeReq(n2, t2.body, this.streamID, this.econf));
            try {
              this.connection.send(n2);
            } catch (e3) {
              return t2.resolve(Object(i.y)(6000104));
            }
            t2.log && (t2.timeout = Date.now()), t2.timer = this.createReqTimer(e2, r2, t2.log, t2.resolve, s2);
          }
        }, d.prototype.createReq = function(e2, t2, r2, s2) {
          var n2 = this;
          return new Promise(function(i2) {
            var o2 = n2.createReqTimer(e2, t2, r2, i2, s2);
            n2.requestMap.set(e2, { seq: e2 + (s2 || ""), resolve: i2, log: r2, timer: o2 });
          });
        }, d.prototype.createQPSReq = function(e2, t2, r2, s2, n2, i2) {
          var a2 = this, u2 = this.generateHeader(e2, r2), c2 = u2.seq, l2 = (e2 == o.d.sw_login.cmd && (t2._seq = c2), this.qpsStgy.collectRequest({ seq: c2, weight: i2, overhead: 1 }), n2 ? { time: new Date(), weight: i2, seq: c2, caller: u2.caller_type, size: 0, rsize: -1, cmd: e2, body: t2 } : null);
          return new Promise(function(r3) {
            a2.requestMap.set(c2, { seq: c2 + e2, resolve: r3, log: l2, timer: null, timeout: s2, header: u2, body: t2 });
          });
        }, d.prototype.createReqTimer = function(e2, t2, r2, s2, n2) {
          var i2 = this;
          return setTimeout(function() {
            2 <= i2.timeoutCount ? (i2.lg && i2.lg.w(c, "reconn", "timeout: " + i2.timeoutCount), i2.timeoutCount = 0, i2.create(true)) : i2.timeoutCount++, i2.requestMap.delete(e2);
            var a2 = { seq: e2, code: 6000104, message: "Network error." };
            if (!i2.lg)
              return s2(a2);
            r2 && (r2.timeout = t2, i2.lg.w(c, o.W.SCMD, r2)), n2 && i2.dr.endNetworkReq(n2, e2, a2), s2(a2);
          }, t2);
        }, d.prototype.handleHubPCDownwardMessage = function(e2) {
          var t2 = (r2 = function(e3, t3) {
            var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
            if (!r3)
              return e3;
            var s3, n3, i3 = r3.call(e3), o2 = [];
            try {
              for (; (void 0 === t3 || 0 < t3--) && !(s3 = i3.next()).done; )
                o2.push(s3.value);
            } catch (e4) {
              n3 = { error: e4 };
            } finally {
              try {
                s3 && !s3.done && (r3 = i3.return) && r3.call(i3);
              } finally {
                if (n3)
                  throw n3.error;
              }
            }
            return o2;
          }(this.pb.decodeRspHeader(e2), 2))[0], r2 = r2[1], s2 = t2.seq, n2 = -1 != this.swPushCmdList.indexOf(t2.cmd), i2 = 1024 < e2.byteLength ? e2.byteLength : void 0;
          if (n2)
            s2 > this.seq && (this.seq = s2), d2 = { time: 0, seq: s2, size: i2, cmd: a2 = t2.cmd, body: n2 = this.pb.decodeRspBody(e2, a2, r2, this.econf) }, a2 == o.d.swp_list.cmd && n2.push_requests && n2.push_requests[0] && (l2 = (u2 = n2.push_requests[0]).sub_cmd, p = u2.sender_user_id, h = u2.msg_id, u2 = u2.msg_body, d2.time = this.st.getRealClientTimestamp() - n2.send_time, d2.cmd = l2, d2.body = { qos: n2.qos_flag || void 0, stime: n2.send_time, suid: p, msg_id: h, msg_body: u2 }, 1 < (l2 = n2.push_requests.length) && (d2.body.length = l2)), this.lg.i(c, o.W.PCMD, d2), n2.subCmds || this.onPushEvent(a2, n2, d2.time);
          else {
            if (!this.requestMap.has(s2))
              return p = Array.from(this.requestMap.values()).map(function(e3) {
                return e3.seq;
              }), h = { seq: s2, rsize: i2, cmd: t2.cmd, seqs: p }, void this.lg.w(c, o.W.SCMD, h);
            var a2 = t2.cmd.replace("_rsp", ""), u2 = this.pb.decodeRspBody(e2, a2, r2, this.econf), l2 = (this.handleFileProxyHost(a2, u2), a2 === o.d.sw_login.cmd && (u2.rspHeader = t2), this.requestMap.get(s2)), d2 = (n2 = l2.resolve, l2.log), p = l2.timer, h = l2.timeout;
            (d2 || u2.code) && (e2 = null, d2 ? (d2.size < 1024 && delete d2.size, d2.rsize = i2, d2.rbody = u2, h && d2.hasOwnProperty("weight") && (d2.weight += "," + (Date.now() - h))) : e2 = { seq: s2, rsize: i2, cmd: a2, rbody: u2 }, u2.code ? this.lg.w(c, o.W.SCMD, d2 || e2) : this.lg.i(c, o.W.SCMD, d2 || e2)), this.requestMap.delete(s2), clearTimeout(p), u2.code != o.mb && this.dr.endNetworkReq(a2, s2, u2), n2(u2);
          }
        }, d.prototype.handleHubHTTPRsp = function(e2) {
          var t2 = e2.txid;
          if (t2 && this.requestMap.has(t2)) {
            var r2 = (n2 = this.requestMap.get(t2)).resolve, s2 = n2.log, n2 = n2.timer, a2 = {};
            if (e2.body && e2.body.length) {
              s2.rsize = e2.body.length;
              try {
                a2 = JSON.parse(Object(i.h)(e2.body));
              } catch (e3) {
              }
            }
            this.requestMap.delete(t2), clearTimeout(n2), s2.rbody = a2, this.lg.i(c, o.W.SCMD, s2), r2(a2);
          }
        }, d.prototype.handleHubRsp = function(e2) {
          var t2 = e2.txid;
          if (!this.requestMap.has(t2))
            return false;
          var r2 = (s2 = this.requestMap.get(t2)).log, s2 = s2.timer;
          return this.requestMap.delete(t2), clearTimeout(s2), r2.rbody = e2, this.lg.i(c, o.W.SCMD, r2), !e2.code;
        }, d.prototype.handleHubLog = function(e2, t2, r2) {
          this.lg.i(c, o.W.PCMD, { type: e2, cmd: "Accesshub" + (r2 = void 0 === r2 ? "" : r2), res: t2 }), 19 != e2 && 20 != e2 && 30 != e2 || this.onPushEvent("Accesshub", u({ _type: e2 }, t2), 0);
        }, d.prototype.generateHeader = function(e2, t2) {
          return { cmd: e2, seq: ++this.seq, timestamp: Date.now(), product: 2, flags: [1], caller_type: t2, app_id: this.econf.appID, user_id: this.econf.user.userID, session_id: this.econf.sessionID, user_nid: this.econf.serverUserID, controls: this.econf.controls };
        }, d.prototype.handleFileProxyHost = function(e2, t2) {
          var r2, s2 = this.st.advancedConfig.geoFence.host.fileproxy;
          s2 && !t2.code && (r2 = this.st.advancedConfig.geoFence.reg, e2 == o.d.file_upload.cmd ? t2.upload_req.url = t2.upload_req.url.replace(r2, s2 + "$4") : e2 == o.d.file_process.cmd && (t2.download_url = t2.download_url.replace(r2, s2 + "$4")));
        }, d.prototype.replaceDomain = function(e2) {
          var t2 = e2.logreport, r2 = e2.detaillog, s2 = (e2 = e2.zimfile, this.st.advancedConfig.geoFence.host);
          t2 && (s2.logreport = "wss://" + t2 + "/zglog/web"), r2 && (s2.detaillog = "https://" + r2), e2 && (s2.fileproxy = "https://" + e2);
        }, d);
        function d(e2, t2) {
          var r2 = this;
          this.bus = t2, this.urls = [], this.sessionID = "", this.seq = 0, this.streamID = 0, this.urlKey = "", this.sessionKey = "", this.timeoutCount = 0, this.requestMap = /* @__PURE__ */ new Map(), this.swPushCmdList = [o.d.swp_list.cmd, o.d.swp_kickout.cmd, o.d.swp_redirect.cmd], this.lg = s.a.getInstance().lg, this.dr = s.a.getInstance().dr, this.pb = s.a.getInstance().pb, this.st = s.a.getInstance().st, this.onmessage = function(e3) {
            r2.timeoutCount = 0, e3 = i.p && e3.data.isBuffer ? Object(i.b)(e3.data.data) : new Uint8Array(e3.data);
            try {
              var t3, s2, n2 = (e3[2] << 8) + e3[3], a2 = r2.pb.decodeHubRsp(n2, e3);
              switch (n2) {
                case 21:
                  r2.handleHubPCDownwardMessage(a2);
                  break;
                case 5:
                  r2.handleHubHTTPRsp(a2);
                  break;
                case 40:
                  r2.handleHubRsp(a2) && (1 <= (t3 = a2.geofencing_id) && t3 <= 7 && t3 != r2.st.advancedConfig.geoFence.id && r2.st.setHost(t3), r2.replaceDomain(a2), (s2 = r2.st.advancedConfig.geoFence.host.accesshub) && (r2.urls[1] = s2), r2.saveUrls());
                  break;
                case 27:
                  r2.handleHubRsp(a2) && a2.wss_groups[0] && (s2 = a2.wss_groups[0].host, r2.st.advancedConfig.geoFence.dispatch.host = s2, r2.urls[0] = "wss://" + s2 + "/accesshub", r2.saveUrls());
                  break;
                case 24:
                  r2.handleHubRsp(a2) && (r2.st.advancedConfig.geoFence.dispatch.domain = a2.domain);
                  break;
                case 3:
                  r2.handleHubLog(n2, a2, "CloseConnection"), r2.onDisConnectedEvent(true);
                  break;
                case 22:
                  r2.handleHubLog(n2, a2, "Redirect");
                  var u2 = a2.wss_groups.map(function(e4) {
                    return "wss://" + e4.host + "/accesshub";
                  });
                  u2.length && r2.onPushEvent(o.d.swp_redirect.cmd, { user_ids: u2 }, 0);
                  break;
                default:
                  r2.handleHubLog(n2, a2);
              }
            } catch (e4) {
            }
          }, this.econf = e2, this.qpsStgy = new n.a(t2), this.urlKey = "z_AccesshubURL_" + this.econf.appID, this.sessionKey = "z_AccesshubSession_" + this.econf.appID, s.a.getInstance().crypto.generateAppIDKey(this.econf), this.initQPSEvent();
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return i;
        });
        var s = r(1), n = r(0), i = (o.prototype.destroy = function() {
          this.requestList.length = 0, clearInterval(this.checkTokenTimer), clearInterval(this.checkRequestTimer), clearInterval(this.postQPSTimer), this.bus = null;
        }, o.prototype.canPass = function(e2, t2) {
          var r2 = this.tokenCount - t2 > this.defaultToken;
          return e2 !== n.e.Highest && (this.requestNum++, this.tokenCount -= t2, this.tokenCount < 0 && (this.tokenCount = 0)), e2 == n.e.Highest || r2;
        }, o.prototype.collectRequest = function(e2) {
          this.requestList.push(e2);
        }, o.prototype.postRequestData = function() {
          var e2 = this;
          this.postQPSTimer = setInterval(function() {
            var t2;
            e2.requestNum = 0, e2.isProd || s.p || (t2 = { reqLen: e2.requestList.length, token: e2.tokenCount, action: "setData", max: e2.maxToken, interval: 1e3, reqNum: e2.requestNum }, postMessage(JSON.stringify(t2), "*"));
          }, 1e3);
        }, o.prototype.warmUpTokenBuck = function() {
          var e2, t2 = this, r2 = this.maxToken - this.defaultToken, s2 = 1, n2 = 1, i2 = setInterval(function() {
            e2 = s2 + n2, s2 = n2, r2 <= (n2 = e2) || t2.tokenCount >= t2.maxToken ? (clearInterval(i2), i2 = null, t2.initCheckTokenInterval()) : (t2.tokenCount += n2, t2.tokenCount > t2.maxToken && (t2.tokenCount = t2.maxToken));
          }, 50);
        }, o.prototype.initCheckTokenInterval = function() {
          var e2 = this;
          this.checkTokenTimer = setInterval(function() {
            e2.tokenCount += e2.requestList.length > e2.maxToken / 2 ? 2 * e2.tokenStep : e2.tokenStep, e2.tokenCount > e2.maxToken && (e2.tokenCount = e2.maxToken);
          }, 100);
        }, o.prototype.initCheckRequestInterval = function() {
          var e2 = this;
          this.checkRequestTimer = setInterval(function() {
            e2.requestList.sort(function(e3, t3) {
              return t3.weight - e3.weight;
            });
            for (var t2 = 0; e2.requestList.length && t2++ < 10; ) {
              var r2 = e2.requestList.shift();
              if (!r2 || !e2.tokenCount)
                break;
              if (e2.bus.exec(n.u.IQPSSend, r2.seq), e2.tokenCount -= r2.overhead, e2.tokenCount < 1)
                break;
            }
          }, 100);
        }, o);
        function o(e2) {
          this.requestList = [], this.tokenCount = 30, this.maxToken = 100, this.defaultToken = 30, this.tokenStep = 5, this.requestNum = 0, this.isProd = true, this.bus = e2, this.warmUpTokenBuck(), this.initCheckRequestInterval(), this.postRequestData();
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return u;
        });
        var s = r(2), n = r(1), i = r(0), o = i.X.Connection, a = "reconn", u = (c.prototype.create = function(e2) {
          var t2 = this;
          return this.close(), this.urls = e2, this.urlIndex = 0, this.retryCount = 0, this.retryTotalTime = 0, this.initDelayTask(), new Promise(function(e3, r2) {
            t2.createSocket(), t2.bindSocketEvent(e3, r2);
          });
        }, c.prototype.close = function() {
          this.isOpen = false, this.socket && (n.p ? (n.p._zim_isAlipay ? (this.socket.offMessage(), this.socket.offOpen(), this.socket.offClose(), this.socket.offError()) : (this.socket.onMessage(function() {
          }), this.socket.onOpen(function() {
          }), this.socket.onClose(function() {
          }), this.socket.onError(function() {
          })), this.socket.close()) : (this.socket.onmessage = null, this.socket.onopen = null, this.socket.onclose = null, this.socket.onerror = null, this.socket.close(1e3)), this.socket = null);
        }, c.prototype.destroy = function() {
          this.lg.w(o, "close"), this.close(), this.bus.remove(i.u.INetworkChange, this.onNetworkChange), this.lg = null;
        }, c.prototype.send = function(e2) {
          var t2;
          this.socket && (n.p ? (t2 = n.p._zim_isAlipay ? Object(n.c)(e2) : e2.buffer, this.socket.send({ data: t2, isBuffer: true })) : this.socket.send(e2));
        }, c.prototype.createSocket = function() {
          if (n.p)
            try {
              this.socket = n.p.connectSocket({ url: this.urls[this.urlIndex] + "?zim", multiple: true });
            } catch (e2) {
            }
          else
            try {
              this.socket = new WebSocket(this.urls[this.urlIndex] + "?zim"), this.socket.binaryType = "arraybuffer";
            } catch (e2) {
            }
        }, c.prototype.bindSocketEvent = function(e2, t2) {
          function r2() {
            i2.isOpen = true, i2.isConnecting = false, i2.retryCount = 0, i2.retryTotalTime = 0, i2.urlIndex = 0;
            var t3 = !e2, r3 = { event: "onconn", isReconnect: t3, total: i2.initDelayTask(), max: i2.econf.cloudSetting.retry.login_max_itvl, index: i2.urlIndex, urls: i2.urls };
            i2.lg.w(o, a, r3), i2.onconnected(t3), e2 && e2(), e2 = void 0;
          }
          function s2(r3) {
            !i2.isConnecting && i2.socket && (i2.isConnecting = true, i2.reconnect(r3, e2, t2));
          }
          var i2 = this;
          n.p ? (this.socket.onMessage(this.onmessage), this.socket.onOpen(r2), this.socket.onClose(s2), this.socket.onError(s2)) : (this.socket.onmessage = this.onmessage, this.socket.onopen = r2, this.socket.onclose = s2, this.socket.onerror = s2);
        }, c.prototype.reconnect = function(e2, t2, r2) {
          var n2, i2 = this, u2 = (e2 = e2 && e2.type ? { code: e2.code, message: e2.reason || "Socket " + e2.type } : e2, this.close(), this.delayTaskList.shift() || this.unlimited_retry);
          if (!u2)
            return n2 = { event: "ondisconn", url: this.urls[this.urlIndex] }, this.lg.w(o, a, n2), this.isOpen = false, this.isConnecting = false, this.retryCount = 0, this.retryTotalTime = 0, this.urlIndex = 0, this.ondisconnected(true), r2 && r2(e2), void (r2 = void 0);
          this.ondisconnected(false), this.retryTimer = setTimeout(function() {
            var n3;
            i2.lg && (i2.isOpen = false, i2.isConnecting = false, i2.retryCount++, i2.retryTotalTime += u2, i2.urlIndex = (i2.urlIndex + 1) % i2.urls.length, n3 = { delay: u2, count: i2.retryCount, time: i2.retryTotalTime, event: e2 }, i2.lg.w(o, a, n3), s.a.getInstance().dr.reportSDKEvent("/sdk/log", { error_message: JSON.stringify(n3) }), i2.createSocket(), i2.bindSocketEvent(t2, r2), r2 && 3 == i2.retryCount && (i2.ondisconnected(true), r2(e2)));
          }, u2);
        }, c.prototype.initDelayTask = function() {
          var e2 = this.econf.cloudSetting.retry.login_max_itvl, t2 = e2 < 0 ? 3e5 : 1e3 * e2;
          if ((this.unlimited_retry = 0) == e2)
            return this.delayTaskList.length = 0;
          for (var r2 = 500 + Math.floor(1500 * Math.random()), s2 = (this.delayTaskList = [r2], 0), n2 = r2; n2 < t2; ) {
            var i2 = Math.min(2e3 * Math.pow(2, s2), 32e3);
            n2 += i2, this.delayTaskList.push(i2), n2 < t2 && (n2 += i2, this.delayTaskList.push(i2)), s2++;
          }
          return e2 < 0 ? (this.unlimited_retry = this.delayTaskList[this.delayTaskList.length - 1], -1) : n2;
        }, c);
        function c(e2, t2) {
          var r2 = this;
          this.bus = e2, this.econf = t2, this.lg = s.a.getInstance().lg, this.isOpen = false, this.urls = [], this.urlIndex = 0, this.isConnecting = false, this.unlimited_retry = 0, this.retryCount = 0, this.retryTotalTime = 0, this.retryTimer = 0, this.delayTaskList = [], this.onNetworkChange = function(e3, t3) {
            var n2;
            "fetchSetting" == e3 ? (n2 = { event: "resetRetry", total: r2.initDelayTask(), login_max_itvl: r2.econf.cloudSetting.retry.login_max_itvl }, r2.lg.w(o, e3, n2)) : e3 && (r2.delayTaskList[0] || r2.unlimited_retry) ? (r2.isConnecting = true, r2.delayTaskList.unshift(100), r2.retryTimer && clearTimeout(r2.retryTimer), r2.reconnect("NetworkChange:" + t3)) : (r2.lg.w(o, a, n2 = { online: e3, netType: t3 }), s.a.getInstance().dr.reportSDKEvent("/sdk/log", { error_message: JSON.stringify(n2) }));
          }, e2.add(i.u.INetworkChange, this.onNetworkChange);
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return v;
        });
        var s = r(2), n = r(68), i = r(1), o = r(0), a = r(70), u = r(71), c = r(72), l = function() {
          return (l = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, d = function(e2, t2, r2, s2) {
          return new (r2 = r2 || Promise)(function(n2, i2) {
            function o2(e3) {
              try {
                u2(s2.next(e3));
              } catch (e4) {
                i2(e4);
              }
            }
            function a2(e3) {
              try {
                u2(s2.throw(e3));
              } catch (e4) {
                i2(e4);
              }
            }
            function u2(e3) {
              var t3;
              e3.done ? n2(e3.value) : ((t3 = e3.value) instanceof r2 ? t3 : new r2(function(e4) {
                e4(t3);
              })).then(o2, a2);
            }
            u2((s2 = s2.apply(e2, t2 || [])).next());
          });
        }, p = function(e2, t2) {
          var r2, s2, n2, i2 = { label: 0, sent: function() {
            if (1 & n2[0])
              throw n2[1];
            return n2[1];
          }, trys: [], ops: [] }, o2 = { next: a2(0), throw: a2(1), return: a2(2) };
          return "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
            return this;
          }), o2;
          function a2(o3) {
            return function(a3) {
              var u2 = [o3, a3];
              if (r2)
                throw new TypeError("Generator is already executing.");
              for (; i2; )
                try {
                  if (r2 = 1, s2 && (n2 = 2 & u2[0] ? s2.return : u2[0] ? s2.throw || ((n2 = s2.return) && n2.call(s2), 0) : s2.next) && !(n2 = n2.call(s2, u2[1])).done)
                    return n2;
                  switch (s2 = 0, (u2 = n2 ? [2 & u2[0], n2.value] : u2)[0]) {
                    case 0:
                    case 1:
                      n2 = u2;
                      break;
                    case 4:
                      return i2.label++, { value: u2[1], done: false };
                    case 5:
                      i2.label++, s2 = u2[1], u2 = [0];
                      continue;
                    case 7:
                      u2 = i2.ops.pop(), i2.trys.pop();
                      continue;
                    default:
                      if (!(n2 = 0 < (n2 = i2.trys).length && n2[n2.length - 1]) && (6 === u2[0] || 2 === u2[0])) {
                        i2 = 0;
                        continue;
                      }
                      if (3 === u2[0] && (!n2 || u2[1] > n2[0] && u2[1] < n2[3])) {
                        i2.label = u2[1];
                        break;
                      }
                      if (6 === u2[0] && i2.label < n2[1]) {
                        i2.label = n2[1], n2 = u2;
                        break;
                      }
                      if (n2 && i2.label < n2[2]) {
                        i2.label = n2[2], i2.ops.push(u2);
                        break;
                      }
                      n2[2] && i2.ops.pop(), i2.trys.pop();
                      continue;
                  }
                  u2 = t2.call(e2, i2);
                } catch (a4) {
                  u2 = [6, a4], s2 = 0;
                } finally {
                  r2 = n2 = 0;
                }
              if (5 & u2[0])
                throw u2[1];
              return { value: u2[0] ? u2[1] : void 0, done: true };
            };
          }
        }, h = function(e2, t2) {
          var r2 = "function" == typeof Symbol && e2[Symbol.iterator];
          if (!r2)
            return e2;
          var s2, n2, i2 = r2.call(e2), o2 = [];
          try {
            for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
              o2.push(s2.value);
          } catch (e3) {
            n2 = { error: e3 };
          } finally {
            try {
              s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
            } finally {
              if (n2)
                throw n2.error;
            }
          }
          return o2;
        }, f = function(e2, t2, r2) {
          if (r2 || 2 === arguments.length)
            for (var s2, n2 = 0, i2 = t2.length; n2 < i2; n2++)
              !s2 && n2 in t2 || ((s2 = s2 || Array.prototype.slice.call(t2, 0, n2))[n2] = t2[n2]);
          return e2.concat(s2 || Array.prototype.slice.call(t2));
        }, m = o.X.Conversation, g = 6000001, _ = 6000602, b = 6000603, v = (y.prototype.destroy = function() {
          this.onLogout(), this.cnMgr = null, this.gpMgr = null, this.bus = null, this.lg = null, this.econf = null, this.stgyMgr = null;
        }, y.prototype.queryUsers = function(e2, t2) {
          var r2 = this, s2 = /* @__PURE__ */ new Map(), n2 = (e2 = e2.filter(function(e3) {
            return !!Object(i.n)(e3) || (s2.set(e3, { userID: e3, reason: g }), false);
          }), (e2 = Array.from(new Set(e2))).filter(function(e3) {
            return !r2.econf.dbUserMap.has(e3);
          })), a2 = e2.length - n2.length, u2 = { time: new Date(), config: t2, queryCount: e2.length, dbCount: a2 };
          return 0 != n2.length || t2 && t2.isQueryFromServer ? (t2 = { user_ids: (a2 = t2 && t2.isQueryFromServer ? o.j.API : o.j.SDK) ? e2 : n2 }, this.cnMgr.send(o.d.user_fetch, t2, a2).then(function(t3) {
            var n3 = t3.code || 0, a3 = (n3 && (u2.error = Object(i.y)(6000007, t3.message, t3.code), n3 = u2.error.code), t3.result), c2 = ((t3 = t3.err_list) && t3.length && t3.forEach(function(e3) {
              s2.set(e3.user_id, { userID: e3.user_id, reason: e3.sub_code });
            }), /* @__PURE__ */ new Map()), l2 = (a3 && a3.length && (a3.forEach(function(e3) {
              var t4 = e3.user_id, s3 = Object(i.h)(e3.user_name), n4 = Object(i.h)(e3.avatar), o2 = Object(i.h)(e3.extra);
              c2.set(t4, { baseInfo: { userID: t4, userName: s3, userAvatarUrl: n4 }, extendedData: o2 }), t4 = { userID: t4, userName: s3, userAvatarUrl: n4, extendedData: o2 };
              Object(i.x)(t4, r2.econf), t4.userID == r2.econf.user.userID && (s3 = r2.econf.user, (n4 = e3.user_info_seq) && s3.userInfoSeq < n4 && (s3.userInfoSeq = n4));
            }), r2.dbMgr.addUserList(Array.from(r2.econf.dbUserMap.values()))), n3 && 6000012 != n3 && e2.forEach(function(e3) {
              var t4;
              c2.has(e3) || ((t4 = r2.econf.dbUserMap.get(e3)) ? c2.set(e3, { baseInfo: { userID: t4.userID, userName: t4.userName, userAvatarUrl: t4.userAvatarUrl }, extendedData: t4.extendedData }) : s2.has(e3) || s2.set(e3, { userID: e3, reason: n3 }));
            }), /* @__PURE__ */ new Map());
            return r2.econf.dbConvMap.forEach(function(e3) {
              var t4, r3 = e3.type == o.r.Peer && c2.get(e3.conversationID);
              r3 && e3.state == o.q.Normal && (t4 = (r3 = r3.baseInfo).userName, r3 = r3.userAvatarUrl, e3.conversationName != t4 && (e3.conversationName = t4, l2.set(e3.conversationID, e3)), e3.conversationAvatarUrl != r3 && (e3.conversationAvatarUrl = r3, l2.set(e3.conversationID, e3)));
            }), r2.emitConvUpdate(Array.from(l2.values()), "queryUsers"), u2.count = c2.size, r2.lg.i(o.X.User, o.W.QueryUsers, u2), 0 == c2.size ? Promise.reject(u2.error) : { userList: Array.from(c2.values()), errorUserList: Array.from(s2.values()) };
          })) : (a2 = e2.map(function(e3) {
            return { baseInfo: { userID: (e3 = r2.econf.dbUserMap.get(e3)).userID, userName: e3.userName, userAvatarUrl: e3.userAvatarUrl }, extendedData: e3.extendedData };
          }), this.lg.i(o.X.User, o.W.QueryUsers, u2), Promise.resolve({ userList: a2, errorUserList: Array.from(s2.values()) }));
        }, y.prototype.query = function(e2, t2) {
          var r2 = this;
          return new Promise(function(s2, n2) {
            var a2 = Array.from(r2.econf.dbConvMap.values()).find(function(r3) {
              return r3.conversationID == e2 && r3.type == t2;
            });
            a2 && !r2.isDBConvInvalid(a2) ? (r2.lg.i(m, o.W.QueryConv, e2 + "," + a2.unreadMessageCount), s2({ conversation: Object(i.s)(o.m.convKeys, a2) })) : (s2 = Object(i.y)(b), r2.lg.w(m, o.W.QueryConv, { error: s2, convID: e2, type: t2 }), n2(s2));
          });
        }, y.prototype.queryList = function(e2, t2) {
          var r2 = this, s2 = (null == t2 ? void 0 : t2.marks) || [];
          return s2.length && !s2.every(function(e3) {
            return -1 <= e3 && e3 <= 64;
          }) ? (s2 = { marks: s2, error: Object(i.y)(g, "There are illegal values in the marks.") }, this.lg.w(m, o.W.QueryConvs, s2), Promise.reject(s2.error)) : e2.count < 1 ? Promise.resolve({ conversationList: [] }) : new Promise(function(s3) {
            var n2 = { time: new Date(), logined: r2.isLogined, queryCount: e2.count, count: 0, option: t2 };
            r2.isLogined ? r2.mergeSvrConvList(o.v.Biz, function(i2) {
              r2.handleQueryConvsCallback(i2, { option: t2, config: e2, log: n2, resolve: s3 });
            }) : r2.queryConvsCallbackList.push({ option: t2, config: e2, log: n2, resolve: s3 });
          });
        }, y.prototype.queryPinneds = function(e2) {
          var t2 = this;
          return e2.count < 1 ? Promise.resolve({ conversationList: [] }) : new Promise(function(r2) {
            var s2, n2 = { time: new Date(), logined: t2.isLogined, queryCount: e2.count, count: 0 };
            t2.isLogined ? ((s2 = Array.from(t2.econf.dbConvMap.values()).filter(function(e3) {
              var r3 = t2.filterValidConv(e3, true);
              return r3 && t2.createInstance(e3.conversationID, e3.type), r3;
            })).sort(function(e3, t3) {
              return t3.orderKey - e3.orderKey;
            }), t2.handleQueryConvsCallback(s2, { isPinned: true, config: e2, log: n2, resolve: r2 })) : t2.queryConvsCallbackList.push({ isPinned: true, config: e2, log: n2, resolve: r2 });
          });
        }, y.prototype.queryUnreadCount = function(e2) {
          var t2, r2 = this, s2 = (null == e2 ? void 0 : e2.marks) || [];
          if (s2.length && !s2.every(function(e3) {
            return -1 <= e3 && e3 <= 64;
          }))
            return t2 = { marks: s2, error: Object(i.y)(g, "There are illegal values in the marks.") }, this.lg.w(m, o.W.QueryUnreadCount, t2), Promise.reject(t2.error);
          var n2 = 0, a2 = e2 ? e2.conversationTypes : void 0, u2 = -1 != s2.indexOf(-1), c2 = -1 != s2.indexOf(0), l2 = o.p.DoNotDisturb, d2 = { unreadCount: n2, isAllMark: u2, isNoneMark: c2, config: e2 };
          return this.econf.dbConvMap.forEach(function(e3) {
            var t3;
            e3.notificationStatus != l2 && e3.unreadMessageCount && r2.filterValidConv(e3) && function(e4) {
              if (!s2.length)
                return true;
              var t4 = false;
              e4 = e4.marks ? e4.marks.slice() : [];
              return u2 && (t4 = 0 < e4.length), (t4 = !(!c2 || e4.length) || t4) || e4.some(function(e5) {
                return -1 != s2.indexOf(e5);
              });
            }(e3) && (t3 = e3, !a2 || !a2.length || -1 != a2.indexOf(t3.type)) && (n2 += e3.unreadMessageCount, s2.length && e3.marks && e3.marks.length ? d2[e3.conversationID] = e3.unreadMessageCount + ":" + e3.marks.join() : d2[e3.conversationID] = e3.unreadMessageCount);
          }), d2.unreadCount = n2, this.lg.i(m, o.W.QueryUnreadCount, d2), Promise.resolve({ unreadMessageCount: n2 });
        }, y.prototype.delete = function(e2, t2, r2) {
          var s2 = this, n2 = (r2 = Object.assign({ isAlsoDeleteServerConversation: true }, r2), this.econf.dbConvMap.get(this.getConvKey(e2, t2)));
          if (this.isDBConvInvalid(n2))
            return u2 = Object(i.y)(b), this.lg.w(m, o.W.DelConv, { error: u2, convID: e2, type: t2, config: r2 }), Promise.reject(u2);
          var a2 = { time: new Date(), convID: e2, type: t2, config: r2 }, u2 = { conv_id: e2, conv_type: t2, read_seq: n2.msgSeq };
          return r2 && r2.isAlsoDeleteServerConversation ? this.cnMgr.send(o.d.conv_del, u2).then(function(e3) {
            return e3.code ? (a2.error = Object(i.y)(_, e3.message, e3.code), s2.lg.w(m, o.W.DelConv, a2), Promise.reject(a2.error)) : (n2.seq = e3.conv_list_seq, s2.deleteLocalConv(n2, a2));
          }) : (this.cnMgr.send(o.d.conv_read, u2, o.j.SDK), this.deleteLocalConv(n2, a2));
        }, y.prototype.deleteAll = function(e2) {
          var t2 = this;
          if (0 == this.convMap.size)
            return Promise.resolve();
          e2 = Object.assign({ isAlsoDeleteServerConversation: true }, e2);
          var r2 = { time: new Date(), config: e2, count: 0 }, s2 = { conv_sid: this.econf.mailHBConfig.conv_list_seq };
          return s2.conv_sid && e2.isAlsoDeleteServerConversation ? this.cnMgr.send(o.d.conv_del_all, s2).then(function(e3) {
            return e3.code ? (r2.error = Object(i.y)(_, e3.message, e3.code), t2.lg.i(m, o.W.DelAllConv, r2), Promise.reject(r2.error)) : (r2.count = t2.deleteAllLocalConv(), t2.lg.i(m, o.W.DelAllConv, r2), Promise.resolve());
          }) : (this.cnMgr.send(o.d.conv_clean_all_unread, s2), r2.count = this.deleteAllLocalConv(), this.lg.i(m, o.W.DelAllConv, r2), Promise.resolve());
        }, y.prototype.setNotifyStatus = function(e2, t2, r2) {
          var s2 = this, n2 = { time: new Date(), convID: t2, type: r2 }, a2 = e2 == o.p.DoNotDisturb, u2 = r2 == o.r.Group ? o.d.conv_gp_mute : o.d.conv_c2c_mute;
          a2 = r2 == o.r.Group ? { conv_id: t2, enable: a2 } : { c2c_mute_list: [{ conv_id: t2, enable: a2 }] };
          return this.cnMgr.send(u2, a2).then(function(a3) {
            if (a3.code)
              return n2.error = Object(i.y)(_, a3.message, a3.code), s2.lg.w(m, o.W.SetNotifyStatus, n2), Promise.reject(n2.error);
            var u3 = a3.mute_info;
            if ((a3 = a3.error_user_list) && a3[0])
              return 106126 == (c2 = a3[0].sub_code) && (c2 = _), (c2 = Object(i.y)(c2, "", a3[0].sub_code)).code !== _ && (c2.code = g), n2.error = c2, s2.lg.w(m, o.W.SetNotifyStatus, n2), Promise.reject(c2);
            var c2;
            a3 = s2.econf.dbConvMap.get(s2.getConvKey(t2, r2)), u3 && u3[0] && (c2 = u3[0].mute_list_seq, (a3 && a3.muteSeq || 0) < c2 && a3 && (a3.muteSeq = c2)), a3 && (a3.notificationStatus = e2, s2.emitConvUpdate([a3], "setNotifyStatus"), s2.onUnreadMessageCount()), u3 = e2 == o.p.DoNotDisturb ? o.n.DontDisturb : o.n.RecoverDisturb;
            return s2.stgyMgr.updateConvAct(t2, r2, u3), s2.lg.i(m, o.W.SetNotifyStatus, n2), { conversationID: t2, conversationType: r2 };
          });
        }, y.prototype.updatePinnedState = function(e2, t2, r2) {
          var s2, n2 = this, a2 = this.econf.dbConvMap.get(this.getConvKey(t2, r2));
          if (a2 && a2.isPinned == e2)
            return s2 = "Cannot set the same value of isPinned: " + e2, s2 = Object(i.y)(g, s2), this.lg.w(m, o.W.UpdatePinned, { error: s2, convID: t2, isPinned: e2 }), Promise.reject(s2);
          var u2 = { time: new Date(), convID: t2, type: r2 };
          return this.cnMgr.send(o.d.conv_pinned, { user_id: t2, sub_code: r2, relation: e2 ? 1 : 0 }).then(function(s3) {
            return s3.code ? (u2.error = Object(i.y)(_, s3.message, s3.code), n2.lg.w(m, o.W.UpdatePinned, u2), Promise.reject(u2.error)) : (a2 && (a2.isPinned = e2, n2.emitConvUpdate([a2], "setPinned")), n2.updatePinnedSeq(s3.conv_list_seq), n2.lg.i(m, o.W.UpdatePinned, u2), { conversationID: t2, conversationType: r2 });
          });
        }, y.prototype.setMark = function(e2, t2, r2) {
          var s2 = this, n2 = {}, a2 = {}, u2 = Math.pow(2, e2 - 1), c2 = r2.filter(function(e3) {
            if (!e3 || !e3.conversationID || e3.conversationType == o.r.Room || e3.conversationType == o.r.Peer && e3.conversationID == s2.econf.user.userID)
              return true;
            var r3 = { conv_id: e3.conversationID, conv_type: e3.conversationType, mark_content: u2, action: t2 };
            return e3.conversationType == o.r.Peer ? n2[e3.conversationID] = r3 : e3.conversationType == o.r.Group && (a2[e3.conversationID] = r3), false;
          }), l2 = { time: new Date(), markType: e2, enable: t2, errorInfos: c2 };
          return c2.length == r2.length || 100 < Object.keys(n2).length + Object.keys(a2).length ? (l2.error = Object(i.y)(g, "Infos is invalid or its length exceeds 100."), this.lg.w(m, o.W.SetConvMark, l2), Promise.reject(l2.error)) : this.cnMgr.send(o.d.conv_mark, { set_mark_c2c: n2, set_mark_group: a2 }).then(function(e3) {
            return e3.code ? (l2.error = Object(i.y)(_, e3.message, e3.code), s2.lg.w(m, o.W.SetConvMark, l2), Promise.reject(l2.error)) : (e3.succ_list && e3.succ_list.length && s2.onPushConvMark(e3), e3.fail_list && e3.fail_list.length && e3.fail_list.forEach(function(e4) {
              c2.push({ conversationID: e4.conv_id, conversationType: e4.conv_type });
            }), s2.lg.i(m, o.W.SetConvMark, l2), { failedConversationInfos: c2 });
          });
        }, y.prototype.clearUnreadCount = function(e2, t2) {
          var r2 = this.econf.dbConvMap.get(this.getConvKey(e2, t2));
          if (this.isDBConvInvalid(r2))
            return s2 = Object(i.y)(b), this.lg.w(m, o.W.ClearUnreadCount, { error: s2, convID: e2, type: t2 }), Promise.reject(s2);
          var s2 = r2.msgSeq || 0, n2 = r2.unreadMessageCount || 0;
          return 0 < n2 && (this.syncConvReadSeqToMsgSeq(r2, s2), this.dbMgr.addConversationList([r2], "clearUnrc"), r2 = { event: o.o.Updated, conversation: Object(i.s)(o.m.convKeys, r2) }, this.bus.emit(o.u.ConvChanged, { infoList: [r2] }), this.onUnreadMessageCount(), this.cnMgr.send(o.d.conv_read, { conv_id: e2, conv_type: t2, read_seq: s2 }), this.lg.i(m, o.W.ClearUnreadCount, { convID: e2, seq: s2, uncount: n2 })), Promise.resolve({ conversationID: e2, conversationType: t2 });
        }, y.prototype.clearAllUnreadCount = function() {
          var e2, t2 = this, r2 = [];
          return this.econf.dbConvMap.forEach(function(e3) {
            t2.filterValidConv(e3) && e3.readMsgSeq < e3.msgSeq && (t2.syncConvReadSeqToMsgSeq(e3, e3.msgSeq), r2.push(e3));
          }), r2.length && (this.onUnreadMessageCount(), this.dbMgr.addConversationList(r2, "clearAllUnrc"), e2 = { conv_sid: this.econf.mailHBConfig.conv_list_seq }, this.cnMgr.send(o.d.conv_clean_all_unread, e2), this.lg.i(m, o.W.ClearAllUnreadCount)), Promise.resolve();
        }, y.prototype.delAllConvMsgs = function(e2) {
          var t2 = this, r2 = (e2 = Object.assign({ isAlsoDeleteServerMessage: true }, e2), { time: new Date(), config: e2 }), s2 = { conv_sid: this.econf.mailHBConfig.conv_list_seq };
          return s2.conv_sid && e2.isAlsoDeleteServerMessage ? this.cnMgr.send(o.d.conv_clean_all_msg, null).then(function(e3) {
            return e3.code ? (r2.error = Object(i.y)(_, e3.message, e3.code), t2.lg.i(m, o.W.DelAllConvMsg, r2), Promise.reject(r2.error)) : (t2.updateDeleteAllMsgTime(e3.conv_list_seq), t2.cnMgr.send(o.d.conv_clean_all_unread, s2), t2.deleteAllLocalConvMsg(r2));
          }) : (this.cnMgr.send(o.d.conv_clean_all_unread, s2), this.updateDeleteAllMsgTime(this.st.getRealClientTimestamp()), this.deleteAllLocalConvMsg(r2));
        }, y.prototype.setConvDraft = function(e2, t2, r2) {
          if (r2 == o.r.Group && !this.econf.dbGroupMap.get(t2))
            return s2 = Object(i.y)(6000523), this.lg.w(m, o.W.SetConvDraft, { error: s2, convID: t2, type: r2 }), Promise.reject(s2);
          var s2 = this.createInstance(t2, r2).dbConv;
          return s2.draft = e2, s2.state = o.q.Normal, e2 ? s2.orderKey = this.st.getRealClientTimestamp() : s2.lastMessage && (s2.orderKey = s2.lastMessage.timestamp), this.emitConvUpdate([s2], "setDraft"), Promise.resolve({ conversationID: t2, conversationType: r2 });
        }, y.prototype.sendMsg = function(e2, t2, r2, s2, n2) {
          var a2, u2;
          if (r2 === o.r.Room && !this.gpMgr.findRoom(t2))
            return a2 = Object(i.y)(6000203, "Room is not exist or the user is not in the room."), this.lg.w(m, o.W.SendMsg, { error: a2, convID: t2, type: r2 }), u2 = { status: o.eb.Failed, message: e2 }, this.bus.emit(o.u.MsgSentStatus, { infos: [u2] }), Promise.reject(a2);
          this.stgyMgr.updateConvAct(t2, r2, o.n.HandleMessage);
          var c2 = this.createInstance(t2, r2);
          return e2.type === o.gb.Combine ? this.transformCombineMessage(e2).then(function(e3) {
            return c2.sendMediaMessage(e3, s2, n2);
          }) : (e2 = Object.isFrozen(e2) || e2.messageID && e2.conversationID ? JSON.parse(JSON.stringify(e2)) : e2).type === o.gb.Command || e2.type === o.gb.Barrage ? c2.sendCommand(e2, s2, n2) : c2.sendMessage(e2, s2, n2);
        }, y.prototype.sendMediaMsg = function(e2, t2, r2, s2, n2) {
          return r2 !== o.r.Room || this.gpMgr.findRoom(t2) ? (this.stgyMgr.updateConvAct(t2, r2, o.n.HandleMessage), (Object.isFrozen(e2) || e2.messageID && e2.conversationID) && (e2 = JSON.parse(JSON.stringify(e2))), this.createInstance(t2, r2).sendMediaMessage(e2, s2, n2)) : (s2 = Object(i.y)(6000203, "Room is not exist or the user is not in the room."), this.lg.w(m, o.W.SendMediaMsg, { error: s2, convID: t2, type: r2 }), n2 = { status: o.eb.Failed, message: e2 }, this.bus.emit(o.u.MsgSentStatus, { infos: [n2] }), Promise.reject(s2));
        }, y.prototype.delMsgs = function(e2, t2, r2, s2) {
          var n2 = this;
          return this.createInstance(t2, r2).deleteMessages(e2, s2).then(function(e3) {
            var s3 = n2.econf.user.userID + r2 + t2;
            e3 = e3.map(function(e4) {
              return e4 = s3 + e4, n2.econf.msgExtraMap.delete(e4), e4;
            });
            return n2.dbMgr.deleteMessageExtraList(e3), { conversationID: t2, conversationType: r2 };
          });
        }, y.prototype.delAllMsg = function(e2, t2, r2) {
          var s2 = this;
          return this.createInstance(e2, t2).deleteAllMessage(r2).then(function(r3) {
            var n2 = [], i2 = s2.econf.user.userID + t2 + e2;
            return s2.econf.msgExtraMap.forEach(function(r4) {
              r4.conversationID == e2 && r4.conversationType == t2 && (r4 = i2 + r4.conversationSeq, n2.push(r4), s2.econf.msgExtraMap.delete(r4));
            }), s2.dbMgr.deleteMessageExtraList(n2), r3;
          });
        }, y.prototype.queryHistoryMsg = function(e2, t2, r2) {
          var s2 = this, n2 = this.createInstance(e2, t2);
          return n2.queryHistoryMessage(r2).then(function(r3) {
            var i2 = r3.list;
            r3 = r3.receiptMemberMsgs;
            return t2 == o.r.Group && (s2.mergeGroupMessageStatus(n2.dbConv, i2, o.v.Biz), s2.queryReceiptMemberList(r3)), { conversationID: e2, conversationType: t2, messageList: i2 };
          });
        }, y.prototype.insertMsg = function(e2, t2, r2, s2) {
          return e2.senderUserID = s2, this.createInstance(t2, r2).insertMsg(e2);
        }, y.prototype.updateMsgLocalExt = function(e2, t2) {
          var r2 = this, s2 = ((t2 = Object.isFrozen(t2) ? JSON.parse(JSON.stringify(t2)) : t2).localExtendedData = e2, t2.conversationID), n2 = t2.conversationType, i2 = JSON.parse(JSON.stringify(t2));
          return this.dbMgr.addMessageList(s2, n2, [i2]).then(function() {
            var i3 = null == (i3 = r2.econf.dbConvMap.get(r2.getConvKey(s2, n2))) ? void 0 : i3.lastMessage;
            return n2 != o.r.Room && i3 && i3.messageID == t2.messageID && (i3.localExtendedData = e2), r2.lg.i(m, o.W.UpdateMsgLocalExt, t2.messageID), { message: t2 };
          });
        }, y.prototype.sendConvReceipt = function(e2, t2) {
          var r2 = this, s2 = this.econf.dbConvMap.get(this.getConvKey(e2, t2));
          if (this.isDBConvInvalid(s2))
            return n2 = Object(i.y)(b), this.lg.w(m, o.W.SendConvReceipt, { error: n2, convID: e2, type: t2 }), Promise.reject(n2);
          var n2 = s2.maxRecvReceiptMsgSeq || 0, a2 = s2.msgSeq || 0, u2 = { time: new Date(), convID: e2, oldSeq: n2, seq: a2 };
          return a2 ? a2 <= n2 ? (this.lg.i(m, o.W.SendConvReceipt, u2), Promise.resolve({ conversationID: e2, conversationType: t2 })) : this.cnMgr.send(o.d.c2c_conv_read, { group_id: e2, cur_list_seq: a2 }).then(function(n3) {
            return n3.code ? (u2.error = Object(i.y)(_, n3.message, n3.code), r2.lg.w(m, o.W.SendConvReceipt, u2), Promise.reject(u2.error)) : (r2.selfReceiptSeqs.push(n3.conv_list_seq), s2.maxRecvReceiptMsgSeq = a2, (n3 = s2.lastMessage) && n3.receiptStatus && n3.messageSeq == a2 && n3.direction == o.Y.Receive && (n3.receiptStatus = o.ab.Done), r2.dbMgr.addConversationList([s2], "ackReceipt"), r2.lg.i(m, o.W.SendConvReceipt, u2), { conversationID: e2, conversationType: t2 });
          }) : (u2.error = Object(i.y)(g, "No message from server."), this.lg.w(m, o.W.SendConvReceipt, u2), Promise.reject(u2.error));
        }, y.prototype.sendMsgReceipt = function(e2, t2, r2) {
          function s2(s3) {
            var c3, l3 = s3.conv_msg_seq2_receipt_seq, d2 = [], p2 = [], h2 = null == (c3 = n2.econf.dbConvMap.get(n2.getConvKey(t2, r2))) ? void 0 : c3.lastMessage;
            return e2.forEach(function(e3) {
              var t3 = String(e3.messageSeq), r3 = a2.get(t3);
              l3 && l3.hasOwnProperty(t3) && r3 && r3.messageID == e3.messageID ? (n2.selfReceiptSeqs.push(l3[t3]), (t3 = JSON.parse(JSON.stringify(r3))).receiptStatus = o.ab.Done, d2.push(t3), h2 && h2.receiptStatus && h2.messageSeq == e3.messageSeq && (h2.receiptStatus = o.ab.Done)) : p2.push(e3.messageID);
            }), n2.createInstance(t2, r2).updateMsgCacheList(d2), n2.dbMgr.addMessageList(t2, r2, d2), s3.code || p2.length == e2.length ? (u2.error = Object(i.y)(6000277, s3.message, s3.code), n2.lg.w(m, o.W.SendReceipts, u2), Promise.reject(u2.error)) : (n2.lg.i(m, o.W.SendReceipts, u2), Promise.resolve({ conversationID: t2, conversationType: r2, errorMessageIDs: p2 }));
          }
          var n2 = this, a2 = /* @__PURE__ */ new Map(), u2 = (e2.forEach(function(e3) {
            e3.conversationID == t2 && e3.conversationType == r2 && e3.direction == o.Y.Receive && e3.receiptStatus == o.ab.Processing && e3.messageSeq && e3.messageID && a2.set(String(e3.messageSeq), e3);
          }), { time: new Date(), convID: t2, count: a2.size });
          if (!a2.size)
            return s2({});
          var c2 = r2 == o.r.Peer ? o.d.c2c_msg_read : o.d.gp_msg_read, l2 = { conv_id: t2, conv_msg_seq: Array.from(a2.keys()) };
          return this.cnMgr.send(c2, l2).then(s2);
        }, y.prototype.queryMsgReceipt = function(e2, t2, r2) {
          var s2 = this;
          return new Promise(function(n2) {
            var i2 = { time: new Date(), convID: t2, count: 0, messageCount: e2.length };
            s2.mergeSvrMsgExtraList(o.v.Biz, function() {
              var a2 = [], u2 = [], c2 = [];
              e2.forEach(function(e3) {
                var n3, l2, d2, p2, h2, f2;
                e3.type != o.gb.Revoke && e3.receiptStatus && e3.messageID && e3.messageSeq && e3.conversationID === t2 && e3.conversationType === r2 ? (n3 = e3.messageSeq, !(l2 = s2.econf.msgExtraMap.get(s2.getMsgExtraKey(t2, r2, n3))) || !l2.revokeInfo && l2.receiptStatus ? (d2 = { conversationID: t2, conversationType: r2, messageID: e3.messageID, status: e3.receiptStatus, readMemberCount: 0, unreadMemberCount: 0, isSelfOperated: false }, u2.push(d2), l2 && !l2.messageID && (l2.messageID = e3.messageID, c2.push(l2)), e3.sentStatus == o.eb.Success && (p2 = false, r2 == o.r.Peer && (h2 = (null == (f2 = s2.econf.dbConvMap.get(s2.getConvKey(t2, r2))) ? void 0 : f2.maxSendReceiptMsgSeq) || 0, f2 = (null == f2 ? void 0 : f2.maxRecvReceiptMsgSeq) || 0, (e3.direction == o.Y.Send && n3 <= h2 || e3.direction == o.Y.Receive && n3 <= f2) && (p2 = true, d2.status = o.ab.Done, d2.readMemberCount = e3.direction == o.Y.Send ? 1 : 0, d2.isSelfOperated = 0 == d2.readMemberCount, i2.sendSeq = h2, i2.recvSeq = f2)), p2 || (l2 && !l2.convReceipt ? (d2.status = l2.receiptStatus, d2.readMemberCount = Math.max(l2.readMemberCount, 0), d2.unreadMemberCount = l2.unreadMemberCount) : (e3.receiptStatus == o.ab.Processing && l2 && (d2.status = l2.receiptStatus), r2 == o.r.Peer && e3.direction == o.Y.Send && (d2.status == o.ab.Done ? d2.readMemberCount = 1 : d2.unreadMemberCount = 1))))) : a2.push(e3.messageID)) : a2.push(e3.messageID);
              }), s2.dbMgr.addMessageExtraList(c2, "msgID"), i2.count = u2.length, s2.lg.i(m, o.W.QueryReceipts, i2), n2({ infos: u2, errorMessageIDs: a2 });
            });
          });
        }, y.prototype.revokeMsg = function(e2, t2) {
          var r2 = this, s2 = e2.conversationType == o.r.Peer ? o.d.c2c_msg_revoke : o.d.gp_msg_revoke, n2 = { conv_id: e2.conversationID, conv_msg_seq: e2.messageSeq, payload: Object(i.k)((null == t2 ? void 0 : t2.revokeExtendedData) || ""), offline_push: Object(i.g)(null == t2 ? void 0 : t2.pushConfig) };
          return this.cnMgr.send(s2, n2).then(function(s3) {
            if (s3.code)
              return n3 = Object(i.y)(6000007, s3.message, s3.code), r2.lg.w(m, o.W.RevokeMsg, n3), Promise.reject(n3);
            var n3 = Object(i.v)(s3.msg_status), a2 = r2.createRevokeMsg(e2, { revokeType: o.ib.TwoWay, revokeStatus: n3.revoke, revokeTimestamp: s3.revoke_time, operatedUserID: r2.econf.user.userID, revokeExtendedData: (null == t2 ? void 0 : t2.revokeExtendedData) || "", originalMessageType: e2.type, originalTextMessageContent: e2.type == o.gb.Text ? e2.message : "" });
            return r2.saveMessageRevokeExtra(a2, s3.statemsg_seq, "revoke"), r2.lg.i(m, o.W.RevokeMsg, n3), { message: a2 };
          });
        }, y.prototype.addMsgReaction = function(e2, t2) {
          var r2 = this, s2 = t2.conversationType == o.r.Peer ? o.d.c2c_add_reaction : o.d.gp_add_reaction, n2 = { conv_id: t2.conversationID, conv_msg_seq: t2.messageSeq, reaction_key: e2, reaction_into_map: ((n2 = {})[e2] = { conv_id: "" }, n2) }, a2 = { time: new Date() };
          return this.cnMgr.send(s2, n2).then(function(s3) {
            return d(r2, void 0, void 0, function() {
              var r3, n3, u2, c2, l2 = this;
              return p(this, function(d2) {
                switch (d2.label) {
                  case 0:
                    return s3.code || !s3.succ_list.length ? (a2.reactionType = e2, a2.error = Object(i.y)(_, s3.message, s3.code), this.lg.w(m, o.W.AddReaction, a2), [2, Promise.reject(a2.error)]) : (r3 = this.createMessageExtra(t2.conversationID, t2.conversationType, t2.messageSeq, t2.messageID), c2 = (c2 = null == (c2 = r3.reactions[e2]) ? void 0 : c2.userList) && c2.length ? c2.filter(function(e3) {
                      return e3.userID !== l2.econf.user.userID;
                    }) : c2 || [], n3 = s3.succ_list.find(function(t3) {
                      return t3.reaction_key = e2;
                    }), c2.length < this.econf.mailHBConfig.reaction_brief_len ? (c2.push({ userID: this.econf.user.userID, seq: n3.cur_reaction_seq }), c2.length === n3.user_total_count ? [3, 2] : [4, this.fetchReactionKey(t2, e2, false)]) : [3, 2]);
                  case 1:
                    (u2 = d2.sent()).code || (c2 = u2.user_reaction, n3.cur_reaction_seq = u2.max_reaction_seq, n3.user_total_count = u2.total_user_count), d2.label = 2;
                  case 2:
                    return u2 = { reactionKey: n3.reaction_key, reactionSeq: n3.cur_reaction_seq, totalCount: n3.user_total_count, isSelfIncluded: true, userList: c2 }, this.saveMessageReactionExtra(r3, [u2], void 0, true), a2.reactionInfo = u2, this.lg.i(m, o.W.AddReaction, a2), [2, { reaction: { conversationID: t2.conversationID, conversationType: t2.conversationType, messageID: t2.messageID, totalCount: u2.totalCount, isSelfIncluded: true, reactionType: e2, userList: c2.map(function(e3) {
                      return { userID: e3.userID };
                    }) } }];
                }
              });
            });
          });
        }, y.prototype.delMsgReaction = function(e2, t2) {
          var r2 = this, s2 = t2.conversationType == o.r.Peer ? o.d.c2c_del_reaction : o.d.gp_del_reaction, n2 = { conv_id: t2.conversationID, conv_msg_seq: t2.messageSeq, reaction_key: [e2] }, a2 = { time: new Date() };
          return this.cnMgr.send(s2, n2).then(function(s3) {
            return d(r2, void 0, void 0, function() {
              var r3, n3, u2, c2, l2 = this;
              return p(this, function(d2) {
                switch (d2.label) {
                  case 0:
                    return s3.code || !s3.succ_list.length ? (a2.reactionType = e2, a2.error = Object(i.y)(_, s3.message, s3.code), this.lg.w(m, o.W.DelReaction, a2), [2, Promise.reject(a2.error)]) : (r3 = this.createMessageExtra(t2.conversationID, t2.conversationType, t2.messageSeq, t2.messageID), c2 = (c2 = null == (c2 = r3.reactions[e2]) ? void 0 : c2.userList) && c2.length ? c2.filter(function(e3) {
                      return e3.userID !== l2.econf.user.userID;
                    }) : c2 || [], n3 = s3.succ_list.find(function(t3) {
                      return t3.reaction_key = e2;
                    }), c2.length < this.econf.mailHBConfig.reaction_brief_len && c2.length !== n3.user_total_count ? [4, this.fetchReactionKey(t2, e2, false)] : [3, 2]);
                  case 1:
                    (u2 = d2.sent()).code || (c2 = u2.user_reaction, n3.cur_reaction_seq = u2.max_reaction_seq, n3.user_total_count = u2.total_user_count), d2.label = 2;
                  case 2:
                    return 0 == n3.user_total_count && (c2.length = 0), u2 = { reactionKey: n3.reaction_key, reactionSeq: n3.cur_reaction_seq, totalCount: n3.user_total_count, isSelfIncluded: false, userList: c2 }, this.saveMessageReactionExtra(r3, [u2], void 0, true), a2.reactionInfo = u2, this.lg.i(m, o.W.DelReaction, a2), [2, { reaction: { conversationID: t2.conversationID, conversationType: t2.conversationType, messageID: t2.messageID, totalCount: u2.totalCount, isSelfIncluded: false, reactionType: e2, userList: c2.map(function(e3) {
                      return { userID: e3.userID };
                    }) } }];
                }
              });
            });
          });
        }, y.prototype.queryMsgReactions = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), total: 0, count: 0, msgSeq: e2.messageSeq, config: t2 }, n2 = t2.reactionType, a2 = this.getMsgExtraKey(e2.conversationID, e2.conversationType, e2.messageSeq), u2 = this.econf.msgExtraMap.get(a2);
          if (!u2 || !u2.reactions || !u2.reactions[n2])
            return a2 = Object(i.y)(g, "reactionType: " + n2 + " is invalid."), this.lg.w(m, o.W.QueryReaction, s2), Promise.reject(a2);
          function c2(i2, a3) {
            var u3 = i2.length, c3 = t2.nextFlag || 0, l3 = c3 + t2.count;
            return i2 = i2.slice(c3, l3).map(function(e3) {
              return { userID: e3.userID };
            }), c3 = l3 < u3 ? l3 : 0, s2.total = u3, s2.count = i2.length, r2.lg.i(m, o.W.QueryReaction, s2), { reactionType: n2, totalCount: a3, nextFlag: c3, userList: i2, message: e2 };
          }
          a2 = +u2.reactions[n2].detailSeq || 0;
          var l2 = +u2.reactions[n2].seq || 0;
          return 0 < l2 && a2 < l2 ? this.fetchReactionKey(e2, n2, true).then(function(t3) {
            if (t3.code)
              return a3 = Object(i.y)(_, t3.message, t3.code), r2.lg.w(m, o.W.QueryReaction, s2), Promise.reject(a3);
            var a3 = t3.max_reaction_seq, l3 = t3.total_user_count, d2 = (t3 = { reactionSeq: a3, reactionKey: n2, totalCount: l3, userList: t3.user_reaction, isSelfIncluded: false }, r2.econf.user.userID);
            return t3.isSelfIncluded = t3.userList.some(function(e3) {
              return e3.userID == d2;
            }), u2.messageID = e2.messageID, r2.saveMessageReactionExtra(u2, [t3], a3, true, true), c2(t3.userList, l3);
          }) : (a2 = u2.reactions[n2].detailUserList || [], Promise.resolve(c2(a2, a2.length)));
        }, y.prototype.queryCombineMsg = function(e2) {
          var t2 = this, r2 = e2.combineID, s2 = (a2 = h(r2.split("-"), 2))[0], n2 = a2[1], a2 = r2.replace(s2 + "-" + n2 + "-", ""), u2 = Number(n2[0]), c2 = { time: new Date(), msgSeq: e2.messageSeq, convID: a2, convType: u2, combineID: r2 };
          return this.dbMgr.getMessageByIndexID(a2, u2, r2.replace(s2, "0"), o.s.CombineID).then(function(o2) {
            if (!o2)
              throw Object(i.y)(g, "The combine message no found in DB.");
            if (0 < (u3 = (o2.messageList || []).filter(function(e3) {
              return e3.parentID == s2;
            })).length)
              return e2.messageList = u3.map(function(e3) {
                return t2.pb.handleDBMessage(t2.econf, e3);
              }), c2.count = e2.messageList.length, { message: e2 };
            var a3, u3 = o2.fileDownloadUrl, l2 = o2.aesKey;
            if ("0" !== s2 && (u3 = (null == (a3 = o2.messageList.find(function(e3) {
              return e3.combineID == r2;
            })) ? void 0 : a3.fileDownloadUrl) || "", l2 = (null == a3 ? void 0 : a3.aesKey) || ""), u3 && l2)
              return t2.dbMgr.downloadFile(u3, "get combine onerror.").then(function(r3) {
                return t2.handleCombineFileRsp(e2, r3, o2, l2, n2, s2), c2.count = e2.messageList.length, c2.size = r3.length, { message: e2 };
              });
            throw Object(i.y)(g, "The combine message is invalid in DB.");
          }).then(function(e3) {
            return t2.lg.i(m, o.W.QueryCombineMsg, c2), e3;
          }).catch(function(e3) {
            throw c2.error = e3, t2.lg.w(m, o.W.QueryCombineMsg, c2), e3;
          });
        }, y.prototype.replyMessage = function(e2, t2, r2, s2) {
          var n2 = t2.conversationID, i2 = t2.conversationType, a2 = (this.stgyMgr.updateConvAct(n2, i2, o.n.HandleMessage), this.createInstance(n2, i2));
          return e2.type === o.gb.Combine ? this.transformCombineMessage(e2).then(function(e3) {
            return a2.sendMediaMessage(e3, r2, s2, t2);
          }) : (e2 = Object.isFrozen(e2) || e2.messageID && e2.conversationID ? JSON.parse(JSON.stringify(e2)) : e2).type >= o.gb.Image && e2.type <= o.gb.Video ? a2.sendMediaMessage(e2, r2, s2, t2) : a2.sendMessage(e2, r2, s2, t2);
        }, y.prototype.queryReplyMsg = function(e2, t2) {
          var r2 = e2.conversationID;
          return this.createInstance(r2, e2.conversationType).queryReplyMsg(e2, t2);
        }, y.prototype.queryMessages = function(e2, t2, r2) {
          return !e2 || !Array.isArray(e2) || !e2.length || 10 < e2.length ? Promise.reject(Object(i.y)(g, "messageSeqs is invalid or its length exceeds 10.")) : this.createInstance(t2, r2).queryMessages(e2);
        }, y.prototype.onPushMsgDelete = function(e2) {
          var t2 = "onPushMsgDel", r2 = e2.conv_id, s2 = e2.conv_type, n2 = e2.max_del_conv_msg_seq;
          e2.is_del_all && n2 ? this.createInstance(r2, s2).onPushAllMsgDelete(n2, t2) : e2.del_conv_msg_seqs.length && this.createInstance(r2, s2).onPushMsgDelete(e2.del_conv_msg_seqs, t2);
        }, y.prototype.onPushConvDelete = function(e2) {
          var t2;
          e2 = this.getConvKey(e2.conv_id, e2.conv_type);
          (e2 = this.econf.dbConvMap.get(e2)) && (e2.state != o.q.Delete && e2.maxOrderKey ? (this.deleteLocalConv(e2), t2 = { event: o.o.Deleted, conversation: Object(i.s)(o.m.convKeys, e2) }, this.bus.emit(o.u.ConvChanged, { infoList: [t2] }, "delConv")) : e2.state = o.q.Delete);
        }, y.prototype.onPushConvRead = function(e2) {
          var t2, r2 = this, s2 = e2.conv_msg_seq, n2 = e2.read_seq, i2 = (e2 = this.getConvKey(e2.conv_id, e2.conv_type), this.econf.dbConvMap.get(e2));
          i2 && s2 && (i2.readMsgSeq = Math.max(s2, i2.readMsgSeq || 0), i2.sendMsgCount = n2, i2.state != o.q.Delete && i2.maxOrderKey && (e2 = function(e3) {
            var t3 = ((t3 = i2.mentionedInfoList) && t3.length && (i2.mentionedInfoList = t3.filter(function(e4) {
              return e4.messageSeq > s2;
            })), i2.deletedMsgCount = e3, "onPushRead"), o2 = i2.msgSeq || 0;
            (o2 = Math.max(o2 - i2.readMsgSeq - n2 - e3, 0)) != i2.unreadMessageCount ? (i2.unreadMessageCount = o2, r2.onUnreadMessageCount(), r2.emitConvUpdate([i2], t3)) : r2.dbMgr.addConversationList([i2], t3 + o2);
          }, (t2 = i2.deletedMsgSeqs && i2.deletedMsgSeqs.length ? i2.deletedMsgSeqs.filter(function(e3) {
            return s2 < e3;
          }) : null) && t2.length ? this.dbMgr.getDeleteMessageCount(i2.conversationID, i2.type, t2, e2) : e2(0)));
        }, y.prototype.onPushConvNotify = function(e2) {
          var t2, r2 = this.getConvKey(e2.conv_id, o.r.Group);
          (r2 = this.econf.dbConvMap.get(r2)) && (t2 = e2.conv_type ? o.p.DoNotDisturb : o.p.Notify, r2.state != o.q.Delete && r2.maxOrderKey && r2.notificationStatus != t2 ? (r2.notificationStatus = t2, this.emitConvUpdate([r2], "onPushNotify"), this.onUnreadMessageCount()) : r2.notificationStatus = t2, (t2 = this.econf.dbGroupMap.get(r2.conversationID)) && (t2.notificationStatus = e2.conv_type ? o.S.Disturb : o.S.Notify, this.dbMgr.addGroupList([t2])));
        }, y.prototype.onPushConvPinned = function(e2) {
          var t2 = this.getConvKey(e2.conv_id, e2.conv_type), r2 = this.econf.dbConvMap.get(t2);
          r2 ? (r2.state != o.q.Delete && r2.maxOrderKey && !r2.isPinned != !e2.pinned_type ? (r2.isPinned = !!e2.pinned_type, this.emitConvUpdate([r2], "onPushPinned")) : r2.isPinned = !!e2.pinned_type, this.updatePinnedSeq(e2.conv_pinned_list_seq)) : this.svrConvAttrMap.pin.add(t2);
        }, y.prototype.onPushConvMark = function(e2) {
          var t2 = this, r2 = [];
          e2 = e2.succ_list.map(function(e3) {
            var s2, n2 = Object(i.w)(e3.mark_content), o2 = t2.getConvKey(e3.conv_id, e3.conv_type), a2 = t2.econf.dbConvMap.get(o2);
            return a2 ? ((s2 = a2.marks || []).length == n2.length && s2.join() == n2.join() || r2.push(a2), a2.marks = n2) : t2.svrConvAttrMap.mark.set(o2, n2), e3.mark_seq;
          });
          this.emitConvUpdate(r2, "setMark"), this.updateMarkSeq(e2);
        }, y.prototype.onPushMessage = function(e2, t2) {
          var r2 = this, s2 = e2.msg_status || 0, n2 = (e2.recv_msg_info.msg_info.msg_status = s2, e2.recv_msg_info.msg_svr_info), a2 = e2.recv_msg_info.msg_info.conv_id, u2 = o.r.Peer, c2 = void 0, l2 = n2.sender_user_id;
          if (t2 == o.d.p_gp_msg.cmd ? u2 = o.r.Group : t2 == o.d.p_rm_msg.cmd ? (a2 = a2 || e2.room_id, u2 = o.r.Room) : t2 == o.d.p_c2c_msg.cmd && (a2 = a2 || l2, l2 && l2 != this.econf.user.userID && (c2 = Object(i.h)(n2.sender_user_name))), a2) {
            var d2 = this.createInstance(a2, u2);
            t2 = e2.send_count_after_read || 0;
            if (e2.recv_msg_info.msg_info.sender_unaware && (!l2 || l2 == this.econf.user.userID))
              return d2.dbConv.sendMsgCount = t2, this.dbMgr.addConversationList([d2.dbConv], "sender_unaware:" + t2), a2;
            u2 == o.r.Peer && ("string" == typeof c2 && (d2.dbConv.conversationName = c2), (l2 = this.econf.dbUserMap.get(a2)) ? ("string" == typeof c2 && (l2.userName = c2), d2.dbConv.maxOrderKey || (d2.dbConv.conversationAvatarUrl = l2.userAvatarUrl)) : (this.econf.dbUserMap.set(a2, { userID: a2, userName: c2 }), l2 = { _ev_: "onPushMsg", user_ids: [a2] }, this.cnMgr.send(o.d.user_fetch, l2, o.j.SDK).then(function(e3) {
              var t3;
              (e3 = e3.result && e3.result[0]) && (t3 = Object(i.h)(e3.user_name), e3 = Object(i.h)(e3.avatar), d2.dbConv.conversationName = t3, d2.dbConv.conversationAvatarUrl = e3, t3 = Object(i.x)({ userID: a2, userName: t3, userAvatarUrl: e3 }, r2.econf), r2.dbMgr.setUser(t3));
            }))), (c2 = this.econf.msgExtraMap.get(this.getMsgExtraKey(a2, u2, n2.conv_msg_seq))) || u2 != o.r.Peer || (c2 = this.econf.msgExtraMap.get(this.getMsgExtraKey(a2, u2, 0))), s2 && c2 && (c2.receiptStatus = Object(i.v)(s2).receipt, c2.messageID || (c2.messageID = n2.msg_id), this.dbMgr.addMessageExtraList([c2], "onPushMsg")), (l2 = d2.onPushMessage(e2.recv_msg_info, t2, e2.reply_count)).direction == o.Y.Send && l2.conversationType == o.r.Group && l2.receiptStatus && l2.receiptStatus < o.ab.Expired && this.gpMgr.queryReceiptMembers(l2, l2.conversationID, { count: 100, nextFlag: 0 }, false, false);
          }
          return a2;
        }, y.prototype.onPushCommand = function(e2, t2) {
          var r2 = "", s2 = o.r.Peer;
          return t2 == o.d.p_gp_cmd.cmd ? (s2 = o.r.Group, r2 = e2.recv_command_info.command_msg_info.conv_id) : t2 == o.d.p_rm_cmd.cmd ? (s2 = o.r.Room, r2 = e2.room_id) : t2 == o.d.p_c2c_cmd.cmd && (t2 = e2.recv_command_info.command_svr_info.sender_user_id, r2 = e2.recv_command_info.command_msg_info.conv_id || t2), this.emitRecvCmdMsg(r2, s2, e2), r2;
        }, y.prototype.onPushBroadcastMessage = function(e2) {
          e2 = this.transform2Message(e2.recv_msg_info, "", o.r.Unknown), this.bus.emit(o.u.BroadcastMsg, { message: e2 });
        }, y.prototype.onPushReadReceipt = function(e2) {
          var t2 = this, r2 = 0, s2 = e2.PushItems.map(function(e3) {
            var s3 = t2.createMessageReceiptItemExtra(t2.mergeMsgReceiptDBConvMap, e3);
            t2.mergeMsgReceiptMap.set(s3.id, s3), s3 = e3.receipt_seq || 0;
            return t2.mergeMsgReceiptSeqs.add(s3), r2 <= s3 && (r2 = s3), s3;
          }), n2 = (e2 = (s2.sort(function(e3, t3) {
            return e3 - t3;
          }), s2[s2.length - 1] - s2[0] == s2.length - 1), Array.from(this.mergeMsgReceiptMap.values())), i2 = (this.emitMessageReceiptOrRevoke(n2, o.v.SDKPush), "pushReceipt"), a2 = s2[0], u2 = +this.econf.user.msgExtraSeq || 0;
          !u2 || a2 <= u2 || a2 - 1 == u2 && e2 && !this.mergeMsgReceiptTimer ? (this.updateMsgExtraSeq(r2), this.dbMgr.addMessageExtraList(n2, i2), this.dbMgr.addConversationList(Array.from(this.mergeMsgReceiptDBConvMap.values()), i2), this.mergeMsgReceiptSeqs.clear(), this.mergeMsgReceiptMap.clear(), this.mergeMsgReceiptDBConvMap.clear(), this.lg.i(m, "mergeMsgReceipt", { dbSeq: u2, seqs: s2, action: "continuousMerge" })) : this.mergeMsgReceiptTimer || (this.mergeMsgReceiptTimer = setTimeout(function() {
            var e3, r3;
            t2.lg && ((e3 = Array.from(t2.mergeMsgReceiptSeqs.values())).sort(function(e4, t3) {
              return e4 - t3;
            }), r3 = e3[e3.length - 1] - e3[0] == e3.length - 1, t2.lg.i(m, "mergeMsgReceipt", { dbSeq: u2, seqs: s2, action: "waitingPush", continuous: r3, mergeSeqs: e3 }), r3 ? (t2.updateMsgExtraSeq(e3[e3.length - 1]), t2.dbMgr.addMessageExtraList(Array.from(t2.mergeMsgReceiptMap.values()), i2), t2.dbMgr.addConversationList(Array.from(t2.mergeMsgReceiptDBConvMap.values()), i2)) : t2.mergeSvrMsgExtraList(o.v.SDKPush), t2.mergeMsgReceiptTimer = 0, t2.mergeMsgReceiptSeqs.clear(), t2.mergeMsgReceiptMap.clear(), t2.mergeMsgReceiptDBConvMap.clear());
          }, this.econf.mailHBConfig.list_to));
        }, y.prototype.onPushMsgRevoke = function(e2) {
          var t2 = this, r2 = e2.recv_msg_info.msg_info.conv_id, s2 = e2.conv_type || 0, n2 = (i2 = e2.recv_msg_info.msg_svr_info).conv_msg_seq, i2 = i2.msg_time;
          this.isMsgDel(this.econf.dbConvMap.get(this.getConvKey(r2, s2)), n2, i2) ? this.dbMgr.getReplyMessageListBySeqs(r2, s2, [n2], false).then(function(e3) {
            e3.length && t2.bus.emit(o.u.MsgRepliedInfo, { messageList: e3 });
          }) : (i2 = this.createInstance(r2, s2).transform2Message(e2.recv_msg_info, false), this.bus.emit(o.u.MsgRevoke, { messageList: [i2] }), this.saveMessageRevokeExtra(i2, e2.statemsg_seq, "pushRevoke"));
        }, y.prototype.onPushReaction = function(e2) {
          var t2 = this, r2 = e2.conv_id, s2 = e2.conv_type, n2 = /* @__PURE__ */ new Set(), i2 = this.createInstance(r2, s2), o2 = i2.dbConv.deletedMsgMaxSeq || 0, a2 = i2.dbConv.deletedMsgSeqs || [], u2 = e2.msg_reactions.filter(function(e3) {
            var i3 = e3.conv_msg_seq;
            if (-1 != a2.indexOf(i3) || i3 <= o2)
              return false;
            var u3 = t2.createMessageExtra(r2, s2, i3);
            return !(+u3.reactionSeq > e3.start_reaction_seq || (u3.messageID || n2.add(i3), 0));
          });
          this.lg.i(m, "pushReaction", { count: u2.length }), i2.fetchMsgListFromCache(Array.from(n2)).then(function(e3) {
            u2.forEach(function(n3) {
              var i3 = n3.conv_msg_seq, o3 = n3.start_reaction_seq, a3 = n3.end_reaction_seq, u3 = (n3 = n3.reaction_infos, t2.createMessageExtra(r2, s2, i3, null == (i3 = e3.get(i3)) ? void 0 : i3.messageID));
              u3.messageID && (i3 = n3.map(function(e4) {
                var t3 = e4.reaction_key, r3 = e4.total_user_count, s3 = e4.max_reaction_seq, n4 = e4.is_multi, i4 = e4.include_self, o4 = !(!u3.reactions || !u3.reactions[t3]) && u3.reactions[t3].isSelfIncluded;
                return { reactionSeq: s3, reactionKey: t3, totalCount: r3 || 0, userList: e4.user_reaction, isSelfIncluded: o4 = n4 ? i4 : o4, value: "" };
              }), t2.saveMessageReactionExtra(u3, i3, a3), +u3.reactionSeq + 1 < o3 && t2.mergeMessageReactionList(u3));
            });
          });
        }, y.prototype.onPushConvAllDelete = function(e2) {
          var t2 = this.deleteAllLocalConv();
          t2 && this.bus.emit(o.u.ConvAllDeleted, { count: t2 });
        }, y.prototype.onPushCleanAllUnread = function(e2) {
          var t2 = this;
          this.econf.dbConvMap.forEach(function(e3) {
            t2.syncConvReadSeqToMsgSeq(e3, e3.msgSeq);
          }), this.dbMgr.addConversationList(Array.from(this.econf.dbConvMap.values()), "onPushClearAllUnrc"), this.onUnreadMessageCount();
        }, y.prototype.onPushCleanAllMsgs = function(e2) {
          this.updateDeleteAllMsgTime(+e2.conv_sid), this.deleteAllLocalConvMsg();
        }, y.prototype.onPushC2CMute = function(e2) {
          var t2 = this, r2 = [];
          e2.mute_info.forEach(function(e3) {
            var s2 = e3.peer_user_id, n2 = e3.mute, i2 = (e3 = e3.mute_list_seq, t2.getConvKey(s2, o.r.Peer));
            !(i2 = t2.econf.dbConvMap.get(i2)) || e3 < (i2.muteSeq || 0) || (n2 = n2 ? o.p.DoNotDisturb : o.p.Notify, i2.state != o.q.Delete && i2.maxOrderKey && i2.notificationStatus != n2 ? (t2.svrConvAttrMap.mute.add(s2), i2.muteSeq = e3, i2.notificationStatus = n2, r2.push(i2)) : i2.notificationStatus = n2);
          }), this.emitConvUpdate(r2, "onPushC2CMute"), this.onUnreadMessageCount();
        }, y.prototype.setDBUser = function(e2) {
          var t2 = this, r2 = [];
          e2.forEach(function(e3) {
            var s2 = t2.econf.dbUserMap.get(e3.userID);
            s2 && s2.updateTime < e3.updateTime ? (r2.push(s2), Object.assign(s2, e3)) : s2 || (r2.push(e3), t2.econf.dbUserMap.set(e3.userID, e3));
          }), 0 < r2.length && this.dbMgr.addUserList(r2);
        }, y.prototype.registerInnerEvent = function() {
          this.bus.add(o.u.ILogined, this.onLogined.bind(this)), this.bus.add(o.u.ILogout, this.onLogout.bind(this)), this.bus.add(o.u.ITriggerHB, this.onTriggerHB.bind(this)), this.bus.add(o.u.ISyncGroups, this.onSyncGroups.bind(this)), this.bus.add(o.u.IJoinedGroup, this.onJoinedGroup.bind(this)), this.bus.add(o.u.ILeftGroup, this.onLeftGroup.bind(this)), this.bus.add(o.u.ISyncGroupInfo, this.onSyncGroupInfo.bind(this)), this.bus.add(o.u.IUnreadMsgCount, this.onUnreadMessageCount.bind(this)), this.bus.add(o.u.IConnectedRoom, this.onConnectedRoom.bind(this));
        }, y.prototype.onSyncGroups = function(e2) {
          var t2 = this, r2 = (this.isLogined = false, e2 ? o.v.SDKHb : o.v.SDKLogin);
          this.mergeSvrConvAttrList(r2, function() {
            t2.mergeSvrConvList(r2, function(s2, n2) {
              function a2() {
                var a3, u3 = "onSyncGroups" + n2.size, c3 = (t2.dbMgr.addConversationList(d2, u3), n2.size && (a3 = [], n2.forEach(function(e3, r3) {
                  r3 = Object(i.s)(o.m.convKeys, t2.econf.dbConvMap.get(r3)), a3.push({ event: e3, conversation: r3 }), t2.stgyMgr.modifyConv(r3.conversationID, r3.type, e3, o.a.FetchAll);
                }), t2.bus.emit(o.u.ConvChanged, { infoList: a3 }, u3)), t2.onUnreadMessageCount(u3, s2), l2._action_ && (t2.lg.i(m, u3, l2), l2._action_ = u3, t2.dr.reportSDKEvent("/sdk/log", { error_message: JSON.stringify(l2) })), t2.queryConvsCallbackList.forEach(function(e3) {
                  return t2.handleQueryConvsCallback(s2, e3);
                }), t2.queryConvsCallbackList.length = 0, t2.mergeSvrC2CMsgList(r2), setTimeout(function() {
                  t2.mergeSvrMsgExtraList(r2), t2.mergeSvrMsgStateList(r2);
                }, 2e3), t2.queryReceiptMemberList.bind(t2));
                s2.filter(function(e3) {
                  return e3.type == o.r.Group;
                }).slice(0, 10).forEach(function(e3) {
                  t2.createInstance(e3.conversationID, e3.type).mergeSvrMessageList(r2, c3);
                }), e2 || t2.dbMgr.loadDB(function() {
                  var e3 = [];
                  t2.econf.dbUserMap.forEach(function(t3) {
                    t3.userName || e3.push(t3.userID);
                  }), t2.fetchSvrUsers(e3, "loadGDB");
                });
              }
              t2.isLogined = true;
              var u2, c2 = [], l2 = { _action_: false }, d2 = s2.filter(function(e3) {
                var r3, s3, i2, a3, u3, d3 = false, p2 = e3.id;
                return !e3.isPinned && t2.svrConvAttrMap.pin.has(p2) && (e3.isPinned = d3 = true, n2.has(p2) || n2.set(p2, o.o.Updated)), e3.type == o.r.Peer && e3.notificationStatus !== o.p.DoNotDisturb && t2.svrConvAttrMap.mute.has(e3.conversationID) && (d3 = true, e3.notificationStatus = o.p.DoNotDisturb, n2.has(p2) || n2.set(p2, o.o.Updated)), t2.svrConvAttrMap.mark.has(p2) && (u3 = e3.marks || [], r3 = t2.svrConvAttrMap.mark.get(p2), u3.length == r3.length && u3.join() == r3.join() || (d3 = true, e3.marks = r3, n2.has(p2) || n2.set(p2, o.o.Updated))), e3.type == o.r.Group && ((u3 = t2.econf.dbGroupMap.get(e3.conversationID)) ? (r3 = u3.notificationStatus, s3 = u3.groupName, i2 = u3.groupAvatarUrl, a3 = u3.totalMemberCount, e3.state = o.q.Normal, e3.historyMsgSeq = u3.historyMsgSeq, "string" == typeof s3 && (e3.conversationName = s3), "string" == typeof i2 && (e3.conversationAvatarUrl = i2), e3.notificationStatus != r3 && (e3.notificationStatus = r3, n2.has(p2) || n2.set(p2, o.o.Updated)), e3.conversationName || e3.conversationAvatarUrl || (l2._action_ = true, l2[e3.conversationID] = r3 + "," + a3), d3 = true) : (e3.conversationName || (c2.push(e3), d3 = true), e3.state != o.q.Disable && (e3.state = o.q.Disable, (u3 = n2.has(p2) ? n2.get(p2) : o.o.Disabled) != o.o.Deleted && (u3 = o.o.Disabled), n2.set(p2, u3), l2._action_ = true, l2[e3.conversationID] = "state:Disable", d3 = true))), d3;
              });
              t2.svrConvAttrMap.pin.clear(), t2.svrConvAttrMap.mute.clear(), c2.length ? (u2 = c2.map(function(e3) {
                return t2.cnMgr.send(o.d.gp_data_none, { group_id: e3.conversationID });
              }), Promise.all(u2).then(function(e3) {
                e3.forEach(function(e4, t3) {
                  e4.code || (c2[t3].conversationName = e4.group_name, c2[t3].conversationAvatarUrl = e4.group_notice);
                }), a2();
              })) : a2();
            });
          });
        }, y.prototype.onLogined = function() {
          var e2 = [], t2 = [];
          this.econf.dbConvMap.forEach(function(r2) {
            r2.type || r2.conversationName && r2.conversationAvatarUrl || e2.push(r2.conversationID), t2.push({ conversationID: r2.conversationID, conversationType: r2.type, conversationOrderKey: r2.orderKey, todoFlag: 0 });
          }), this.fetchSvrUsers(e2, "initLocalConv"), this.stgyMgr.start(), this.stgyMgr.initConv(t2);
        }, y.prototype.onLogout = function() {
          var e2 = [];
          this.econf.dbConvMap.forEach(function(t2) {
            t2.type == o.r.Room && (t2.maxSeq = 0, t2.msgSeq = 0, t2.maxOrderKey = 0, t2.roomSessionID = "", e2.push(t2));
          }), this.dbMgr.addConversationList(e2, "clearRoom"), this.convMap.forEach(function(e3) {
            return e3.destroy();
          }), this.convMap.clear(), this.msgReceiptChangedMap.clear(), this.econf.dbConvMap.clear(), this.econf.dbGroupMap.clear(), this.econf.msgExtraMap.clear(), this.isLogined = false, this.stgyMgr.stop();
        }, y.prototype.onTriggerHB = function() {
          var e2 = this;
          this.econf.syncUserTask.size && this.fetchSvrUsers(Array.from(this.econf.syncUserTask), "syncTask"), this.mergeSvrDelAllConvMsgs(), this.mergeSvrConvAttrList(o.v.SDKHb, function() {
            e2.mergeSvrConvList(o.v.SDKHb);
          }), this.mergeSvrMsgExtraList(o.v.SDKHb), this.mergeSvrMsgStateList(o.v.SDKHb), this.gpMgr.mergeSvrGroupList(o.v.SDKHb), this.gpMgr.mergeSvrGroupApplyList("", o.v.SDKHb), this.checkGroupConvMuteExpiredTime();
        }, y.prototype.onJoinedGroup = function(e2) {
          var t2 = e2.groupID, r2 = e2.groupName, s2 = e2.groupAvatarUrl, n2 = e2.msgSeq, i2 = (e2 = e2.historySeq, (t2 = this.createInstance(t2, o.r.Group).dbConv).unreadMessageCount);
          t2.conversationName = r2, t2.conversationAvatarUrl = s2, t2.historyMsgSeq = e2, t2.notificationStatus = o.p.Notify, t2.isDisabled = false, t2.state == o.q.Disable && (t2.state = o.q.Normal), t2.msgSeq = n2, this.syncConvReadSeqToMsgSeq(t2, n2), r2 = "onJoinedGroup" + n2;
          0 < i2 ? (this.emitConvUpdate([t2], r2), this.onUnreadMessageCount()) : this.dbMgr.addConversationList([t2], r2);
        }, y.prototype.onLeftGroup = function(e2, t2, r2) {
          var s2, n2 = "onLeftGroup", a2 = this.createInstance(e2, o.r.Group);
          a2.dbConv.state != o.q.Delete && (a2.dbConv.state = o.q.Disable), a2.dbConv.isDisabled = true, t2 && (a2.dbConv.historyMsgSeq = t2), a2.dbConv.maxOrderKey && (r2 && (t2 = a2.dbConv.msgSeq + 1, r2.localMessageID = a2.dbConv.type + String(r2.event) + e2, r2.messageID = r2.localMessageID, r2.messageSeq = 0, r2.orderKey = t2 * o.m.MESSAGE_SEQ_MULTIPLIER, r2.conversationID = e2, r2.conversationType = a2.dbConv.type, r2.direction = o.Y.Receive, r2.sentStatus = o.eb.Success, r2.timestamp = this.st.getRealClientTimestamp(), s2 = l({}, r2), a2.dbConv.msgSeq = t2, a2.dbConv.deletedMsgCount++, a2.dbConv.maxOrderKey = r2.orderKey, a2.dbConv.lastMessage = s2, this.dbMgr.addMessageList(e2, a2.dbConv.type, [s2]), this.bus.emit(o.u.RecvGroupMsg, { messageList: [r2], fromConversationID: e2 })), t2 = { event: o.o.Disabled, conversation: Object(i.s)(o.m.convKeys, a2.dbConv) }, this.bus.emit(o.u.ConvChanged, { infoList: [t2] }, n2)), this.dbMgr.addConversationList([a2.dbConv], n2);
        }, y.prototype.onSyncGroupInfo = function(e2, t2) {
          var r2 = (e2 = this.createInstance(e2, o.r.Group).dbConv).conversationName || "", s2 = e2.conversationAvatarUrl || "", n2 = e2.mutedExpiredTime || 0;
          Object.assign(e2, t2), e2.conversationName == r2 && e2.conversationAvatarUrl == s2 && e2.mutedExpiredTime == n2 || this.emitConvUpdate([e2], "onSyncGroupInfo");
        }, y.prototype.onUnreadMessageCount = function(e2, t2) {
          var r2 = this, s2 = o.p.DoNotDisturb, n2 = 0;
          t2 ? t2.forEach(function(e3) {
            e3.notificationStatus != s2 && (n2 += e3.unreadMessageCount);
          }) : this.econf.dbConvMap.forEach(function(e3) {
            e3.notificationStatus != s2 && r2.filterValidConv(e3) && (n2 += e3.unreadMessageCount);
          }), this.oldTotalUnreadCount != n2 && (this.oldTotalUnreadCount = n2, this.bus.emit(o.u.ConvUnreadMsgCount, { totalUnreadMessageCount: n2 }, e2));
        }, y.prototype.onConnectedRoom = function(e2, t2, r2) {
          var s2, n2 = o.r.Room, i2 = this.econf.dbConvMap.get(this.econf.user.userID + n2 + e2);
          i2 ? (i2.msgSeq = t2, (s2 = this.gpMgr.findRoom(e2)) && s2.sessionID.toString() != i2.roomSessionID ? (i2.maxSeq = 0, i2.maxOrderKey = 0, i2.roomSessionID = s2.sessionID.toString(), this.dbMgr.addConversationList([i2], "clearRoom1"), this.dbMgr.clearRoomMessage(e2)) : !i2.maxSeq || t2 || r2 || (i2.maxSeq = 0, i2.maxOrderKey = 0, this.dbMgr.addConversationList([i2], "clearRoom0"), this.dbMgr.clearRoomMessage(e2)), r2 && this.createInstance(e2, n2).mergeSvrMessageList(o.v.SDKHb)) : this.createInstance(e2, n2);
        }, y.prototype.getConvKey = function(e2, t2) {
          return this.econf.user.userID + (t2 || 0) + e2;
        }, y.prototype.getMsgExtraKey = function(e2, t2, r2) {
          return this.econf.user.userID + (t2 || 0) + e2 + (r2 || "");
        }, y.prototype.getDBConversation = function(e2, t2, r2) {
          return t2 = this.econf.dbConvMap.get(e2) || { conversationID: t2, conversationName: "", conversationAlias: "", conversationAvatarUrl: "", type: r2, unreadMessageCount: 0, notificationStatus: o.p.Notify, orderKey: 0, isPinned: false, draft: "", isDisabled: false, mutedExpiredTime: 0, mentionedInfoList: [], id: e2, ownerID: this.econf.user.userID, seq: 0, state: o.q.Normal, maxSeq: 0, maxOrderKey: 0, msgSeq: 0, readMsgSeq: 0, sendMsgCount: 0, deletedMsgCount: 0, deletedMsgMaxSeq: 0, deletedMsgSeqs: [], maxSendReceiptMsgSeq: 0, maxRecvReceiptMsgSeq: 0, minStatemsgSeq: 0, maxStatemsgSeq: 0, muteSeq: 0, historyMsgSeq: 0 }, this.econf.dbConvMap.set(e2, t2), t2;
        }, y.prototype.createInstance = function(e2, t2) {
          var r2, s2 = this.getConvKey(e2, t2), n2 = this.convMap.get(s2);
          return n2 || (n2 = new (t2 === o.r.Peer ? u : t2 === o.r.Group ? a : c).a(e2, this.econf, this.bus, this.dbMgr, this.cnMgr), this.convMap.set(s2, n2), r2 = this.getDBConversation(s2, e2, t2), t2 === o.r.Peer && this.econf.user.userID === e2 && (r2.state = o.q.Disable, r2.conversationName = this.econf.user.userName, r2.conversationAvatarUrl = this.econf.user.userAvatarUrl), this.svrConvAttrMap.pin.has(s2) && (r2.isPinned = true), t2 == o.r.Peer && this.svrConvAttrMap.mute.has(e2) && (r2.notificationStatus = o.p.DoNotDisturb), n2.setDBConv(r2)), this.setAssociatedGroup(n2, e2, t2), t2 == o.r.Peer && (s2 = this.econf.dbUserMap.get(e2)) && (n2.dbConv.conversationName = s2.userName, n2.dbConv.conversationAvatarUrl = s2.userAvatarUrl), n2;
        }, y.prototype.emitConvUpdate = function(e2, t2) {
          e2.length && (this.dbMgr.addConversationList(e2, t2), (e2 = e2.filter(function(e3) {
            return e3.state != o.q.Delete && e3.maxOrderKey;
          }).map(function(e3) {
            return { event: o.o.Updated, conversation: Object(i.s)(o.m.convKeys, e3) };
          })).length && this.bus.emit(o.u.ConvChanged, { infoList: e2 }, t2));
        }, y.prototype.emitRecvCmdMsg = function(e2, t2, r2) {
          var s2, n2, i2;
          e2 && (s2 = r2.msg_info, t2 != o.r.Room && (s2 = r2.recv_command_info.command_msg_info, i2 = (r2 = r2.recv_command_info.command_svr_info).sender_user_id, n2 = r2.msg_id, r2 = r2.msg_time, s2.sender_user_id = i2, s2.msg_id = n2, s2.msg_time = r2), i2 = t2 === o.r.Peer ? o.u.RecvPeerMsg : t2 === o.r.Group ? o.u.RecvGroupMsg : o.u.RecvRoomMsg, this.bus.emit(i2, { messageList: [this.transform2Command(e2, t2, s2)], fromConversationID: e2 }));
        }, y.prototype.emitMessageDelete = function(e2) {
          var t2 = this, r2 = "emitMsgDel";
          e2.forEach(function(e3, s2) {
            var n2 = +s2[0], i2 = (s2 = s2.substring(1), e3.shift());
            0 < e3.length && 0 < (e3 = i2 ? e3.filter(function(e4) {
              return i2 < e4;
            }) : e3).length && t2.createInstance(s2, n2).onPushMsgDelete(e3, r2), 0 < i2 && t2.createInstance(s2, n2).onPushAllMsgDelete(i2, r2);
          });
        }, y.prototype.emitMessageReceiptOrRevoke = function(e2, t2) {
          var r2 = this, s2 = "boolean" == typeof t2, n2 = t2 === o.v.SDKPush, i2 = /* @__PURE__ */ new Map(), a2 = (e2.forEach(function(e3) {
            var t3 = e3.conversationType + e3.conversationID, r3 = i2.get(t3) || /* @__PURE__ */ new Set();
            r3.add(e3.conversationSeq), i2.set(t3, r3);
          }), []), u2 = [], c2 = [], l2 = [], d2 = /* @__PURE__ */ new Map(), p2 = [];
          i2.forEach(function(t3, n3) {
            var i3 = n3.substring(1), h2 = +n3[0], f2 = [], m2 = r2.createInstance(i3, h2);
            t3 = m2.fetchMsgListFromCache(Array.from(t3)).then(function(t4) {
              e2.forEach(function(e3) {
                if (e3.conversationID == i3 && e3.conversationType === h2) {
                  var p3 = t4.get(e3.conversationSeq);
                  if (p3) {
                    e3.messageID || (e3.messageID = p3.messageID, l2.push(e3));
                    var m3 = null, g2 = r2.econf.dbConvMap.get(r2.getConvKey(i3, h2)), _2 = null == g2 ? void 0 : g2.lastMessage, b2 = e3.receiptStatus;
                    if (e3.revokeInfo || !b2 || s2 && b2 == p3.receiptStatus || (-1 == r2.selfReceiptSeqs.indexOf(e3.receiptSeq) && (e3.convReceipt ? a2.push(e3) : 0 != e3.readMemberCount && u2.push(e3)), !p3.receiptStatus || e3.convReceipt && p3.direction != o.Y.Receive || (p3.receiptStatus = b2, m3 = p3, _2 && _2.messageID == p3.messageID && _2.receiptStatus != b2 && (_2.receiptStatus = b2, d2.set(n3, g2)))), s2 && p3.type !== o.gb.Revoke && e3.revokeInfo) {
                      if (m3 = b2 = r2.createRevokeMsg(p3, JSON.parse(e3.revokeInfo)), c2.push(b2), !g2)
                        return;
                      p3.direction == o.Y.Receive && 0 < g2.unreadMessageCount && p3.messageSeq > g2.readMsgSeq && (++g2.deletedMsgCount, --g2.unreadMessageCount, d2.set(n3, g2)), _2 && _2.messageID == p3.messageID && _2.type != o.gb.Revoke && (g2.lastMessage = b2, d2.set(n3, g2));
                    }
                    m3 && f2.push(m3);
                  }
                }
              }), m2.updateMsgCacheList(f2), r2.dbMgr.addMessageList(i3, h2, f2);
            });
            p2.push(t3);
          }), Promise.all(p2).then(function() {
            var e3;
            r2.dbMgr.addMessageExtraList(l2, "fetchMsgID"), a2.length && (e3 = r2.mapMessageExtra2ReceiptInfo(a2, n2)).length && r2.bus.emit(o.u.ConvMsgReceipt, { infos: e3 }), !u2.length || s2 && true !== t2 || (e3 = r2.mapMessageExtra2ReceiptInfo(u2, n2)).length && r2.bus.emit(o.u.MsgReceipt, { infos: e3 }), c2.length && r2.bus.emit(o.u.MsgRevoke, { messageList: c2 }), d2.size && (e3 = "emitReceiptOrRevoke:" + t2, r2.onUnreadMessageCount(), r2.emitConvUpdate(Array.from(d2.values()), e3));
          });
        }, y.prototype.mapMessageExtra2ReceiptInfo = function(e2, t2) {
          var r2 = this, s2 = [];
          return e2.forEach(function(e3) {
            var n2;
            e3.messageID && (n2 = e3.messageID + e3.receiptSeq, t2 && r2.msgReceiptChangedMap.set(n2, true), !t2 && r2.msgReceiptChangedMap.get(n2) || (n2 = Math.max(e3.readMemberCount, 0), s2.push({ conversationID: e3.conversationID, conversationType: e3.conversationType, messageID: e3.messageID, status: e3.receiptStatus, readMemberCount: n2, unreadMemberCount: e3.unreadMemberCount, isSelfOperated: !(!e3.convReceipt || 0 != n2) })));
          }), s2;
        }, y.prototype.handleQueryConvsCallback = function(e2, t2) {
          var r2, s2 = t2.option, n2 = t2.isPinned, a2 = t2.config, u2 = t2.log, c2 = (t2 = t2.resolve, s2 && s2.marks || []), l2 = s2 ? s2.conversationTypes : void 0, d2 = !!s2 && s2.isOnlyUnreadConversation, p2 = -1 != c2.indexOf(-1), h2 = -1 != c2.indexOf(0), f2 = { isAllMark: p2, isNoneMark: h2, total: 0 }, g2 = [];
          e2.forEach(function(e3) {
            var t3;
            g2.find(function(t4) {
              return t4.type == e3.type && t4.conversationID == e3.conversationID;
            }) || (n2 && e3.isPinned || !n2 && function(e4) {
              if (!c2.length)
                return true;
              var t4 = false;
              e4 = e4.marks ? e4.marks.slice() : [];
              return p2 && (t4 = 0 < e4.length), (t4 = !(!h2 || e4.length) || t4) || e4.some(function(e5) {
                return -1 != c2.indexOf(e5);
              });
            }(e3) && (t3 = e3, !l2 || !l2.length || -1 != l2.indexOf(t3.type)) && (t3 = e3, !d2 || 0 < t3.unreadMessageCount)) && g2.push(e3), e3.unreadMessageCount && (c2.length && e3.marks && e3.marks.length ? f2[e3.conversationID] = e3.unreadMessageCount + "," + e3.notificationStatus + ":" + e3.marks.join() : f2[e3.conversationID] = e3.unreadMessageCount + "," + e3.notificationStatus, 2 != e3.notificationStatus && (f2.total += e3.unreadMessageCount));
          }), s2 = a2.count, e2 = a2.nextConversation, a2 = 0, e2 && e2.conversationID && (r2 = this.getConvKey(e2.conversationID, e2.type), a2 = g2.findIndex(function(e3) {
            return e3.id == r2;
          }) + 1), e2 = a2 + s2, s2 = g2.slice(a2, e2).map(function(e3) {
            return Object(i.s)(o.m.convKeys, e3);
          }), Object.assign(u2, { start: a2, end: e2, total: g2.length, count: s2.length, unread: f2 }), a2 = n2 ? o.W.QueryPinneds : o.W.QueryConvs;
          this.lg.i(m, a2, u2), t2({ conversationList: s2 });
        }, y.prototype.mergeSvrConvList = function(e2, t2) {
          var r2 = this, s2 = +this.econf.user.convSeq || 0, n2 = this.econf.mailHBConfig.conv_list_seq, a2 = this.econf.mailHBConfig.fetch_conv_list;
          if (!a2 || !n2 || n2 <= s2) {
            if (!t2)
              return;
            var u2 = Array.from(this.econf.dbConvMap.values()).filter(function(e3) {
              var t3 = r2.filterValidConv(e3);
              return t3 && r2.createInstance(e3.conversationID, e3.type), t3;
            });
            return u2.sort(i.e), t2(u2, /* @__PURE__ */ new Map());
          }
          var c2 = { time: new Date(), dbSeq: s2, hbSeq: n2, how: e2, fetch: a2, logined: this.isLogined }, l2 = 1, d2 = 0, p2 = /* @__PURE__ */ new Map(), h2 = function(s3) {
            var n3, a3;
            s3.list.forEach(function(e3) {
              e3.type != o.r.Room && p2.set(e3.id, e3);
            }), 1 == l2 && (d2 = s3.full_list), s3.nextFlag && r2.econf.token ? r2.fetchSvrConv(s3.nextFlag, ++l2, e2, d2).then(h2) : (r2.econf.user.preVersion = r2.st.deviceInfo.sdk_ver, r2.updateConvSeq(s3.cur, true), t2 ? r2.saveConversationList(p2, !!d2, c2, t2) : e2 == o.v.SDKHb && (n3 = [], a3 = [], p2.forEach(function(e3, t3) {
              var s4, u3, c3;
              (t3 = r2.econf.dbConvMap.get(t3)) && t3.msgSeq <= e3.msgSeq && (s4 = false, (u3 = e3.mentionedInfoList) && u3.length && (((null == (c3 = t3.mentionedInfoList) ? void 0 : c3.length) || 0) != u3.length && (s4 = true), t3.mentionedInfoList = u3), (c3 = e3.unreadMessageCount) != t3.unreadMessageCount && e3.deletedMsgCount >= t3.deletedMsgCount && e3.readMsgSeq >= t3.readMsgSeq && (n3.push(e3.conversationID + ":" + t3.unreadMessageCount + "," + c3), s4 = true, t3.msgSeq = e3.msgSeq, t3.readMsgSeq = e3.readMsgSeq, t3.sendMsgCount = e3.sendMsgCount, t3.deletedMsgCount = e3.deletedMsgCount, t3.unreadMessageCount = c3), s4 && t3.maxOrderKey && t3.state != o.q.Delete && a3.push({ event: o.o.Updated, conversation: Object(i.s)(o.m.convKeys, t3) }));
            }), a3.length && r2.bus.emit(o.u.ConvChanged, { infoList: a3 }), n3.length && (c2.updateConvs = n3, r2.lg.i(m, "mergeSvrConv", c2))));
          };
          this.fetchSvrConv(s2, l2, e2, 0).then(h2);
        }, y.prototype.mergeSvrConvAttrList = function(e2, t2) {
          var r2, s2, n2, a2 = this, u2 = { pin: +this.econf.user.convPinnedSeq || 0, mute: this.econf.user.muteSeq || 0, mark: this.econf.user.convMarkSeq || 0 }, c2 = { pin: this.econf.mailHBConfig.conv_pinned_list_seq, mute: this.econf.mailHBConfig.c2c_mute_max_seq || 0, mark: this.econf.mailHBConfig.conv_mark_seq || 0 }, l2 = { time: new Date(), how: e2, logined: this.isLogined, dbSeq: u2, hbSeq: c2 }, d2 = { pin: false, mute: false, mark: false, svrMap: /* @__PURE__ */ new Map() }, p2 = function() {
            var r3;
            d2.pin && d2.mute && d2.mark && (r3 = "mergeSvrConvAttr", (c2.pin > u2.pin || c2.mute > u2.mute || c2.mark > u2.mark) && a2.lg.i(m, r3, l2), e2 == o.v.SDKHb && d2.svrMap.size && (a2.emitConvUpdate(Array.from(d2.svrMap.values()), r3), a2.onUnreadMessageCount()), t2());
          };
          c2.pin > u2.pin ? (r2 = 1, s2 = 0, n2 = function(e3) {
            e3.list.forEach(function(e4) {
              a2.svrConvAttrMap.pin.add(a2.getConvKey(e4.conv_id, e4.conv_type));
            }), 1 == r2 && (s2 = e3.full_list), e3.nextFlag && a2.econf.token ? a2.fetchSvrConvPinned(e3.nextFlag, ++r2, s2).then(n2) : (a2.updatePinnedSeq(e3.cur, true), d2.pin = true, p2());
          }, this.fetchSvrConvPinned(u2.pin, r2, 0).then(n2)) : (d2.pin = true, p2()), c2.mute > u2.mute ? this.cnMgr.send(o.d.conv_mute_list, null).then(function(e3) {
            if (e3.code)
              return d2.mute = true, void p2();
            e3.user_ids.forEach(function(e4) {
              var t3 = a2.getConvKey(e4, o.r.Peer);
              (t3 = a2.econf.dbConvMap.get(t3)) ? t3.notificationStatus != o.p.DoNotDisturb && (t3.notificationStatus = o.p.DoNotDisturb, d2.svrMap.set(t3.id, t3)) : a2.svrConvAttrMap.mute.add(e4);
            }), a2.updateMuteSeq(e3.max_mute_seq, true), d2.mute = true, p2();
          }) : (d2.mute = true, p2()), c2.mark > u2.mark ? this.cnMgr.send(o.d.conv_mark_list, { cur_list_seq: u2.mark }).then(function(e3) {
            if (e3.code)
              return d2.mark = true, void p2();
            e3.full_list && a2.econf.dbConvMap.size && a2.econf.dbConvMap.forEach(function(e4) {
              e4.marks && (e4.marks.length = 0);
            }), e3.conv_mark_list.forEach(function(e4) {
              var t3, r3 = Object(i.w)(e4.mark_content), s3 = (e4 = a2.getConvKey(e4.conv_id, e4.conv_type), a2.econf.dbConvMap.get(e4));
              s3 ? (t3 = s3.marks || []).length == r3.length && t3.join() == r3.join() || (s3.marks = r3, d2.svrMap.set(s3.id, s3)) : a2.svrConvAttrMap.mark.set(e4, r3);
            }), e3.max_mark_seq && (a2.econf.user.convMarkSeq = e3.max_mark_seq, a2.dbMgr.setUser(a2.econf.user)), d2.mark = true, p2();
          }) : (d2.mark = true, p2());
        }, y.prototype.mergeSvrC2CMsgList = function(e2) {
          var t2, r2, s2, n2, i2, a2, u2 = this;
          e2 === o.v.SDKLogin && !this.econf.mailHBConfig.fetch_c2c_msg_count || (t2 = this.econf.user.c2cMsgSeq || 0, !(r2 = this.econf.mailHBConfig.c2c_msg_seq) || r2 <= t2 || (s2 = 1, n2 = this.econf.user.deleteAllMsgTime || 0, i2 = {}, a2 = function(r3) {
            var o2;
            r3.code || (r3.msgs.forEach(function(e3) {
              var r4 = e3.msg_info.conv_id, s3 = e3.msg_svr_info.c2c_msg_seq, o3 = e3.msg_svr_info.msg_time;
              t2 < s3 && n2 < o3 && (i2[r4] || (i2[r4] = /* @__PURE__ */ new Map()), s3 = u2.createInstance(r4, 0).transform2Message(e3, true), i2[r4].set(e3.msg_svr_info.conv_msg_seq, s3));
            }), o2 = r3.c2c_msg_seq, !r3.fetch_end && t2 < o2 && u2.econf.token ? u2.fetchSvrMessage(o2, ++s2, e2, o2 - t2, t2).then(a2) : (u2.updateC2CMsgSeq(r3.svr_c2c_msg_seq, true), Object.keys(i2).forEach(function(e3) {
              var t3 = u2.createInstance(e3, 0), r4 = t3.dbConv, s3 = r4.deletedMsgMaxSeq || 0, n3 = r4.deletedMsgSeqs || [];
              i2[e3].forEach(function(t4) {
                t4 = t4.messageSeq, (-1 != n3.indexOf(t4) || t4 <= s3) && i2[e3].delete(t4);
              }), t3.afterMergeSvrMsg(Array.from(i2[e3].keys()), i2[e3]);
            })));
          }, this.fetchSvrMessage(-1, s2, e2, r2 - t2 + 1, t2).then(a2)));
        }, y.prototype.mergeMessageReactionList = function(e2) {
          var t2 = this, r2 = { time: new Date() }, s2 = [], n2 = 1, i2 = function(o2) {
            return d(t2, void 0, void 0, function() {
              var t3, a2, u2, c2;
              return p(this, function(l2) {
                return o2.code || (t3 = o2.msg_next_reaction_seq, a2 = o2.msg_max_reaction_seq, u2 = o2.fetch_end, c2 = o2.reaction_list, u2 ? (c2.forEach(function(e3) {
                  s2.push({ reactionSeq: e3.max_reaction_seq, reactionKey: e3.reaction_key, totalCount: e3.total_user_count, userList: e3.user_reaction, isSelfIncluded: e3.include_self });
                }), this.saveMessageReactionExtra(e2, s2, a2), this.lg.i(m, "mergeSvrReaction", r2)) : this.fetchSvrMsgReaction(e2, t3, ++n2).then(i2)), [2];
              });
            });
          };
          this.fetchSvrMsgReaction(e2, e2.reactionSeq, n2).then(i2);
        }, y.prototype.mergeSvrMsgExtraList = function(e2, t2) {
          var r2 = this, s2 = +this.econf.user.msgExtraSeq || 0, n2 = this.econf.mailHBConfig.extra_msg_list_seq;
          if (!n2 || n2 <= s2)
            return t2 && t2();
          var i2 = { time: new Date(), dbSeq: s2, hbSeq: n2, how: e2 }, o2 = 1, a2 = s2, u2 = /* @__PURE__ */ new Map(), c2 = /* @__PURE__ */ new Map(), l2 = /* @__PURE__ */ new Map(), d2 = function(s3) {
            s3.list || (s3.list = []), a2 = s3.next_list_seq || a2;
            var n3 = s3.fetch_end || s3.code && 6000104 != s3.code ? 0 : a2;
            s3.list.forEach(function(e3) {
              var t3, s4;
              1 == e3.type ? (t3 = r2.createMessageReceiptItemExtra(c2, e3), u2.set(t3.id, t3)) : 2 != e3.type && 3 != e3.type || (t3 = e3.conv_type + e3.conv_id, s4 = l2.get(t3) || [0], l2.set(t3, s4), 2 == e3.type ? s4.push.apply(s4, f([], h(e3.del_conv_msg_seqs), false)) : s4[0] = Math.max(s4[0], e3.del_conv_msg_seqs[0]));
            }), n3 && r2.econf.token ? r2.fetchSvrMsgExtra(n3, ++o2, e2).then(d2) : (s3 = Array.from(u2.values()), n3 = "mergeMsgExtra" + e2, r2.updateMsgExtraSeq(a2, true), r2.dbMgr.addMessageExtraList(s3, n3), r2.dbMgr.addConversationList(Array.from(c2.values()), n3), r2.emitMessageReceiptOrRevoke(s3, e2), r2.emitMessageDelete(l2), r2.lg.i(m, "mergeSvrMsgExtra", i2), t2 && t2());
          };
          this.fetchSvrMsgExtra(s2, o2, e2).then(d2);
        }, y.prototype.mergeSvrMsgStateList = function(e2, t2, r2, s2, n2) {
          var a2 = this, u2 = (void 0 === t2 && (t2 = 0), void 0 === r2 && (r2 = 0), void 0 === s2 && (s2 = 0), n2 ? n2.conversationID : "");
          t2 = u2 ? t2 : +this.econf.user.c2cMsgStateSeq || 0;
          if (!u2) {
            var c2 = this.econf.mailHBConfig.c2c_statemsg_seq;
            if (!c2 || c2 <= t2)
              return;
            r2 = 1, s2 = this.econf.mailHBConfig.c2c_msg_seq;
          }
          var l2 = { time: new Date(), dbSeq: t2, how: e2, minMsgSeq: r2, maxMsgSeq: s2 }, d2 = 1, p2 = t2, h2 = /* @__PURE__ */ new Map(), f2 = function(t3) {
            t3.statemsg_list || (t3.statemsg_list = []), p2 = t3.next_statemsg_seq || p2;
            for (var c3, g2 = t3.fetch_end || t3.code && 6000104 != t3.code ? 0 : p2, _2 = 0; _2 < t3.statemsg_list.length; _2++) {
              var b2, v2, y2, M, k, I, S = t3.statemsg_list[_2], D = S.conv_id, q = S.conv_type, C = S.conv_msg_seq, w = a2.createInstance(D, q);
              a2.isMsgDel(w.dbConv, C, 0) || (b2 = (y2 = Object(i.v)(S.msg_status)).revoke, y2 = (v2 = !!S.revoke_time) ? o.ab.None : y2.receipt, M = S.reaction_seq, k = a2.getMsgExtraKey(D, q, C), (I = a2.econf.msgExtraMap.get(k)) || !M && !v2 && y2 != o.ab.Expired && y2 != o.ab.Failed || ((I = a2.createMessageExtra(D, q, C)).receiptStatus = y2, I.reactionSeq = 0, I.reactions = {}), I && (+I.reactionSeq < M && a2.handleMsgStateReactionBriefs(I, S.reaction_briefs), v2 ? (I.receiptStatus = o.ab.None, D = S.msg_type, I.revokeInfo = JSON.stringify({ revokeType: S.revoke_type, revokeStatus: b2, revokeTimestamp: S.revoke_time, operatedUserID: S.user_id || "", revokeExtendedData: Object(i.h)(S.payload), originalMessageType: 200 <= D && D <= 400 ? o.gb.Custom : D, originalTextMessageContent: "" }), a2.revokeMentionedInfoList(w.dbConv, C)) : y2 && (I.receiptStatus = -1 == I.readMemberCount ? o.ab.Done : y2), h2.set(k, I)));
            }
            g2 && a2.econf.token ? a2.fetchSvrMsgState(g2, ++d2, e2, u2, r2, s2).then(f2) : (g2 = "mergeMsgState" + e2, n2 ? (n2.minStatemsgSeq = p2, n2.maxStatemsgSeq = n2.minStatemsgSeq, a2.dbMgr.addConversationList([n2], g2)) : a2.updateC2CMsgStateSeq(p2, true), c3 = Array.from(h2.values()), a2.emitMessageReceiptOrRevoke(c3, e2 != o.v.Other), a2.dbMgr.addMessageExtraList(c3, g2), a2.lg.i(m, "mergeSvrMsgState", l2));
          };
          this.fetchSvrMsgState(t2, d2, e2, u2, r2, s2).then(f2);
        }, y.prototype.mergeSvrDelAllConvMsgs = function() {
          var e2 = this.econf.user.deleteAllMsgTime || 0, t2 = this.econf.mailHBConfig.delete_all_msg_time || 0;
          e2 < t2 && (this.updateDeleteAllMsgTime(t2), this.dbMgr.clearMessage(t2));
        }, y.prototype.fetchSvrConv = function(e2, t2, r2, s2) {
          var n2 = this;
          return this.cnMgr.send(o.d.conv_list, { cur_list_seq: e2, count: 100, full_pull: s2, degree: t2, how: r2 }, o.j.SDK).then(function(t3) {
            if (t3.code)
              return { list: [] };
            var r3 = t3.conv_list_seq, s3 = t3.max_list_seq, i2 = t3.full_list, o2 = t3.fetch_end;
            return { nextFlag: o2 || s3 <= r3 || r3 <= e2 || s3 <= e2 ? 0 : r3, cur: r3, max: s3, list: t3.conv_list.map(function(e3) {
              return n2.transform2DBConv(e3);
            }), full_list: i2, fetch_end: o2 };
          });
        }, y.prototype.fetchSvrConvPinned = function(e2, t2, r2) {
          return this.cnMgr.send(o.d.conv_pinned_list, { cur_list_seq: e2, count: 100, full_pull: r2, degree: t2 }, o.j.SDK).then(function(t3) {
            if (t3.code)
              return { list: [] };
            var r3 = t3.conv_list_seq, s2 = t3.max_list_seq, n2 = t3.full_list, i2 = t3.fetch_end;
            return { nextFlag: i2 || s2 <= r3 || r3 <= e2 || s2 <= e2 ? 0 : r3, cur: r3, max: s2, list: t3.conv_list, full_list: n2, fetch_end: i2 };
          });
        }, y.prototype.fetchSvrMessage = function(e2, t2, r2, s2, n2) {
          return e2 = { cur_list_seq: e2, count: Math.min(100, s2), full_pull: r2 == o.v.SDKLogin ? 1 : 0, degree: r2, how: t2, dbSeq: n2 }, this.cnMgr.send(o.d.c2c_fetch_all_msg, e2);
        }, y.prototype.fetchSvrMsgExtra = function(e2, t2, r2) {
          return this.cnMgr.send(o.d.extra_msglist, { cur_list_seq: e2, count: 100, full_pull: t2, how: r2 }, o.j.SDK);
        }, y.prototype.fetchSvrMsgState = function(e2, t2, r2, s2, n2, i2) {
          return e2 = { statemsg_seq: e2, count: 100, degree: t2, how: r2, min_msg_seq: n2, max_msg_seq: i2 }, s2 && (e2.conv_id = s2), t2 = s2 ? o.d.gp_msg_state_list : o.d.c2c_msg_state_list, this.cnMgr.send(t2, e2, o.j.SDK);
        }, y.prototype.fetchSvrMsgReaction = function(e2, t2, r2) {
          var s2 = e2.conversationType == o.r.Peer ? o.d.c2c_reaction_list : o.d.gp_reaction_list;
          e2 = { conv_id: e2.conversationID, conv_msg_seq: e2.conversationSeq, start_reaction_seq: t2, degree: r2 };
          return this.cnMgr.send(s2, e2);
        }, y.prototype.fetchReactionKey = function(e2, t2, r2) {
          var s2 = e2.conversationType == o.r.Peer ? o.d.c2c_get_reaction : o.d.gp_get_reaction;
          e2 = { conv_id: e2.conversationID, conv_msg_seq: e2.messageSeq, reaction_key: t2, max_reaction_seq: 0, is_detail: r2 };
          return this.cnMgr.send(s2, e2, r2 ? o.j.API : o.j.SDK);
        }, y.prototype.createMessageReceiptItemExtra = function(e2, t2) {
          var r2 = t2.conv_id, s2 = t2.conv_type, n2 = t2.conv_msg_seq, i2 = t2.receipt_seq, a2 = t2.read_count, u2 = Math.max(0, t2.unread_count), c2 = -1 == a2, l2 = (t2 = t2.is_conv_read, this.createMessageExtra(r2, s2, n2));
          return l2.receiptSeq && l2.receiptSeq > i2 || (l2.conversationSeq = n2, l2.receiptSeq = i2, l2.readMemberCount = a2, l2.unreadMemberCount = u2, l2.convReceipt = t2 ? 1 : 0, (t2 || c2 || 0 < a2 && 0 == u2) && (l2.receiptStatus = o.ab.Done), t2 && (l2.messageID = "", n2 = e2.get(r2) || this.createInstance(r2, s2).dbConv, i2 = l2.conversationSeq, a2 = n2.maxSendReceiptMsgSeq || 0, u2 = n2.maxRecvReceiptMsgSeq || 0, c2 && u2 < i2 ? n2.maxRecvReceiptMsgSeq = i2 : !c2 && a2 < i2 && (n2.maxSendReceiptMsgSeq = i2), e2.set(r2, n2))), l2;
        }, y.prototype.createRevokeMsg = function(e2, t2) {
          return l({ type: o.gb.Revoke, message: "", extendedData: e2.extendedData, localExtendedData: e2.localExtendedData, isMentionAll: e2.isMentionAll, mentionedUserIDs: e2.mentionedUserIDs ? f([], h(e2.mentionedUserIDs), false) : [], localMessageID: e2.localMessageID, messageID: e2.messageID, messageSeq: e2.messageSeq, senderUserID: e2.senderUserID, timestamp: e2.timestamp, conversationID: e2.conversationID, conversationType: e2.conversationType, direction: e2.senderUserID == this.econf.user.userID ? o.Y.Send : o.Y.Receive, sentStatus: e2.sentStatus, orderKey: e2.orderKey, isServerMessage: e2.isServerMessage, receiptStatus: o.ab.None, rootRepliedCount: e2.rootRepliedCount, repliedInfo: e2.repliedInfo ? JSON.parse(JSON.stringify(e2.repliedInfo)) : void 0 }, t2);
        }, y.prototype.saveMessageRevokeExtra = function(e2, t2, r2) {
          var s2 = this, n2 = [e2], i2 = e2.conversationID, a2 = e2.conversationType, u2 = e2.messageSeq, c2 = this.createInstance(i2, a2), l2 = (n2 = (c2.updateMsgCacheList(n2), this.dbMgr.addMessageList(i2, a2, n2), this.dbMgr.getReplyMessageListBySeqs(i2, a2, [u2], false).then(function(e3) {
            e3.length && s2.bus.emit(o.u.MsgRepliedInfo, { messageList: e3 });
          }), c2.dbConv.lastMessage), false);
          e2.direction == o.Y.Receive && 0 < c2.dbConv.unreadMessageCount && u2 > c2.dbConv.readMsgSeq && (l2 = true, ++c2.dbConv.deletedMsgCount, --c2.dbConv.unreadMessageCount, this.onUnreadMessageCount(r2)), (null == n2 ? void 0 : n2.messageID) == e2.messageID && (l2 = true, c2.dbConv.lastMessage = e2), (l2 = !!this.revokeMentionedInfoList(c2.dbConv, u2) || l2) && this.emitConvUpdate([c2.dbConv], r2), n2 = false;
          a2 == o.r.Peer ? t2 - 1 == (+this.econf.user.c2cMsgStateSeq || 0) && (this.updateC2CMsgStateSeq(t2), n2 = true) : a2 == o.r.Group && ((+c2.dbConv.maxStatemsgSeq || 0) < t2 && (c2.dbConv.maxStatemsgSeq = t2), t2 - 1 == (+c2.dbConv.minStatemsgSeq || 0) && (c2.dbConv.minStatemsgSeq = t2, n2 = true)), n2 && (l2 = this.getMsgExtraKey(i2, a2, u2), (c2 = this.econf.msgExtraMap.get(l2)) || (c2 = { id: l2, ownerID: this.econf.user.userID, conversationID: i2, conversationType: a2, conversationSeq: u2 }, this.econf.msgExtraMap.set(l2, c2)), c2.messageID = e2.messageID, c2.revokeInfo = JSON.stringify({ revokeType: e2.revokeType, revokeStatus: e2.revokeStatus, revokeTimestamp: e2.revokeTimestamp, operatedUserID: e2.operatedUserID, revokeExtendedData: e2.revokeExtendedData, originalMessageType: e2.originalMessageType, originalTextMessageContent: e2.originalTextMessageContent }), this.dbMgr.addMessageExtraList([c2], r2));
        }, y.prototype.createMessageExtra = function(e2, t2, r2, s2) {
          void 0 === s2 && (s2 = "");
          var n2 = this.getMsgExtraKey(e2, t2, r2), i2 = this.econf.msgExtraMap.get(n2);
          return i2 || (i2 = { id: n2, ownerID: this.econf.user.userID, conversationID: e2, conversationType: t2, conversationSeq: r2, messageID: s2, convReceipt: 0, receiptStatus: o.ab.Processing, receiptSeq: 0, receiptMemberListSeq: 0, readMemberCount: 0, unreadMemberCount: 0, memberSeqs: {}, reactionSeq: 0, reactions: {} }, this.econf.msgExtraMap.set(n2, i2)), i2.reactions || (i2.reactions = {}), s2 && !i2.messageID && (i2.messageID = s2), i2;
        }, y.prototype.saveMessageReactionExtra = function(e2, t2, r2, s2, n2) {
          var a2 = "saveReactionExtra", u2 = [], c2 = this.econf.mailHBConfig.reaction_brief_len;
          if (this.lg.i(m, a2, { reactionInfoList: t2, maxReactionSeq: r2, noEmit: s2, isDetail: n2 }), r2 && r2 <= e2.reactionSeq && !n2)
            return [];
          if (r2 && (e2.reactionSeq = r2), t2.forEach(function(t3) {
            var r3 = n2 ? t3.reactionSeq : (null == (r3 = e2.reactions[t3.reactionKey]) ? void 0 : r3.detailSeq) || 0, s3 = (null == (s3 = e2.reactions[t3.reactionKey]) ? void 0 : s3.userList) || [], o2 = (null == (o2 = e2.reactions[t3.reactionKey]) ? void 0 : o2.detailUserList) || [], a3 = 0 == t3.userList.length && t3.totalCount > c2 || n2 ? s3 : t3.userList;
            o2 = n2 ? t3.userList : o2;
            if (n2 && (a3 = o2.slice(0, c2)), !(e2.reactions[t3.reactionKey] && t3.reactionSeq < e2.reactions[t3.reactionKey].seq)) {
              if (s3 = !Object(i.a)(a3, s3) || t3.totalCount !== (null == (s3 = e2.reactions[t3.reactionKey]) ? void 0 : s3.totalCount), +t3.reactionSeq > +(e2.reactionSeq || 0) && (e2.reactionSeq = t3.reactionSeq), 0 == t3.totalCount)
                delete e2.reactions[t3.reactionKey];
              else {
                if (t3.totalCount > c2 && a3.length < c2)
                  return;
                e2.reactions[t3.reactionKey] = { seq: t3.reactionSeq, detailSeq: r3, value: "", totalCount: t3.totalCount, userList: a3, detailUserList: o2, isSelfIncluded: t3.isSelfIncluded };
              }
              s3 && u2.push({ conversationID: e2.conversationID, conversationType: e2.conversationType, messageID: e2.messageID, reactionType: t3.reactionKey, totalCount: t3.totalCount, isSelfIncluded: t3.isSelfIncluded, userList: a3.map(function(e3) {
                return { userID: e3.userID };
              }) });
            }
          }), this.dbMgr.addMessageExtraList([e2], a2), !s2 && 0 < u2.length && this.bus.emit(o.u.MsgReactions, { reactions: u2 }), (t2 = (r2 = this.createInstance(e2.conversationID, e2.conversationType)).dbConv.lastMessage) && t2.messageID == e2.messageID) {
            var l2, d2 = [];
            for (l2 in e2.reactions) {
              var p2 = e2.reactions[l2];
              d2.push({ conversationID: e2.conversationID, conversationType: e2.conversationType, messageID: e2.messageID, userList: p2.userList, totalCount: p2.totalCount, reactionType: l2, isSelfIncluded: p2.isSelfIncluded });
            }
            Object(i.a)(t2.reactions, d2) || (t2.reactions = d2, this.emitConvUpdate([r2.dbConv], a2));
          }
          return u2;
        }, y.prototype.updateConvSeq = function(e2, t2) {
          var r2 = this.econf.user;
          !e2 || !t2 && +r2.convSeq && r2.convSeq != e2 - 1 || (r2.convSeq = e2, this.dbMgr.setUser(r2));
        }, y.prototype.updatePinnedSeq = function(e2, t2) {
          var r2 = this.econf.user;
          !e2 || !t2 && +r2.convPinnedSeq && r2.convPinnedSeq != e2 - 1 || (r2.convPinnedSeq = e2, this.dbMgr.setUser(r2));
        }, y.prototype.updateMuteSeq = function(e2, t2) {
          var r2 = this.econf.user;
          !e2 || !t2 && +r2.muteSeq && r2.muteSeq != e2 - 1 || (r2.muteSeq = e2, this.dbMgr.setUser(r2));
        }, y.prototype.updateMarkSeq = function(e2) {
          e2.sort(function(e3, t3) {
            return e3 - t3;
          });
          var t2 = e2.length - 1, r2 = this.econf.user;
          e2[t2] - e2[0] != t2 || r2.convMarkSeq && r2.convMarkSeq != e2[0] - 1 || (r2.convMarkSeq = e2[t2], this.dbMgr.setUser(r2));
        }, y.prototype.updateC2CMsgSeq = function(e2, t2) {
          var r2 = this.econf.user;
          !e2 || !t2 && r2.c2cMsgSeq && r2.c2cMsgSeq != e2 - 1 || (r2.c2cMsgSeq = e2, this.dbMgr.setUser(r2));
        }, y.prototype.updateMsgExtraSeq = function(e2, t2) {
          var r2 = this.econf.user;
          !e2 || !t2 && +r2.msgExtraSeq && r2.msgExtraSeq != e2 - 1 || (r2.msgExtraSeq = e2, this.dbMgr.setUser(r2));
        }, y.prototype.updateC2CMsgStateSeq = function(e2, t2) {
          var r2 = this.econf.user;
          !e2 || !t2 && +r2.c2cMsgStateSeq && r2.c2cMsgStateSeq != e2 - 1 || (r2.c2cMsgStateSeq = e2, this.dbMgr.setUser(r2));
        }, y.prototype.updateDeleteAllMsgTime = function(e2, t2) {
          var r2 = this.econf.user;
          e2 && (t2 || !+r2.deleteAllMsgTime || e2 > r2.deleteAllMsgTime) && (r2.deleteAllMsgTime = e2, this.dbMgr.setUser(r2));
        }, y.prototype.setAssociatedGroup = function(e2, t2, r2) {
          r2 === o.r.Group ? this.gpMgr.initGroupByConv(t2) : r2 === o.r.Room && ((r2 = this.gpMgr.findRoom(t2)) ? e2.setAssociatedGroup(r2.sessionID, r2.userSessionID, r2.subRoomID, r2.enabledOfflineMsg) : e2.setAssociatedGroup());
        }, y.prototype.saveConversationList = function(e2, t2, r2, s2) {
          var n2 = this, a2 = [], u2 = /* @__PURE__ */ new Map(), c2 = /* @__PURE__ */ new Map(), l2 = /* @__PURE__ */ new Map(), d2 = [], p2 = (t2 && 0 < this.econf.dbConvMap.size && this.econf.dbConvMap.forEach(function(e3, t3) {
            return n2.filterValidConv(e3) && l2.set(t3, e3);
          }), e2.forEach(function(e3, t3) {
            l2.delete(t3);
            var r3, s3, i2, p3 = null, h2 = e3.state == o.q.Delete, f2 = e3.msgSeq, m2 = n2.econf.dbConvMap.get(t3), g2 = !m2 || !m2.maxOrderKey;
            m2 ? (r3 = m2.orderKey, s3 = m2.msgSeq || 0, i2 = m2.state == o.q.Delete, m2.mentionedInfoList = e3.mentionedInfoList, h2 && e3.seq && m2.seq < e3.seq && (d2.push(e3.conversationID), Object.assign(m2, e3), c2.set(t3, m2)), (s3 < f2 || m2.readMsgSeq < e3.readMsgSeq) && (d2.push(e3.conversationID + ":" + m2.readMsgSeq + "," + e3.readMsgSeq), Object.assign(m2, e3), c2.set(t3, m2), p3 = i2 || g2 ? o.o.Added : o.o.Updated), h2 && !i2 && (p3 = o.o.Deleted), r3 > e3.orderKey && (m2.orderKey = r3), m2.maxStatemsgSeq = e3.maxStatemsgSeq) : (d2.push(e3.conversationID + ":" + e3.unreadMessageCount), m2 = n2.getDBConversation(t3, e3.conversationID, e3.type), Object.assign(m2, e3), c2.set(t3, m2), !h2 && 0 < f2 && (p3 = o.o.Added)), m2.maxOrderKey || (m2.maxOrderKey = f2 * o.m.MESSAGE_SEQ_MULTIPLIER), h2 || (e3.type != o.r.Peer || !g2 && n2.econf.dbUserMap.has(e3.conversationID) || a2.push(e3.conversationID), 0 < f2 && g2 && (p3 = o.o.Added)), null != (p3 = e3.state == o.q.Disable && (null == (s3 = e3.lastMessage) ? void 0 : s3.type) == o.gb.Tips ? o.o.Disabled : p3) && u2.set(t3, p3);
          }), d2.length && (r2.updateConvs = d2), l2.forEach(function(e3, t3) {
            e3.state = o.q.Delete, n2.syncConvReadSeqToMsgSeq(e3, e3.msgSeq), n2.convMap.delete(t3), u2.set(t3, o.o.Deleted);
          }), "mergeSvrConv" + u2.size);
          l2.size && this.dbMgr.addConversationList(Array.from(l2.values()), p2), this.fetchSvrUsers(a2, p2).then(function() {
            n2.dbMgr.addConversationList(Array.from(c2.values()), p2);
            var e3 = Array.from(n2.econf.dbConvMap.values()).filter(function(e4) {
              var t3 = n2.filterValidConv(e4);
              return t3 && n2.createInstance(e4.conversationID, e4.type), t3;
            });
            e3.sort(i.e), r2.count = e3.length, n2.lg.i(m, p2, r2), s2(e3, u2);
          });
        }, y.prototype.mergeGroupMessageStatus = function(e2, t2, r2) {
          if (t2.length) {
            var s2 = +e2.minStatemsgSeq || 0, n2 = +e2.maxStatemsgSeq || 0;
            if (!n2 || s2 < n2) {
              for (var i2 = t2[0].messageSeq, o2 = i2, a2 = 1; a2 < t2.length; a2++) {
                var u2 = t2[a2].messageSeq;
                u2 < i2 && (i2 = u2), o2 < u2 && (o2 = u2);
              }
              this.mergeSvrMsgStateList(r2, s2, i2, o2, e2);
            }
          }
        }, y.prototype.queryReceiptMemberList = function(e2) {
          var t2, r2, s2 = this;
          e2 && e2.length && (r2 = e2[0].conversationID, this.gpMgr.queryReceiptMembers(e2[0], r2, t2 = { count: 100, nextFlag: 0 }, false, false).then(function() {
            for (var n2 = 1; n2 < e2.length; n2++)
              s2.gpMgr.queryReceiptMembers(e2[n2], r2, t2, false, false);
          }));
        }, y.prototype.isDBConvInvalid = function(e2) {
          return !e2 || e2.state == o.q.Delete || !e2.maxOrderKey;
        }, y.prototype.filterValidConv = function(e2, t2) {
          var r2 = e2.state != o.q.Delete && !!e2.maxOrderKey && e2.type != o.r.Room && "number" == typeof e2.type;
          return t2 ? r2 && e2.isPinned : r2;
        }, y.prototype.transform2DBConv = function(e2) {
          var t2, r2 = e2.conv_id, s2 = e2.conv_type, n2 = e2.conv_msg_seq, i2 = e2.send_count_after_read, a2 = e2.sub_read_count, u2 = this.getConvKey(r2, s2), c2 = this.econf.user.userID, l2 = this.econf.dbConvMap.get(u2), d2 = e2.read_seq;
          l2 && l2.readMsgSeq > d2 && (d2 = l2.readMsgSeq), u2 = { conversationID: r2, type: s2, id: u2, ownerID: this.econf.user.userID, msgSeq: n2, readMsgSeq: d2, sendMsgCount: i2, deletedMsgCount: a2, unreadMessageCount: Math.max(n2 - d2 - i2 - a2, 0), orderKey: this.getConversationOrderKey(e2.last_msg_time, e2.last_msg, e2.update_time), state: (null == l2 ? void 0 : l2.state) || 0, isDisabled: false, mutedExpiredTime: 0 }, s2 == o.r.Group && e2.statemsg_seq && (t2 = e2.statemsg_seq, this.econf.user.preVersion ? u2.maxStatemsgSeq = t2 : (d2 = this.econf.mailHBConfig.state_seq_reduce_num, u2.maxStatemsgSeq = -1 == d2 ? 0 : t2 - d2)), e2.is_del ? (u2.state = o.q.Delete, u2.seq = e2.conv_list_seq, u2.mentionedInfoList = []) : this.filterMentionedInfoList(u2, e2.at_info_list, l2 && l2.deletedMsgSeqs ? l2.deletedMsgSeqs.slice() : []), i2 = null == l2 ? void 0 : l2.lastMessage;
          return (d2 = e2.last_msg_del ? void 0 : this.transform2Message(e2.last_msg, r2, s2)) && d2.type == o.gb.Tips && (2 == d2.event || 6 == d2.event && d2.targetUserList.find(function(e3) {
            return e3.userID == c2;
          }) || 5 == d2.event && d2.operatedUser.userID == c2) && (u2.isDisabled = true, u2.state = o.q.Disable, 2 == d2.event ? (d2.localMessageID = s2 + String(d2.event) + r2, d2.messageID = d2.localMessageID, d2.orderKey = (n2 + 1) * o.m.MESSAGE_SEQ_MULTIPLIER, u2.msgSeq = n2 + 1, u2.deletedMsgCount = a2 + 1) : d2.orderKey = d2.messageSeq * o.m.MESSAGE_SEQ_MULTIPLIER, u2.maxOrderKey = l2 ? Math.max(l2.maxOrderKey, d2.orderKey) : d2.orderKey, this.dbMgr.addMessageList(r2, s2, [d2])), d2 && i2 && (d2.orderKey || (d2.orderKey = d2.messageSeq * o.m.MESSAGE_SEQ_MULTIPLIER), (i2.sentStatus !== o.eb.Success && d2.timestamp < i2.timestamp || d2.orderKey < i2.orderKey) && (d2 = i2)), s2 == o.r.Peer && d2 && d2.receiptStatus == o.ab.Processing && l2 && (t2 = d2.messageSeq, e2 = l2.maxSendReceiptMsgSeq || 0, n2 = l2.maxRecvReceiptMsgSeq || 0, (d2.direction == o.Y.Send && t2 <= e2 || d2.direction == o.Y.Receive && t2 <= n2) && (d2.receiptStatus = o.ab.Done)), u2.lastMessage = d2, l2 && d2 && (t2 = d2.messageSeq, a2 = l2.deletedMsgMaxSeq || 0, r2 = l2.deletedMsgSeqs, (l2.deletedMsgSeqs && -1 != r2.indexOf(t2) || t2 && t2 <= a2) && (u2.lastMessage = void 0)), u2;
        }, y.prototype.filterMentionedInfoList = function(e2, t2, r2) {
          Array.from(this.econf.msgExtraMap.values()).forEach(function(t3) {
            t3.revokeInfo && t3.conversationID == e2.conversationID && t3.conversationType == e2.type && r2.push(t3.conversationSeq);
          });
          var s2 = e2.readMsgSeq, n2 = [];
          t2.forEach(function(e3) {
            var t3 = e3.conv_msg_seq;
            s2 < t3 && -1 == r2.indexOf(t3) && n2.push({ type: e3.at_type, fromUserID: e3.user_id, messageID: e3.msg_id, messageSeq: t3 });
          }), e2.mentionedInfoList = n2;
        }, y.prototype.revokeMentionedInfoList = function(e2, t2) {
          var r2 = e2.mentionedInfoList;
          return !!(t2 > e2.readMsgSeq && r2 && r2.length && -1 != (e2 = r2.findIndex(function(e3) {
            return e3.messageSeq == t2;
          }))) && (r2.splice(e2, 1), true);
        }, y.prototype.getConversationOrderKey = function(e2, t2, r2) {
          return t2 && t2.msg_svr_info && t2.msg_svr_info.msg_time ? t2.msg_svr_info.msg_time || e2 || r2 : e2 || r2;
        }, y.prototype.transform2Message = function(e2, t2, r2) {
          var s2;
          if (e2 && e2.msg_info && e2.msg_info.msg_type && e2.msg_svr_info)
            return s2 = this.pb.decodeSvrMsg(this.econf, e2, t2, r2), e2.msg_info.has_receipt && s2.type != o.gb.Revoke && (s2.receiptStatus = o.ab.Processing, (e2 = this.econf.msgExtraMap.get(this.getMsgExtraKey(t2, r2, s2.messageSeq))) && (s2.receiptStatus = e2.receiptStatus), this.dbMgr.checkMessageStatus(s2)), s2.repliedInfo && this.isMsgDel(this.econf.dbConvMap.get(this.getConvKey(t2, r2)), s2.repliedInfo.messageSeq, s2.repliedInfo.sentTime) && (s2.repliedInfo.state = 1), s2;
        }, y.prototype.transform2Command = function(e2, t2, r2) {
          var s2 = r2.sender_user_id;
          return { type: r2.msg_type, message: r2.msg_type == o.gb.Barrage ? Object(i.h)(r2.msg) : r2.msg, localMessageID: r2.msg_id, messageID: r2.msg_id, timestamp: r2.msg_time, extendedData: r2.payload ? Object(i.h)(r2.payload) : void 0, conversationID: e2, conversationType: t2, senderUserID: s2, sentStatus: o.eb.Success, direction: s2 === this.econf.user.userID ? o.Y.Send : o.Y.Receive };
        }, y.prototype.syncConvReadSeqToMsgSeq = function(e2, t2) {
          e2.sendMsgCount = 0, e2.deletedMsgCount = 0, e2.unreadMessageCount = 0, e2.readMsgSeq = t2 || 0, e2.mentionedInfoList = [];
        }, y.prototype.deleteLocalConv = function(e2, t2) {
          return e2.state = o.q.Delete, this.syncConvReadSeqToMsgSeq(e2, e2.msgSeq), this.convMap.delete(e2.id), this.dbMgr.addConversationList([e2], "delConv"), this.onUnreadMessageCount(), this.stgyMgr.modifyConv(e2.conversationID, e2.type, o.o.Deleted), t2 && this.lg.i(m, o.W.DelConv, t2), Promise.resolve({ conversationID: e2.conversationID, conversationType: e2.type });
        }, y.prototype.deleteAllLocalConv = function() {
          var e2 = this, t2 = 0, r2 = [];
          return this.econf.dbConvMap.forEach(function(s2) {
            s2.type != o.r.Room && (s2.state != o.q.Delete && s2.maxOrderKey && t2++, s2.state = o.q.Delete, e2.syncConvReadSeqToMsgSeq(s2, s2.msgSeq), r2.push(s2));
          }), this.convMap.clear(), this.dbMgr.addConversationList(r2, "delAllConv"), this.onUnreadMessageCount(), this.stgyMgr.delAllConv(r2), t2;
        }, y.prototype.handleMsgStateReactionBriefs = function(e2, t2) {
          return d(this, void 0, void 0, function() {
            var r2, s2, n2, i2;
            return p(this, function(o2) {
              switch (o2.label) {
                case 0:
                  return t2 ? e2.messageID ? [3, 2] : [4, this.createInstance(e2.conversationID, e2.conversationType).fetchMsgListFromCache([e2.conversationSeq])] : [2];
                case 1:
                  if (!(r2 = (r2 = o2.sent()).get(e2.conversationSeq)))
                    return [2];
                  e2.messageID = r2.messageID, o2.label = 2;
                case 2:
                  if (s2 = [], null != e2 && e2.reactions)
                    for (i2 in n2 = function(r3) {
                      t2.find(function(e3) {
                        return e3.reaction_key == r3;
                      }) || s2.push({ reactionSeq: e2.reactions[r3].seq + 1, reactionKey: r3, totalCount: 0, userList: [], isSelfIncluded: false });
                    }, e2.reactions)
                      n2(i2);
                  return t2.forEach(function(e3) {
                    s2.push({ reactionSeq: e3.max_reaction_seq, reactionKey: e3.reaction_key, totalCount: e3.total_user_count, userList: e3.user_reaction, isSelfIncluded: !!e3.include_self });
                  }), 0 < s2.length && this.saveMessageReactionExtra(e2, s2), [2];
              }
            });
          });
        }, y.prototype.handleCombineFileRsp = function(e2, t2, r2, s2, n2, a2) {
          var u2, c2 = this, l2 = (t2 = this.pb.decodeMsgCombineInfo(t2, s2)).send_user_map, d2 = [];
          for (u2 in t2.child.forEach(function(e3) {
            e3.cb_id = e3.cb_id.replace(e3.cb_id.substring(8), a2.substring(8)), e3.parent_id = "0" != e3.parent_id && e3.parent_id ? e3.parent_id.replace(e3.parent_id.substring(8), a2.substring(8)) : a2;
            var t3 = { type: e3.msg_type, senderUserID: e3.sender_user_id, timestamp: e3.msg_time, extendedData: e3.extended_data, subType: e3.sub_type, searchedContent: e3.searched_content, isServerMessage: !!e3.is_server, sentStatus: o.eb.Success, rootID: n2, cbID: e3.cb_id, parentID: e3.parent_id };
            t3.type == o.gb.Combine && (t3.combineID = e3.cb_id + "-" + n2 + "-" + r2.conversationID), c2.pb.decodeMsgBody(c2.econf, t3, e3.msg, 1), r2.messageList.find(function(e4) {
              return e4.cbID == t3.cbID && e4.parentID == t3.parentID;
            }) || r2.messageList.push(t3);
          }), this.dbMgr.addMessageList(r2.conversationID, r2.conversationType, [r2]), l2) {
            var p2 = Object(i.h)(l2[u2].sender_user_name), h2 = Object(i.h)(l2[u2].sender_user_avatar), f2 = l2[u2].update_time || 0;
            d2.push({ userID: u2, userName: p2, userAvatarUrl: h2, updateTime: f2 });
          }
          this.setDBUser(d2), e2.messageList = r2.messageList.filter(function(e3) {
            return e3.parentID == a2;
          }).map(function(e3) {
            return c2.pb.handleDBMessage(c2.econf, e3);
          });
        }, y.prototype.transformCombineMessage = function(e2) {
          var t2 = this;
          return new Promise(function(r2) {
            return d(t2, void 0, void 0, function() {
              var t3, s2 = this;
              return p(this, function(n2) {
                switch (n2.label) {
                  case 0:
                    return e2.combineID && e2.messageID && e2.messageSeq ? [4, this.dbMgr.getMessageByIndexID(e2.conversationID, e2.conversationType, e2.combineID, o.s.CombineID)] : [3, 2];
                  case 1:
                    if (t3 = n2.sent())
                      return (e2 = JSON.parse(JSON.stringify(e2))).combineID = "", e2.aesKey = t3.aesKey, e2.fileUID = t3.fileUID, e2.fileName = t3.fileName, e2.messageList = t3.messageList || [], r2(e2), [2];
                    throw Object(i.y)(g, "The combine message not found in DB to forward.");
                  case 2:
                    return [4, e2.messageList.forEach(function(t4, r3) {
                      return d(s2, void 0, void 0, function() {
                        var s3;
                        return p(this, function(n3) {
                          switch (n3.label) {
                            case 0:
                              return t4.type != o.gb.Combine ? [3, 2] : [4, this.dbMgr.getMessageByIndexID(t4.conversationID, t4.conversationType, t4.combineID, o.s.CombineID)];
                            case 1:
                              if (!(s3 = n3.sent()))
                                throw Object(i.y)(g, "There are combine messages in the messageList that are not in the DB.");
                              e2.messageList[r3] = s3, n3.label = 2;
                            case 2:
                              return [2];
                          }
                        });
                      });
                    })];
                  case 3:
                    return n2.sent(), r2(JSON.parse(JSON.stringify(e2))), [2];
                }
              });
            });
          });
        }, y.prototype.fetchSvrUsers = function(e2, t2) {
          var r2 = this;
          if (!e2.length)
            return Promise.resolve();
          for (var s2 = [], n2 = 0; n2 < e2.length; n2 += 100) {
            var a2 = this.cnMgr.send(o.d.user_fetch, { _ev_: t2, user_ids: e2.slice(n2, n2 + 100) }, o.j.SDK);
            s2.push(a2);
          }
          return Promise.all(s2).then(function(e3) {
            e3.forEach(function(e4) {
              (e4 = e4.result) && e4.length && e4.forEach(function(e5) {
                var t3 = e5.user_id, s3 = Object(i.h)(e5.user_name);
                e5 = Object(i.h)(e5.avatar);
                (t3 = (Object(i.x)({ userID: t3, userName: s3, userAvatarUrl: e5 }, r2.econf), r2.econf.syncUserTask.delete(t3), r2.econf.dbConvMap.get(r2.getConvKey(t3, o.r.Peer)))) && (t3.conversationName = s3, t3.conversationAvatarUrl = e5);
              });
            }), r2.dbMgr.addUserList(Array.from(r2.econf.dbUserMap.values()));
          });
        }, y.prototype.deleteAllLocalConvMsg = function(e2) {
          var t2 = [], r2 = (this.econf.dbConvMap.forEach(function(e3) {
            var r3;
            e3.type != o.r.Room && (r3 = e3.msgSeq || 0, e3.sendMsgCount = 0, e3.deletedMsgCount = 0, e3.unreadMessageCount = 0, e3.readMsgSeq = r3, e3.deletedMsgMaxSeq = r3, e3.deletedMsgSeqs = [], e3.mentionedInfoList = [], e3.lastMessage = void 0, t2.push(e3));
          }), this.dbMgr.addConversationList(t2, "delAllConvMsg"), this.dbMgr.clearMessage(this.econf.user.deleteAllMsgTime || 0), this.dbMgr.deleteMessageExtraList(Array.from(this.econf.msgExtraMap.keys())), this.econf.msgExtraMap.clear(), this.onUnreadMessageCount(), { conversationID: "", conversationType: o.r.Unknown, isDeleteConversationAllMessage: true, messageList: [], messageDeleteType: 2 });
          return this.bus.emit(o.u.MsgDeleted, r2), e2 && this.lg.i(m, o.W.DelAllConvMsg, e2), Promise.resolve();
        }, y.prototype.checkGroupConvMuteExpiredTime = function() {
          var e2 = this, t2 = this.st.getRealClientTimestamp(), r2 = [];
          this.econf.dbConvMap.forEach(function(s2) {
            var n2, i2;
            s2.type == o.r.Group && e2.econf.dbGroupMap.has(s2.conversationID) && (n2 = s2.mutedExpiredTime, i2 = e2.econf.dbGroupMap.get(s2.conversationID).selfMutedExpiredTime || 0, n2 != (s2.mutedExpiredTime = i2 = 0 < i2 && i2 <= t2 ? 0 : i2) && r2.push(s2));
          }), this.emitConvUpdate(r2, "checkMuteExpire");
        }, y.prototype.isMsgDel = function(e2, t2, r2) {
          if (!e2)
            return false;
          var s2 = this.econf.user.deleteAllMsgTime || 0, n2 = e2.deletedMsgMaxSeq || 0;
          e2 = e2.deletedMsgSeqs || [];
          return r2 && r2 <= s2 || t2 <= n2 || -1 != e2.indexOf(t2);
        }, y);
        function y(e2, t2, r2, i2, o2) {
          this.lg = s.a.getInstance().lg, this.dr = s.a.getInstance().dr, this.pb = s.a.getInstance().pb, this.st = s.a.getInstance().st, this.selfReceiptSeqs = [], this.msgReceiptChangedMap = /* @__PURE__ */ new Map(), this.mergeMsgReceiptSeqs = /* @__PURE__ */ new Set(), this.mergeMsgReceiptMap = /* @__PURE__ */ new Map(), this.mergeMsgReceiptDBConvMap = /* @__PURE__ */ new Map(), this.mergeMsgReceiptTimer = 0, this.isLogined = false, this.oldTotalUnreadCount = 0, this.svrConvAttrMap = { pin: /* @__PURE__ */ new Set(), mute: /* @__PURE__ */ new Set(), mark: /* @__PURE__ */ new Map() }, this.queryConvsCallbackList = [], this.convMap = /* @__PURE__ */ new Map(), this.econf = e2, this.bus = t2, this.cnMgr = r2, this.dbMgr = i2, this.gpMgr = o2, this.stgyMgr = new n.a(e2, t2), this.registerInnerEvent();
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return a;
        });
        var s = r(2), n = r(1), i = r(0), o = r(69), a = (i.X.Strategy, u.prototype.start = function() {
          var e2, t2 = this;
          this.triggerTimer || (this.convStrategy.start(), !n.p && window && "requestIdleCallback" in window ? (e2 = function(e3) {
            if (e3)
              for (var r2 = t2.convStrategy.popFrontConv(); (0 < e3.timeRemaining() || e3.didTimeout) && r2.length; )
                t2.handleIdleTimeStrategy(1, r2.shift());
          }, this.triggerTimer = setInterval(function() {
            return requestIdleCallback(e2);
          }, this.triggerInterval)) : this.triggerTimer = setInterval(function() {
            for (var e3 = t2.convStrategy.popFrontConv(); e3.length; )
              t2.handleIdleTimeStrategy(0, e3.shift());
          }, this.triggerInterval));
        }, u.prototype.stop = function() {
          this.convStrategy.stop(), this.triggerTimer && clearInterval(this.triggerTimer), this.triggerTimer = 0;
        }, u.prototype.initConv = function(e2) {
          this.convStrategy.initList(e2);
        }, u.prototype.modifyConv = function(e2, t2, r2, s2) {
          switch (r2) {
            case i.o.Added:
            case i.o.Updated:
              this.convStrategy.insertConv(e2, t2, s2);
              break;
            case i.o.Disabled:
            case i.o.Deleted:
              this.convStrategy.removeConv(e2, t2);
          }
        }, u.prototype.delAllConv = function(e2) {
          var t2 = this;
          e2.forEach(function(e3) {
            return t2.convStrategy.removeConv(e3.conversationID, e3.type);
          });
        }, u.prototype.updateConvAct = function(e2, t2, r2) {
          this.convStrategy.increaseConvAct(e2, t2);
        }, u.prototype.handleIdleTimeStrategy = function(e2, t2) {
          t2 && (this.bus.exec(i.u.IIdleFetchConvMsg, t2.convID, t2.convType, t2.todoFlag), this.modifyConv(t2.convID, t2.convType, i.o.Disabled, i.a.FetchAll));
        }, u);
        function u(e2, t2) {
          this.econf = e2, this.lg = s.a.getInstance().lg, this.triggerInterval = 3e4, this.triggerTimer = null, this.bus = t2, this.convStrategy = new o.a();
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return a;
        });
        var s = r(2), n = r(0), i = (n.X.Strategy, o.prototype.actionActivities = function() {
          this.activities++;
        }, o);
        function o(e2, t2, r2) {
          this.inactiveTurn = 0, this.activities = 0, this.todoFlag = 3, this.convID = e2, this.convType = t2, r2 == n.a.FetchAll ? this.todoFlag = 3 : r2 == n.a.FetchMessageList ? this.todoFlag = 1 : r2 == n.a.FetchMessageStatusList && (this.todoFlag = 2);
        }
        u.prototype.start = function() {
          var e2 = this;
          this.sortTask || (this.sortTask = setInterval(function() {
            e2.strategyList.sort(function(e3, t2) {
              return t2.activities - e3.activities;
            }), e2.strategyList = e2.strategyList.filter(function(t2) {
              return t2.inactiveTurn < e2.inactiveRemoveTurn;
            }), e2.strategyList.forEach(function(e3) {
              e3.todoFlag && e3.inactiveTurn++;
            }), e2.strategyList.length;
          }, this.sortInterval));
        }, u.prototype.stop = function() {
          this.sortTask && clearInterval(this.sortTask), this.sortTask = 0, this.strategyList.length = 0, this.groupConvInfoMap.clear(), this.c2cConvInfoMap.clear();
        }, u.prototype.initList = function(e2) {
          var t2 = this;
          e2.length && (e2.sort(function(e3, t3) {
            return e3.conversationOrderKey - t3.conversationOrderKey;
          }), e2.forEach(function(e3) {
            var r2;
            e3.conversationType == n.r.Group && (r2 = new i(e3.conversationID, e3.conversationType, n.a.FetchAll), t2.strategyList.push(r2), t2.groupConvInfoMap.set(e3.conversationID, r2));
          }), this.strategyList.sort(function(e3, t3) {
            return e3.activities - t3.activities;
          }));
        }, u.prototype.insertConv = function(e2, t2, r2) {
          r2 = new i(e2, t2, r2), t2 == n.r.Group ? this.groupConvInfoMap.set(e2, r2) : t2 == n.r.Peer && this.c2cConvInfoMap.set(e2, r2), this.strategyList.some(function(r3) {
            return e2 == r3.convID && t2 == r3.convType;
          }) || this.strategyList.push(r2);
        }, u.prototype.removeConv = function(e2, t2) {
          t2 == n.r.Group ? this.groupConvInfoMap.delete(e2) : t2 == n.r.Peer && this.c2cConvInfoMap.delete(e2);
          var r2 = this.strategyList.findIndex(function(r3) {
            return e2 == r3.convID && t2 == r3.convType;
          });
          -1 != r2 && this.strategyList.splice(r2, 1);
        }, u.prototype.modifyConvTodos = function(e2, t2, r2, s2) {
          switch (s2) {
            case n.a.FetchAll:
              t2 == n.r.Group ? (i2 = this.groupConvInfoMap.get(e2), r2 == n.b.Insert ? i2.todoFlag |= 3 : r2 == n.b.Remove && (i2.todoFlag &= 0)) : t2 == n.r.Peer && (i2 = this.c2cConvInfoMap.get(e2), r2 == n.b.Insert ? i2.todoFlag |= 3 : r2 == n.b.Remove && (i2.todoFlag &= 0));
              break;
            case n.a.FetchMessageList:
              t2 == n.r.Group ? (i2 = this.groupConvInfoMap.get(e2), r2 == n.b.Insert ? i2.todoFlag |= 3 : r2 == n.b.Remove && (i2.todoFlag &= 0)) : t2 == n.r.Peer && ((i2 = this.c2cConvInfoMap.get(e2)).todoFlag |= 1, r2 == n.b.Remove && (i2.todoFlag &= 2));
              break;
            case n.a.FetchMessageStatusList:
              var i2;
              t2 == n.r.Group ? ((i2 = this.groupConvInfoMap.get(e2)).todoFlag |= 2, r2 == n.b.Remove && (i2.todoFlag &= 1)) : t2 == n.r.Peer && ((i2 = this.c2cConvInfoMap.get(e2)).todoFlag |= 2, r2 == n.b.Remove && (i2.todoFlag &= 1));
          }
        }, u.prototype.increaseConvAct = function(e2, t2) {
          var r2 = this.strategyList.find(function(t3) {
            return t3.convID == e2;
          });
          r2 ? r2.inactiveTurn = 0 : (r2 = new i(e2, t2, n.a.FetchAll), this.strategyList.push(r2)), r2.actionActivities(), t2 == n.r.Group && this.groupConvInfoMap.set(e2, r2), t2 == n.r.Peer && this.c2cConvInfoMap.set(e2, r2);
        }, u.prototype.popFrontConv = function() {
          return this.strategyList.slice(0, 2);
        };
        var a = u;
        function u() {
          this.strategyList = [], this.groupConvInfoMap = /* @__PURE__ */ new Map(), this.c2cConvInfoMap = /* @__PURE__ */ new Map(), this.lg = s.a.getInstance().lg, this.sortInterval = 6e4, this.inactiveRemoveTurn = 10, this.sortTask = null;
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return o;
        });
        var s, n, i = r(0), o = (t = r(12), (r = (s = function(e2, t2) {
          return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e3, t3) {
            e3.__proto__ = t3;
          } || function(e3, t3) {
            for (var r2 in t3)
              Object.prototype.hasOwnProperty.call(t3, r2) && (e3[r2] = t3[r2]);
          })(e2, t2);
        }, function(e2, t2) {
          if ("function" != typeof t2 && null !== t2)
            throw new TypeError("Class extends value " + String(t2) + " is not a constructor or null");
          function r2() {
            this.constructor = e2;
          }
          s(e2, t2), e2.prototype = null === t2 ? Object.create(t2) : (r2.prototype = t2.prototype, new r2());
        }))(a, n = t.a), a.prototype.setAssociatedGroup = function() {
        }, a.prototype.getAssociatedReqBody = function() {
          return null;
        }, a.prototype.isFetchMessageWhenLogin = function(e2) {
          return !(e2 === i.v.SDKLogin && !this.econf.mailHBConfig.fetch_group_msg_count);
        }, a.prototype.getFetchMessageReqBody = function(e2, t2, r2, s2) {
          var n2 = this.econf.mailHBConfig.fetch_group_msg_count || 100;
          return t2 <= i.v.SDKLogin && (s2 = Math.min(s2, n2 < 0 ? 100 : n2)), { group_id: this.convID, conv_msg_seq: e2, count: s2, sort_type: r2 };
        }, a);
        function a(e2, t2, r2, s2, o2) {
          return (e2 = n.call(this, e2, t2, r2, s2, o2) || this).dbConv.type = i.r.Group, e2.convType = i.r.Group, e2.convTypeMap = { receiveMessage: i.u.RecvGroupMsg, textMsgCmd: i.d.gp_msg, commandMsgCmd: i.d.gp_cmd, fetchMsgList: i.d.gp_msglist, msgStatusQuery: i.d.gp_query_msg }, e2.rootReplyMsgMap = /* @__PURE__ */ new Map(), e2;
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return o;
        });
        var s, n, i = r(0), o = (t = r(12), (r = (s = function(e2, t2) {
          return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e3, t3) {
            e3.__proto__ = t3;
          } || function(e3, t3) {
            for (var r2 in t3)
              Object.prototype.hasOwnProperty.call(t3, r2) && (e3[r2] = t3[r2]);
          })(e2, t2);
        }, function(e2, t2) {
          if ("function" != typeof t2 && null !== t2)
            throw new TypeError("Class extends value " + String(t2) + " is not a constructor or null");
          function r2() {
            this.constructor = e2;
          }
          s(e2, t2), e2.prototype = null === t2 ? Object.create(t2) : (r2.prototype = t2.prototype, new r2());
        }))(a, n = t.a), a.prototype.setAssociatedGroup = function() {
        }, a.prototype.getAssociatedReqBody = function() {
          return null;
        }, a.prototype.isFetchMessageWhenLogin = function(e2) {
          return !(e2 === i.v.SDKLogin && !this.econf.mailHBConfig.fetch_c2c_msg_count);
        }, a.prototype.getFetchMessageReqBody = function(e2, t2, r2, s2) {
          var n2 = this.econf.mailHBConfig.fetch_c2c_msg_count || 100;
          return t2 <= i.v.SDKLogin && (s2 = Math.min(s2, n2 < 0 ? 100 : n2)), { conv_id: this.convID, conv_type: this.convType, conv_msg_seq: e2, count: s2, mode: r2, login_fetch: t2 === i.v.SDKLogin ? 1 : 0 };
        }, a);
        function a(e2, t2, r2, s2, o2) {
          return (e2 = n.call(this, e2, t2, r2, s2, o2) || this).dbConv.type = i.r.Peer, e2.convType = i.r.Peer, e2.convTypeMap = { receiveMessage: i.u.RecvPeerMsg, textMsgCmd: i.d.c2c_msg, commandMsgCmd: i.d.c2c_cmd, fetchMsgList: i.d.c2c_msglist, msgStatusQuery: i.d.c2c_query_msg }, e2.rootReplyMsgMap = /* @__PURE__ */ new Map(), e2;
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return u;
        });
        t = r(4);
        var s, n, i = r.n(t), o = r(0), a = (t = r(12), r = (s = function(e2, t2) {
          return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e3, t3) {
            e3.__proto__ = t3;
          } || function(e3, t3) {
            for (var r2 in t3)
              Object.prototype.hasOwnProperty.call(t3, r2) && (e3[r2] = t3[r2]);
          })(e2, t2);
        }, function(e2, t2) {
          if ("function" != typeof t2 && null !== t2)
            throw new TypeError("Class extends value " + String(t2) + " is not a constructor or null");
          function r2() {
            this.constructor = e2;
          }
          s(e2, t2), e2.prototype = null === t2 ? Object.create(t2) : (r2.prototype = t2.prototype, new r2());
        }), function() {
          return (a = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }), u = (r(c, n = t.a), c.prototype.setAssociatedGroup = function(e2, t2, r2, s2) {
          this.roomReq.room_session_id = e2, this.roomReq.room_user_session_id = t2, this.roomReq.sub_room_id = r2, this.enabledOfflineMsg = s2, e2 && !this.dbConv.roomSessionID && (this.dbConv.roomSessionID = e2.toString());
        }, c.prototype.getAssociatedReqBody = function() {
          return this.roomReq;
        }, c.prototype.isFetchMessageWhenLogin = function(e2) {
          return !(e2 === o.v.SDKLogin && !this.econf.mailHBConfig.fetch_room_msg_count) && this.enabledOfflineMsg;
        }, c.prototype.getFetchMessageReqBody = function(e2, t2, r2, s2) {
          if (!this.roomReq.room_session_id || 0 == this.roomReq.room_session_id.toNumber() || !this.enabledOfflineMsg)
            return null;
          var n2 = this.econf.mailHBConfig.fetch_room_msg_count || 100;
          return t2 <= o.v.SDKLogin && (s2 = Math.min(s2, n2 < 0 ? 100 : n2)), a(a({}, this.roomReq), { room_id: this.convID, conv_msg_seq: e2, count: s2, sort_type: r2 });
        }, c);
        function c(e2, t2, r2, s2, a2) {
          return (e2 = n.call(this, e2, t2, r2, s2, a2) || this).roomReq = { room_session_id: i.a.fromNumber(0), room_user_session_id: i.a.fromNumber(0), sub_room_id: "" }, e2.enabledOfflineMsg = false, e2.dbConv.type = o.r.Room, e2.convType = o.r.Room, e2.convTypeMap = { receiveMessage: o.u.RecvRoomMsg, textMsgCmd: o.d.rm_msg, commandMsgCmd: o.d.rm_cmd, fetchMsgList: o.d.rm_msglist, msgStatusQuery: o.d.rm_query_msg }, e2;
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return u;
        }), r(21);
        var s = r(2), n = r(0), i = function() {
          return (i = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, o = function(e2, t2) {
          var r2 = "function" == typeof Symbol && e2[Symbol.iterator];
          if (!r2)
            return e2;
          var s2, n2, i2 = r2.call(e2), o2 = [];
          try {
            for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
              o2.push(s2.value);
          } catch (e3) {
            n2 = { error: e3 };
          } finally {
            try {
              s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
            } finally {
              if (n2)
                throw n2.error;
            }
          }
          return o2;
        }, a = function(e2, t2, r2) {
          if (r2 || 2 === arguments.length)
            for (var s2, n2 = 0, i2 = t2.length; n2 < i2; n2++)
              !s2 && n2 in t2 || ((s2 = s2 || Array.prototype.slice.call(t2, 0, n2))[n2] = t2[n2]);
          return e2.concat(s2 || Array.prototype.slice.call(t2));
        }, u = (c.prototype.setContext = function(e2) {
          this.context = e2;
        }, c.prototype.on = function(e2, t2) {
          this.listenerMap.set(e2, t2);
        }, c.prototype.off = function(e2) {
          e2 ? this.listenerMap.delete(e2) : (this.listenerMap.clear(), this.innerEvents[n.u.ILogined].length = 0, this.innerEvents[n.u.ILogout].length = 0, this.innerEvents[n.u.IJoinedGroup].length = 0, this.innerEvents[n.u.ILeftGroup].length = 0, this.innerEvents[n.u.ISyncGroups].length = 0, this.innerEvents[n.u.ISyncGroupInfo].length = 0, this.innerEvents[n.u.IUnreadMsgCount].length = 0, this.innerEvents[n.u.IConnectedRoom].length = 0, this.innerEvents[n.u.IConnected].length = 0, this.innerEvents[n.u.IDisConnected].length = 0, this.innerEvents[n.u.INetworkChange].length = 0, this.innerEvents[n.u.IIdleFetchConvMsg].length = 0, this.innerEvents[n.u.ITriggerHB].length = 0, this.innerEvents[n.u.IQPSSend].length = 0, this.context = null);
        }, c.prototype.emit = function(e2, t2, r2) {
          var i2 = this, o2 = (r2 = r2 ? "EV." + e2 + ":" + r2 : "EV." + e2, this.listenerMap.get(e2));
          "function" == typeof o2 ? setTimeout(function() {
            try {
              s.a.getInstance().lg.i(n.X.Manager, r2, i2.createEventLog(e2, t2)), o2(i2.context, t2);
            } catch (e3) {
              throw e3;
            }
          }, 0) : -1 != this.logEvents.indexOf(e2) && s.a.getInstance().lg.i(n.X.Manager, r2, this.createEventLog(e2, t2));
        }, c.prototype.add = function(e2, t2) {
          this.innerEvents[e2].push(t2);
        }, c.prototype.remove = function(e2, t2) {
          var r2;
          t2 ? -1 !== (r2 = this.innerEvents[e2].findIndex(function(e3) {
            return e3 === t2;
          })) && this.innerEvents[e2].splice(r2, 1) : this.innerEvents[e2].length = 0;
        }, c.prototype.exec = function(e2) {
          for (var t2, r2 = [], i2 = 1; i2 < arguments.length; i2++)
            r2[i2 - 1] = arguments[i2];
          -1 == this.unlogEvents.indexOf(e2) && (t2 = r2.length <= 1 ? r2[0] : r2, s.a.getInstance().lg.i(n.X.Manager, "IE." + e2, t2)), this.innerEvents[e2].forEach(function(e3) {
            return e3.apply(void 0, a([], o(r2), false));
          });
        }, c.prototype.createEventLog = function(e2, t2) {
          return e2 == n.u.ConvChanged ? t2.infoList.reduce(function(e3, t3) {
            return (t3 = t3.conversation) && t3.unreadMessageCount && (e3.unread[t3.conversationID] = t3.unreadMessageCount), e3;
          }, i({ unread: {} }, t2)) : t2;
        }, c);
        function c() {
          var e2;
          this.listenerMap = /* @__PURE__ */ new Map(), this.logEvents = [n.u.ConnState, n.u.RoomState, n.u.GroupState, n.u.ConvChanged, n.u.ConvUnreadMsgCount], this.unlogEvents = [n.u.ITriggerHB, n.u.IConnectedRoom, n.u.IQPSSend, n.u.IIdleFetchConvMsg], this.innerEvents = ((e2 = {})[n.u.ILogined] = [], e2[n.u.ILogout] = [], e2[n.u.IJoinedGroup] = [], e2[n.u.ILeftGroup] = [], e2[n.u.ISyncGroups] = [], e2[n.u.ISyncGroupInfo] = [], e2[n.u.IUnreadMsgCount] = [], e2[n.u.IConnectedRoom] = [], e2[n.u.IConnected] = [], e2[n.u.IDisConnected] = [], e2[n.u.INetworkChange] = [], e2[n.u.IIdleFetchConvMsg] = [], e2[n.u.ITriggerHB] = [], e2[n.u.IQPSSend] = [], e2);
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return d;
        });
        var s = r(2), n = r(1), i = r(0), o = function() {
          return (o = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, a = function(e2, t2) {
          var r2 = "function" == typeof Symbol && e2[Symbol.iterator];
          if (!r2)
            return e2;
          var s2, n2, i2 = r2.call(e2), o2 = [];
          try {
            for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
              o2.push(s2.value);
          } catch (e3) {
            n2 = { error: e3 };
          } finally {
            try {
              s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
            } finally {
              if (n2)
                throw n2.error;
            }
          }
          return o2;
        }, u = function(e2, t2, r2) {
          if (r2 || 2 === arguments.length)
            for (var s2, n2 = 0, i2 = t2.length; n2 < i2; n2++)
              !s2 && n2 in t2 || ((s2 = s2 || Array.prototype.slice.call(t2, 0, n2))[n2] = t2[n2]);
          return e2.concat(s2 || Array.prototype.slice.call(t2));
        }, c = i.X.Friend, l = 6000007, d = (p.prototype.destroy = function() {
          this.cnMgr = null, this.bus = null, this.lg = null;
        }, p.prototype.addBlacklist = function(e2) {
          var t2 = this, r2 = { time: new Date(), userIDs: e2 };
          return this.cnMgr.send(i.d.bl_add, { user_ids: e2 }).then(function(e3) {
            if (e3.code)
              return r2.error = Object(n.y)(6000007, e3.message, e3.code), t2.lg.w(c, i.W.AddBlacklist, r2), Promise.reject(r2.error);
            t2.lg.i(c, i.W.AddBlacklist, r2);
            var s2 = [];
            return e3.black_list.forEach(function(r3) {
              var i2, o2 = { userID: r3.user_base_info.user_id, userName: Object(n.h)(r3.user_base_info.user_name), userAvatarUrl: Object(n.h)(r3.user_base_info.avatar) };
              Object(n.x)(o2, t2.econf), t2.blacklist.get(o2.userID) || e3.err_list.some(function(e4) {
                return e4.user_id == o2.userID;
              }) || (i2 = { userID: o2.userID, createTime: r3.create_time }, t2.blacklist.set(o2.userID, i2), s2.push(i2), t2.updateBlacklistSeq(r3.black_list_seq));
            }), t2.dbMgr.addBlacklist(s2), t2.bus.emit(i.u.BlacklistUpd, { action: i.c.Added, userList: s2.map(function(e4) {
              return Object(n.u)(e4.userID, t2.econf);
            }) }), { errorUserList: e3.err_list.map(function(e4) {
              return { userID: e4.user_id, reason: e4.sub_code };
            }) };
          });
        }, p.prototype.removeBlacklist = function(e2) {
          var t2 = this, r2 = { time: new Date(), userIDs: e2 };
          return this.cnMgr.send(i.d.bl_del, { user_ids: e2 }).then(function(e3) {
            if (e3.code)
              return r2.error = Object(n.y)(6000007, e3.message, e3.code), t2.lg.w(c, i.W.RemoveBlacklist, r2), Promise.reject(r2.error);
            t2.lg.i(c, i.W.RemoveBlacklist, r2);
            var s2 = [];
            return e3.black_list.forEach(function(r3) {
              var n2 = t2.blacklist.get(r3.user_id);
              n2 && !e3.err_list.some(function(e4) {
                return e4.user_id == n2.userID;
              }) && (s2.push(n2.userID), t2.blacklist.delete(n2.userID), t2.updateBlacklistSeq(r3.apply_list_seq));
            }), t2.dbMgr.deleteBlacklist(s2), t2.bus.emit(i.u.BlacklistUpd, { action: i.c.Removed, userList: s2.map(function(e4) {
              return Object(n.u)(e4, t2.econf);
            }) }), { errorUserList: e3.err_list.map(function(e4) {
              return { userID: e4.user_id, reason: e4.sub_code };
            }) };
          });
        }, p.prototype.checkBlacklist = function(e2) {
          return Promise.resolve({ isUserInBlacklist: this.blacklist.has(e2) });
        }, p.prototype.queryBlacklist = function(e2) {
          var t2, r2, s2 = this, i2 = Array.from(this.blacklist.values()).sort(function(e3, t3) {
            return t3.createTime - e3.createTime;
          }), o2 = { config: e2, total: i2.length, count: 0 }, a2 = e2.count;
          return e2 = (e2 = e2.nextFlag || 0) || 0, i2.length > a2 ? (t2 = e2 * a2, e2 = (r2 = (e2 + 1) * a2) >= i2.length ? 0 : e2 + 1, i2 = i2.slice(t2, r2), o2.start = t2, o2.end = r2) : (e2 * a2 > i2.length && (i2 = []), e2 = 0), 0 == a2 && (e2 = 0), o2.count = i2.length, Promise.resolve({ blacklist: i2.map(function(e3) {
            return Object(n.u)(e3.userID, s2.econf);
          }), nextFlag: e2 });
        }, p.prototype.onPushBlacklistAdded = function(e2) {
          var t2 = this, r2 = [];
          e2.black_list.forEach(function(e3) {
            var s2, i2 = { userID: e3.user_base_info.user_id, userName: Object(n.h)(e3.user_base_info.user_name), userAvatarUrl: Object(n.h)(e3.user_base_info.avatar) };
            Object(n.x)(i2, t2.econf), t2.blacklist.has(i2.userID) || (s2 = { userID: i2.userID, createTime: e3.create_time }, t2.blacklist.set(i2.userID, s2), r2.push(i2.userID), t2.updateBlacklistSeq(e3.black_list_seq));
          }), this.dbMgr.addBlacklist(Array.from(this.blacklist.values())), this.bus.emit(i.u.BlacklistUpd, { action: i.c.Added, userList: r2.map(function(e3) {
            return Object(n.u)(e3, t2.econf);
          }) });
        }, p.prototype.onPushBlacklistDeleted = function(e2) {
          var t2 = this, r2 = [];
          e2.black_list.forEach(function(e3) {
            var s2 = e3.user_id;
            t2.blacklist.get(s2) && (r2.push(s2), t2.blacklist.delete(s2), t2.updateBlacklistSeq(e3.apply_list_seq));
          }), this.dbMgr.deleteBlacklist(r2), this.bus.emit(i.u.BlacklistUpd, { action: i.c.Removed, userList: r2.map(function(e3) {
            return Object(n.u)(e3, t2.econf);
          }) });
        }, p.prototype.addFriend = function(e2, t2) {
          var r2, s2 = this, o2 = { time: new Date(), userID: e2, config: t2 }, a2 = [];
          for (r2 in t2.friendAttributes)
            a2.push({ key: r2, value: t2.friendAttributes[r2] });
          return e2 = { user_base_info: { user_id: e2 }, remark: (null == t2 ? void 0 : t2.friendAlias) || "", attributes: a2, wording: (null == t2 ? void 0 : t2.wording) || "" }, this.cnMgr.send(i.d.fd_add, { friend_infos: [e2] }).then(function(e3) {
            if (e3.code || e3.err_list.length)
              return t3 = e3.code || e3.err_list[0].sub_code, o2.error = Object(n.y)(l, e3.message, t3), s2.lg.w(c, i.W.AddFriend, o2), Promise.reject(o2.error);
            s2.updateFriendListSeq(null == (t3 = e3.friend_infos[0]) ? void 0 : t3.friend_list_seq), null != (t3 = e3.friend_infos[0]) && t3.wording && e3.apply_status_change_list[0] && (e3.apply_status_change_list[0].wording = e3.friend_infos[0].wording), s2.handleApplicationChanged(e3.apply_status_change_list, true);
            var t3 = s2.getFriendFromServer(e3.friend_infos[0]);
            return s2.addFriendCallback([t3]), { friendInfo: t3 };
          });
        }, p.prototype.sendFriendApply = function(e2, t2) {
          var r2, s2 = this, o2 = { time: new Date(), userID: e2, config: t2 }, a2 = [];
          for (r2 in t2.friendAttributes)
            a2.push({ key: r2, value: t2.friendAttributes[r2] });
          return e2 = { friend_infos: [{ user_base_info: { user_id: e2 }, remark: t2.friendAlias, attributes: a2, wording: t2.wording }], offline_info: Object(n.g)(t2.pushConfig) }, this.cnMgr.send(i.d.fd_apply, e2).then(function(e3) {
            var t3, r3;
            return e3.code || e3.err_list.length ? (r3 = e3.code || e3.err_list[0].sub_code, o2.error = Object(n.y)(l, e3.message, r3), s2.lg.w(c, i.W.SendFriendApp, o2), Promise.reject(o2.error)) : (e3.apply_infos[0] ? t3 = s2.getFriendAppFromServer(e3.apply_infos[0]) : (r3 = s2.getFriendFromServer(e3.friend_infos[0]), s2.addFriendCallback([r3]), t3 = { applyUser: { userID: r3.userID, userName: r3.userName, userAvatarUrl: r3.userAvatarUrl }, wording: r3.wording, createTime: r3.createTime, updateTime: r3.createTime, type: i.y.Sent, state: i.x.Waiting }, r3 = e3.friend_infos[0].friend_list_seq, s2.updateFriendListSeq(r3)), e3.apply_infos.length && (r3 = s2.dbFriendAppMap.get(t3.applyUser.userID), s2.handleApplicationChanged(e3.apply_infos, !!r3)), { applicationInfo: t3 });
          });
        }, p.prototype.deleteFriends = function(e2, t2) {
          var r2 = this, s2 = { user_ids: e2, delete_type: (null == t2 ? void 0 : t2.type) || 0 }, o2 = { time: new Date(), userIDs: e2, config: t2 };
          return this.cnMgr.send(i.d.fd_del, s2).then(function(t3) {
            if (t3.code)
              return a2 = t3.code || t3.apply_status_change_list[0].status, o2.error = Object(n.y)(l, t3.message, a2), r2.lg.w(c, i.W.DelFriends, o2), Promise.reject(o2.error);
            var s3 = t3.apply_status_change_list.map(function(e3) {
              return { userID: e3.user_id, reason: e3.status };
            }), a2 = e2.filter(function(e3) {
              return !s3.find(function(t4) {
                return t4.userID == e3;
              });
            }), u2 = [];
            return a2.forEach(function(e3) {
              var t4 = r2.dbFriendMap.get(e3);
              t4 && u2.push(t4), r2.dbFriendMap.delete(e3);
            }), r2.dbMgr.deleteFriendList(a2), r2.emitConvChanged(u2, true), r2.bus.emit(i.u.FriendList, { action: i.z.Deleted, friendList: u2 }), { errorUserList: s3 };
          });
        }, p.prototype.checkFriendsRelation = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), userIDs: e2, config: t2 };
          e2 = { user_ids: e2, delete_type: (null == t2 ? void 0 : t2.type) || i.A.Both };
          return this.cnMgr.send(i.d.fd_check, e2).then(function(e3) {
            return e3.code ? (s2.error = Object(n.y)(l, e3.message, e3.code), r2.lg.w(c, i.W.CheckFriends, s2), Promise.reject(s2.error)) : { relationInfos: e3.successes.map(function(e4) {
              return { userID: e4.user_id, type: r2.transFriendRelation(e4.sub_code) };
            }), errorUserList: (null == (e3 = e3.fails) ? void 0 : e3.map(function(e4) {
              return { userID: e4.user_id, reason: e4.sub_code };
            })) || [] };
          });
        }, p.prototype.updateFriendAlias = function(e2, t2) {
          var r2 = this;
          if (!this.dbFriendMap.has(t2))
            return Promise.reject(Object(n.y)(6000001, "Friend: " + t2 + " not found."));
          var s2 = { time: new Date(), userID: t2, alias: e2 };
          return this.cnMgr.send(i.d.fd_mdf_remark, { key: t2, value: e2 || "" }).then(function(a2) {
            var u2, d2 = r2.dbFriendMap.get(t2);
            return a2.code || !d2 ? (u2 = a2.code ? l : 6000812, s2.error = Object(n.y)(u2, a2.message, a2.code), r2.lg.w(c, i.W.UpdateFriendAlias, s2), Promise.reject(s2.error)) : (r2.updateFriendListSeq(a2.conv_list_seq), d2.friendAlias = e2, r2.bus.emit(i.u.FriendInfo, { friendList: [o({}, d2)] }), r2.emitConvChanged([d2]), r2.dbMgr.addFriendList([d2]), { friendInfo: d2 });
          });
        }, p.prototype.updateFriendAttr = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), userID: t2, attributes: e2 };
          if (!this.dbFriendMap.has(t2))
            return Promise.reject(Object(n.y)(6000001));
          var a2 = [], u2 = this.dbFriendMap.get(t2);
          if (u2)
            for (var d2 in e2)
              u2.friendAttributes[d2] !== e2[d2] && a2.push({ key: d2, value: e2[d2] });
          return this.cnMgr.send(i.d.fd_mdf_attr, { user_id: t2, attributes: a2, action: 0 }).then(function(t3) {
            var a3;
            return t3.code || !u2 ? (a3 = t3.code ? l : 6000812, s2.error = Object(n.y)(a3, t3.message, t3.code), r2.lg.w(c, i.W.UpdateFriendAlias, s2), Promise.reject(s2.error)) : (r2.updateFriendListSeq(t3.friend_list_seq), u2.friendAttributes = Object.assign(u2.friendAttributes, e2), r2.bus.emit(i.u.FriendInfo, { friendList: [o({}, u2)] }), r2.dbMgr.addFriendList([u2]), { friendInfo: u2 });
          });
        }, p.prototype.acceptFriendApply = function(e2, t2) {
          var r2 = this, s2 = { time: new Date(), userID: e2, config: t2 };
          if (this.checkFriendAppDB(e2, s2, i.W.AcceptFriendApp))
            return Promise.reject(s2.error);
          var a2 = [];
          if (null != t2 && t2.friendAttributes)
            for (var u2 in t2.friendAttributes)
              a2.push({ key: u2, value: t2.friendAttributes[u2] });
          var d2 = { user_id: e2, remark: (null == t2 ? void 0 : t2.friendAlias) || "", attributes: a2, offline_info: Object(n.g)(null == t2 ? void 0 : t2.pushConfig) };
          return this.cnMgr.send(i.d.fd_accept, d2).then(function(t3) {
            if (t3.code)
              return s2.error = Object(n.y)(l, t3.message, t3.code), r2.lg.w(c, i.W.AcceptFriendApp, s2), Promise.reject(s2.error);
            r2.updateFriendAppListSeq(t3.apply_list_seq), r2.updateFriendListSeq(t3.friend.friend_list_seq);
            t3 = r2.getFriendFromServer(t3.friend);
            var a3 = (r2.addFriendCallback([t3]), r2.dbFriendAppMap.get(e2));
            return a3 && (a3.state = i.x.Accepted, r2.dbMgr.addFriendApplicationList([a3]), r2.bus.emit(i.u.FriendAppUpd, { applicationList: [o({}, a3)] })), { friendInfo: t3 };
          });
        }, p.prototype.rejectFriendApply = function(e2, t2) {
          var r2 = this, s2 = { call_id: e2, offline_info: Object(n.g)(null == t2 ? void 0 : t2.pushConfig) }, a2 = { time: new Date(), userID: e2, config: t2 };
          return this.checkFriendAppDB(e2, a2, i.W.RejectFriendApp) ? Promise.reject(a2.error) : this.cnMgr.send(i.d.fd_refuse, s2).then(function(t3) {
            if (t3.code)
              return a2.error = Object(n.y)(l, t3.message, t3.code), r2.lg.w(c, i.W.RejectFriendApp, a2), Promise.reject(a2.error);
            r2.updateFriendAppListSeq(t3.conv_list_seq);
            var s3 = r2.dbFriendAppMap.get(e2);
            s3 && (s3.state = i.x.Rejected, s3.updateTime = t3.conv_msg_seq, r2.dbMgr.addFriendApplicationList([s3]), t3 = o({}, s3), r2.bus.emit(i.u.FriendAppUpd, { applicationList: [t3] })), t3 = { userID: e2, userName: "", userAvatarUrl: "" };
            return { userInfo: (null == s3 ? void 0 : s3.applyUser) || t3 };
          });
        }, p.prototype.queryFriendsInfo = function(e2) {
          var t2 = this, r2 = [], s2 = [];
          return e2.forEach(function(e3) {
            var n2 = t2.dbFriendMap.get(e3);
            n2 ? (t2.updateUserInfo(n2), r2.push(n2)) : s2.push({ userID: e3, reason: 6000812 });
          }), Promise.resolve({ friendInfos: r2, errorUserList: s2 });
        }, p.prototype.queryFriendList = function(e2) {
          var t2, r2, s2 = Array.from(this.dbFriendMap.values()).sort(function(e3, t3) {
            return t3.createTime - e3.createTime;
          }), n2 = { config: e2, total: s2.length, count: 0 }, i2 = e2.count;
          return e2 = (e2 = e2.nextFlag || 0) || 0, s2.length > i2 ? (t2 = e2 * i2, e2 = (r2 = (e2 + 1) * i2) >= s2.length ? 0 : e2 + 1, s2 = s2.slice(t2, r2), n2.start = t2, n2.end = r2) : (e2 * i2 > s2.length && (s2 = []), e2 = 0), 0 == i2 && (e2 = 0), n2.count = s2.length, Promise.resolve({ friendList: s2, nextFlag: e2 });
        }, p.prototype.queryFriendApplyList = function(e2) {
          var t2, r2, s2 = this, n2 = Array.from(this.dbFriendAppMap.values()).sort(function(e3, t3) {
            return t3.createTime - e3.createTime;
          }), i2 = { config: e2, total: n2.length, count: 0 }, o2 = e2.count;
          return e2 = (e2 = e2.nextFlag || 0) || 0, n2.length > o2 ? (t2 = e2 * o2, e2 = (r2 = (e2 + 1) * o2) >= n2.length ? 0 : e2 + 1, n2 = n2.slice(t2, r2), i2.start = t2, i2.end = r2) : (e2 * o2 > n2.length && (n2 = []), e2 = 0), 0 == o2 && (e2 = 0), i2.count = n2.length, n2.forEach(function(e3) {
            return s2.updateUserInfo(e3.applyUser);
          }), Promise.resolve({ applicationList: n2, nextFlag: e2 });
        }, p.prototype.searchFriends = function(e2) {
          var t2 = this;
          return new Promise(function(r2) {
            var s2 = e2.keywords.filter(function(e3) {
              return "string" == typeof e3 && e3 && e3.trim().length;
            }).map(function(e3) {
              return e3.toLocaleLowerCase();
            });
            if (!s2.length)
              return r2({ nextFlag: 0, friendInfoList: [] });
            var o2 = [], a2 = e2.isAlsoMatchFriendAlias, u2 = (t2.dbFriendMap.forEach(function(e3) {
              var t3 = e3.userName, r3 = e3.friendAlias;
              (s2.every(function(e4) {
                return Object(n.d)(t3, e4);
              }) || a2 && s2.every(function(e4) {
                return Object(n.d)(r3, e4);
              })) && o2.push(e3);
            }), o2.sort(function(e3, t3) {
              return e3.createTime - t3.createTime;
            }), o2.length), l2 = e2.nextFlag, d2 = (null == (d2 = o2[o2.length - 1]) ? void 0 : d2.createTime) || 0, p2 = 0, h = (d2 = (0 < l2 && l2 < d2 ? p2 = o2.findIndex(function(e3) {
              return e3.createTime == l2;
            }) : d2 <= l2 && d2 && (p2 = o2.length - 1), p2 + Math.min(i.m.MAX_QUERY_PAGE_COUNT, e2.count)), (null == (h = o2[d2]) ? void 0 : h.createTime) || 0);
            o2 = o2.slice(p2, d2), p2 = { dbCount: t2.dbFriendMap.size, start: p2, end: d2, total: u2, count: o2.length, nextFlag: h, config: e2 };
            t2.lg.i(c, i.W.SearchFriend, p2), r2({ nextFlag: h, friendInfoList: o2 });
          });
        }, p.prototype.onPushFriendAdded = function(e2, t2) {
          var r2 = this, s2 = [], n2 = [], i2 = ((t2 = void 0 !== t2 && t2) ? (s2 = e2.friend_infos, n2 = e2.apply_status_changes_list) : (s2.push(e2.friend_info), e2.apply_status_change && (e2.friend_info.wording && (e2.apply_status_change.wording = e2.friend_info.wording), n2.push(e2.apply_status_change))), this.handleApplicationChanged(n2, true), []);
          s2.forEach(function(e3) {
            r2.updateFriendListSeq(e3.friend_list_seq) && i2.push(r2.getFriendFromServer(e3));
          }), this.addFriendCallback(i2);
        }, p.prototype.onPushFriendDeleted = function(e2, t2) {
          var r2 = this, s2 = [], n2 = ((t2 = void 0 !== t2 && t2) ? e2.friend_infos.forEach(function(e3) {
            s2.push(e3.user_base_info.user_id);
          }) : s2.push(e2.user_id), []);
          s2.forEach(function(e3) {
            var t3 = r2.dbFriendMap.get(e3);
            t3 && n2.push(t3), r2.dbFriendMap.delete(e3);
          }), this.dbMgr.deleteFriendList(s2), this.emitConvChanged(n2, true), n2.length && this.bus.emit(i.u.FriendList, { action: i.z.Deleted, friendList: n2 });
        }, p.prototype.onPushFriendAllDeleted = function(e2) {
          var t2 = this, r2 = e2.conv_list_seq, s2 = e2.conv_msg_seq, n2 = [];
          this.dbFriendMap.forEach(function(e3) {
            var i2 = e3.seq;
            r2 < i2 && i2 < s2 && (n2.push(e3), t2.dbFriendMap.delete(e3.userID));
          }), this.emitConvChanged(n2, true), this.dbMgr.deleteFriendList(n2.map(function(e3) {
            return e3.userID;
          }));
        }, p.prototype.onPushFriendRemarkUpdated = function(e2) {
          var t2;
          !this.updateFriendListSeq(e2.seq) || (t2 = this.dbFriendMap.get(e2.key)) && (t2.friendAlias = e2.value, this.dbMgr.addFriendList([t2]), this.bus.emit(i.u.FriendInfo, { friendList: [t2] }), this.emitConvChanged([t2]));
        }, p.prototype.onPushFriendAttrMdf = function(e2) {
          var t2, r2;
          !this.updateFriendListSeq(e2.friend_list_seq) || (t2 = this.dbFriendMap.get(e2.user_id)) && (r2 = t2.friendAttributes, e2.attributes.forEach(function(t3) {
            0 == e2.action ? r2[t3.key] = t3.value || "" : 1 == e2.action && delete r2[t3.key];
          }), this.dbMgr.addFriendList([t2]), this.bus.emit(i.u.FriendInfo, { friendList: [t2] }));
        }, p.prototype.onPushFriendApply = function(e2, t2) {
          var r2 = this, s2 = [];
          if (t2 = void 0 !== t2 && t2) {
            if (s2 = e2.apply_infos, e2.friends.length)
              return t2 = e2.friends.map(function(e3) {
                return r2.getFriendFromServer(e3);
              }), void this.addFriendCallback(t2);
          } else
            s2.push(e2.apply_info);
          this.handleApplicationChanged(s2);
        }, p.prototype.onPushFriendAccept = function(e2) {
          this.updateFriendListSeq(e2.friend_list_seq), this.updateFriendAppListSeq(e2.apply_list_seq), e2 = this.getFriendFromServer(e2.friend_info), this.addFriendCallback([e2]), (e2 = this.dbFriendAppMap.get(e2.userID)) && (e2.state = i.x.Accepted, this.dbMgr.addFriendApplicationList([e2]), this.bus.emit(i.u.FriendAppUpd, { applicationList: [e2] }));
        }, p.prototype.onPushFriendReject = function(e2) {
          var t2;
          !this.updateFriendAppListSeq(e2.apply_list_seq) || (t2 = this.dbFriendAppMap.get(e2.user_id)) && (t2.state = i.x.Rejected, t2.updateTime = e2.update_time, this.dbMgr.addFriendApplicationList([t2]), this.bus.emit(i.u.FriendAppUpd, { applicationList: [t2] }));
        }, p.prototype.registerInnerEvent = function() {
          this.bus.add(i.u.ILogined, this.onLogined.bind(this)), this.bus.add(i.u.ILogout, this.onLogout.bind(this)), this.bus.add(i.u.IConnected, this.onConnected.bind(this)), this.bus.add(i.u.ITriggerHB, this.onTriggerHB.bind(this));
        }, p.prototype.onLogined = function() {
          var e2 = this, t2 = this.st.getRealClientTimestamp();
          this.dbMgr.getBlacklist().then(function(t3) {
            t3.forEach(function(t4) {
              return e2.blacklist.set(t4.userID, t4);
            });
          }), this.dbMgr.getFriendList().then(function(t3) {
            t3.forEach(function(t4) {
              e2.updateUserInfo(t4), e2.dbFriendMap.set(t4.userID, t4);
            });
          }), this.dbMgr.getFriendApplicationList().then(function(r2) {
            var s2 = e2.econf.mailHBConfig.apply_expired_duration;
            r2.forEach(function(r3) {
              t2 - r3.createTime > s2 && (r3.state = i.x.Expired), e2.updateUserInfo(r3.applyUser), e2.dbFriendAppMap.set(r3.applyUser.userID, r3);
            });
          }), this.mergeSvrBlacklist(i.v.SDKLogin), this.mergeSvrFriendList(i.v.SDKLogin), this.mergeSvrFriendAppList(i.v.SDKLogin);
        }, p.prototype.onLogout = function() {
          this.blacklist.clear(), this.dbFriendMap.clear(), this.dbFriendAppMap.clear();
        }, p.prototype.onConnected = function() {
          this.mergeSvrBlacklist(i.v.SDKHb, "onConnected"), this.mergeSvrFriendList(i.v.SDKHb, "onConnected"), this.mergeSvrFriendAppList(i.v.SDKHb, "onConnected");
        }, p.prototype.onTriggerHB = function() {
          this.mergeSvrBlacklist(i.v.SDKHb, "hb"), this.mergeSvrFriendList(i.v.SDKHb, "hb"), this.mergeSvrFriendAppList(i.v.SDKHb, "hb");
        }, p.prototype.emitConvChanged = function(e2, t2) {
          var r2 = this, s2 = (void 0 === t2 && (t2 = false), []), o2 = [];
          e2.forEach(function(e3) {
            var a2 = r2.econf.user.userID + i.r.Peer + e3.userID;
            (a2 = r2.econf.dbConvMap.get(a2)) && a2.state != i.q.Delete && (a2.conversationAlias !== e3.friendAlias || t2) && (a2.conversationAlias = t2 ? "" : e3.friendAlias, o2.push(a2), e3 = { event: i.o.Updated, conversation: Object(n.s)(i.m.convKeys, a2) }, s2.push(e3));
          }), this.dbMgr.addConversationList(o2, "updatAlias"), s2.length && this.bus.emit(i.u.ConvChanged, { infoList: s2 });
        }, p.prototype.addFriendCallback = function(e2) {
          e2.length && (this.bus.emit(i.u.FriendList, { action: i.z.Added, friendList: e2 }), this.dbMgr.addFriendList(e2), this.emitConvChanged(e2));
        }, p.prototype.handleApplicationChanged = function(e2, t2) {
          var r2 = this, s2 = (void 0 === t2 && (t2 = false), []), n2 = [];
          e2.forEach(function(e3) {
            var o2 = r2.getFriendAppFromServer(e3), a2 = r2.dbFriendAppMap.get(e3.user_id);
            r2.updateFriendAppListSeq(e3.apply_list_seq), a2 ? !t2 && o2.type === a2.type && o2.state === a2.state && o2.updateTime === a2.updateTime || (Object.assign(a2, o2), r2.dbFriendAppMap.set(a2.applyUser.userID, a2), n2.push(o2)) : o2.state == i.x.Waiting && (s2.push(o2), r2.dbFriendAppMap.set(o2.applyUser.userID, o2));
          }), this.dbMgr.addFriendApplicationList(u(u([], a(s2), false), a(n2), false)), s2.length && this.bus.emit(i.u.FriendAppList, { applicationList: s2, action: i.w.Added }), n2.length && this.bus.emit(i.u.FriendAppUpd, { applicationList: n2 });
        }, p.prototype.fetchSvrFriend = function(e2, t2, r2, s2, n2) {
          return r2 = { cur_list_seq: e2, count: 100, full_pull: 0, degree: 0, how: r2 }, (n2 = void 0 !== n2 && n2) ? r2.full_pull = t2 : (r2.full_pull = s2, r2.degree = t2), s2 = n2 ? i.d.fd_apply_list : i.d.fd_list, this.cnMgr.send(s2, r2, i.j.SDK).then(function(t3) {
            if (t3.code)
              return { cur: 0, list: [] };
            var r3 = t3.cur_list_seq, s3 = t3.max_list_seq, i2 = t3.full_list, o2 = t3.fetch_end;
            return { nextFlag: o2 || s3 <= r3 || r3 <= e2 || s3 <= e2 ? 0 : r3, cur: r3, max: s3, fetch_end: o2, full_list: i2, count: t3.friend_count, list: n2 ? t3.apply_list : t3.friends };
          });
        }, p.prototype.mergeSvrFriendList = function(e2, t2) {
          var r2, s2, n2, o2, l2, d2, p2, h = this, f = +this.econf.user.friendSeq || 0, m = this.econf.mailHBConfig.friend_list_seq;
          !m || m <= f || (r2 = { time: new Date(), dbSeq: f, hbSeq: m, how: e2, action: t2 }, s2 = 1, n2 = 0, o2 = /* @__PURE__ */ new Map(), l2 = /* @__PURE__ */ new Map(), d2 = /* @__PURE__ */ new Map(), p2 = function(t3) {
            var f2, m2;
            (n2 = 1 == s2 ? t3.full_list : n2) && h.dbFriendMap.size && (h.dbFriendMap.forEach(function(e3) {
              return d2.set(e3.userID, e3);
            }), h.dbMgr.deleteFriendList([], true), h.dbFriendMap.clear()), t3.list.forEach(function(e3) {
              var t4, r3, s3 = e3.info.user_base_info.user_id, n3 = h.dbFriendMap.get(s3);
              e3.is_del ? (o2.delete(s3), l2.delete(s3), n3 && d2.set(s3, n3)) : (d2.delete(s3), t4 = h.getFriendFromServer(e3.info), n3 ? (s3 = Object.keys(t4.friendAttributes), r3 = false, s3.length !== Object.keys(n3.friendAttributes).length && (r3 = true), s3.forEach(function(e4) {
                t4.friendAttributes[e4] !== n3.friendAttributes[e4] && (r3 = true);
              }), t4.friendAlias === n3.friendAlias && t4.userName === n3.userName && t4.userAvatarUrl === n3.userAvatarUrl && t4.wording === n3.wording && !r3 || l2.set(t4.userID, t4)) : o2.set(t4.userID, t4));
            }), t3.nextFlag && h.econf.token ? h.fetchSvrFriend(t3.nextFlag, ++s2, e2, n2).then(p2) : (d2.size && (f2 = Array.from(d2.values()), h.bus.emit(i.u.FriendList, { friendList: f2, action: i.z.Deleted }), h.dbMgr.deleteFriendList(f2.map(function(e3) {
              return e3.userID;
            })), h.emitConvChanged(f2, true)), f2 = Array.from(o2.values()), o2.size && h.bus.emit(i.u.FriendList, { friendList: f2, action: i.z.Added }), l2.size && (m2 = Array.from(l2.values()), h.bus.emit(i.u.FriendInfo, { friendList: m2 }), f2.push.apply(f2, u([], a(m2), false))), h.dbMgr.addFriendList(f2), h.emitConvChanged(f2), h.updateFriendListSeq(t3.cur || t3.max, true), h.lg.i(c, "mergeSvrFd", r2));
          }, this.fetchSvrFriend(f, s2, e2, 0).then(p2));
        }, p.prototype.mergeSvrFriendAppList = function(e2, t2) {
          var r2, s2, n2, o2, l2, d2 = this, p2 = +this.econf.user.friendAppSeq || 0, h = this.econf.mailHBConfig.friend_apply_list_seq;
          !h || h <= p2 || (r2 = { time: new Date(), dbSeq: p2, hbSeq: h, how: e2, action: t2 }, s2 = 1, n2 = [], o2 = [], l2 = function(t3) {
            var p3, h2;
            t3.list.forEach(function(e3) {
              var t4 = d2.getFriendAppFromServer(e3);
              d2.dbFriendAppMap.has(e3.user_id) ? d2.friendAppHasChanged(t4) && o2.push(t4) : n2.push(t4);
            }), t3.nextFlag && d2.econf.token ? d2.fetchSvrFriend(t3.nextFlag, ++s2, e2, 0, true).then(l2) : (n2.length && (d2.dbFriendAppMap.size ? (p3 = n2.filter(function(e3) {
              return !d2.dbFriendAppMap.has(e3.applyUser.userID);
            }), h2 = n2.filter(function(e3) {
              return d2.dbFriendAppMap.has(e3.applyUser.userID) && d2.friendAppHasChanged(e3);
            }), p3.length && d2.bus.emit(i.u.FriendAppList, { applicationList: p3, action: i.w.Added }), h2.length && d2.bus.emit(i.u.FriendAppUpd, { applicationList: h2 })) : d2.bus.emit(i.u.FriendAppList, { applicationList: u([], a(n2), false), action: i.w.Added })), o2.length && d2.bus.emit(i.u.FriendAppUpd, { applicationList: o2 }), d2.dbMgr.addFriendApplicationList(u(u([], a(n2), false), a(o2), false)), u(u([], a(n2), false), a(o2), false).forEach(function(e3) {
              d2.dbFriendAppMap.set(e3.applyUser.userID, e3);
            }), d2.updateFriendAppListSeq(t3.cur || t3.max, true), d2.lg.i(c, "mergeSvrFdApp", r2));
          }, this.fetchSvrFriend(p2, s2, e2, 0, true).then(l2));
        }, p.prototype.updateBlacklistSeq = function(e2, t2) {
          var r2 = this.econf.user;
          !e2 || !t2 && +r2.blacklistSeq && r2.blacklistSeq + 1 != e2 || (r2.blacklistSeq = e2, this.dbMgr.setUser(r2));
        }, p.prototype.updateFriendListSeq = function(e2, t2) {
          var r2 = this.econf.user;
          return !(!e2 || !t2 && r2.friendSeq && r2.friendSeq + 1 != e2 || r2.friendSeq && r2.friendSeq > e2 || (r2.friendSeq = e2, this.dbMgr.setUser(r2), 0));
        }, p.prototype.updateFriendAppListSeq = function(e2, t2) {
          var r2 = this.econf.user;
          return !(!e2 || !t2 && r2.friendAppSeq && r2.friendAppSeq + 1 != e2 || r2.friendAppSeq && r2.friendAppSeq > e2 || (r2.friendAppSeq = e2, this.dbMgr.setUser(r2), 0));
        }, p.prototype.transApplyType = function(e2) {
          return 0 == e2 ? i.y.None : 1 == e2 ? i.y.Received : 2 == e2 ? i.y.Sent : 3 == e2 ? i.y.Both : i.y.None;
        }, p.prototype.transApplyState = function(e2) {
          return 2 == e2 ? i.x.Accepted : 3 == e2 ? i.x.Rejected : 4 == e2 ? i.x.Expired : 5 == e2 ? i.x.Disabled : i.x.Waiting;
        }, p.prototype.transFriendRelation = function(e2) {
          return 2 == e2 ? i.nb.SingleHave : 3 == e2 ? i.nb.BothAllNo : 4 == e2 ? i.nb.BothSelfHave : 5 == e2 ? i.nb.BothOtherHave : 6 == e2 ? i.nb.BothAllHave : i.nb.SingleNo;
        }, p.prototype.getFriendFromServer = function(e2) {
          var t2 = e2.attributes.reduce(function(e3, t3) {
            return e3[t3.key] = t3.value || "", e3;
          }, {});
          t2 = { userID: e2.user_base_info.user_id, userName: Object(n.h)(e2.user_base_info.user_name), userAvatarUrl: Object(n.h)(e2.user_base_info.avatar), createTime: +e2.create_time, wording: e2.wording, friendAlias: e2.remark, friendAttributes: t2 || {}, seq: e2.friend_list_seq };
          return this.dbFriendMap.set(t2.userID, t2), t2;
        }, p.prototype.getFriendAppFromServer = function(e2) {
          var t2 = this.dbFriendAppMap.get(e2.user_id);
          return { applyUser: { userID: e2.user_id, userName: e2.user_name ? Object(n.h)(e2.user_name) : (null == t2 ? void 0 : t2.applyUser.userName) || "", userAvatarUrl: e2.avatar ? Object(n.h)(e2.avatar) : (null == t2 ? void 0 : t2.applyUser.userAvatarUrl) || "" }, wording: e2.wording ? Object(n.h)(e2.wording) : (null == t2 ? void 0 : t2.wording) || "", createTime: e2.create_time || (null == t2 ? void 0 : t2.createTime) || 0, updateTime: e2.update_time || (null == t2 ? void 0 : t2.updateTime) || 0, type: void 0 !== e2.app_type ? this.transApplyType(e2.app_type) : (null == t2 ? void 0 : t2.type) || i.y.None, state: void 0 !== e2.status ? this.transApplyState(e2.status) : (null == t2 ? void 0 : t2.state) || i.x.Waiting };
        }, p.prototype.checkFriendAppDB = function(e2, t2, r2) {
          if (!this.dbFriendAppMap.get(e2))
            return t2.error = Object(n.y)(6000001, "Friend apply: " + e2 + " not found."), this.lg.w(c, r2, t2), t2.error;
        }, p.prototype.mergeSvrBlacklist = function(e2, t2) {
          var r2, s2, o2, a2, u2, l2 = this, d2 = +this.econf.user.blacklistSeq || 0, p2 = this.econf.mailHBConfig.black_list_seq;
          !p2 || p2 <= d2 || (r2 = { time: new Date(), dbSeq: d2, hbSeq: p2, how: e2, action: t2 }, s2 = 1, o2 = 0, a2 = /* @__PURE__ */ new Map(), u2 = function(t3) {
            var d3, h, f;
            t3.list.forEach(function(e3) {
              return a2.set(e3.info.user_base_info.user_id, e3);
            }), 1 == s2 && (o2 = t3.full_list), t3.nextFlag && l2.econf.token ? l2.fetchSvrBlacklist(t3.nextFlag, ++s2, e2, o2).then(u2) : (d3 = /* @__PURE__ */ new Map(), h = /* @__PURE__ */ new Map(), a2.forEach(function(e3, t4) {
              var r3 = { userID: t4, userName: Object(n.h)(e3.info.user_base_info.user_name), userAvatarUrl: Object(n.h)(e3.info.user_base_info.avatar), createTime: e3.info.create_time };
              o2 && (l2.blacklist.has(t4) ? h : d3).set(t4, r3), e3.is_del ? h.set(t4, r3) : l2.blacklist.has(t4) || d3.set(t4, r3);
            }), o2 && l2.blacklist.size && l2.blacklist.forEach(function(e3, t4) {
              h.has(t4) ? h.delete(t4) : h.set(t4, Object(n.u)(t4, l2.econf));
            }), l2.updateBlacklistSeq(p2, true), d3.size && ((f = Array.from(d3.values())).forEach(function(e3) {
              return l2.blacklist.set(e3.userID, e3);
            }), l2.bus.emit(i.u.BlacklistUpd, { action: i.c.Added, userList: f }), l2.dbMgr.addBlacklist(f)), h.size && ((f = Array.from(h.values())).forEach(function(e3) {
              return l2.blacklist.delete(e3.userID);
            }), l2.bus.emit(i.u.BlacklistUpd, { action: i.c.Removed, userList: f }), l2.dbMgr.deleteBlacklist(Array.from(h.keys()))), l2.lg.i(c, "mergeSvrBl", r2));
          }, this.fetchSvrBlacklist(d2, s2, e2, 0).then(u2));
        }, p.prototype.fetchSvrBlacklist = function(e2, t2, r2, s2) {
          return this.cnMgr.send(i.d.bl_fetch, { cur_list_seq: e2, count: 100, full_pull: s2, degree: t2, how: r2 }, i.j.SDK).then(function(t3) {
            if (t3.code)
              return { cur: 0, list: [] };
            var r3 = t3.cur_list_seq, s3 = t3.max_list_seq, n2 = t3.fetch_end, i2 = t3.full_list;
            return { nextFlag: n2 || s3 <= r3 || r3 <= e2 || s3 <= e2 ? 0 : r3, cur: r3, max: s3, list: t3.blacklists, fetch_end: n2, full_list: i2 };
          });
        }, p.prototype.friendAppHasChanged = function(e2) {
          var t2 = this.dbFriendAppMap.get(e2.applyUser.userID);
          return t2.wording !== e2.wording || t2.state !== e2.state || t2.type !== e2.type || t2.updateTime !== e2.updateTime;
        }, p.prototype.updateUserInfo = function(e2) {
          var t2 = this.econf.dbUserMap.get(e2.userID), r2 = this.dbFriendMap.get(e2.userID);
          t2 && (e2.userName = t2.userName !== e2.userName ? t2.userName || "" : e2.userName, e2.userAvatarUrl = t2.userAvatarUrl !== e2.userAvatarUrl ? t2.userAvatarUrl || "" : e2.userAvatarUrl), r2 && (r2.userName = e2.userName, r2.userAvatarUrl = e2.userAvatarUrl, this.dbMgr.addFriendList([r2]));
        }, p);
        function p(e2, t2, r2, n2) {
          this.lg = s.a.getInstance().lg, this.st = s.a.getInstance().st, this.blacklist = /* @__PURE__ */ new Map(), this.dbFriendMap = /* @__PURE__ */ new Map(), this.dbFriendAppMap = /* @__PURE__ */ new Map(), this.econf = e2, this.bus = t2, this.cnMgr = r2, this.dbMgr = n2, this.registerInnerEvent();
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return l;
        });
        var s = r(2), n = r(1), i = r(0), o = r(18), a = r(76), u = function() {
          return (u = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, c = i.X.Group, l = (d.prototype.destroy = function() {
          this.onLogout(), this.cnMgr = null, this.bus = null, this.lg = null, this.econf = null;
        }, d.prototype.findRoom = function(e2) {
          return this.roomMap.get(e2);
        }, d.prototype.initGroupByConv = function(e2) {
          var t2 = this.groupMap.get(e2);
          t2 || (t2 = new o.a(e2, this.econf, this.bus, this.dbMgr, this.cnMgr), this.groupMap.set(e2, t2), e2 = this.econf.dbGroupMap.get(e2), t2.setDBGroup(this.dbGroupApplyMap, e2));
        }, d.prototype.createRoom = function(e2, t2, r2) {
          return this.createRoomInstance(e2.roomID).create(e2.roomName, t2, r2);
        }, d.prototype.joinRoom = function(e2) {
          return this.createRoomInstance(e2).enter(false);
        }, d.prototype.leaveRoom = function(e2) {
          var t2 = this, r2 = this.findRoom(e2);
          return r2 ? r2.quit().then(function() {
            return t2.roomMap.delete(e2), { roomID: e2 };
          }) : Promise.resolve({ roomID: e2 });
        }, d.prototype.leaveAllRoom = function() {
          var e2 = this;
          return this.cnMgr.send(i.d.rm_quit_all, {}).then(function(t2) {
            var r2;
            return t2.code ? (r2 = Object(n.y)(6000306, t2.message, t2.code), Promise.reject(r2)) : { roomIDs: t2.room_list.map(function(t3) {
              var r3 = t3.room_id, s2 = (t3 = t3.room_session_id, e2.findRoom(r3));
              return s2 && t3.eq(s2.sessionID) && (e2.bus.emit(i.u.RoomState, { roomID: r3, state: i.lb.Disconnected, event: i.kb.Success, extendedData: "" }), e2.roomMap.delete(r3)), r3;
            }) };
          });
        }, d.prototype.queryRoomMemberList = function(e2, t2) {
          var r2 = this.createNoRoomError(e2, i.W.QueryRoomMemberList);
          return r2 ? Promise.reject(r2) : this.findRoom(e2).queryPageMember(t2);
        }, d.prototype.queryRoomMembers = function(e2, t2) {
          var r2 = this.createNoRoomError(t2, i.W.QueryRoomMembers);
          return r2 ? Promise.reject(r2) : this.findRoom(t2).queryMembers(e2);
        }, d.prototype.queryRoomAllAttr = function(e2) {
          var t2 = this.createNoRoomError(e2, i.W.QueryRoomAllAttr);
          return t2 ? Promise.reject(t2) : this.findRoom(e2).queryAllAttr();
        }, d.prototype.setRoomAttr = function(e2, t2, r2) {
          var s2 = this.createNoRoomError(t2, i.W.SetRoomAttr);
          return s2 ? Promise.reject(s2) : this.findRoom(t2).setAttr(e2, r2);
        }, d.prototype.delRoomAttr = function(e2, t2, r2) {
          var s2 = this.createNoRoomError(t2, i.W.DelRoomAttr);
          return s2 ? Promise.reject(s2) : this.findRoom(t2).delAttr(e2, r2);
        }, d.prototype.beginRoomAttr = function(e2, t2) {
          this.createRoomInstance(e2).beginAttr(t2);
        }, d.prototype.endRoomAttr = function(e2) {
          var t2 = this.createNoRoomError(e2, i.W.EndRoomAttr);
          return t2 ? Promise.reject(t2) : this.findRoom(e2).endAttr();
        }, d.prototype.setRoomMembersAttr = function(e2, t2, r2, s2) {
          var n2 = this.createNoRoomError(r2, i.W.SetRoomMembersAttr);
          return n2 ? Promise.reject(n2) : this.findRoom(r2).setMembersAttr(e2, t2, s2);
        }, d.prototype.queryRoomMembersAttr = function(e2, t2) {
          var r2 = this.createNoRoomError(t2, i.W.QueryRoomMembersAttr);
          return r2 ? Promise.reject(r2) : this.findRoom(t2).queryMembersAttr(e2);
        }, d.prototype.queryRoomMemberAttrs = function(e2, t2) {
          var r2 = this.createNoRoomError(e2, i.W.QueryRoomMemberAttrs);
          return r2 ? Promise.reject(r2) : this.findRoom(e2).queryMemberAttrs(t2);
        }, d.prototype.queryRoomOnlineMemberCount = function(e2) {
          var t2 = this.createNoRoomError(e2, i.W.QueryRoomMemberCount);
          return t2 ? Promise.reject(t2) : this.findRoom(e2).queryMemberCount();
        }, d.prototype.onPushRoomKickout = function(e2) {
          var t2 = this.findRoom(e2.room_id);
          t2 && (e2 = t2.onPushKickout(e2), this.roomMap.delete(t2.groupID), e2 && (e2 = this.econf.dbConvMap.get(this.econf.user.userID + i.r.Room + t2.groupID)) && (e2.maxSeq = 0, e2.msgSeq = 0, e2.maxOrderKey = 0, e2.roomSessionID = "", this.dbMgr.addConversationList([e2], "clearRoom"), this.dbMgr.clearRoomMessage(t2.groupID)));
        }, d.prototype.onPushRoomEnter = function(e2) {
          var t2 = this.findRoom(e2.room_id);
          t2 && t2.onPushEnter(e2);
        }, d.prototype.onPushRoomQuit = function(e2) {
          var t2 = this.findRoom(e2.room_id);
          t2 && t2.onPushQuit(e2);
        }, d.prototype.onPushRoomAttrMdf = function(e2) {
          var t2 = this.findRoom(e2.room_id);
          t2 && t2.onPushAttrMdf(e2);
        }, d.prototype.onPushRoomUserAttrMdf = function(e2) {
          var t2 = this.findRoom(e2.room_id);
          t2 && t2.onPushUserAttrMdf(e2);
        }, d.prototype.createGroup = function(e2, t2, r2) {
          var s2 = this, i2 = String(e2.groupID || "").trim() || Object(n.l)(), o2 = this.createInstance(i2, e2.groupName, e2.groupAvatarUrl);
          return o2.create(e2, t2, r2).then(function(e3) {
            return s2.groupMap.delete(i2), s2.groupDelIDMap.delete(i2), s2.groupDelIDMap.delete(o2.groupID), s2.groupMap.set(o2.groupID, o2), s2.updateGroupSeq(o2.dbGroup.groupSeq), e3;
          }).catch(function(e3) {
            throw e3 && e3.code && 6000524 != e3.code && (s2.groupMap.delete(i2), s2.groupMap.delete(o2.groupID), o2.destroy()), e3;
          });
        }, d.prototype.joinGroup = function(e2, t2, r2) {
          var s2 = this, n2 = this.createInstance(t2);
          return n2.join(e2, r2).then(function(r3) {
            if (r3) {
              if (s2.groupDelIDMap.delete(t2), s2.updateGroupSeq(n2.dbGroup.groupSeq), e2)
                return r3;
            } else
              s2.groupMap.delete(t2), n2.destroy();
            return { groupID: t2 };
          }).catch(function(e3) {
            throw e3 && e3.code && 6000522 != e3.code && (s2.groupMap.delete(t2), n2.destroy()), e3;
          });
        }, d.prototype.leaveGroup = function(e2) {
          return this.quitGroup(e2, i.d.gp_quit, i.W.LeaveGroup, 6000506);
        }, d.prototype.dismissGroup = function(e2) {
          return this.quitGroup(e2, i.d.gp_destroy, i.W.DismissGroup, 6000504);
        }, d.prototype.queryGroupList = function() {
          var e2 = this;
          return new Promise(function(t2) {
            var r2 = { time: new Date(), logined: e2.groupLogined, count: 0 };
            e2.groupLogined ? e2.mergeSvrGroupList(i.v.Biz, function(s2) {
              return t2(e2.handleQueryGroupsCallback(s2, r2));
            }) : e2.queryGroupsCallbackList.push({ log: r2, resolve: t2 });
          });
        }, d.prototype.updateGroupInfo = function(e2, t2, r2) {
          return this.createInstance(t2).update(e2, r2);
        }, d.prototype.queryGroupInfo = function(e2) {
          return this.createInstance(e2).query();
        }, d.prototype.setGroupAttr = function(e2, t2) {
          return this.createInstance(t2).updateAttr(e2);
        }, d.prototype.delGroupAttr = function(e2, t2) {
          return this.createInstance(t2).updateAttr(e2);
        }, d.prototype.queryGroupAttr = function(e2, t2) {
          return this.createInstance(e2).queryAttr(t2);
        }, d.prototype.muteGroup = function(e2, t2) {
          return this.createInstance(e2).mute(t2);
        }, d.prototype.setGroupMemberNickname = function(e2, t2, r2) {
          return this.createInstance(r2).setMemberInfo(t2, e2, i.P.Nickname);
        }, d.prototype.setGroupMemberRole = function(e2, t2, r2) {
          return this.createInstance(r2).setMemberInfo(t2, e2, i.P.Role);
        }, d.prototype.transferGroupOwner = function(e2, t2) {
          return this.createInstance(t2).transferOwner(e2);
        }, d.prototype.queryGroupMemberInfo = function(e2, t2) {
          return this.createInstance(t2).queryMemberInfo(e2);
        }, d.prototype.inviteToGroup = function(e2, t2, r2, s2) {
          return this.createInstance(r2).inviteUsers(e2, t2, s2);
        }, d.prototype.kickGroupMembers = function(e2, t2) {
          return this.createInstance(t2).kickMembers(e2);
        }, d.prototype.queryGroupMembers = function(e2, t2) {
          return this.createInstance(e2).queryMemberList(t2);
        }, d.prototype.queryGroupMemberCount = function(e2) {
          return this.createInstance(e2).queryMemberCount();
        }, d.prototype.muteGroupMembers = function(e2, t2, r2, s2) {
          return s2 = e2 ? s2 && !isNaN(s2.duration) ? +s2.duration : -1 : 0, this.createInstance(r2).muteMembers(e2, t2, s2);
        }, d.prototype.queryGroupMemberMutedList = function(e2, t2) {
          return this.createInstance(e2).queryMemberMutedList(t2);
        }, d.prototype.queryReceiptMembers = function(e2, t2, r2, s2, n2) {
          var o2 = this.econf.user.userID + i.r.Group + t2 + e2.messageSeq, a2 = this.econf.msgExtraMap.get(o2);
          return a2 ? (a2.messageID || (a2.messageID = e2.messageID), a2.memberSeqs || (a2.memberSeqs = {})) : (a2 = { id: o2, ownerID: this.econf.user.userID, conversationID: t2, conversationType: i.r.Group, conversationSeq: e2.messageSeq, messageID: e2.messageID, receiptStatus: e2.receiptStatus, memberSeqs: {} }, this.econf.msgExtraMap.set(o2, a2)), this.createInstance(t2).queryReceiptMemberList(e2, a2, r2, s2, n2);
        }, d.prototype.searchGroups = function(e2) {
          var t2 = this;
          return new Promise(function(r2) {
            var s2 = e2.keywords.filter(function(e3) {
              return "string" == typeof e3 && e3 && e3.trim().length;
            }).map(function(e3) {
              return e3.toLocaleLowerCase();
            });
            if (!s2.length)
              return r2({ nextFlag: 0, groupSearchInfoList: [] });
            var o2 = new Date(), a2 = e2.isAlsoMatchGroupMemberUserName, u2 = e2.isAlsoMatchGroupMemberNickname;
            t2.dbMgr.searchGroups(s2, a2, u2, function(a3, u3) {
              var c2 = [], l2 = (Array.from(t2.econf.dbGroupMap.values()).sort(function(e3, t3) {
                return Number(e3.groupSeq) - Number(t3.groupSeq);
              }).forEach(function(e3) {
                var r3, o3 = e3.groupID, u4 = e3.groupName, l3 = e3.groupAvatarUrl;
                e3 = e3.groupSeq;
                s2.every(function(e4) {
                  return Object(n.d)(u4, e4);
                }) && (r3 = a3.filter(function(e4) {
                  return e4.ownerID == o3;
                }).map(function(e4) {
                  var r4 = t2.econf.dbUserMap.get(e4.userID), s3 = e4.operatedUser;
                  return s3 && Object.assign(s3, Object(n.u)(s3.userID, t2.econf)), { userID: e4.userID, userName: (null == r4 ? void 0 : r4.userName) || "", userAvatarUrl: (null == r4 ? void 0 : r4.userAvatarUrl) || "", memberNickname: e4.memberNickname || "", memberRole: e4.memberRole || 0, muteExpiredTime: e4.muteExpiredTime || 0, groupEnterInfo: { enterTime: e4.enterTime || 0, enterType: e4.enterType || i.J.Unknown, operatedUser: s3 } };
                }), c2.push({ groupInfo: { groupID: o3, groupName: u4, groupAvatarUrl: l3 }, userList: r3, seq: +e3 || 0 }));
              }), c2.length), d2 = t2.econf.dbGroupMap.size, p = a3.length, h = 0, f = (h = e2.nextFlag ? c2.findIndex(function(t3) {
                return e2.nextFlag === t3.seq;
              }) + 1 : h) + Math.min(i.m.MAX_SEARCH_PAGE_COUNT, e2.count), m = c2[f], g = (c2 = c2.slice(h, f), m = m ? c2[c2.length - 1].seq : 0, c2.length);
              t2.lg.i(i.X.Database, i.W.SearchGroup, { time: o2, dbCount: u3, start: h, end: f, total: l2, totalGroup: d2, totalUser: p, count: g, nextFlag: m, config: e2 }), r2({ nextFlag: m, groupSearchInfoList: c2 });
            });
          });
        }, d.prototype.updateGroupVerifyMode = function(e2, t2, r2) {
          return this.createInstance(t2).updateVerifyMode(e2, r2);
        }, d.prototype.acceptGroupApply = function(e2, t2, r2, s2) {
          return this.createInstance(r2).acceptApply(e2, t2, s2);
        }, d.prototype.rejectGroupApply = function(e2, t2, r2, s2) {
          var o2 = this, a2 = { time: new Date() }, l2 = e2 ? i.W.RejectGroupJoinApp : i.W.RejectGroupInviteApp, d2 = e2 ? i.d.gp_apply_reject : i.d.gp_invite_reject;
          s2 = { group_id: r2, user_id: t2, offline_info: Object(n.g)(null == s2 ? void 0 : s2.pushConfig) };
          return this.cnMgr.send(d2, s2).then(function(s3) {
            if (s3.code)
              return a2.error = Object(n.y)(6000502, s3.message, s3.code), o2.lg.w(c, l2, a2), Promise.reject(a2.error);
            var d3 = e2 ? i.E.Join : i.E.BeInvite, p = null == (p = o2.groupMap.get(r2)) ? void 0 : p.dbMbMap.get(o2.econf.user.userID), h = o2.econf.dbGroupMap.get(r2), f = o2.dbGroupApplyMap.get(o2.getApplyID(d3, r2, t2)), m = e2 ? { groupID: r2, groupName: (null == h ? void 0 : h.groupName) || "", groupAvatarUrl: (null == h ? void 0 : h.groupAvatarUrl) || "" } : u(u({}, null == f ? void 0 : f.groupInfo), { groupID: r2 });
            d3 = { type: d3, state: i.D.Rejected, updateTime: s3.apply_group_info.update_time, createTime: 0, wording: "", seq: e2 ? (null == h ? void 0 : h.dataSeq) || 0 : (null == f ? void 0 : f.seq) || 0, groupInfo: m, applyUser: Object(n.u)(t2, o2.econf), operatedUser: e2 ? u(u({}, Object(n.u)(o2.econf.user.userID, o2.econf)), { memberRole: p ? p.memberRole : i.Q.Admin, memberNickname: p ? p.memberNickname : "" }) : void 0 };
            return o2.syncGroupApplyMap(r2, d3), o2.bus.emit(i.u.GroupAppUpd, { applicationList: [d3] }), o2.updateGroupApplySeq(e2 ? r2 : "", s3.apply_group_info.apply_list_seq), o2.lg.i(c, l2, a2), e2 ? { groupID: r2, userID: t2 } : { groupID: r2, inviterUserID: t2 };
          });
        }, d.prototype.queryGroupApplyList = function(e2) {
          var t2 = this;
          return new Promise(function(r2) {
            var s2 = { time: new Date(), logined: t2.groupApplyLogined, config: e2, count: 0 };
            t2.groupApplyLogined ? t2.mergeSvrGroupApplyList("", i.v.Biz, function() {
              r2(t2.handleQueryGroupApplysCallback(e2, s2));
            }) : t2.queryGroupApplysCallbackList.push({ config: e2, log: s2, resolve: r2 });
          });
        }, d.prototype.onPushGroupCreate = function(e2) {
          this.groupDelIDMap.delete(e2.group_id), this.createInstance(e2.group_id, e2.group_name).onPushCreate(e2);
        }, d.prototype.onPushGroupJoin = function(e2, t2) {
          var r2 = t2 ? i.O.Joined : i.O.Invited;
          t2 = t2 ? i.K.Joined : i.K.Invited;
          this.groupDelIDMap.delete(e2.group_id), this.createInstance(e2.group_id, e2.group_name).onPushJoin(e2, r2, t2);
        }, d.prototype.onPushGroupDestroy = function(e2, t2) {
          this.deleteGroup(e2, t2);
        }, d.prototype.onPushGroupDataModify = function(e2) {
          this.groupDelIDMap.delete(e2.group_id);
          var t2 = this.createInstance(e2.group_id);
          t2.onPushModify(e2), this.econf.dbGroupMap.set(t2.groupID, t2.dbGroup);
        }, d.prototype.onPushGroupAttrMdf = function(e2) {
          this.groupDelIDMap.delete(e2.group_id);
          var t2 = this.createInstance(e2.group_id);
          t2.onPushAttrMdf(e2), this.econf.dbGroupMap.set(t2.groupID, t2.dbGroup);
        }, d.prototype.onPushGroupOwnerTransfer = function(e2) {
          this.groupDelIDMap.delete(e2.group_id);
          var t2 = this.createInstance(e2.group_id);
          t2.onPushOwnerTransfer(e2), this.econf.dbGroupMap.set(t2.groupID, t2.dbGroup);
        }, d.prototype.onPushGroupMemberChange = function(e2) {
          this.groupDelIDMap.delete(e2.group_id);
          var t2 = this.createInstance(e2.group_id);
          t2.onPushMemberChange(e2), this.econf.dbGroupMap.set(t2.groupID, t2.dbGroup);
        }, d.prototype.onPushGroupEnterApply = function(e2) {
          var t2 = this, r2 = e2.group_id, s2 = this.econf.dbGroupMap.get(r2);
          if (s2) {
            for (var o2 = this.econf.user.userID, a2 = [], c2 = [], l2 = [], d2 = [s2.groupAppSeq || 0], p = (e2.list.forEach(function(e3) {
              d2.push(e3.apply_list_seq);
              var p2, h, f, m, g, _, b = e3.apply_status;
              !b || b < 1 || 6 < b || (p2 = 1 == b || 3 == b || 4 == b ? i.E.Join : i.E.Invite) == i.E.Invite && e3.op_user.user_id != o2 || (h = (_ = e3.base_info).user_id, m = _.user_name, _ = _.avatar, Object(n.x)({ userID: h, userName: Object(n.h)(m), userAvatarUrl: Object(n.h)(_) }, t2.econf), p2 == i.E.Join && e3.op_user && (_ = (m = e3.op_user).user_id, f = m.user_name, g = m.role, m = m.group_nick_name, (g = u(u({}, Object(n.u)(_, t2.econf)), { memberRole: g, memberNickname: m })).userName || (g.userName = Object(n.h)(f))), _ = { type: p2, state: t2.getGroupApplyState(b), createTime: e3.create_time, updateTime: e3.update_time, wording: e3.wording, seq: s2.dataSeq, groupInfo: { groupID: r2, groupName: s2.groupName, groupAvatarUrl: s2.groupAvatarUrl }, applyUser: Object(n.u)(h, t2.econf), operatedUser: g }, (t2.checkGroupApplyCreateTime(_) ? l2 : c2).push(_), a2.push(_));
            }), this.syncGroupApplyMap(r2), c2.length && (e2 = i.C.Added, this.bus.emit(i.u.GroupAppList, { action: e2, applicationList: c2 })), l2.length && this.bus.emit(i.u.GroupAppUpd, { applicationList: l2 }), d2.sort(function(e3, t3) {
              return e3 - t3;
            }), 0); p < d2.length && d2[p] + 1 == d2[p + 1]; p++)
              ;
            p && this.updateGroupApplySeq(r2, d2[p], true);
          }
        }, d.prototype.onPushGroupApply = function(e2) {
          var t2, r2, s2, o2 = e2.apply_info.apply_status;
          !o2 || o2 < 1 || 6 < o2 || (t2 = 1 == o2 || 3 == o2 || 4 == o2 ? i.E.Join : i.E.BeInvite, s2 = (r2 = e2.apply_info).base_info.user_id, !e2.group_info || 3 != o2 && 5 != o2 || (e2.group_info.op_user = r2.op_user, this.onPushGroupJoin(e2.group_info, t2 == i.E.Join)), e2 = Object(n.u)(this.econf.user.userID, this.econf), r2.op_user && t2 == i.E.BeInvite && !(e2 = Object(n.u)(r2.op_user.user_id, this.econf)).userName && (e2.userName = Object(n.h)(r2.op_user.user_name)), (o2 = { type: t2, state: this.getGroupApplyState(o2), updateTime: r2.update_time, createTime: r2.create_time, wording: r2.wording, seq: r2.base_info.update_time, groupInfo: { groupID: s2, groupName: r2.base_info.user_name, groupAvatarUrl: Object(n.h)(r2.base_info.avatar) }, applyUser: e2, operatedUser: t2 == i.E.Join && r2.op_user ? u(u({}, Object(n.u)(r2.op_user.user_id, this.econf)), { memberRole: r2.op_user.role, memberNickname: r2.op_user.group_nick_name }) : void 0 }).operatedUser && !o2.operatedUser.userName && r2.op_user && (o2.operatedUser.userName = Object(n.h)(r2.op_user.user_name)), this.syncGroupApplyMap(s2, o2) ? this.bus.emit(i.u.GroupAppUpd, { applicationList: [o2] }) : (e2 = i.C.Added, this.bus.emit(i.u.GroupAppList, { action: e2, applicationList: [o2] })), this.updateGroupApplySeq("", r2.apply_list_seq));
        }, d.prototype.onLogined = function() {
          var e2 = this, t2 = this.st.getRealClientTimestamp();
          this.econf.dbGroupMap.forEach(function(t3) {
            return e2.initGroupInstance(t3);
          }), this.dbMgr.getGroupApplyList().then(function(r2) {
            var s2 = e2.econf.mailHBConfig.apply_expired_duration;
            r2.forEach(function(r3) {
              r3.state == i.D.Waiting && t2 - r3.createTime > s2 && (r3.state = i.D.Expired);
              var o2 = ((o2 = r3.operatedUser) && Object.assign(o2, Object(n.u)(o2.userID, e2.econf)), { type: r3.type, state: r3.state, createTime: r3.createTime, updateTime: r3.updateTime, wording: r3.wording, seq: r3.seq, groupInfo: r3.groupInfo, applyUser: Object(n.u)(r3.applyUser, e2.econf), operatedUser: o2 }), a2 = e2.econf.dbGroupMap.get(r3.groupInfo.groupID);
              a2 && (o2.seq = a2.dataSeq, o2.groupInfo.groupName = a2.groupName, o2.groupInfo.groupAvatarUrl = a2.groupAvatarUrl), e2.dbGroupApplyMap.set(r3.id, o2);
            });
          }), this.groupLogined = false, this.groupApplyLogined = false, this.mergeSvrGroupList(i.v.SDKLogin, function(t3) {
            e2.groupLogined = true, e2.queryGroupsCallbackList.forEach(function(r2) {
              return r2.resolve(e2.handleQueryGroupsCallback(t3, r2.log));
            }), e2.queryGroupsCallbackList.length = 0, e2.bus.exec(i.u.ISyncGroups, false), e2.syncGroupInfo(i.v.SDKLogin);
          }), this.mergeSvrGroupApplyList("", i.v.SDKLogin, function() {
            e2.groupApplyLogined = true, e2.queryGroupApplysCallbackList.forEach(function(t3) {
              return t3.resolve(e2.handleQueryGroupApplysCallback(t3.config, t3.log));
            }), e2.queryGroupApplysCallbackList.length = 0;
          });
        }, d.prototype.onLogout = function() {
          this.roomMap.forEach(function(e2) {
            return e2.destroy(true);
          }), this.groupMap.forEach(function(e2) {
            return e2.destroy();
          }), this.roomMap.clear(), this.groupMap.clear(), this.groupDelIDMap.clear(), this.dbGroupApplyMap.clear(), this.roomIDs.clear(), this.groupLogined = false, this.groupApplyLogined = false;
        }, d.prototype.onConnected = function() {
          var e2 = this;
          this.roomMap.forEach(function(e3) {
            return e3.enter(true);
          }), this.mergeSvrGroupList(i.v.SDKHb, function() {
            e2.bus.exec(i.u.ISyncGroups, true), e2.syncGroupInfo(i.v.SDKHb);
          }), this.mergeSvrGroupApplyList("", i.v.SDKHb);
        }, d.prototype.onDisConnected = function(e2) {
          this.roomMap.forEach(function(t2) {
            return t2.onDisConnected(e2);
          }), this.groupMap.forEach(function(e3) {
            return e3.onDisConnected();
          });
        }, d.prototype.syncGroupInfo = function(e2) {
          for (var t2 = this, r2 = Array.from(this.econf.dbGroupMap.keys()), s2 = [], o2 = 0; o2 < r2.length; o2 += 100) {
            var a2 = { user_ids: r2.slice(o2, o2 + 100) };
            a2 = this.cnMgr.send(i.d.gp_infos, a2, i.j.SDK);
            s2.push(a2);
          }
          Promise.all(s2).then(function(r3) {
            r3.forEach(function(r4) {
              r4.group_infos && r4.group_infos.forEach(function(r5) {
                var s3, o3 = r5.group_id, a3 = r5.history_msg_seq, u2 = t2.econf.dbGroupMap.get(o3);
                1 == r5.type ? (t2.groupDelIDMap.set(o3, true), u2 && (t2.econf.dbGroupMap.delete(o3), t2.bus.exec(i.u.ILeftGroup, o3, a3))) : u2 && (u2.groupName = r5.group_name, u2.groupAvatarUrl = Object(n.h)(r5.group_avatar), u2.totalMemberCount = r5.member_count, a3 && (u2.historyMsgSeq = a3), t2.syncToConv(u2), s3 = t2.initGroupInstance(u2), (!u2.dataSeq || r5.group_data_seq > u2.dataSeq) && t2.cnMgr.send(i.d.gp_data, { group_id: o3 }).then(function(e3) {
                  e3.code || s3.queryGroupInfoCallback(e3);
                }), (!u2.memberSeq || r5.all_member_seq > u2.memberSeq) && s3.mergeSvrMemberList(e2), (a3 = r5.user_apply_list_seq) && (a3 > u2.groupAppSeq || !u2.groupAppSeq) && t2.mergeSvrGroupApplyList(o3, e2));
              });
            });
          });
        }, d.prototype.handleQueryGroupsCallback = function(e2, t2) {
          var r2 = this, s2 = [];
          return e2.forEach(function(e3) {
            r2.groupDelIDMap.get(e3.groupID) || (s2.push({ baseInfo: { groupID: e3.groupID, groupName: e3.groupName, groupAvatarUrl: e3.groupAvatarUrl }, notificationStatus: e3.notificationStatus }), r2.createInstance(e3.groupID));
          }), t2.count = s2.length, this.lg.i(c, i.W.QueryGroups, t2), { groupList: s2 };
        }, d.prototype.handleQueryGroupApplysCallback = function(e2, t2) {
          (o2 = Array.from(this.dbGroupApplyMap.values())).sort(function(e3, t3) {
            return t3.createTime - e3.createTime;
          });
          var r2 = o2.length, s2 = e2.nextFlag || 0, n2 = (e2 = s2 + e2.count) < r2 ? e2 : 0, o2 = o2.slice(s2, e2);
          return Object.assign(t2, { start: s2, end: e2, total: r2, count: o2.length, nextFlag: n2 }), this.lg.i(c, i.W.QueryGroupApps, t2), { applicationList: o2, nextFlag: n2 };
        }, d.prototype.registerInnerEvent = function() {
          this.bus.add(i.u.ILogined, this.onLogined.bind(this)), this.bus.add(i.u.ILogout, this.onLogout.bind(this)), this.bus.add(i.u.IConnected, this.onConnected.bind(this)), this.bus.add(i.u.IDisConnected, this.onDisConnected.bind(this));
        }, d.prototype.createRoomInstance = function(e2) {
          var t2 = this.findRoom(e2);
          return t2 || (t2 = new a.a(e2, this.econf, this.bus, this.dbMgr, this.cnMgr), this.roomMap.set(e2, t2), this.roomIDs.add(e2)), t2;
        }, d.prototype.createInstance = function(e2, t2, r2) {
          var s2 = this.groupMap.get(e2);
          return s2 || (s2 = new o.a(e2, this.econf, this.bus, this.dbMgr, this.cnMgr), this.groupMap.set(e2, s2), e2 = this.econf.dbGroupMap.get(e2) || { id: this.econf.user.userID + e2, ownerID: this.econf.user.userID, groupID: e2, groupName: t2 || "", groupAvatarUrl: r2 || "", groupNotice: "", notificationStatus: i.S.Notify, attributes: {}, mutedInfo: { mode: 0, expiredTime: 0, roles: [] }, verifyInfo: { joinMode: i.M.Any, inviteMode: i.L.Any, beInviteMode: i.H.None }, createTime: 0, maxMemberCount: 0, totalMemberCount: 0, dataSeq: 0, attributeSeq: 0, memberSeq: 0, groupSeq: 0, groupAppSeq: 0, historyMsgSeq: 0, memberAllSeq: 0, memberSeqs: {}, selfMutedExpiredTime: 0 }, s2.setDBGroup(this.dbGroupApplyMap, e2)), t2 && (s2.dbGroup.groupName = t2), r2 && (s2.dbGroup.groupAvatarUrl = r2), s2;
        }, d.prototype.initGroupInstance = function(e2) {
          var t2 = this.groupMap.get(e2.groupID);
          return t2 || (t2 = new o.a(e2.groupID, this.econf, this.bus, this.dbMgr, this.cnMgr), e2.dataSeq || (e2.dataSeq = 0), e2.attributeSeq || (e2.attributeSeq = 0), e2.memberSeq || (e2.memberSeq = 0), e2.groupSeq || (e2.groupSeq = 0), t2.setDBGroup(this.dbGroupApplyMap, e2), this.groupMap.set(e2.groupID, t2)), t2;
        }, d.prototype.deleteGroup = function(e2, t2) {
          var r2, s2, o2, a2, u2 = e2.group_id, c2 = this.groupMap.get(u2);
          c2 ? (e2.op_user || (e2.op_user = { user_id: this.econf.user.userID, user_name: this.econf.user.userName }), e2.op_user.role || (r2 = c2.dbMbMap.get(e2.op_user.user_id)) && (e2.op_user.role = r2.memberRole, e2.op_user.group_nick_name = r2.memberNickname), s2 = (r2 = e2.op_user).user_id, o2 = r2.user_name, a2 = r2.group_nick_name, r2 = r2.role, s2 = { userID: s2 }, o2 && (s2.userName = Object(n.h)(o2)), a2 && (s2.memberNickname = a2), r2 && (s2.memberRole = r2), o2 = Object(n.t)(c2.dbMbMap.get(this.econf.user.userID), this.econf), a2 = void 0, this.econf.mailHBConfig.group_tips && t2 == i.K.Dismissed && (a2 = { type: i.gb.Tips, event: t2, operatedUser: s2 }), this.bus.exec(i.u.ILeftGroup, u2, 0, a2), this.bus.emit(i.u.GroupState, { state: i.U.Quit, event: t2, groupInfo: c2.createGroupFullInfo(), operatedInfo: s2 }), this.bus.emit(i.u.GroupMemberState, { groupID: u2, state: i.R.Quit, event: t2 == i.K.KickedOut ? i.O.KickedOut : i.O.Left, userList: [o2], operatedInfo: s2 }), c2.dbMbMap.clear()) : this.bus.exec(i.u.ILeftGroup, u2), this.dbMgr.deleteGroupList([u2]), this.groupDelIDMap.set(u2, true), this.econf.dbGroupMap.delete(u2), this.updateGroupSeq(e2.conv_list_seq);
        }, d.prototype.quitGroup = function(e2, t2, r2, s2) {
          var o2 = this, a2 = { time: new Date(), groupID: e2 };
          return this.cnMgr.send(t2, { group_id: e2 }).then(function(u2) {
            return u2.code ? (a2.error = Object(n.y)(s2, u2.message, u2.code), o2.lg.w(c, r2, a2), Promise.reject(a2.error)) : (u2.group_id = e2, u2.op_user = { user_id: o2.econf.user.userID, user_name: o2.econf.user.userName }, o2.deleteGroup(u2, t2 === i.d.gp_destroy ? i.K.Dismissed : i.K.Left), o2.lg.i(c, r2, a2), { groupID: e2 });
          });
        }, d.prototype.fetchSvrGroup = function(e2, t2, r2, s2) {
          return this.cnMgr.send(i.d.gp_list, { cur_list_seq: e2, count: 100, full_pull: s2, degree: t2, how: r2 }, i.j.SDK).then(function(t3) {
            if (t3.code)
              return { list: [] };
            var r3 = t3.cur_list_seq, s3 = t3.max_list_seq, n2 = t3.fetch_end, i2 = t3.full_list;
            return { nextFlag: n2 || s3 <= r3 || r3 <= e2 || s3 <= e2 ? 0 : r3, cur: r3, max: s3, list: t3.groups, fetch_end: n2, full_list: i2 };
          });
        }, d.prototype.fetchSvrGroupApply = function(e2, t2, r2, s2) {
          var n2 = e2 ? i.d.gp_apply_list : i.d.gp_self_apply_list, o2 = s2 == i.v.Biz ? i.j.API : i.j.SDK;
          return this.cnMgr.send(n2, { group_id: e2, cur_list_seq: t2, count: 100, full_pull: r2, how: s2 }, o2).then(function(e3) {
            if (e3.code)
              return { list: [] };
            var r3 = e3.cur_list_seq, s3 = e3.max_list_seq, n3 = e3.fetch_end;
            return { nextFlag: n3 || s3 <= r3 || r3 <= t2 || s3 <= t2 ? 0 : r3, cur: r3, max: s3, list: e3.list, fetch_end: n3 };
          });
        }, d.prototype.mergeSvrGroupList = function(e2, t2) {
          var r2 = this, s2 = +this.econf.user.groupSeq || 0, o2 = this.econf.mailHBConfig.group_list_seq;
          if (!this.econf.mailHBConfig.fetch_group_list || !o2 || o2 <= s2)
            return t2 && t2(Array.from(this.econf.dbGroupMap.values()));
          var a2 = { time: new Date(), dbSeq: s2, hbSeq: o2, how: e2 }, u2 = 1, l2 = 0, d2 = [], p = function(s3) {
            var h;
            s3.list.forEach(function(t3) {
              var s4, o3, a3, u3, c2, l3 = t3.group_id, p2 = t3.group_name, h2 = t3.history_msg_seq;
              1 == t3.type ? (r2.groupDelIDMap.set(l3, true), r2.econf.dbGroupMap.has(l3) && (r2.econf.dbGroupMap.delete(l3), r2.bus.exec(i.u.ILeftGroup, l3, h2), e2 == i.v.SDKHb && d2.push({ state: i.U.Quit, event: i.K.Left, operatedInfo: {}, groupInfo: { baseInfo: { groupID: l3, groupName: p2 } } }))) : (s4 = Object(n.h)(t3.group_avatar), o3 = t3.member_count, a3 = t3.not_notify ? i.S.Disturb : i.S.Notify, c2 = r2.econf.dbGroupMap.has(l3), u3 = r2.econf.dbGroupMap.get(l3) || { id: r2.econf.user.userID + l3, ownerID: r2.econf.user.userID, groupID: l3, groupName: p2, groupAvatarUrl: s4, notificationStatus: a3, totalMemberCount: o3, groupNotice: "", attributes: {}, mutedInfo: { mode: 0, expiredTime: 0, roles: [] }, verifyInfo: { joinMode: i.M.Any, inviteMode: i.L.Any, beInviteMode: i.H.None }, createTime: 0, maxMemberCount: 0, dataSeq: 0, attributeSeq: 0, memberSeq: 0, groupSeq: 0, groupAppSeq: 0, historyMsgSeq: 0, memberAllSeq: 0, memberSeqs: {}, selfMutedExpiredTime: 0 }, c2 ? (u3.groupName = p2, u3.notificationStatus = a3, s4 && (u3.groupAvatarUrl = s4), o3 && (u3.totalMemberCount = o3)) : (r2.econf.dbGroupMap.set(l3, u3), e2 == i.v.SDKHb && d2.push({ state: i.U.Enter, event: i.K.Joined, operatedInfo: {}, groupInfo: { baseInfo: { groupID: l3, groupName: p2, groupAvatarUrl: s4 }, notificationStatus: a3 } })), h2 && (u3.historyMsgSeq = h2), u3.attributes || (u3.attributes = {}), (c2 = t3.user_apply_list_seq) && (c2 > u3.groupAppSeq || !u3.groupAppSeq) && r2.mergeSvrGroupApplyList(l3, e2), r2.syncToConv(u3));
            }), 1 == u2 && (l2 = s3.full_list), s3.nextFlag && r2.econf.token ? r2.fetchSvrGroup(s3.nextFlag, ++u2, e2, l2).then(p) : (r2.groupDelIDMap.size && ((h = Array.from(r2.groupDelIDMap.keys())).forEach(function(e3) {
              return r2.econf.dbGroupMap.delete(e3);
            }), r2.dbMgr.deleteGroupList(h)), r2.updateGroupSeq(s3.cur || o2, true), h = Array.from(r2.econf.dbGroupMap.values()), r2.dbMgr.addGroupList(h), d2.length && d2.forEach(function(e3) {
              return r2.bus.emit(i.u.GroupState, e3);
            }), r2.lg.i(c, "mergeSvrGp", a2), t2 && t2(h));
          };
          this.fetchSvrGroup(s2, u2, e2, 0).then(p);
        }, d.prototype.mergeSvrGroupApplyList = function(e2, t2, r2) {
          var s2 = this, o2 = e2 ? (null == (o2 = this.econf.dbGroupMap.get(e2)) ? void 0 : o2.groupAppSeq) || 0 : this.econf.user.groupAppSeq || 0, a2 = this.econf.mailHBConfig.group_apply_list_seq;
          if (!e2 && (!a2 || a2 <= o2))
            return r2 && r2();
          var l2 = { time: new Date(), dbSeq: o2, hbSeq: a2, how: t2, dbCount: this.dbGroupApplyMap.size }, d2 = this.econf.mailHBConfig.apply_expired_duration, p = this.econf.user.userID, h = 1, f = 0, m = { groupID: e2, groupName: "", groupAvatarUrl: "" }, g = (e2 && (a2 = this.econf.dbGroupMap.get(e2), f = (null == a2 ? void 0 : a2.dataSeq) || 0, m.groupName = (null == a2 ? void 0 : a2.groupName) || "", m.groupAvatarUrl = (null == a2 ? void 0 : a2.groupAvatarUrl) || ""), function(o3) {
            var a3 = s2.st.getRealClientTimestamp();
            o3.list.forEach(function(t3) {
              var r3, o4, c2, l3 = null == t3 ? void 0 : t3.apply_status;
              !l3 || l3 < 1 || 6 < l3 || (r3 = 1 == l3 || 3 == l3 || 4 == l3 ? i.E.Join : e2 ? i.E.Invite : i.E.BeInvite) == i.E.Invite && t3.op_user.user_id != p || (o4 = e2 || t3.base_info.user_id, r3 != i.E.Join || e2 ? r3 == i.E.BeInvite ? (c2 = Object(n.u)(t3.op_user.user_id, s2.econf)).userName || (c2.userName = Object(n.h)(t3.op_user.user_name)) : (c2 = Object(n.u)(t3.base_info.user_id, s2.econf)).userName || (c2.userName = Object(n.h)(t3.base_info.user_name)) : c2 = Object(n.u)(p, s2.econf), (l3 = { type: r3, state: s2.getGroupApplyState(l3), createTime: t3.create_time, updateTime: t3.update_time, wording: t3.wording || "", seq: e2 ? f : t3.base_info.update_time, groupInfo: e2 ? m : { groupID: o4, groupName: Object(n.h)(t3.base_info.user_name), groupAvatarUrl: Object(n.h)(t3.base_info.avatar) }, applyUser: c2, operatedUser: r3 == i.E.Join && t3.op_user ? u(u({}, Object(n.u)(t3.op_user.user_id, s2.econf)), { memberRole: t3.op_user.role, memberNickname: t3.op_user.group_nick_name }) : void 0 }).operatedUser && !l3.operatedUser.userName && t3.op_user && (l3.operatedUser.userName = Object(n.h)(t3.op_user.user_name)), l3.state == i.D.Waiting && a3 - l3.createTime > d2 && (l3.state = i.D.Expired), s2.dbGroupApplyMap.set(s2.getApplyID(r3, o4, c2.userID), l3));
            }), o3.nextFlag && s2.econf.token ? s2.fetchSvrGroupApply(e2, o3.nextFlag, ++h, t2).then(g) : (s2.updateGroupApplySeq(e2, o3.cur, true), s2.dbMgr.addGroupApplyList(Array.from(s2.dbGroupApplyMap.values())), s2.lg.i(c, "mergeSvrGpApp", l2), r2 && r2());
          });
          this.fetchSvrGroupApply(e2, o2, h, t2).then(g);
        }, d.prototype.updateGroupSeq = function(e2, t2) {
          var r2 = this.econf.user;
          !e2 || !t2 && +r2.groupSeq && r2.groupSeq != e2 - 1 || (r2.groupSeq = e2, this.dbMgr.setUser(r2));
        }, d.prototype.updateGroupApplySeq = function(e2, t2, r2) {
          e2 ? (e2 = this.econf.dbGroupMap.get(e2)) && t2 && (r2 || !e2.groupAppSeq || e2.groupAppSeq + 1 == t2) && (e2.groupAppSeq = t2, this.dbMgr.addGroupList([e2])) : (e2 = this.econf.user, !t2 || !r2 && e2.groupAppSeq && e2.groupAppSeq + 1 != t2 || (e2.groupAppSeq = t2, this.dbMgr.setUser(e2)));
        }, d.prototype.createNoRoomError = function(e2, t2) {
          var r2;
          if (!this.findRoom(e2))
            return r2 = Object(n.y)(6000321), this.lg.w(i.X.Room, t2, { error: r2, roomID: e2 }), r2;
        }, d.prototype.getApplyID = function(e2, t2, r2) {
          return e2 + "_" + t2 + "_" + r2;
        }, d.prototype.getGroupApplyState = function(e2) {
          return 1 == e2 || 2 == e2 ? i.D.Waiting : 3 == e2 || 5 == e2 ? i.D.Accepted : 4 == e2 || 6 == e2 ? i.D.Rejected : i.D.Disabled;
        }, d.prototype.checkGroupApplyCreateTime = function(e2) {
          var t2 = this.getApplyID(e2.type, e2.groupInfo.groupID, e2.applyUser.userID), r2 = this.dbGroupApplyMap.get(t2);
          return this.dbGroupApplyMap.set(t2, e2), r2 && (e2.wording = e2.wording || r2.wording, !r2.createTime || e2.createTime && r2.state != i.D.Accepted && r2.state != i.D.Rejected || (e2.createTime = r2.createTime)), !!r2;
        }, d.prototype.syncGroupApplyMap = function(e2, t2) {
          t2 = !!t2 && this.checkGroupApplyCreateTime(t2);
          var r2 = Array.from(this.dbGroupApplyMap.values()).filter(function(t3) {
            return t3.groupInfo.groupID == e2;
          }), s2 = r2[0];
          return r2.forEach(function(e3) {
            e3.seq > s2.seq && (s2 = e3);
          }), r2.forEach(function(e3) {
            e3.seq = s2.seq, e3.groupInfo = s2.groupInfo;
          }), this.dbMgr.addGroupApplyList(r2), t2;
        }, d.prototype.syncToConv = function(e2) {
          var t2 = this.econf.user.userID + i.r.Group + e2.groupID;
          (t2 = this.econf.dbConvMap.get(t2)) && (t2.conversationName = e2.groupName, t2.conversationAvatarUrl = e2.groupAvatarUrl, t2.historyMsgSeq = e2.historyMsgSeq);
        }, d);
        function d(e2, t2, r2, n2) {
          this.lg = s.a.getInstance().lg, this.st = s.a.getInstance().st, this.groupLogined = false, this.groupApplyLogined = false, this.queryGroupsCallbackList = [], this.queryGroupApplysCallbackList = [], this.econf = e2, this.bus = t2, this.cnMgr = r2, this.dbMgr = n2, this.roomIDs = /* @__PURE__ */ new Set(), this.roomMap = /* @__PURE__ */ new Map(), this.groupMap = /* @__PURE__ */ new Map(), this.groupDelIDMap = /* @__PURE__ */ new Map(), this.dbGroupApplyMap = /* @__PURE__ */ new Map(), this.registerInnerEvent();
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return c;
        });
        var s = r(2), n = r(1), i = r(0), o = function() {
          return (o = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, a = (t = function(e2, t2, r2, s2) {
          var n2, i2 = arguments.length, o2 = i2 < 3 ? t2 : null === s2 ? s2 = Object.getOwnPropertyDescriptor(t2, r2) : s2;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            o2 = Reflect.decorate(e2, t2, r2, s2);
          else
            for (var a2 = e2.length - 1; 0 <= a2; a2--)
              (n2 = e2[a2]) && (o2 = (i2 < 3 ? n2(o2) : 3 < i2 ? n2(t2, r2, o2) : n2(t2, r2)) || o2);
          return 3 < i2 && o2 && Object.defineProperty(t2, r2, o2), o2;
        }, i.X.Room), u = "mergeUser", c = (l.prototype.destroy = function(e2) {
          this.stopHB(), this.reset(), e2 && this.state !== i.lb.Disconnected && this.emitState(i.lb.Disconnected, i.kb.Success), this.dbMgr = null, this.cnMgr = null, this.bus = null, this.econf = null;
        }, l.prototype.create = function(e2, t2, r2) {
          var s2 = this, u2 = { time: new Date(), roomID: this.groupID, roomName: e2, state: this.state, config: t2 }, c2 = (this.state == i.lb.Disconnected && this.emitState(i.lb.Connecting, i.kb.ActiveCreate), { room_id: this.groupID, room_name: Object(n.k)(e2) });
          return r2 && (c2.create_if_not_exist = true), this.addAttr(c2, t2), this.cnMgr.send(r2 ? i.d.rm_enter : i.d.rm_create, c2).then(function(c3) {
            u2.state_ = s2.state;
            var l2, d, p = c3.code;
            return p ? (u2.error = Object(n.y)(6000303, c3.message, p), d = s2.state == i.lb.Connected && 103032 == p ? i.lb.Connected : i.lb.Disconnected, l2 = 6000104 === p ? i.kb.NetworkDisconnected : i.kb.CreateFailed, s2.emitState(d, d == i.lb.Connected ? i.kb.ActiveCreate : l2), s2.lg.w(a, r2 ? i.W.EnterRoom : i.W.CreateRoom, u2), 51011 == p && (s2.stopHB(), s2.reset()), Promise.reject(u2.error)) : (s2.groupName = e2, s2.subRoomID = c3.sub_room_id, s2.sessionID = c3.room_session_id, s2.userSessionID = c3.room_user_session_id, s2.enabledOfflineMsg = !!c3.enabled_offline_msg, s2.emitState(i.lb.Connected, i.kb.Success), s2.emitConv(c3.conv_msg_seq, false), r2 || (s2.localSeq = 1), s2.totalMemberCount = c3.user_count || 1, s2.startHB(c3.room_info_interval), s2.mergeConfig.listPullInterval = c3.userlist_interval, s2.mergeConfig.listMergeTimeout = c3.userlist_merge_timeout, s2.mergeConfig.attrPullInterval = c3.attributes_pull_interval, s2.mergeConfig.attrMergeTimeout = c3.attributes_merge_timeout, s2.isMergeUser = 1 == c3.userlist_enable, s2.destroyDelay = c3.destroy_delay || 0, s2.isMergeUser && (r2 && c3.userlist_seq != s2.localSeq ? s2.fetchAllUser() : (d = { userID: s2.econf.user.userID, userName: s2.econf.user.userName, userAvatarUrl: s2.econf.user.userAvatarUrl }, s2.userMap.set(d.userID, d), s2.bus.emit(i.u.RoomMemberJoined, { roomID: s2.groupID, memberList: [o({}, d)] }))), s2.emitAttr(c3.attributes, true, t2), s2.lg.i(a, r2 ? i.W.EnterRoom : i.W.CreateRoom, u2), { roomInfo: { baseInfo: { roomID: s2.groupID, roomName: e2 } } });
          });
        }, l.prototype.enter = function(e2) {
          var t2 = this;
          if (this.state === i.lb.Connected)
            return s2 = { roomID: this.groupID, roomName: this.groupName, state: this.state }, this.lg.i(a, i.W.JoinRoom, s2), Promise.resolve({ roomInfo: { baseInfo: { roomID: this.groupID, roomName: this.groupName } } });
          this.state !== i.lb.Connecting && this.emitState(i.lb.Connecting, i.kb.ActiveEnter);
          var r2 = { time: new Date(), roomID: this.groupID, state: this.state }, s2 = { room_id: this.groupID, room_name: this.groupName ? Object(n.k)(this.groupName) : void 0, room_user_session_id: this.userSessionID || 0 };
          return this.cnMgr.send(i.d.rm_enter, s2).then(function(s3) {
            return r2.state_ = t2.state, s3.code ? (r2.error = Object(n.y)(6000304, s3.message, s3.code), t2.emitState(i.lb.Disconnected, 6000104 === s3.code ? i.kb.NetworkDisconnected : i.kb.EnterFailed), t2.lg.w(a, i.W.JoinRoom, r2), 51011 == s3.code && (t2.stopHB(), t2.reset()), Promise.reject(r2.error)) : (t2.groupName = Object(n.h)(s3.room_name), t2.subRoomID = s3.sub_room_id, t2.sessionID = s3.room_session_id, t2.userSessionID = s3.room_user_session_id, t2.enabledOfflineMsg = !!s3.enabled_offline_msg, t2.emitState(i.lb.Connected, i.kb.Success), t2.emitConv(s3.conv_msg_seq, e2), t2.totalMemberCount = s3.user_count, t2.startHB(s3.room_info_interval), t2.mergeConfig.listPullInterval = s3.userlist_interval, t2.mergeConfig.listMergeTimeout = s3.userlist_merge_timeout, t2.mergeConfig.attrPullInterval = s3.attributes_pull_interval, t2.mergeConfig.attrMergeTimeout = s3.attributes_merge_timeout, t2.isMergeUser = 1 == s3.userlist_enable, t2.destroyDelay = s3.destroy_delay || 0, t2.isMergeUser && s3.userlist_seq != t2.localSeq && t2.fetchAllUser(), t2.emitAttr(s3.attributes), r2.roomName = t2.groupName, t2.lg.i(a, i.W.JoinRoom, r2), { roomInfo: { baseInfo: { roomID: t2.groupID, roomName: t2.groupName } } });
          });
        }, l.prototype.quit = function() {
          var e2 = this, t2 = { time: new Date(), roomID: this.groupID, state: this.state };
          if (this.state === i.lb.Disconnected)
            return this.lg.i(a, i.W.LeaveRoom, t2), this.destroy(false), Promise.resolve();
          var r2 = { room_id: this.groupID, room_session_id: this.sessionID, room_user_session_id: this.userSessionID, sub_room_id: this.subRoomID };
          return this.cnMgr.send(i.d.rm_quit, r2).then(function(r3) {
            if (t2.state_ = e2.state, r3.code)
              return t2.error = Object(n.y)(6000306, r3.message, r3.code), e2.lg.w(a, i.W.LeaveRoom, t2), Promise.reject(t2.error);
            e2.emitState(i.lb.Disconnected, i.kb.Success), e2.lg.i(a, i.W.LeaveRoom, t2), e2.destroy(false);
          });
        }, l.prototype.queryPageMember = function(e2) {
          var t2 = this, r2 = o({ time: new Date(), roomID: this.groupID }, e2);
          return this.fetchSvrUser(0 | e2.count, e2.nextFlag, i.j.API).then(function(e3) {
            t2.lg.i(a, i.W.QueryRoomMemberList, r2);
            var s2 = e3.users.map(function(e4) {
              return t2.createUser(e4);
            });
            return { roomID: t2.groupID, memberList: s2, nextFlag: e3.pos_flag };
          });
        }, l.prototype.queryMembers = function(e2) {
          var t2 = this, r2 = { time: new Date(), roomID: this.groupID, userIDs: e2 }, s2 = [];
          e2 = e2.filter(function(e3) {
            return !!Object(n.n)(e3) || (s2.push({ userID: e3, reason: 6000001 }), false);
          }), e2 = Array.from(new Set(e2)), e2 = { room_id: this.groupID, room_session_id: this.sessionID, room_user_session_id: this.userSessionID, sub_room_id: this.subRoomID, user_ids: e2 };
          return this.cnMgr.send(i.d.rm_userinfos, e2).then(function(e3) {
            return e3.code ? (r2.error = Object(n.y)(6000310, e3.message, e3.code), t2.lg.w(a, i.W.QueryRoomMembers, r2), Promise.reject(r2.error)) : (e3.err_list.forEach(function(e4) {
              return s2.push({ userID: e4.user_id, reason: e4.sub_code });
            }), e3 = e3.result.map(function(e4) {
              return t2.createUser(e4);
            }), t2.lg.i(a, i.W.QueryRoomMembers, r2), { roomID: t2.groupID, memberList: e3, errorUserList: s2 });
          });
        }, l.prototype.queryMemberCount = function() {
          var e2 = { roomID: this.groupID, count: this.totalMemberCount };
          return this.lg.i(a, i.W.QueryRoomMemberCount, e2), Promise.resolve(e2);
        }, l.prototype.queryAllAttr = function(e2) {
          var t2 = this, r2 = (void 0 === e2 && (e2 = false), { time: new Date(), roomID: this.groupID }), s2 = (this.queryAttrFlag = true, new Date().getTime()), o2 = 0, u2 = (this.queryAttrTask.length && (u2 = this.queryAttrTask[this.queryAttrTask.length - 1], s2 - u2 < this.mergeConfig.attrPullInterval && (o2 = this.mergeConfig.attrPullInterval - (s2 - u2) + 10)), this.queryAttrTask.push(s2), { room_id: this.groupID, room_session_id: this.sessionID, sub_room_id: this.subRoomID, attributes: { attribute_seq: this.stRoomAttributes.attribute_seq || 0, attributes: [] } }), c2 = this.cnMgr.send(i.d.rm_attr, u2).then(function(o3) {
            return o3.code ? (r2.error = Object(n.y)(6000333, o3.message, o3.code), t2.lg.w(a, i.W.QueryRoomAllAttr, r2), Promise.reject(r2.error)) : (t2.queryAttrTask = t2.queryAttrTask.filter(function(e3) {
              return e3 !== s2;
            }), t2.queryAllAttrRsp(o3, e2));
          });
          return o2 ? new Promise(function(e3) {
            setTimeout(function() {
              t2.cnMgr && c2.then(e3);
            }, o2);
          }) : c2;
        }, l.prototype.setAttr = function(e2, t2) {
          var r2 = this;
          if (this.batchFlag)
            return new Promise(function(t3, s3) {
              return r2.batchAttr(t3, s3, e2);
            });
          var s2, n2, i2 = [];
          for (s2 in e2)
            s2 && (n2 = { action: 0, attribute: { key: s2, value: e2[s2].toString(), seq: this.attrItemSeq++, auto_delete: t2.isDeleteAfterOwnerLeft ? 1 : 0 } }, this.localAttrKeySeqMap[s2] = n2.attribute.seq, i2.push(n2));
          var o2 = { room_id: this.groupID, room_session_id: this.sessionID, sub_room_id: this.subRoomID, force_modify: t2.isForce ? 1 : 0, set_member: t2.isUpdateOwner ? 1 : 0, attributes_seq: this.stRoomAttributes.attribute_seq || 0, op_fail_fast: 0, attributes: i2 };
          return this.mdfAttr(e2, o2);
        }, l.prototype.delAttr = function(e2, t2) {
          var r2 = this;
          if (this.batchFlag)
            return new Promise(function(t3, s3) {
              return r2.batchAttr(t3, s3, e2);
            });
          var s2 = [];
          e2.forEach(function(e3) {
            var t3 = r2.stRoomAttributes.attributes.find(function(t4) {
              return t4.key == e3;
            });
            t3 = { action: 1, attribute: { key: e3, value: (null == t3 ? void 0 : t3.value) || "", seq: r2.attrItemSeq++, auto_delete: 1 } };
            r2.localAttrKeySeqMap[e3] = t3.attribute.seq, s2.push(t3);
          }), t2 = { room_id: this.groupID, room_session_id: this.sessionID, sub_room_id: this.subRoomID, force_modify: t2.isForce ? 1 : 0, set_member: 1, attributes_seq: this.stRoomAttributes.attribute_seq || 0, op_fail_fast: 0, attributes: s2 };
          return this.mdfAttr({}, t2);
        }, l.prototype.beginAttr = function(e2) {
          this.batchFlag = true, this.batchOperationConfig = e2, this.batchRoomAttributes.length = 0;
        }, l.prototype.endAttr = function() {
          var e2 = this, t2 = (this.batchFlag = false, { time: new Date(), roomID: this.groupID });
          if (!this.batchRoomAttributes.length)
            return t2.error = Object(n.y)(6000331), this.lg.w(a, i.W.EndRoomAttr, t2), Promise.reject(t2.error);
          var r2 = [], s2 = {}, o2 = (this.batchRoomAttributes.forEach(function(t3) {
            var n2 = { action: t3.action, attribute: { key: t3.key, value: t3.value.toString(), seq: e2.attrItemSeq++, auto_delete: e2.batchOperationConfig.isDeleteAfterOwnerLeft ? 1 : 0 } };
            t3.action || (s2[t3.key] = t3.value), e2.localAttrKeySeqMap[n2.attribute.key] = n2.attribute.seq, r2.push(n2);
          }), { room_id: this.groupID, room_session_id: this.sessionID, sub_room_id: this.subRoomID, force_modify: this.batchOperationConfig.isForce ? 1 : 0, set_member: this.batchOperationConfig.isUpdateOwner ? 1 : 0, attributes_seq: this.stRoomAttributes.attribute_seq || 0, op_fail_fast: 1, attributes: r2 });
          return this.mdfAttr(s2, o2, true).then(function() {
            return e2.batchOperationConfig = null, e2.batchRoomAttributes.length = 0, e2.batchAttributesMap.clear(), e2.batchIndex = 0, e2.lg.i(a, i.W.EndRoomAttr, t2), { roomID: e2.groupID };
          });
        }, l.prototype.setMembersAttr = function(e2, t2, r2) {
          var s2, o2 = this, u2 = { roomID: this.groupID, attributes: e2, userIDs: t2, config: r2 }, c2 = [], l2 = (t2 = t2.filter(function(e3) {
            return !!Object(n.n)(e3) || (c2.push(e3), false);
          }), t2 = Array.from(new Set(t2)), { room_id: this.groupID, room_session_id: this.sessionID, room_user_session_id: this.userSessionID, sub_room_id: this.subRoomID, force_modify: 1, auto_save: null == r2.isDeleteAfterOwnerLeft || r2.isDeleteAfterOwnerLeft ? 0 : 1, op_fail_fast: 0, attributes: { user_ids: t2, modify_attribute: [] } });
          for (s2 in e2) {
            this.userAttrSeq++;
            var d = { action: 0, attribute: { key: s2, value: e2[s2], seq: this.userAttrSeq } };
            l2.attributes.modify_attribute.push(d);
          }
          return this.cnMgr.send(i.d.rm_user_attr_mdf, l2).then(function(t3) {
            if (t3.code)
              return u2.error = Object(n.y)(6000350, t3.message, t3.code), o2.lg.w(a, i.W.SetRoomMembersAttr, u2), Promise.reject(u2.error);
            var r3 = (s3 = function(e3, t4) {
              var r4 = "function" == typeof Symbol && e3[Symbol.iterator];
              if (!r4)
                return e3;
              var s4, n2, i2 = r4.call(e3), o3 = [];
              try {
                for (; (void 0 === t4 || 0 < t4--) && !(s4 = i2.next()).done; )
                  o3.push(s4.value);
              } catch (e4) {
                n2 = { error: e4 };
              } finally {
                try {
                  s4 && !s4.done && (r4 = i2.return) && r4.call(i2);
                } finally {
                  if (n2)
                    throw n2.error;
                }
              }
              return o3;
            }(o2.mergeSvrUserAttr(t3, e2), 2))[0], s3 = s3[1];
            return t3.user_err_list.forEach(function(e3) {
              return c2.push(e3.user_id);
            }), t3.user_err_list.length && !s3.length ? (t3 = Object(n.y)(6000350, t3.message, t3.code), Promise.reject(t3)) : (o2.bus.emit(i.u.RoomMemberAttr, { roomID: o2.groupID, infos: r3, operatedInfo: { userID: o2.econf.user.userID } }), u2.setInfos = s3, o2.lg.i(a, i.W.SetRoomMembersAttr, u2), { roomID: o2.groupID, infos: s3, errorUserList: c2 });
          });
        }, l.prototype.queryMembersAttr = function(e2) {
          var t2 = this, r2 = { roomID: this.groupID, userIDs: e2 }, s2 = { room_id: this.groupID, room_session_id: this.sessionID, room_user_session_id: this.userSessionID, sub_room_id: this.subRoomID, req_attributes: [] };
          return e2.forEach(function(e3) {
            var r3 = t2.userAttributeMap.get(e3);
            e3 = { user_id: e3, user_attributes_seq: r3 ? r3.seq : 0 };
            s2.req_attributes.push(e3);
          }), this.cnMgr.send(i.d.rm_user_attr, s2).then(function(e3) {
            return e3.code ? (r2.error = Object(n.y)(6000301, e3.message, e3.code), t2.lg.w(a, i.W.QueryRoomMembersAttr, r2), Promise.reject(r2.error)) : (e3 = t2.mergeSvrUserAttr(e3)[0].map(function(e4) {
              return e4.attributesInfo;
            }), r2.infos = e3, t2.lg.i(a, i.W.QueryRoomMembersAttr, r2), { roomID: t2.groupID, infos: e3 });
          });
        }, l.prototype.queryMemberAttrs = function(e2) {
          var t2 = this, r2 = { roomID: this.groupID, config: e2 };
          e2 = { room_id: this.groupID, room_session_id: this.sessionID, room_user_session_id: this.userSessionID, sub_room_id: this.subRoomID, pos_flag: e2.nextFlag || "", count: e2.count };
          return this.cnMgr.send(i.d.rm_user_attr_list, e2).then(function(e3) {
            if (e3.code)
              return r2.error = Object(n.y)(6000301, e3.message, e3.code), t2.lg.w(a, i.W.QueryRoomMemberAttrs, r2), Promise.reject(r2.error);
            var s2 = t2.mergeSvrUserAttr(e3)[0].map(function(e4) {
              return e4.attributesInfo;
            });
            return r2.infos = s2, t2.lg.i(a, i.W.QueryRoomMemberAttrs, r2), { roomID: t2.groupID, infos: s2, nextFlag: e3.pos_flag };
          });
        }, l.prototype.onDisConnected = function(e2) {
          e2 ? (this.stopHB(), this.emitState(i.lb.Disconnected, i.kb.NetworkDisconnected)) : this.emitState(i.lb.Connecting, i.kb.NetworkInterrupted);
        }, l.prototype.onPushKickout = function(e2) {
          var t2 = [0, i.kb.KickedOut, i.kb.RoomNotExist, i.kb.KickedOutByOtherDevice];
          return this.emitState(i.lb.Disconnected, t2[e2.reason] || 0, JSON.stringify(e2)), this.destroy(false), 2 == e2.reason;
        }, l.prototype.onPushEnter = function(e2) {
          this.totalMemberCount = e2.user_count;
          var t2 = this.createUser(e2);
          this.isMergeUser ? this.waitingMergeUser(e2.userlist_seq, t2, "enter") : this.bus.emit(i.u.RoomMemberJoined, { roomID: e2.room_id, memberList: [t2] });
        }, l.prototype.onPushQuit = function(e2) {
          this.totalMemberCount = e2.user_count;
          var t2 = this.createUser(e2);
          this.isMergeUser ? this.waitingMergeUser(e2.userlist_seq, t2, "quit") : this.bus.emit(i.u.RoomMemberLeft, { roomID: e2.room_id, memberList: [t2] });
        }, l.prototype.onPushAttrMdf = function(e2) {
          var t2, r2, s2, n2 = this, o2 = (this.lg.i(a, "onPushAttr", this.stRoomAttributes), e2.attributes), u2 = e2.attributes_seq;
          this.queryAttrFlag ? this.batchPushQueue.push(e2) : (t2 = (null == (e2 = this.stRoomAttributes) ? void 0 : e2.attribute_seq) || 0, u2 && (r2 = { delete: {}, set: {} }, 1 < u2 - t2 ? this.queryAllAttr(true) : (o2.forEach(function(e3) {
            var s3;
            t2++, e3.seq ? ((s3 = n2.stRoomAttributes.attributes.find(function(t3) {
              return t3.key == e3.key;
            })) ? (s3.value = e3.value, s3.seq = e3.seq) : n2.stRoomAttributes.attributes.push(e3), r2.set[e3.key] = e3.value) : n2.stRoomAttributes.attributes.length && (n2.stRoomAttributes.attributes.find(function(t3) {
              return t3.key == e3.key;
            }) && (r2.delete[e3.key] = ""), n2.stRoomAttributes.attributes = n2.stRoomAttributes.attributes.filter(function(t3) {
              return t3.key !== e3.key;
            }));
          }), this.stRoomAttributes.attribute_seq = u2, e2 = [], Object.keys(r2.set).length && (s2 = { action: i.jb.Set, roomAttributes: r2.set }, e2.push(s2)), Object.keys(r2.delete).length && (s2 = { action: i.jb.Delete, roomAttributes: r2.delete }, e2.push(s2)), o2.length && (u2 = 1 < e2.length ? i.u.RoomAttrBatch : i.u.RoomAttr, this.bus.emit(u2, { roomID: this.groupID, infos: e2 })))));
        }, l.prototype.onPushUserAttrMdf = function(e2) {
          e2.user_attributes = e2.push_attributes, this.bus.emit(i.u.RoomMemberAttr, { roomID: this.groupID, infos: this.mergeSvrUserAttr(e2)[0], operatedInfo: { userID: e2.user_id } });
        }, l.prototype.createFrequencyLimitError = function(e2) {
          var t2 = Object(n.y)(6000004), r2 = { roomID: this.groupID, error: t2 };
          return this.lg.w(a, e2, r2), t2;
        }, l.prototype.mdfAttr = function(e2, t2, r2) {
          var s2 = this;
          return void 0 === r2 && (r2 = false), this.cnMgr.send(i.d.rm_attr_mdf, t2).then(function(u2) {
            function c2(e3) {
              r2 && (s2.batchAttributesMap.forEach(function(t4) {
                t4.reject && t4.reject(e3);
              }), s2.batchOperationConfig = null, s2.batchRoomAttributes.length = 0, s2.batchAttributesMap.clear(), s2.batchIndex = 0);
              var t3 = { error: e3, local: s2.stRoomAttributes };
              return s2.lg.w(a, "mdfAttr", t3), Promise.reject(e3);
            }
            if (u2.code)
              return c2(Object(n.y)(6000331, u2.message, u2.code));
            if (u2.err_list.length && u2.err_list.length == t2.attributes.length)
              return c2(Object(n.y)(6000331));
            var l2, d, p = u2.attributes.attributes, h = (r2 && (l2 = [], p.forEach(function(e3) {
              var t3 = l2.findIndex(function(t4) {
                return t4.key == e3.key;
              });
              e3.seq ? (-1 != t3 && l2.splice(t3, 1), l2.push(e3)) : -1 !== t3 && l2.splice(t3, 1);
            }), p = l2), s2.stRoomAttributes.attribute_seq = u2.attributes.attribute_seq, { delete: {}, set: {} }), f = (p.forEach(function(t3) {
              t3 = o({}, t3);
              var r3 = s2.stRoomAttributes.attributes.find(function(e3) {
                return e3.key == t3.key;
              }), n2 = s2.stRoomAttributes.attributes.findIndex(function(e3) {
                return e3.key == t3.key;
              });
              r3 ? t3.seq ? (r3.value = e2[r3.key].toString(), r3.seq = t3.seq, void 0 !== h.delete[r3.key] && delete h.delete[r3.key], h.set[r3.key] = r3.value) : (s2.stRoomAttributes.attributes.splice(n2, 1), h.delete[r3.key] = "") : t3.seq && (t3.value = e2[t3.key].toString(), s2.stRoomAttributes.attributes.push(t3), void 0 !== h.delete[t3.key] && delete h.delete[t3.key], h.set[t3.key] = t3.value);
            }), s2.lg.i(a, "operaAttr", { local: s2.stRoomAttributes }), []), m = (Object.keys(h.set).length && (d = { action: i.jb.Set, roomAttributes: h.set }, f.push(d)), Object.keys(h.delete).length && (d = { action: i.jb.Delete, roomAttributes: h.delete }, f.push(d)), u2.err_list.map(function(e3) {
              return e3.key;
            }));
            return r2 && s2.batchAttributesMap.forEach(function(e3) {
              var t3, r3, n2, o2, u3, c3;
              m.length ? (t3 = m[0], n2 = false, r3 = {}, !Array.isArray(e3.data) && t3 in e3.data && !p.some(function(r4) {
                return r4.value == e3.data[t3];
              }) || Array.isArray(e3.data) && -1 != e3.data.indexOf(t3) ? (n2 = true, o2 = [], e3.action == i.jb.Delete && -1 !== (u3 = e3.data.findIndex(function(e4) {
                return e4 == t3;
              })) && (o2 = e3.data.slice(u3)), e3.action == i.jb.Set && (o2 = Object.keys(e3.data)), e3.resolve && e3.resolve({ roomID: s2.groupID, errorKeys: o2 }), r3 = { attributeList: p, data: e3.data }) : n2 ? (e3.action == i.jb.Delete && (c3 = e3.data.slice()), e3.action == i.jb.Set && (c3 = Object.keys(e3.data)), e3.resolve && e3.resolve({ roomID: s2.groupID, errorKeys: c3 })) : (r3.error = false, e3.resolve && e3.resolve({ roomID: s2.groupID, errorKeys: m })), s2.lg.i(a, "operaAttr", r3)) : e3.resolve && e3.resolve({ roomID: s2.groupID, errorKeys: [] });
            }), p.length && (d = r2 ? i.u.RoomAttrBatch : i.u.RoomAttr, s2.bus.emit(d, { roomID: s2.groupID, infos: f })), { roomID: s2.groupID, errorKeys: m };
          });
        }, l.prototype.mergeSvrUserAttr = function(e2, t2) {
          var r2 = this, s2 = [], n2 = [];
          return e2.user_attributes.forEach(function(e3) {
            var i2 = e3.user_id, a2 = e3.attributes, u2 = e3.err_list, c2 = {}, l2 = r2.userAttributeMap.get(i2) || { seq: 0, attribute: [] };
            if (e3.user_attributes_seq > l2.seq)
              l2.seq = e3.user_attributes_seq, a2.forEach(function(e4) {
                var t3 = l2.attribute.find(function(t4) {
                  return t4.key == e4.key;
                });
                t3 ? (t3.value = e4.value, c2[e4.key] = e4.value) : (l2.attribute.push(o(o({}, e4), { value: e4.value || "" })), c2[e4.key] = e4.value || "");
              });
            else if (t2)
              for (d in t2)
                !function(e4) {
                  var r3 = t2[e4], s3 = l2.attribute.find(function(t3) {
                    return t3.key == e4;
                  });
                  s3 ? s3.value = r3 : l2.attribute.push({ key: e4, value: r3 }), c2[e4] = r3;
                }(d);
            else
              l2.attribute.forEach(function(e4) {
                c2[e4.key] = e4.value;
              });
            if (r2.userAttributeMap.set(i2, l2), (a2.length || e3.user_attributes_seq) && s2.push({ attributesInfo: { userID: i2, attributes: c2 } }), t2) {
              var d, p = u2.map(function(e4) {
                return e4.key;
              }), h = {};
              for (d in t2)
                -1 == p.indexOf(d) && (h[d] = c2[d]);
              n2.push({ errorKeys: p, attributesInfo: { userID: i2, attributes: h } });
            }
          }), [s2, n2];
        }, l.prototype.queryAllAttrRsp = function(e2, t2) {
          var r2 = { isSeqUpdate: t2 = void 0 !== t2 && t2, local: this.stRoomAttributes, batchPushQueue: this.batchPushQueue };
          if (this.lg.i(a, i.W.QueryRoomAllAttr, r2), this.queryAttrFlag = false, this.batchPushQueue.length)
            try {
              this.mergeStAttr(e2.attributes);
            } catch (e3) {
              r2 = { error: true, stack: (null == e3 ? void 0 : e3.message) || (null == e3 ? void 0 : e3.stack), action: "catch mergeStAttr" }, this.lg.i(a, i.W.QueryRoomAllAttr, r2);
            }
          else {
            var s2, n2, u2 = { delete: {}, set: {} };
            r2 = (this.stRoomAttributes.attribute_seq = e2.attributes.attribute_seq, e2.attributes.attributes.length ? ((s2 = this.stRoomAttributes.attributes).map(function(e3) {
              e3.seq = 0;
            }), e2.attributes.attributes.forEach(function(e3) {
              var t3 = s2.findIndex(function(t4) {
                return t4.key == e3.key;
              });
              -1 !== t3 ? e3.seq && (s2[t3].seq = e3.seq, s2[t3].value !== e3.value && (u2.set[e3.key] = e3.value, s2[t3].value = e3.value)) : e3.key && (u2.set[e3.key] = e3.value, s2.push(o(o({}, e3), { value: e3.value })));
            }), this.stRoomAttributes.attributes = s2.filter(function(e3) {
              return 0 == e3.seq && (u2.delete[e3.key] = ""), 0 !== e3.seq;
            })) : (this.stRoomAttributes.attributes.forEach(function(e3) {
              u2.delete[e3.key] = "";
            }), this.stRoomAttributes.attributes = []), []), e2 = (Object.keys(u2.set).length && (n2 = { action: i.jb.Set, roomAttributes: u2.set }, r2.push(n2)), Object.keys(u2.delete).length && (n2 = { action: i.jb.Delete, roomAttributes: u2.delete }, r2.push(n2)), { isSeqUpdate: t2, local: this.stRoomAttributes, infoList: r2 });
            this.lg.i(a, i.W.QueryRoomAllAttr, e2), t2 && r2.length && (this.lg.i(a, "attrUpdated", u2), n2 = 1 < r2.length ? i.u.RoomAttrBatch : i.u.RoomAttr, this.bus.emit(n2, { roomID: this.groupID, infos: r2 }));
          }
          return { roomID: this.groupID, roomAttributes: this.getRecordFromStRoomAttributes() };
        }, l.prototype.addAttr = function(e2, t2) {
          if (t2 && "[object Object]" == Object.prototype.toString.call(t2.roomAttributes)) {
            var r2, s2, n2 = [];
            for (r2 in t2.roomAttributes)
              r2 && (s2 = { key: r2, value: t2.roomAttributes[r2].toString(), seq: this.attrItemSeq++, auto_delete: 1 }, n2.push(s2), this.localAttrKeySeqMap[r2] = s2.seq);
            n2.length && (e2.attributes = n2);
          }
          t2 && t2.roomDestroyDelayTime && (e2.destroy_delay = +t2.roomDestroyDelayTime);
        }, l.prototype.batchAttr = function(e2, t2, r2) {
          var s2 = this, n2 = (this.batchRoomAttributes || (this.batchRoomAttributes = []), { param: r2, batchRoomAttributes: JSON.stringify(this.batchRoomAttributes) });
          if (this.lg.i(a, "bmdfAttr", n2), Array.isArray(r2)) {
            var o2 = i.jb.Delete;
            this.batchAttributesMap.set(++this.batchIndex, { action: o2, data: r2, resolve: e2, reject: t2 }), r2.forEach(function(e3) {
              return s2.batchRoomAttributes.push({ action: o2, key: e3, value: "" });
            });
          } else {
            var u2, c2 = i.jb.Set;
            for (u2 in this.batchAttributesMap.set(++this.batchIndex, { action: c2, data: r2, resolve: e2, reject: t2 }), r2)
              this.batchRoomAttributes.push({ action: c2, key: u2, value: r2[u2] });
          }
        }, l.prototype.mergeStAttr = function(e2) {
          this.batchPushQueue.sort(function(e3, t3) {
            return e3.attribute_seq - t3.attribute_seq;
          });
          var t2 = this.batchPushQueue.findIndex(function(t3) {
            return t3.attribute_seq >= e2.attribute_seq;
          }), r2 = (this.batchPushQueue = this.batchPushQueue.slice(t2), this.batchPushQueue.unshift(e2), this.batchPushQueue[this.batchPushQueue.length - 1].attribute_seq), s2 = { delete: {}, set: {} }, n2 = this.stRoomAttributes.attributes;
          n2.map(function(e3) {
            e3.seq = 0;
          }), t2 = { localAttributes: n2, batchPushQueue: this.batchPushQueue };
          for (this.lg.i(a, "mergeAttr", t2); this.batchPushQueue.length; ) {
            var u2 = (c2 = this.batchPushQueue.shift()).attributes, c2 = c2.attribute_seq;
            r2 && c2 && c2 < r2 || u2.forEach(function(e3) {
              var t3;
              e3 && (t3 = n2.find(function(t4) {
                return t4.key == e3.key;
              }), -1 !== n2.findIndex(function(t4) {
                return t4.key == e3.key;
              }) ? e3.seq && (t3.seq = e3.seq, t3.value !== e3.value && (s2.set[null == t3 ? void 0 : t3.key] = e3.value, t3.value = e3.value)) : e3.key && e3.seq && (s2.set[e3.key] = e3.value, n2.push(o(o({}, e3), { value: e3.value }))));
            });
          }
          var l2, d = [];
          this.stRoomAttributes.attributes = n2.filter(function(e3) {
            return 0 == e3.seq && (s2.delete[e3.key] = ""), 0 !== e3.seq;
          }), Object.keys(s2.set).length && (l2 = { action: i.jb.Set, roomAttributes: s2.set }, d.push(l2)), Object.keys(s2.delete).length && (l2 = { action: i.jb.Delete, roomAttributes: s2.delete }, d.push(l2)), t2 = { local: this.stRoomAttributes, infoList: d }, this.lg.i(a, "mergeAttr", t2), d.length && this.bus.emit(i.u.RoomAttr, { roomID: this.groupID, infos: d }), this.stRoomAttributes.attribute_seq = r2;
        }, l.prototype.getRecordFromStRoomAttributes = function() {
          if (!this.stRoomAttributes.attributes.length)
            return {};
          var e2 = {};
          return this.stRoomAttributes.attributes.forEach(function(t2) {
            e2[t2.key] = t2.value;
          }), e2;
        }, l.prototype.checkRoomAttributesUpdateByHb = function(e2) {
          var t2 = this;
          this.stRoomAttributes && e2.attribute_seq > this.stRoomAttributes.attribute_seq + 1 && (this.attrTimer = setTimeout(function() {
            t2.lg && t2.queryAllAttr();
          }, this.mergeConfig.attrMergeTimeout));
        }, l.prototype.fetchSvrUser = function(e2, t2, r2) {
          var s2 = this;
          e2 = { room_id: this.groupID, room_session_id: this.sessionID, sub_room_id: this.subRoomID, count: e2, pos_flag: t2, expect_seq: this.localSeq };
          return this.cnMgr.send(i.d.rm_userlist, e2, r2).then(function(e3) {
            return e3.code || (s2.totalMemberCount = e3.user_count, s2.localSeq = e3.userlist_seq), e3;
          });
        }, l.prototype.emitConv = function(e2, t2) {
          this.bus.exec(i.u.IConnectedRoom, this.groupID, e2, this.enabledOfflineMsg && e2 && t2);
        }, l.prototype.emitState = function(e2, t2, r2) {
          this.state = e2, this.bus.emit(i.u.RoomState, { roomID: this.groupID, state: e2, event: t2, extendedData: r2 || "" });
        }, l.prototype.emitAttr = function(e2, t2, r2) {
          var s2;
          (t2 = void 0 !== t2 && t2) && null != e2 && e2.attributes && null != r2 && r2.roomAttributes && (s2 = r2.roomAttributes, e2.attributes.forEach(function(e3) {
            e3.seq && (e3.value = s2[e3.key]);
          })), this.stRoomAttributes = e2 || { attributes: [] }, this.stRoomAttributes.attributes.length && (t2 = { action: i.jb.Set, roomAttributes: this.getRecordFromStRoomAttributes() }, this.bus.emit(i.u.RoomAttr, { roomID: this.groupID, infos: [t2] }));
        }, l.prototype.startHB = function(e2) {
          var t2 = this;
          !e2 || e2 < 0 || (this.stopHB(), this.hbTimer = setInterval(function() {
            var e3;
            t2.lg && (e3 = { room_id: t2.groupID, room_session_id: t2.sessionID, sub_room_id: t2.subRoomID }, t2.cnMgr.sendHB(i.d.rm_info.cmd, e3).then(function(e4) {
              if (e4.code == i.mb)
                return t2.stopHB();
              if (e4.code) {
                if (6000104 == e4.code && t2.hbTimeoutCount++, e4.timeoutCount = t2.hbTimeoutCount, t2.hbTimeoutCount >= i.m.hbTimeoutMaxCount)
                  t2.stopHB(), t2.emitState(i.lb.Connecting, i.kb.NetworkInterrupted);
                else if (1 == e4.code || -1 != i.m.needReloginCodeList.indexOf(e4.code)) {
                  t2.stopHB();
                  var r2 = i.kb.NetworkDisconnected;
                  switch (e4.code) {
                    case 103015:
                      r2 = i.kb.ConnectTimeout;
                      break;
                    case 103021:
                      r2 = i.kb.RoomNotExist;
                  }
                  t2.emitState(i.lb.Disconnected, r2);
                }
                e4.state = t2.state;
              } else {
                var s2 = e4.max_conv_msg_seq;
                t2.hbTimeoutCount = 0, t2.totalMemberCount = e4.user_count, t2.emitConv(s2, true), e4.ulist_to && (t2.mergeConfig.listMergeTimeout = e4.ulist_to), e4.ulist_itvl && (t2.mergeConfig.listPullInterval = e4.ulist_itvl), t2.checkRoomAttributesUpdateByHb(e4), t2.lg.hbLog.push({ id: t2.groupID, time: new Date().toLocaleTimeString("zh-CN"), seq: s2 });
              }
            }));
          }, e2));
        }, l.prototype.stopHB = function() {
          this.hbTimer && clearInterval(this.hbTimer), this.hbTimeoutCount = 0, this.hbTimer = 0;
        }, l.prototype.reset = function() {
          this.localSeq = 0, this.attrItemSeq = 0, this.isMergeUser = false, this.totalMemberCount = 0, this.userMap.clear();
        }, l.prototype.createUser = function(e2) {
          return { userID: e2.user_id, userName: Object(n.h)(e2.user_name), userAvatarUrl: (null == (e2 = this.econf.dbUserMap.get(e2.user_id)) ? void 0 : e2.userAvatarUrl) || "" };
        }, l.prototype.fetchAllUser = function() {
          var e2 = this, t2 = { time: new Date(), event: "fetchAllUser", roomID: this.groupID, localSeq: this.localSeq, totalMemberCount: this.totalMemberCount }, r2 = [], s2 = function(n3) {
            n3.users.forEach(function(t3) {
              return r2.push(e2.createUser(t3));
            }), n3.pos_flag && e2.cnMgr ? e2.fetchSvrUser(100, n3.pos_flag, i.j.SDK).then(s2) : (e2.updateUserList(r2), t2.localSeq_ = e2.localSeq, t2.tatalMemberCount_ = e2.totalMemberCount, e2.lg.i(a, u, t2));
          }, n2 = Date.now(), o2 = this.lastFetchAllUserTime + this.mergeConfig.listPullInterval;
          setTimeout(function() {
            e2.lastFetchAllUserTime = n2, e2.cnMgr && e2.fetchSvrUser(100, "", i.j.SDK).then(s2);
          }, n2 < o2 ? o2 - n2 : 0);
        }, l.prototype.waitingMergeUser = function(e2, t2, r2) {
          var s2, n2, c2, l2 = this;
          e2 <= this.localSeq ? this.lg.i(a, u, { roomID: this.groupID, event: "dropMerge", action: r2, seq: e2, localSeq: this.localSeq, totalMemberCount: this.totalMemberCount }) : e2 != this.localSeq + 1 || this.mergeTimer ? (-1 == this.mergeSeqList.indexOf(e2) && this.mergeSeqList.push(e2), s2 = t2.userID, c2 = this.mergeUserList.findIndex(function(e3) {
            return e3.userID == s2;
          }), "enter" == r2 && -1 == c2 ? this.mergeUserList.push(t2) : "quit" == r2 && -1 != c2 && this.mergeUserList.splice(c2, 1), this.mergeTimer || (n2 = { roomID: this.groupID, event: "waitingPush", action: r2, seq: e2, localSeq: this.localSeq, totalMemberCount: this.totalMemberCount }, -1 == this.mergeSeqList.indexOf(this.localSeq) && this.mergeSeqList.push(this.localSeq), this.mergeTimer = setTimeout(function() {
            var e3;
            l2.lg && (l2.mergeSeqList.sort(), e3 = l2.mergeSeqList.length - 1, (e3 = l2.mergeSeqList[e3] - l2.mergeSeqList[0] == e3) ? l2.updateUserList(l2.mergeUserList) : l2.fetchAllUser(), Object.assign(n2, { time: l2.mergeConfig.listMergeTimeout, localSeq_: l2.localSeq, tatalMemberCount_: l2.totalMemberCount, continuous: e3, mergeSeqList: l2.mergeSeqList }), l2.lg.i(a, u, n2), l2.mergeTimer = 0, l2.mergeSeqList.length = 0, l2.mergeUserList.length = 0);
          }, this.mergeConfig.listMergeTimeout))) : (this.localSeq = e2, c2 = this.userMap.has(t2.userID), "enter" != r2 || c2 ? "quit" == r2 && c2 && (this.userMap.delete(t2.userID), this.bus.emit(i.u.RoomMemberLeft, { roomID: this.groupID, memberList: [o({}, t2)] })) : (this.userMap.set(t2.userID, t2), this.bus.emit(i.u.RoomMemberJoined, { roomID: this.groupID, memberList: [o({}, t2)] })), t2 = { roomID: this.groupID, event: "continuousMerge", action: r2, has: c2, seq: e2, localSeq: this.localSeq, totalMemberCount: this.totalMemberCount }, this.lg.i(a, u, t2));
        }, l.prototype.updateUserList = function(e2) {
          var t2 = this, r2 = e2.map(function(e3) {
            return e3.userID;
          }), s2 = Array.from(this.userMap.values()), n2 = (e2 = e2.filter(function(e3) {
            var r3 = !t2.userMap.has(e3.userID);
            return r3 && t2.userMap.set(e3.userID, o({}, e3)), r3;
          }), s2.filter(function(e3) {
            var s3 = -1 == r2.indexOf(e3.userID);
            return s3 && t2.userMap.delete(e3.userID), s3;
          }));
          e2.length && this.bus.emit(i.u.RoomMemberJoined, { roomID: this.groupID, memberList: e2 }), n2.length && this.bus.emit(i.u.RoomMemberLeft, { roomID: this.groupID, memberList: n2 }), s2 = { roomID: this.groupID, event: "updateMember", localSeq: this.localSeq, totalMemberCount: this.totalMemberCount, mergeIds: r2, beginLocalIds: s2.map(function(e3) {
            return e3.userID;
          }), endLocalIDs: Array.from(this.userMap.keys()), joinedUserIDs: e2.map(function(e3) {
            return e3.userID;
          }), leftUserIDs: n2.map(function(e3) {
            return e3.userID;
          }) };
          this.lg.i(a, u, s2);
        }, t([Object(n.o)(i.m.get_user_attribute_qps, i.m.get_user_attribute_interval, i.W.QueryRoomMembersAttr)], l.prototype, "queryMembersAttr", null), t([Object(n.o)(i.m.get_user_attribute_qps, i.m.get_user_attribute_interval, i.W.QueryRoomMemberAttrs)], l.prototype, "queryMemberAttrs", null), l);
        function l(e2, t2, r2, n2, o2) {
          this.type = i.r.Room, this.state = i.lb.Disconnected, this.subRoomID = "", this.enabledOfflineMsg = false, this.destroyDelay = 0, this.userMap = /* @__PURE__ */ new Map(), this.userAttributeMap = /* @__PURE__ */ new Map(), this.totalMemberCount = 0, this.isMergeUser = false, this.mergeTimer = 0, this.mergeSeqList = [], this.mergeUserList = [], this.mergeConfig = { listMergeTimeout: 0, listPullInterval: 0, attrMergeTimeout: 0, attrPullInterval: 0 }, this.lastFetchAllUserTime = 0, this.hbTimer = 0, this.hbTimeoutCount = 0, this.localSeq = 0, this.userAttrSeq = 0, this.attrItemSeq = 0, this.stRoomAttributes = { attributes: [], attribute_seq: 0 }, this.localAttrKeySeqMap = {}, this.batchOperationConfig = null, this.batchRoomAttributes = [], this.batchAttributesMap = /* @__PURE__ */ new Map(), this.batchIndex = 0, this.batchFlag = false, this.batchPushQueue = [], this.queryAttrFlag = false, this.attrTimer = null, this.queryAttrTask = [], this.groupID = e2, this.econf = t2, this.lg = s.a.getInstance().lg, this.bus = r2, this.dbMgr = n2, this.cnMgr = o2;
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return p;
        });
        t = r(4);
        var s = r.n(t), n = r(2), i = r(1), o = r(0), a = function() {
          return (a = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, u = function(e2, t2) {
          var r2 = "function" == typeof Symbol && e2[Symbol.iterator];
          if (!r2)
            return e2;
          var s2, n2, i2 = r2.call(e2), o2 = [];
          try {
            for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
              o2.push(s2.value);
          } catch (e3) {
            n2 = { error: e3 };
          } finally {
            try {
              s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
            } finally {
              if (n2)
                throw n2.error;
            }
          }
          return o2;
        }, c = function(e2, t2, r2) {
          if (r2 || 2 === arguments.length)
            for (var s2, n2 = 0, i2 = t2.length; n2 < i2; n2++)
              !s2 && n2 in t2 || ((s2 = s2 || Array.prototype.slice.call(t2, 0, n2))[n2] = t2[n2]);
          return e2.concat(s2 || Array.prototype.slice.call(t2));
        }, l = o.X.User, d = 6000007, p = (Object.defineProperty(h.prototype, "renewTokenTimeout", { get: function() {
          return 30;
        }, enumerable: false, configurable: true }), h.prototype.destroy = function() {
          this.lastLoginExecutor.notSendError = null, this.cnMgr.saveSessionID(), this.stopUserHB(true), this.stopMailHB(), this.updateLocalToken("", 0), this.st.unInitEngine(this.econf.handle, true), this.cnMgr = null, this.bus = null, this.lg = null, this.st = null, this.dr = null, this.crypto = null, this.econf = null;
        }, h.prototype.login = function(e2, t2) {
          var r2, s2 = this, n2 = t2.userName, a2 = t2.token, c2 = (t2 = t2.isOfflineLogin, u(Object(i.m)(a2, 0), 2)), d2 = c2[0], p2 = c2[1];
          if (d2 || this.lastLoginExecutor.notSendError)
            return r2 = this.lastLoginExecutor.notSendError || Object(i.y)(d2), this.lg.w(l, o.W.Login, { error: r2, expireTime: p2, token: a2 }), Promise.reject(r2);
          if (this.loginState == o.l.Reconnecting || this.loginState == o.l.Connecting)
            return new Promise(function(t3, r3) {
              s2.econf.user.userID == e2 && (s2.lastLoginExecutor.token = a2, s2.lastLoginExecutor.expireTime = p2, s2.lastLoginExecutor.resolve = t3, s2.lastLoginExecutor.reject = r3);
            });
          if (this.loginState == o.l.Connected)
            return this.econf.user.userID !== e2 ? (c2 = { error: r2 = Object(i.y)(6000111), userID: e2, oldUserID: this.econf.user.userID }, this.lg.w(l, o.W.Login, c2), Promise.reject(r2)) : (this.updateSvrToken(a2, p2), this.emitConnState(o.l.Connected, o.k.ActiveLogin), Promise.resolve());
          this.econf.user.userID = e2, n2 && (this.econf.user.userName = n2), this.lastLoginExecutor.token = a2, this.lastLoginExecutor.expireTime = p2, this.dbMgr.setUserID(e2), this.lg.init(this.econf.appID + "", e2, n2), this.initDataReport(a2);
          var h2 = { time: new Date(), action: "apicall", userID: e2, userName: n2, isOfflineLogin: t2, expireTime: p2 };
          return this.loginState = o.l.Connecting, this.loginConsumeds.length = 0, t2 ? (this.cnMgr.create(false), this.lastLoginExecutor.push = false, this.updateLocalToken(a2, p2), this.startCheckTokenExpireTime(p2), this.emitConnState(o.l.Connected, o.k.Success), this.econf.convSid || (this.econf.convSid = Date.now() + ""), this.loadDB(false, h2)) : this.cnMgr.create(false).then(function() {
            return s2.sendLoginReq(o.j.API, h2, true, true);
          }).catch(function(e3) {
            throw h2.error = e3, h2.url = s2.cnMgr.urls[0], s2.lg.w(l, o.W.Login, h2), e3 && e3.code || ((e3 = e3 || Object(i.y)(6000104, "Login error.")).code = e3.code || 6000104, e3.mesaage = e3.stack || e3.message, s2.dr.reportSDKEvent("/sdk/log", { error_message: "API.login:" + e3.mesaage }), s2.lg.upload("login error", true)), s2.lastLoginExecutor.reject && s2.lastLoginExecutor.reject(e3), s2.lastLoginExecutor.reject = null, e3;
          });
        }, h.prototype.logout = function(e2) {
          var t2, r2 = this;
          this.lg && (e2 || this.lg.i(l, o.W.Logout, { state: this.loginState }), t2 = { msg: this.k1SignLogoutBuffer, reason: e2 }, this.cnMgr.send(o.d.sw_logout, t2, e2 ? o.j.SDK : o.j.API), setTimeout(function() {
            return (!r2.econf || !r2.econf.user.userID) && r2.cnMgr.close();
          }, 100), this.onLogout(), this.loginState !== o.l.Disconnected && this.emitConnState(o.l.Disconnected, o.k.Success));
        }, h.prototype.renewToken = function(e2) {
          var t2, r2, s2 = this, n2 = (r2 = u(Object(i.m)(e2, this.econf.tokenExpireTime), 2))[0], a2 = r2[1];
          if (n2)
            return t2 = Object(i.y)(n2), this.lg.w(l, o.W.RenewToken, { error: t2, expireTime: a2, token: e2 }), Promise.reject(t2);
          if ((r2 = Date.now()) - this.lastRenewTokenTime < 500)
            return t2 = Object(i.y)(6000004), this.lg.w(l, o.W.RenewToken, t2), Promise.reject(t2);
          var c2 = { time: this.lastRenewTokenTime = r2 };
          n2 = { user_name: Object(i.k)(e2), sdk_duration: a2 - Math.floor(Date.now() / 1e3) };
          return this.cnMgr.send(o.d.sw_renew_token, n2, o.j.API).then(function(t3) {
            return t3.code ? (c2.error = Object(i.y)(6000103, t3.message, t3.code), s2.lg.w(l, o.W.RenewToken, c2), Promise.reject(c2.error)) : (s2.updateLocalToken(e2, a2), s2.startCheckTokenExpireTime(a2), s2.lg.i(l, o.W.RenewToken, c2), { token: e2 });
          });
        }, h.prototype.updateName = function(e2) {
          var t2 = this, r2 = { time: new Date(), userName: e2 }, s2 = { user_name: Object(i.k)(e2), set_flag: 1 };
          return this.cnMgr.send(o.d.user_mdf, s2).then(function(s3) {
            return s3.code ? (r2.error = Object(i.y)(d, s3.message, s3.code), t2.lg.w(l, o.W.UpdateUserName, r2), Promise.reject(r2.error)) : (t2.econf.user.userName = e2, t2.updateUserInfoSeq(s3.conv_list_seq, true), t2.lg.i(l, o.W.UpdateUserName, r2), { userName: e2 });
          });
        }, h.prototype.updateExt = function(e2) {
          var t2 = this, r2 = { time: new Date(), extendedData: e2 }, s2 = { user_name: Object(i.k)(e2), set_flag: 10 };
          return this.cnMgr.send(o.d.user_mdf, s2).then(function(s3) {
            return s3.code ? (r2.error = Object(i.y)(d, s3.message, s3.code), t2.lg.w(l, o.W.UpdateUserExt, r2), Promise.reject(r2.error)) : (t2.econf.user.extendedData = e2, t2.updateUserInfoSeq(s3.conv_list_seq, true), t2.lg.i(l, o.W.UpdateUserExt, r2), { extendedData: e2 });
          });
        }, h.prototype.updateAvatar = function(e2) {
          var t2 = this, r2 = { time: new Date(), userAvatarUrl: e2 }, s2 = { user_name: Object(i.k)(e2), set_flag: 16 };
          return this.cnMgr.send(o.d.user_mdf, s2).then(function(s3) {
            return s3.code ? (r2.error = Object(i.y)(d, s3.message, s3.code), t2.lg.w(l, o.W.UpdateUserAvatar, r2), Promise.reject(r2.error)) : (t2.econf.user.userAvatarUrl = e2, r2.isUpdSeq = t2.updateUserInfoSeq(s3.conv_list_seq, true), t2.lg.i(l, o.W.UpdateUserAvatar, r2), { userAvatarUrl: e2 });
          });
        }, h.prototype.updateRule = function(e2) {
          var t2 = this, r2 = { time: new Date(), offlinePushRule: e2 }, s2 = (e2.onlinePlatforms = e2.onlinePlatforms ? c([], u(new Set(e2.onlinePlatforms)), false) : [], e2.notToReceiveOfflinePushPlatforms = e2.notToReceiveOfflinePushPlatforms ? c([], u(new Set(e2.notToReceiveOfflinePushPlatforms)), false) : [], { user_rule: { online: e2.onlinePlatforms, disable_push: e2.notToReceiveOfflinePushPlatforms } });
          return r2.reqBody = JSON.stringify(s2), this.cnMgr.send(o.d.user_rule, s2, o.j.API).then(function(s3) {
            return s3.code ? (r2.error = Object(i.y)(d, s3.message, s3.code), t2.lg.w(l, o.W.UpdateUserRule, r2), Promise.reject(r2.error)) : (t2.econf.user.userRule = { offlinePushRule: a({}, e2) }, r2.isUpdSeq = t2.updateUserInfoSeq(s3.conv_list_seq, true), t2.lg.i(l, o.W.UpdateUserRule, r2), t2.dbMgr.setUser(t2.econf.user), t2.bus.emit(o.u.UseRuleUpdated, { userRule: a({}, t2.econf.user.userRule) }), { offlinePushRule: e2 });
          });
        }, h.prototype.querySelf = function() {
          var e2 = { userRule: a({}, this.econf.user.userRule), userFullInfo: { baseInfo: { userID: this.econf.user.userID, userName: this.econf.user.userName, userAvatarUrl: this.econf.user.userAvatarUrl }, extendedData: this.econf.user.extendedData } };
          return Promise.resolve({ selfUserInfo: e2 });
        }, h.prototype.reportZPNs = function() {
          var e2 = this.econf.ZPNsPushID;
          e2 && this.loginState == o.l.Connected && this.cnMgr.send(o.d.user_zpns, { key: e2 }, o.j.SDK);
        }, h.prototype.onConnected = function(e2) {
          var t2, r2, s2 = this;
          (e2 || this.needRelogin) && (t2 = this.econf.token || this.lastLoginExecutor.token, r2 = this.econf.tokenExpireTime || this.lastLoginExecutor.expireTime, t2 && r2 && (r2 = { time: new Date(), isReconnect: e2, action: "onConnected" }, this.needRelogin && (this.needRelogin = false, r2.action += o.d.swp_kickout.cmd), this.loginState = o.l.Reconnecting, this.sendLoginReq(o.j.SDK, r2).then(function() {
            var r3;
            e2 && (s2.initMailHB().then(function() {
              return s2.bus.exec(o.u.IConnected);
            }), r3 = s2.st.fetchZGLogConfig()[1], s2.dr.start(s2.econf.user.userID, t2, r3));
          }).catch(function(e3) {
            s2.lastLoginExecutor.reject && s2.lastLoginExecutor.reject(e3), s2.lastLoginExecutor.reject = null;
          })));
        }, h.prototype.onDisConnected = function(e2) {
          e2 ? (this.stopUserHB(e2), this.stopMailHB(), this.emitConnState(o.l.Disconnected, o.k.LoginTimeout), this.bus.emit(o.u.Error, Object(i.y)(6000104))) : this.emitConnState(o.l.Reconnecting, o.k.LoginInterrupted), this.bus.exec(o.u.IDisConnected, e2);
        }, h.prototype.onPushRedirect = function(e2) {
          e2 && e2.length && (this.lastLoginExecutor.push = true, this.createConnection(e2, o.d.swp_redirect.cmd));
        }, h.prototype.onPushKickout = function(e2) {
          var t2, r2;
          1 == e2.seq ? this.needRelogin = true : (t2 = { reason: e2.code, message: e2.key }, r2 = o.k.KickedOut, 2 == e2.code && (r2 = o.k.Unregistered, this.clearDB()), this.closeConnection(r2, JSON.stringify(t2)));
        }, h.prototype.onPushAccesshub = function(e2) {
          var t2, r2 = this;
          19 == e2._type || 20 == e2._type ? (20 == this.PCEstablished._type && this.econf.token && this.econf.tokenExpireTime && (t2 = { time: new Date(), action: "MSG_TYPE_PC_BROKEN" }, this.loginState = o.l.Reconnecting, this.cnMgr.create(false).then(function() {
            return r2.sendLoginReq(o.j.SDK, t2);
          }).catch(function(e3) {
            r2.lastLoginExecutor.reject && r2.lastLoginExecutor.reject(e3), r2.lastLoginExecutor.reject = null;
          })), Object.assign(this.PCEstablished, e2)) : 30 == e2._type && 20010 == e2.reason && (this.handleLoginRedirect(true, 6000014), this.bus.emit(o.u.Error, Object(i.y)(6000014)));
        }, h.prototype.onPushUpdateSelf = function(e2) {
          var t2 = this.econf.user, r2 = false, s2 = (1 == (s2 = e2.set_flag) && e2.hasOwnProperty("userName") ? ((n2 = Object(i.h)(e2.userName)) != t2.userName && (r2 = true), t2.userName = n2) : 10 == s2 && e2.hasOwnProperty("extendedData") ? ((n2 = Object(i.h)(e2.extendedData)) != t2.extendedData && (r2 = true), t2.extendedData = n2) : 16 == s2 && e2.hasOwnProperty("userAvatarUrl") && ((n2 = Object(i.h)(e2.userAvatarUrl)) != t2.userAvatarUrl && (r2 = true), t2.userAvatarUrl = n2), r2 && (s2 = { baseInfo: { userID: t2.userID, userName: t2.userName, userAvatarUrl: t2.userAvatarUrl }, extendedData: t2.extendedData }, this.bus.emit(o.u.UserInfoUpdated, { info: s2 })), (null == (n2 = e2.rule) ? void 0 : n2.user_custom_push) || (null == (r2 = e2.rule) ? void 0 : r2.app_custom_push)), n2 = this.isUserRuleUpdate(s2.online, s2.disable_push);
          s2 && n2 && (t2.userRule = { offlinePushRule: { notToReceiveOfflinePushPlatforms: s2.disable_push, onlinePlatforms: s2.online } }, this.bus.emit(o.u.UseRuleUpdated, { userRule: a({}, t2.userRule) })), this.updateUserInfoSeq(e2.user_info_seq), this.dbMgr.setUser(t2);
        }, h.prototype.initDataReport = function(e2, t2) {
          var r2 = (s2 = u(this.st.fetchZGLogConfig(), 2))[0], s2 = s2[1];
          if (this.lg.setUploadURL(r2), this.dr.init(this.econf.appID), this.dr.start(this.econf.user.userID, e2, t2 ? s2 : void 0), t2) {
            for (var n2 = [this.loginConsumeds[0] - t2], i2 = this.loginConsumeds.length - 1; 0 < i2; i2--)
              n2[i2] = this.loginConsumeds[i2] - this.loginConsumeds[i2 - 1];
            e2 = (r2 = this.st.advancedConfig.geoFence).id, s2 = r2.dispatch, r2 = r2.host, e2 = a({ times: n2.join(), id: e2, dispatch: s2, host: r2 }, this.PCEstablished), this.lg.i(o.X.Connection, "fetchSetting", e2), this.dr.reportSDKEvent("/sdk/init", { time_consumed: Date.now() - t2, error_message: e2.times, sdk_config: JSON.stringify(e2) });
          }
        }, h.prototype.createConnection = function(e2, t2, r2) {
          var s2 = this, n2 = { time: new Date(), action: t2, serveres: e2 };
          return (t2 = 0 == e2[0].indexOf("wss://")) && (this.cnMgr.urls = e2), this.dr.reportSDKEvent("/sdk/reconnect", { domain: e2 }), this.handleLoginRedirect(false), this.loginState = o.l.Connecting, this.cnMgr.create(t2).then(function() {
            return s2.sendLoginReq(o.j.SDK, n2, r2);
          }).catch(function(e3) {
            throw s2.handleLoginRedirect(true), s2.lastLoginExecutor.reject && s2.lastLoginExecutor.reject(e3), s2.lastLoginExecutor.reject = null, e3;
          });
        }, h.prototype.sendLoginReq = function(e2, t2, r2, n2) {
          var u2 = this;
          if (this.lastLoginExecutor.notSendError)
            return Promise.reject(this.lastLoginExecutor.notSendError);
          this.emitConnState(this.loginState, o.k.ActiveLogin), this.econf.serverUserID = s.a.fromNumber(0), this.cnMgr.sendNoRsp(o.d.sw_handshake.cmd, this.st.deviceInfo);
          var c2 = this.econf.token || this.lastLoginExecutor.token, p2 = this.econf.tokenExpireTime || this.lastLoginExecutor.expireTime, h2 = (r2 && (n2 && this.reportZPNs(), this.loginConsumeds.push(Date.now()), this.cnMgr.sendDispatch(c2), this.st.startSyncRemoteConfig(this.cnMgr, this.econf.handle, c2).then(function(e3) {
            e3 && u2.bus.exec(o.u.INetworkChange, "fetchSetting");
          })), a(a({}, this.st.deviceInfo), { user_name: Object(i.k)(this.econf.user.userName), client_stamp: Object(i.k)(this.crypto.generateNonce()), k1_sign: this.crypto.generateK1Sign(this.econf), login_token: Object(i.k)(c2), sdk_action: t2.action, sdk_duration: p2 - Math.floor(Date.now() / 1e3), sdk_server_ip: this.cnMgr.urls[0], sdk_session_timeout: !r2 && this.econf.sessionID ? this.hbMap.timeout : void 0 }));
          !r2 && this.econf.sessionID && this.hbMap.timeout > Date.now() ? h2.old_session_id = this.econf.sessionID : r2 && this.cnMgr.sessionID && (h2.old_session_id = s.a.fromString(this.cnMgr.sessionID)), this.reloginTokenBuffer && (h2.relogin_token = this.reloginTokenBuffer), this.econf.ZPNsPushID && (h2.zpns_push_id = this.econf.ZPNsPushID), e2 = this.cnMgr.send(o.d.sw_login, h2, e2);
          return n2 && (this.lastLoginExecutor.seq = h2._seq), e2.then(function(e3) {
            var s2 = e3.code;
            if (s2) {
              if ((f = e3.redirect_server) && f.length)
                return u2.createConnection(f, "redirect login error code: " + s2, r2);
              if (50106 == s2 || 50107 == s2)
                return 50106 == s2 && (u2.econf.sessionID = void 0), u2.sendLoginReq(o.j.SDK, t2, r2, n2);
              if (6000104 == s2 && u2.lastLoginExecutor.push)
                return;
              u2.lastLoginExecutor.push = false;
              var a2 = 6000014 == s2 ? Object(i.y)(6000014) : Object(i.y)(d, "[appID:" + u2.econf.appID + ",userID:" + u2.econf.user.userID + "]. " + e3.message, s2), f = 1e3 * p2;
              return 50111 == s2 && f && f < Date.now() ? u2.closeConnection(o.k.LoginInterrupted, "Token expire") : 102005 == s2 ? u2.closeConnection(o.k.KickedOut, "") : 6000104 !== s2 && (u2.lastLoginExecutor.notSendError = a2, setTimeout(function() {
                return u2.lastLoginExecutor.notSendError = null;
              }, 1e4), u2.emitConnState(o.l.Disconnected, o.k.LoginInterrupted)), t2.error = a2, r2 || u2.lg.w(l, "login", t2), Promise.reject(a2);
            }
            if (0 != s2) {
              if (!r2 && e3.register_time > u2.econf.user.registerTime)
                return u2.clearDB(), u2.closeConnection(o.k.Unregistered, ""), Promise.reject(Object(i.y)(6000011));
              u2.reloginTokenBuffer = e3.relogin_token, u2.k1SignLogoutBuffer = u2.crypto.md5Bytes(h2.k1_sign), u2.econf.sessionID = e3.rspHeader.session_id, u2.econf.serverUserID = e3.rspHeader.user_nid, u2.econf.controls = e3.rspHeader.controls, u2.st.serverOffsetTime = e3.server_timestamp - Date.now(), u2.econf.user.registerTime = e3.register_time || 0, u2.econf.convSid || (u2.econf.convSid = e3.server_timestamp + ""), u2.crypto.decryptK2Sign(e3.k2_sign, u2.econf), u2.lastLoginExecutor.push = false, u2.startUserHB(e3.hb_interval, e3.hb_timeout), u2.startMailHB(), u2.updateLocalToken(c2, p2), u2.startCheckTokenExpireTime(p2);
              try {
                var m = JSON.parse(e3.im_conf_json);
                t2.im_conf_json = m, u2.setMailHBConfig(m);
              } catch (a3) {
              }
              if (u2.emitConnState(o.l.Connected, o.k.Success), t2.seq = u2.handleLoginRedirect(true), r2)
                return u2.loadDB(true, t2);
              u2.loginEnd(false, t2);
            }
          });
        }, h.prototype.updateLocalToken = function(e2, t2) {
          this.econf.token = e2, this.econf.tokenExpireTime = t2, this.dr.start(this.econf.user.userID, e2), this.lg.renewToken(e2);
        }, h.prototype.updateSvrToken = function(e2, t2) {
          var r2, s2 = this;
          e2 && this.econf.tokenExpireTime < t2 && (r2 = { user_name: Object(i.k)(e2), sdk_duration: t2 - Math.floor(Date.now() / 1e3) }, this.cnMgr.send(o.d.sw_renew_token, r2, o.j.SDK).then(function(r3) {
            r3.code || (s2.updateLocalToken(e2, t2), s2.startCheckTokenExpireTime(t2));
          }));
        }, h.prototype.startUserHB = function(e2, t2) {
          var r2 = this;
          !e2 || e2 < 0 || (this.hbMap.timeout = 1.5 * t2 + Date.now(), this.stopUserHB(false), this.hbMap.userTimer = setInterval(function() {
            r2.lg && r2.cnMgr.sendHB(o.d.sw_hb.cmd, void 0).then(function(e3) {
              return e3.code == o.mb ? r2.stopUserHB(true) : e3.code ? (6000104 == e3.code && r2.hbMap.userTimeoutCount++, e3.timeoutCount = r2.hbMap.userTimeoutCount, (1 == e3.code || 50012 == e3.code || r2.hbMap.userTimeoutCount >= o.m.hbTimeoutMaxCount) && (r2.stopUserHB(false), r2.onConnected(true)), -1 != o.m.needReloginCodeList.indexOf(e3.code) && r2.closeConnection(o.k.LoginInterrupted, "Session id invalid"), void (e3.state = r2.loginState)) : void (e3.server_timestamp && (r2.hbMap.userTimeoutCount = 0, r2.st.serverOffsetTime = e3.server_timestamp - Date.now(), e3.hb_timeout == t2 && (r2.hbMap.timeout = 1.5 * e3.hb_timeout + Date.now())));
            });
          }, e2));
        }, h.prototype.stopUserHB = function(e2) {
          this.hbMap.userTimer && clearInterval(this.hbMap.userTimer), this.hbMap.userTimeoutCount = 0, this.hbMap.userTimer = 0, e2 && (this.renewTokenTimer && clearTimeout(this.renewTokenTimer), this.expireTokenTimer && clearTimeout(this.expireTokenTimer), this.renewTokenTimer = 0, this.expireTokenTimer = 0);
        }, h.prototype.startMailHB = function() {
          var e2 = this, t2 = this.econf.mailHBConfig.usermail_hb_interval;
          !t2 || t2 < 0 || (this.stopMailHB(), this.hbMap.mailTimer = setInterval(function() {
            var t3;
            e2.lg && (t3 = { conv_sid: e2.econf.user.convSeq || "1" }, e2.cnMgr.sendHB(o.d.conv_hb.cmd, t3).then(function(t4) {
              return t4.code == o.mb ? e2.stopMailHB() : t4.code ? (6000104 == t4.code && e2.hbMap.mailTimeoutCount++, t4.timeoutCount = e2.hbMap.mailTimeoutCount, void ((1 == t4.code || e2.hbMap.mailTimeoutCount >= o.m.hbTimeoutMaxCount || -1 != o.m.needReloginCodeList.indexOf(t4.code)) && e2.stopMailHB())) : (e2.setMailHBConfig(t4, true), e2.onTriggerHB(), void e2.bus.exec(o.u.ITriggerHB));
            }));
          }, t2));
        }, h.prototype.onTriggerHB = function() {
          this.fetchSelf(o.v.SDKHb);
        }, h.prototype.stopMailHB = function() {
          this.hbMap.mailTimer && clearInterval(this.hbMap.mailTimer), this.hbMap.mailTimeoutCount = 0, this.hbMap.mailTimer = 0;
        }, h.prototype.fetchSelf = function(e2, t2) {
          var r2, s2 = this, n2 = this.econf.user.userInfoSeq || 0, u2 = this.econf.mailHBConfig.user_info_seq;
          (!u2 || u2 <= n2) && e2 !== o.v.SDKLogin || (r2 = { time: new Date(), dbSeq: n2, hbSeq: u2, how: e2, action: t2 }, this.cnMgr.send(o.d.user_fetch_rule, null, o.j.SDK).then(function(e3) {
            var t3, n3, u3, c2, d2;
            e3.code || (c2 = { userID: e3.base_info.user_id, userName: u3 = Object(i.h)(e3.base_info.user_name), userAvatarUrl: t3 = Object(i.h)(e3.base_info.avatar), extendedData: n3 = Object(i.h)(e3.base_info.extra) }, !(d2 = s2.econf.user) || d2.userName === u3 && d2.userAvatarUrl === t3 && d2.extendedData === n3 || (Object(i.x)(c2, s2.econf), d2.userName = u3, d2.userAvatarUrl = t3, d2.extendedData = n3, u3 = { baseInfo: { userID: c2.userID, userName: c2.userName, userAvatarUrl: c2.userAvatarUrl }, extendedData: c2.extendedData }, s2.dbMgr.setUser(d2), s2.bus.emit(o.u.UserInfoUpdated, { info: u3 }), r2.isInfoUpd = true), (c2 = (null == (t3 = e3.rule) ? void 0 : t3.user_custom_push) || (null == (n3 = e3.rule) ? void 0 : n3.app_custom_push)) && ((d2 = s2.isUserRuleUpdate(c2.online, c2.disable_push)) && (s2.econf.user.userRule = { offlinePushRule: { notToReceiveOfflinePushPlatforms: c2.disable_push, onlinePlatforms: c2.online } }, s2.dbMgr.setUser(s2.econf.user), s2.bus.emit(o.u.UseRuleUpdated, { userRule: a({}, s2.econf.user.userRule) })), r2.isRuleUpd = d2), r2.isUpdSeq = s2.updateUserInfoSeq(e3.base_info.user_info_seq, true), s2.lg.i(l, "fetchSelf", r2));
          }));
        }, h.prototype.isUserRuleUpdate = function(e2, t2) {
          var r2, s2 = c([], u((null == (r2 = null == (r2 = this.econf.user.userRule) ? void 0 : r2.offlinePushRule) ? void 0 : r2.onlinePlatforms) || []), false), n2 = c([], u((null == (r2 = null == (r2 = this.econf.user.userRule) ? void 0 : r2.offlinePushRule) ? void 0 : r2.notToReceiveOfflinePushPlatforms) || []), false);
          return !(s2.every(function(t3) {
            return e2.includes(t3);
          }) && e2.every(function(e3) {
            return s2.includes(e3);
          }) && n2.every(function(e3) {
            return t2.includes(e3);
          }) && t2.every(function(e3) {
            return n2.includes(e3);
          }));
        }, h.prototype.startCheckTokenExpireTime = function(e2) {
          var t2 = this, r2 = (this.renewTokenTimer && clearTimeout(this.renewTokenTimer), this.expireTokenTimer && clearTimeout(this.expireTokenTimer), Math.min(2073600, e2 - Math.floor(Date.now() / 1e3)));
          r2 < this.renewTokenTimeout ? (this.lg.i(l, "token", "token will expire: " + r2), this.bus.emit(o.u.TokenExpire, { second: r2 })) : this.renewTokenTimer = setTimeout(function() {
            t2.lg && (t2.lg.i(l, "token", "token will expire: " + r2), t2.bus.emit(o.u.TokenExpire, { second: t2.renewTokenTimeout }));
          }, 1e3 * (r2 - this.renewTokenTimeout)), this.expireTokenTimer = setTimeout(function() {
            return t2.logout("token expire");
          }, 1e3 * (r2 - 2));
        }, h.prototype.emitConnState = function(e2, t2, r2) {
          this.loginState = e2, this.bus.emit(o.u.ConnState, { state: e2, event: t2, extendedData: r2 || "" });
        }, h.prototype.handleLoginRedirect = function(e2, t2) {
          void 0 === t2 && (t2 = 0);
          var r2 = 0;
          return this.lastLoginExecutor.seq && (r2 = this.cnMgr.responseReq(this.lastLoginExecutor.seq, e2, t2)), e2 && (this.lastLoginExecutor.seq = 0), r2;
        }, h.prototype.closeConnection = function(e2, t2) {
          this.onLogout(t2), this.lg.upload(t2), this.cnMgr.close(), this.emitConnState(o.l.Disconnected, e2, t2);
        }, h.prototype.onLogout = function(e2) {
          this.lastLoginExecutor.notSendError = null, this.stopUserHB(true), this.stopMailHB(), this.updateLocalToken("", 0), this.st.unInitEngine(this.econf.handle), this.dbMgr.unloadDB(), this.bus.exec(o.u.ILogout, e2);
        }, h.prototype.setMailHBConfig = function(e2, t2) {
          var r2 = e2.c2c_msg_seq, s2 = e2.conv_list_seq, n2 = e2.group_list_seq, i2 = e2.call_list_seq, o2 = e2.friend_list_seq, a2 = e2.friend_apply_list_seq, u2 = e2.black_list_seq, c2 = e2.conv_pinned_list_seq, l2 = e2.c2c_statemsg_seq, d2 = e2.extra_msg_list_seq, p2 = e2.user_info_seq, h2 = e2.c2c_mute_max_seq, f = e2.group_apply_list_seq, m = e2.history_c2c_msg_seq, g = e2.conv_mark_seq;
          e2 = function(e3, t3) {
            var r3 = {};
            for (n3 in e3)
              Object.prototype.hasOwnProperty.call(e3, n3) && t3.indexOf(n3) < 0 && (r3[n3] = e3[n3]);
            if (null != e3 && "function" == typeof Object.getOwnPropertySymbols)
              for (var s3 = 0, n3 = Object.getOwnPropertySymbols(e3); s3 < n3.length; s3++)
                t3.indexOf(n3[s3]) < 0 && Object.prototype.propertyIsEnumerable.call(e3, n3[s3]) && (r3[n3[s3]] = e3[n3[s3]]);
            return r3;
          }(e2, ["c2c_msg_seq", "conv_list_seq", "group_list_seq", "call_list_seq", "friend_list_seq", "friend_apply_list_seq", "black_list_seq", "conv_pinned_list_seq", "c2c_statemsg_seq", "extra_msg_list_seq", "user_info_seq", "c2c_mute_max_seq", "group_apply_list_seq", "history_c2c_msg_seq", "conv_mark_seq"]);
          Object.assign(this.econf.mailHBConfig, e2), r2 && (this.econf.mailHBConfig.c2c_msg_seq = r2), s2 && (this.econf.mailHBConfig.conv_list_seq = s2), n2 && (this.econf.mailHBConfig.group_list_seq = n2), i2 && (this.econf.mailHBConfig.call_list_seq = i2), o2 && (this.econf.mailHBConfig.friend_list_seq = o2), a2 && (this.econf.mailHBConfig.friend_apply_list_seq = a2), u2 && (this.econf.mailHBConfig.black_list_seq = u2), c2 && (this.econf.mailHBConfig.conv_pinned_list_seq = c2), l2 && (this.econf.mailHBConfig.c2c_statemsg_seq = l2), d2 && (this.econf.mailHBConfig.extra_msg_list_seq = d2), h2 && (this.econf.mailHBConfig.c2c_mute_max_seq = h2), p2 && (this.econf.mailHBConfig.user_info_seq = p2), f && (this.econf.mailHBConfig.group_apply_list_seq = f), m && (this.econf.mailHBConfig.history_c2c_msg_seq = m), g && (this.econf.mailHBConfig.conv_mark_seq = g), t2 && this.lg.hbLog.push({ id: "hb", time: new Date().toLocaleTimeString("zh-CN"), c2c: r2, conv: s2, group: n2, call: i2 });
        }, h.prototype.loginEnd = function(e2, t2) {
          this.lg.i(l, e2 ? o.W.Login : "login", t2), this.lastLoginExecutor.resolve && this.lastLoginExecutor.resolve(), this.lastLoginExecutor.resolve = null, this.updateSvrToken(this.lastLoginExecutor.token, this.lastLoginExecutor.expireTime), this.lastLoginExecutor.token = "";
        }, h.prototype.initSelf = function(e2) {
          var t2 = this, r2 = this.econf.user.userID, s2 = e2.find(function(e3) {
            return e3.userID == r2;
          });
          s2 ? (s2.userName = this.econf.user.userName || s2.userName, s2.deleteAllMsgTime || (s2.deleteAllMsgTime = 0), s2.registerTime || (s2.registerTime = 0), s2.userRule || (s2.userRule = { offlinePushRule: { onlinePlatforms: [], notToReceiveOfflinePushPlatforms: [] } }), this.lg.i(l, "getDBUser", s2)) : s2 = { userID: r2, userName: this.econf.user.userName, registerTime: 0, deleteAllMsgTime: 0, userRule: { offlinePushRule: {} }, convSeq: 0, groupSeq: 0, c2cMsgSeq: 0, msgExtraSeq: 0, c2cMsgStateSeq: 0, callSeq: 0, convPinnedSeq: 0, convMarkSeq: 0, muteSeq: 0, friendSeq: 0, friendAppSeq: 0, blacklistSeq: 0, userInfoSeq: 0, groupAppSeq: 0 }, this.econf.user.registerTime && this.econf.user.registerTime > s2.registerTime && (this.clearDB(), s2.registerTime = this.econf.user.registerTime), Object.assign(this.econf.user, s2), e2.forEach(function(e3) {
            return t2.econf.dbUserMap.set(e3.userID, e3);
          }), this.econf.dbUserMap.set(this.econf.user.userID, this.econf.user), this.fetchSelf(o.v.SDKLogin);
        }, h.prototype.initMailHB = function() {
          var e2 = this, t2 = { conv_sid: this.econf.user.convSeq || "1" };
          return this.cnMgr.send(o.d.conv_hb, t2, o.j.SDK).then(function(t3) {
            t3.code || e2.setMailHBConfig(t3);
          });
        }, h.prototype.updateUserInfoSeq = function(e2, t2) {
          var r2 = this.econf.user;
          return !(!e2 || !t2 && r2.userInfoSeq && r2.userInfoSeq + 1 != e2 || r2.userInfoSeq && r2.userInfoSeq > e2 || (r2.userInfoSeq = e2, this.dbMgr.setUser(this.econf.user), 0));
        }, h.prototype.loadDB = function(e2, t2) {
          function r2() {
            return e2 && s2.loginConsumeds.push(Date.now()), Promise.all([s2.dbMgr.getUserList().then(function(e3) {
              return s2.initSelf(e3);
            }), s2.dbMgr.getGroupList(), s2.dbMgr.getConversationList(), s2.dbMgr.getMessageExtraList()]).then(function(r3) {
              s2.loginConsumeds.push(Date.now()), s2.initDataReport(s2.econf.token, t2.time.getTime()), s2.loginEnd(true, t2), e2 && s2.fetchLogReportWhiteList(), r3[1].forEach(function(e3) {
                return s2.econf.dbGroupMap.set(e3.groupID, e3);
              }), r3[2].forEach(function(e3) {
                return s2.econf.dbConvMap.set(e3.id, e3);
              }), r3[3].forEach(function(e3) {
                return s2.econf.msgExtraMap.set(e3.id, e3);
              }), s2.bus.exec(o.u.ILogined);
            });
          }
          var s2 = this;
          return e2 ? (this.loginConsumeds.push(Date.now()), this.initMailHB().then(r2)) : r2();
        }, h.prototype.clearDB = function() {
          var e2 = this.econf.user;
          e2.userAvatarUrl = "", e2.extendedData = "", e2.deleteAllMsgTime = 0, e2.userRule = { offlinePushRule: {} }, this.dbMgr.clearDB(a({}, e2)), e2.convSeq = 0, e2.groupSeq = 0, e2.c2cMsgSeq = 0, e2.msgExtraSeq = 0, e2.c2cMsgStateSeq = 0, e2.convPinnedSeq = 0, e2.convMarkSeq = 0, e2.callSeq = 0, e2.friendSeq = 0, e2.friendAppSeq = 0, e2.blacklistSeq = 0, e2.muteSeq = 0, e2.userInfoSeq = 0, e2.groupAppSeq = 0;
        }, h.prototype.fetchLogReportWhiteList = function() {
          var e2, t2 = this, r2 = { product: "zim", biz_type: 1, appid: this.econf.appID + "", uin: encodeURIComponent(this.econf.user.userID), token: encodeURIComponent(this.econf.token), timestamp: Date.now() + "", deviceid: this.st.deviceInfo.device_id }, s2 = Object.keys(r2).map(function(e3) {
            return e3 + "=" + r2[e3];
          }).join("&"), n2 = this.st.fetchZGLogWhitelistUrl() + s2;
          i.p ? i.p.request({ url: n2, data: s2, success: function(e3) {
            try {
              var r3 = "string" == typeof e3.data ? JSON.parse(e3.data) : e3.data;
              r3 && 0 == r3.code ? t2.lg.upload("whitelist", true) : t2.lg.upload("noWhitelist");
            } catch (e4) {
            }
          }, fail: function() {
            return t2.lg.upload("errorWhitelist");
          } }) : ((e2 = new XMLHttpRequest()).onreadystatechange = function() {
            if (4 == e2.readyState && (200 <= e2.status && e2.status < 300 || 304 == e2.status))
              try {
                var r3 = JSON.parse(e2.responseText);
                r3 && 0 == r3.code ? t2.lg.upload("whitelist", true) : t2.lg.upload("noWhitelist");
              } catch (r4) {
                t2.lg.upload("errorWhitelist");
              }
          }, e2.open("GET", n2, true), e2.send());
        }, h);
        function h(e2, t2, r2, s2) {
          this.hbMap = { timeout: 0, userTimer: 0, userTimeoutCount: 0, mailTimer: 0, mailTimeoutCount: 0 }, this.loginState = o.l.Disconnected, this.loginConsumeds = [], this.needRelogin = false, this.lastLoginExecutor = { notSendError: null, seq: 0, push: false, token: "", expireTime: 0, resolve: null, reject: null }, this.lastRenewTokenTime = 0, this.PCEstablished = { _type: 0 }, this.lg = n.a.getInstance().lg, this.dr = n.a.getInstance().dr, this.st = n.a.getInstance().st, this.crypto = n.a.getInstance().crypto, this.econf = e2, this.bus = t2, this.cnMgr = r2, this.dbMgr = s2;
        }
      }, function(e, t, r) {
        e.exports = function(e2) {
          "use strict";
          var t2 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"];
          function r2(e3, t3) {
            var r3 = e3[0], s2 = e3[1], n2 = e3[2], i2 = e3[3];
            s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 & n2 | ~s2 & i2) + t3[0] - 680876936 | 0) << 7 | r3 >>> 25) + s2 | 0) & s2 | ~r3 & n2) + t3[1] - 389564586 | 0) << 12 | i2 >>> 20) + r3 | 0) & r3 | ~i2 & s2) + t3[2] + 606105819 | 0) << 17 | n2 >>> 15) + i2 | 0) & i2 | ~n2 & r3) + t3[3] - 1044525330 | 0) << 22 | s2 >>> 10) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 & n2 | ~s2 & i2) + t3[4] - 176418897 | 0) << 7 | r3 >>> 25) + s2 | 0) & s2 | ~r3 & n2) + t3[5] + 1200080426 | 0) << 12 | i2 >>> 20) + r3 | 0) & r3 | ~i2 & s2) + t3[6] - 1473231341 | 0) << 17 | n2 >>> 15) + i2 | 0) & i2 | ~n2 & r3) + t3[7] - 45705983 | 0) << 22 | s2 >>> 10) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 & n2 | ~s2 & i2) + t3[8] + 1770035416 | 0) << 7 | r3 >>> 25) + s2 | 0) & s2 | ~r3 & n2) + t3[9] - 1958414417 | 0) << 12 | i2 >>> 20) + r3 | 0) & r3 | ~i2 & s2) + t3[10] - 42063 | 0) << 17 | n2 >>> 15) + i2 | 0) & i2 | ~n2 & r3) + t3[11] - 1990404162 | 0) << 22 | s2 >>> 10) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 & n2 | ~s2 & i2) + t3[12] + 1804603682 | 0) << 7 | r3 >>> 25) + s2 | 0) & s2 | ~r3 & n2) + t3[13] - 40341101 | 0) << 12 | i2 >>> 20) + r3 | 0) & r3 | ~i2 & s2) + t3[14] - 1502002290 | 0) << 17 | n2 >>> 15) + i2 | 0) & i2 | ~n2 & r3) + t3[15] + 1236535329 | 0) << 22 | s2 >>> 10) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 & i2 | n2 & ~i2) + t3[1] - 165796510 | 0) << 5 | r3 >>> 27) + s2 | 0) & n2 | s2 & ~n2) + t3[6] - 1069501632 | 0) << 9 | i2 >>> 23) + r3 | 0) & s2 | r3 & ~s2) + t3[11] + 643717713 | 0) << 14 | n2 >>> 18) + i2 | 0) & r3 | i2 & ~r3) + t3[0] - 373897302 | 0) << 20 | s2 >>> 12) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 & i2 | n2 & ~i2) + t3[5] - 701558691 | 0) << 5 | r3 >>> 27) + s2 | 0) & n2 | s2 & ~n2) + t3[10] + 38016083 | 0) << 9 | i2 >>> 23) + r3 | 0) & s2 | r3 & ~s2) + t3[15] - 660478335 | 0) << 14 | n2 >>> 18) + i2 | 0) & r3 | i2 & ~r3) + t3[4] - 405537848 | 0) << 20 | s2 >>> 12) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 & i2 | n2 & ~i2) + t3[9] + 568446438 | 0) << 5 | r3 >>> 27) + s2 | 0) & n2 | s2 & ~n2) + t3[14] - 1019803690 | 0) << 9 | i2 >>> 23) + r3 | 0) & s2 | r3 & ~s2) + t3[3] - 187363961 | 0) << 14 | n2 >>> 18) + i2 | 0) & r3 | i2 & ~r3) + t3[8] + 1163531501 | 0) << 20 | s2 >>> 12) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 & i2 | n2 & ~i2) + t3[13] - 1444681467 | 0) << 5 | r3 >>> 27) + s2 | 0) & n2 | s2 & ~n2) + t3[2] - 51403784 | 0) << 9 | i2 >>> 23) + r3 | 0) & s2 | r3 & ~s2) + t3[7] + 1735328473 | 0) << 14 | n2 >>> 18) + i2 | 0) & r3 | i2 & ~r3) + t3[12] - 1926607734 | 0) << 20 | s2 >>> 12) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 ^ n2 ^ i2) + t3[5] - 378558 | 0) << 4 | r3 >>> 28) + s2 | 0) ^ s2 ^ n2) + t3[8] - 2022574463 | 0) << 11 | i2 >>> 21) + r3 | 0) ^ r3 ^ s2) + t3[11] + 1839030562 | 0) << 16 | n2 >>> 16) + i2 | 0) ^ i2 ^ r3) + t3[14] - 35309556 | 0) << 23 | s2 >>> 9) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 ^ n2 ^ i2) + t3[1] - 1530992060 | 0) << 4 | r3 >>> 28) + s2 | 0) ^ s2 ^ n2) + t3[4] + 1272893353 | 0) << 11 | i2 >>> 21) + r3 | 0) ^ r3 ^ s2) + t3[7] - 155497632 | 0) << 16 | n2 >>> 16) + i2 | 0) ^ i2 ^ r3) + t3[10] - 1094730640 | 0) << 23 | s2 >>> 9) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 ^ n2 ^ i2) + t3[13] + 681279174 | 0) << 4 | r3 >>> 28) + s2 | 0) ^ s2 ^ n2) + t3[0] - 358537222 | 0) << 11 | i2 >>> 21) + r3 | 0) ^ r3 ^ s2) + t3[3] - 722521979 | 0) << 16 | n2 >>> 16) + i2 | 0) ^ i2 ^ r3) + t3[6] + 76029189 | 0) << 23 | s2 >>> 9) + n2 | 0, s2 = ((s2 += ((n2 = ((n2 += ((i2 = ((i2 += ((r3 = ((r3 += (s2 ^ n2 ^ i2) + t3[9] - 640364487 | 0) << 4 | r3 >>> 28) + s2 | 0) ^ s2 ^ n2) + t3[12] - 421815835 | 0) << 11 | i2 >>> 21) + r3 | 0) ^ r3 ^ s2) + t3[15] + 530742520 | 0) << 16 | n2 >>> 16) + i2 | 0) ^ i2 ^ r3) + t3[2] - 995338651 | 0) << 23 | s2 >>> 9) + n2 | 0, s2 = ((s2 += ((i2 = ((i2 += (s2 ^ ((r3 = ((r3 += (n2 ^ (s2 | ~i2)) + t3[0] - 198630844 | 0) << 6 | r3 >>> 26) + s2 | 0) | ~n2)) + t3[7] + 1126891415 | 0) << 10 | i2 >>> 22) + r3 | 0) ^ ((n2 = ((n2 += (r3 ^ (i2 | ~s2)) + t3[14] - 1416354905 | 0) << 15 | n2 >>> 17) + i2 | 0) | ~r3)) + t3[5] - 57434055 | 0) << 21 | s2 >>> 11) + n2 | 0, s2 = ((s2 += ((i2 = ((i2 += (s2 ^ ((r3 = ((r3 += (n2 ^ (s2 | ~i2)) + t3[12] + 1700485571 | 0) << 6 | r3 >>> 26) + s2 | 0) | ~n2)) + t3[3] - 1894986606 | 0) << 10 | i2 >>> 22) + r3 | 0) ^ ((n2 = ((n2 += (r3 ^ (i2 | ~s2)) + t3[10] - 1051523 | 0) << 15 | n2 >>> 17) + i2 | 0) | ~r3)) + t3[1] - 2054922799 | 0) << 21 | s2 >>> 11) + n2 | 0, s2 = ((s2 += ((i2 = ((i2 += (s2 ^ ((r3 = ((r3 += (n2 ^ (s2 | ~i2)) + t3[8] + 1873313359 | 0) << 6 | r3 >>> 26) + s2 | 0) | ~n2)) + t3[15] - 30611744 | 0) << 10 | i2 >>> 22) + r3 | 0) ^ ((n2 = ((n2 += (r3 ^ (i2 | ~s2)) + t3[6] - 1560198380 | 0) << 15 | n2 >>> 17) + i2 | 0) | ~r3)) + t3[13] + 1309151649 | 0) << 21 | s2 >>> 11) + n2 | 0, s2 = ((s2 += ((i2 = ((i2 += (s2 ^ ((r3 = ((r3 += (n2 ^ (s2 | ~i2)) + t3[4] - 145523070 | 0) << 6 | r3 >>> 26) + s2 | 0) | ~n2)) + t3[11] - 1120210379 | 0) << 10 | i2 >>> 22) + r3 | 0) ^ ((n2 = ((n2 += (r3 ^ (i2 | ~s2)) + t3[2] + 718787259 | 0) << 15 | n2 >>> 17) + i2 | 0) | ~r3)) + t3[9] - 343485551 | 0) << 21 | s2 >>> 11) + n2 | 0, e3[0] = r3 + e3[0] | 0, e3[1] = s2 + e3[1] | 0, e3[2] = n2 + e3[2] | 0, e3[3] = i2 + e3[3] | 0;
          }
          function s(e3) {
            var t3, r3 = [];
            for (t3 = 0; t3 < 64; t3 += 4)
              r3[t3 >> 2] = e3.charCodeAt(t3) + (e3.charCodeAt(t3 + 1) << 8) + (e3.charCodeAt(t3 + 2) << 16) + (e3.charCodeAt(t3 + 3) << 24);
            return r3;
          }
          function n(e3) {
            var t3, r3 = [];
            for (t3 = 0; t3 < 64; t3 += 4)
              r3[t3 >> 2] = e3[t3] + (e3[t3 + 1] << 8) + (e3[t3 + 2] << 16) + (e3[t3 + 3] << 24);
            return r3;
          }
          function i(e3) {
            var t3, n2, i2, o2, a2, u2, c2 = e3.length, l2 = [1732584193, -271733879, -1732584194, 271733878];
            for (t3 = 64; t3 <= c2; t3 += 64)
              r2(l2, s(e3.substring(t3 - 64, t3)));
            for (n2 = (e3 = e3.substring(t3 - 64)).length, i2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], t3 = 0; t3 < n2; t3 += 1)
              i2[t3 >> 2] |= e3.charCodeAt(t3) << (t3 % 4 << 3);
            if (i2[t3 >> 2] |= 128 << (t3 % 4 << 3), t3 > 55)
              for (r2(l2, i2), t3 = 0; t3 < 16; t3 += 1)
                i2[t3] = 0;
            return o2 = (o2 = 8 * c2).toString(16).match(/(.*?)(.{0,8})$/), a2 = parseInt(o2[2], 16), u2 = parseInt(o2[1], 16) || 0, i2[14] = a2, i2[15] = u2, r2(l2, i2), l2;
          }
          function o(e3) {
            var r3, s2 = "";
            for (r3 = 0; r3 < 4; r3 += 1)
              s2 += t2[e3 >> 8 * r3 + 4 & 15] + t2[e3 >> 8 * r3 & 15];
            return s2;
          }
          function a(e3) {
            var t3;
            for (t3 = 0; t3 < e3.length; t3 += 1)
              e3[t3] = o(e3[t3]);
            return e3.join("");
          }
          function u(e3) {
            return /[\u0080-\uFFFF]/.test(e3) && (e3 = unescape(encodeURIComponent(e3))), e3;
          }
          function c(e3) {
            var t3, r3 = [], s2 = e3.length;
            for (t3 = 0; t3 < s2 - 1; t3 += 2)
              r3.push(parseInt(e3.substr(t3, 2), 16));
            return String.fromCharCode.apply(String, r3);
          }
          function l() {
            this.reset();
          }
          return "5d41402abc4b2a76b9719d911017c592" !== a(i("hello")) && function(e3, t3) {
            var r3 = (65535 & e3) + (65535 & t3);
            return (e3 >> 16) + (t3 >> 16) + (r3 >> 16) << 16 | 65535 & r3;
          }, "undefined" == typeof ArrayBuffer || ArrayBuffer.prototype.slice || function() {
            function e3(e4, t3) {
              return (e4 = 0 | e4 || 0) < 0 ? Math.max(e4 + t3, 0) : Math.min(e4, t3);
            }
            ArrayBuffer.prototype.slice = function(t3, r3) {
              var s2, n2, i2, o2, a2 = this.byteLength, u2 = e3(t3, a2), c2 = a2;
              return void 0 !== r3 && (c2 = e3(r3, a2)), u2 > c2 ? new ArrayBuffer(0) : (s2 = c2 - u2, n2 = new ArrayBuffer(s2), i2 = new Uint8Array(n2), o2 = new Uint8Array(this, u2, s2), i2.set(o2), n2);
            };
          }(), l.prototype.append = function(e3) {
            return this.appendBinary(u(e3)), this;
          }, l.prototype.appendBinary = function(e3) {
            this._buff += e3, this._length += e3.length;
            var t3, n2 = this._buff.length;
            for (t3 = 64; t3 <= n2; t3 += 64)
              r2(this._hash, s(this._buff.substring(t3 - 64, t3)));
            return this._buff = this._buff.substring(t3 - 64), this;
          }, l.prototype.end = function(e3) {
            var t3, r3, s2 = this._buff, n2 = s2.length, i2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            for (t3 = 0; t3 < n2; t3 += 1)
              i2[t3 >> 2] |= s2.charCodeAt(t3) << (t3 % 4 << 3);
            return this._finish(i2, n2), r3 = a(this._hash), e3 && (r3 = c(r3)), this.reset(), r3;
          }, l.prototype.reset = function() {
            return this._buff = "", this._length = 0, this._hash = [1732584193, -271733879, -1732584194, 271733878], this;
          }, l.prototype.getState = function() {
            return { buff: this._buff, length: this._length, hash: this._hash.slice() };
          }, l.prototype.setState = function(e3) {
            return this._buff = e3.buff, this._length = e3.length, this._hash = e3.hash, this;
          }, l.prototype.destroy = function() {
            delete this._hash, delete this._buff, delete this._length;
          }, l.prototype._finish = function(e3, t3) {
            var s2, n2, i2, o2 = t3;
            if (e3[o2 >> 2] |= 128 << (o2 % 4 << 3), o2 > 55)
              for (r2(this._hash, e3), o2 = 0; o2 < 16; o2 += 1)
                e3[o2] = 0;
            s2 = (s2 = 8 * this._length).toString(16).match(/(.*?)(.{0,8})$/), n2 = parseInt(s2[2], 16), i2 = parseInt(s2[1], 16) || 0, e3[14] = n2, e3[15] = i2, r2(this._hash, e3);
          }, l.hash = function(e3, t3) {
            return l.hashBinary(u(e3), t3);
          }, l.hashBinary = function(e3, t3) {
            var r3 = a(i(e3));
            return t3 ? c(r3) : r3;
          }, (l.ArrayBuffer = function() {
            this.reset();
          }).prototype.append = function(e3) {
            var t3, s2 = function(e4, t4, r3) {
              var s3 = new Uint8Array(e4.byteLength + t4.byteLength);
              return s3.set(new Uint8Array(e4)), s3.set(new Uint8Array(t4), e4.byteLength), r3 ? s3 : s3.buffer;
            }(this._buff.buffer, e3, true), i2 = s2.length;
            for (this._length += e3.byteLength, t3 = 64; t3 <= i2; t3 += 64)
              r2(this._hash, n(s2.subarray(t3 - 64, t3)));
            return this._buff = t3 - 64 < i2 ? new Uint8Array(s2.buffer.slice(t3 - 64)) : new Uint8Array(0), this;
          }, l.ArrayBuffer.prototype.end = function(e3) {
            var t3, r3, s2 = this._buff, n2 = s2.length, i2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            for (t3 = 0; t3 < n2; t3 += 1)
              i2[t3 >> 2] |= s2[t3] << (t3 % 4 << 3);
            return this._finish(i2, n2), r3 = a(this._hash), e3 && (r3 = c(r3)), this.reset(), r3;
          }, l.ArrayBuffer.prototype.reset = function() {
            return this._buff = new Uint8Array(0), this._length = 0, this._hash = [1732584193, -271733879, -1732584194, 271733878], this;
          }, l.ArrayBuffer.prototype.getState = function() {
            var e3 = l.prototype.getState.call(this);
            return e3.buff = function(e4) {
              return String.fromCharCode.apply(null, new Uint8Array(e4));
            }(e3.buff), e3;
          }, l.ArrayBuffer.prototype.setState = function(e3) {
            return e3.buff = function(e4, t3) {
              var r3, s2 = e4.length, n2 = new ArrayBuffer(s2), i2 = new Uint8Array(n2);
              for (r3 = 0; r3 < s2; r3 += 1)
                i2[r3] = e4.charCodeAt(r3);
              return t3 ? i2 : n2;
            }(e3.buff, true), l.prototype.setState.call(this, e3);
          }, l.ArrayBuffer.prototype.destroy = l.prototype.destroy, l.ArrayBuffer.prototype._finish = l.prototype._finish, l.ArrayBuffer.hash = function(e3, t3) {
            var s2 = function(e4) {
              var t4, s3, i3, o2, a2, u2, c2 = e4.length, l2 = [1732584193, -271733879, -1732584194, 271733878];
              for (t4 = 64; t4 <= c2; t4 += 64)
                r2(l2, n(e4.subarray(t4 - 64, t4)));
              for (s3 = (e4 = t4 - 64 < c2 ? e4.subarray(t4 - 64) : new Uint8Array(0)).length, i3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], t4 = 0; t4 < s3; t4 += 1)
                i3[t4 >> 2] |= e4[t4] << (t4 % 4 << 3);
              if (i3[t4 >> 2] |= 128 << (t4 % 4 << 3), t4 > 55)
                for (r2(l2, i3), t4 = 0; t4 < 16; t4 += 1)
                  i3[t4] = 0;
              return o2 = (o2 = 8 * c2).toString(16).match(/(.*?)(.{0,8})$/), a2 = parseInt(o2[2], 16), u2 = parseInt(o2[1], 16) || 0, i3[14] = a2, i3[15] = u2, r2(l2, i3), l2;
            }(new Uint8Array(e3)), i2 = a(s2);
            return t3 ? c(i2) : i2;
          }, l;
        }();
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return c;
        });
        var s = r(80), n = r(1), i = r(0), o = function() {
          return (o = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, a = function(e2, t2) {
          var r2 = "function" == typeof Symbol && e2[Symbol.iterator];
          if (!r2)
            return e2;
          var s2, n2, i2 = r2.call(e2), o2 = [];
          try {
            for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
              o2.push(s2.value);
          } catch (e3) {
            n2 = { error: e3 };
          } finally {
            try {
              s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
            } finally {
              if (n2)
                throw n2.error;
            }
          }
          return o2;
        }, u = function(e2, t2, r2) {
          if (r2 || 2 === arguments.length)
            for (var s2, n2 = 0, i2 = t2.length; n2 < i2; n2++)
              !s2 && n2 in t2 || ((s2 = s2 || Array.prototype.slice.call(t2, 0, n2))[n2] = t2[n2]);
          return e2.concat(s2 || Array.prototype.slice.call(t2));
        }, c = (l.prototype.encodeReq = function(e2, t2, r2, s2) {
          var n2 = ((a2 = e2.cmd != i.d.sw_handshake.cmd && e2.cmd != i.d.sw_login.cmd) || (e2.flags[0] = 0), this.encode(this.pb.zim.Header, e2)), o2 = n2.length, a2 = (t2 = this.encode(this.getProtoBean(e2.cmd, "req"), t2), (t2 = a2 ? this.crypto.encrypt(t2, s2.cryptoConfig.key2, s2.cryptoConfig.iv2) : t2).length);
          return (s2 = new Uint8Array(7 + o2 + a2))[0] = 33, s2[1] = o2 >> 8, s2[2] = o2 - (s2[1] << 8), s2.set(new Uint8Array(new Int32Array([a2]).buffer).reverse(), 3), s2.set(n2, 7), s2.set(t2, 7 + o2), r2 ? this.encodeHubPCUpwardMessage(r2, e2, s2) : s2;
        }, l.prototype.decodeHubRsp = function(e2, t2) {
          return 21 == e2 ? this.decode(this.pb.hub.PCDownwardMessage, t2.slice(13)).payload : (e2 = this.accesshubDecodeTypeMap[e2]) && this.decode(this.pb.hub[e2], t2.slice(13));
        }, l.prototype.decodeRspHeader = function(e2) {
          var t2 = (e2[1] << 8) + e2[2];
          return [this.decode(this.pb.zim.Header, e2.slice(7, 7 + t2)), t2];
        }, l.prototype.decodeRspBody = function(e2, t2, r2, s2) {
          var n2, o2 = this;
          e2 = e2.slice(7 + r2);
          if (t2 != i.d.sw_login.cmd)
            try {
              e2 = this.crypto.decrypt(e2, s2.cryptoConfig.key2, s2.cryptoConfig.iv2);
            } catch (r3) {
              n2 = true;
            }
          var a2 = [];
          try {
            var u2 = this.decode(this.getProtoBean(t2, "rsp"), e2);
            return t2 === i.d.swp_list.cmd && u2.push_requests && u2.push_requests.forEach(function(e3) {
              a2.push(e3.sub_cmd), e3.msg_body = o2.decode(o2.getProtoBean(e3.sub_cmd, "rsp"), e3.msg_body);
            }), u2;
          } catch (r3) {
            return (0, console.warn)("Rsp body decrypt error or Protobuf decode error", { cmd: t2, decryptError: n2, decodeError: true, rspBody: e2 }, r3), { code: 1, message: "Protobuf decode error for " + t2, subCmds: a2 };
          }
        }, l.prototype.encodeMediaMsgBody = function(e2, t2) {
          return e2 = e2 == i.gb.Combine ? "StMsgCombineInfo" : e2 == i.gb.Image ? "PictureMsgBody" : "VideoMsgBody", this.encode(this.pb.zim[e2], t2);
        }, l.prototype.decodeSvrMsg = function(e2, t2, r2, s2, o2) {
          var a2 = t2.msg_info, u2 = (t2 = t2.msg_svr_info, a2.msg_type), c2 = t2.sender_user_id;
          return (u2 = { type: 200 <= u2 && u2 <= 400 ? i.gb.Custom : u2, messageID: t2.msg_id, timestamp: t2.msg_time, extendedData: a2.payload ? Object(n.h)(a2.payload) : "", messageSeq: t2.conv_msg_seq, conversationID: r2, conversationType: s2, senderUserID: c2, sentStatus: i.eb.Success, direction: c2 === e2.user.userID ? i.Y.Send : i.Y.Receive, isUserInserted: false, isServerMessage: !!t2.is_server, receiptStatus: i.ab.None, isMentionAll: !!a2.at_all, mentionedUserIDs: a2.at, clientSeq: a2.msg_client_info ? a2.msg_client_info.client_msg_seq : 0, clientSid: a2.msg_client_info ? a2.msg_client_info.conv_sid : "", c2cSeq: !s2 && t2.c2c_msg_seq || 0 }).localMessageID = u2.clientSid && u2.clientSeq ? s2 + u2.clientSid + u2.clientSeq : s2 + u2.messageID, this.decodeMsgBody(e2, u2, a2.msg, t2.version), u2.type == i.gb.Custom && (u2.subType = a2.sub_msg_type || 0, u2.searchedContent = a2.searched_content), s2 == i.r.Unknown && (u2.isBroadcastMessage = true), u2.isBroadcastMessage || u2.type == i.gb.Tips || s2 == i.r.Room || (this.handleReactionList(e2, u2, t2.reactions), a2.reply_info && this.handleSvrReplyMsg(u2, a2.reply_info, o2), o2 && (u2.rootRepliedCount = o2.get(u2.messageSeq) || 0)), u2;
        }, l.prototype.decodeMsgBody = function(e2, t2, r2, s2) {
          var o2, a2, u2, c2 = t2.type;
          c2 >= i.gb.Image && c2 <= i.gb.Video ? (t2.message = "", Object.assign(t2, this.decodeMediaMsgBody(r2, t2.isServerMessage, c2, s2))) : c2 == i.gb.Revoke ? (t2.message = "", a2 = this.decode(this.pb.zim.StRevokeContent, r2), s2 = Object(n.v)(a2.msg_status).revoke, o2 = a2.msg_type, Object.assign(t2, { revokeType: a2.revoke_type, revokeStatus: s2, revokeTimestamp: a2.revoke_time, operatedUserID: a2.user_id || "", revokeExtendedData: Object(n.h)(a2.payload), originalMessageType: 200 <= o2 && o2 <= 400 ? i.gb.Custom : o2, originalTextMessageContent: "" })) : c2 == i.gb.Combine ? (t2.message = "", a2 = this.decode(this.pb.zim.StMsgCombineInfo, r2), Object.assign(t2, { messageList: t2.messageList || [], title: a2.title, summary: a2.summary, aesKey: a2.file_body.media_duration, fileName: a2.file_body.file_name || "", fileSize: +a2.file_body.file_size || 0, fileUID: a2.file_body.file_uid, fileDownloadUrl: this.handleFileProxyHost(!t2.isServerMessage, a2.file_body.file_download_url) }), t2.combineID || (s2 = this.crypto.generateNonce(), o2 = t2.conversationType, a2 = t2.localMessageID, u2 = t2.conversationID, t2.combineID = "0-" + o2 + "_" + a2 + "_" + s2 + "-" + u2)) : c2 == i.gb.Tips ? (t2.message = "", t2.direction = i.Y.Receive, Object.assign(t2, this.decodeTipsMsgBody(e2, r2))) : c2 == i.gb.Text || c2 == i.gb.Custom ? t2.message = Object(n.h)(r2) : (t2.type = i.gb.Unknown, t2.message = Array.from(r2));
        }, l.prototype.handleDBMessage = function(e2, t2) {
          return t2 && (t2.type == i.gb.Combine ? (delete (t2 = o(o({}, t2), { messageList: [] })).aesKey, delete t2.fileDownloadUrl, delete t2.fileName, delete t2.fileSize, delete t2.fileUID, delete t2.rootID, delete t2.cbID, delete t2.parentID) : t2.message && (!t2.type || t2.type == i.gb.Tips && 0 == t2.event) && (this.decodeMsgBody(e2, t2, new Uint8Array(t2.message)), t2.message = "")), t2;
        }, l.prototype.handleReplyMsgInfo = function(e2, t2) {
          var r2, s2;
          e2.repliedInfo && t2 && ((e2 = e2.repliedInfo).messageSeq = t2.messageSeq, e2.messageID = t2.messageID, e2.senderUserID = t2.senderUserID, e2.sentTime = t2.timestamp, r2 = t2.type, e2.messageInfo ? r2 == i.gb.Revoke && e2.messageInfo.type != i.gb.Revoke && (e2.messageInfo = { type: r2 }) : (r2 == i.gb.Text || r2 == i.gb.Custom ? (s2 = { type: r2, message: t2.message }, r2 == i.gb.Custom && (s2.subType = t2.subType)) : r2 >= i.gb.Image && r2 <= i.gb.Video ? (s2 = { type: r2, fileSize: t2.fileSize, fileName: t2.fileName, fileDownloadUrl: t2.fileDownloadUrl }, r2 == i.gb.Image ? (s2.thumbnailDownloadUrl = t2.thumbnailDownloadUrl, s2.largeImageDownloadUrl = t2.largeImageDownloadUrl, s2.originalImageWidth = t2.originalImageWidth, s2.originalImageHeight = t2.originalImageHeight, s2.thumbnailWidth = t2.thumbnailWidth, s2.thumbnailHeight = t2.thumbnailHeight, s2.largeImageWidth = t2.largeImageWidth, s2.largeImageHeight = t2.largeImageHeight) : r2 == i.gb.Audio ? s2.audioDuration = t2.audioDuration : r2 == i.gb.Video && (s2.videoDuration = t2.videoDuration, s2.videoFirstFrameDownloadUrl = t2.videoFirstFrameDownloadUrl, s2.videoFirstFrameWidth = t2.videoFirstFrameWidth, s2.videoFirstFrameHeight = t2.videoFirstFrameHeight)) : s2 = r2 == i.gb.Combine ? { type: r2, title: t2.title, summary: t2.summary } : { type: r2 }, e2.messageInfo = s2));
        }, l.prototype.handleSvrReplyMsg = function(e2, t2, r2) {
          var s2, o2, a2 = t2.root_msg_seq;
          r2 && r2.set(a2, Math.max(r2.get(a2) || 0, t2.reply_count)), a2 != e2.messageSeq && (r2 = 200 <= t2.msg_type && t2.msg_type <= 400 ? i.gb.Custom : t2.msg_type, e2.repliedInfo ? r2 == i.gb.Revoke && e2.repliedInfo.messageInfo.type != i.gb.Revoke && (e2.repliedInfo.messageInfo = { type: r2 }) : (s2 = t2.msg, r2 == i.gb.Text || r2 == i.gb.Custom ? (o2 = { type: r2, message: Object(n.h)(s2) }, r2 == i.gb.Custom && (o2.subType = t2.msg_type - 200)) : r2 >= i.gb.Image && r2 <= i.gb.Video ? (o2 = this.decodeMediaMsgBody(s2, t2.is_server, r2, 1)) && delete o2.fileUID : o2 = r2 == i.gb.Combine ? { type: r2, title: (s2 = this.decode(this.pb.zim.StMsgCombineInfo, s2)).title, summary: s2.summary } : { type: r2 }, e2.repliedInfo = { state: 0, messageSeq: t2.msg_seq, messageID: t2.msg_id, senderUserID: t2.sender_user_id, sentTime: t2.msg_time, messageInfo: o2, rootMessageSeq: a2, rootMessageID: t2.root_msg_id }));
        }, l.prototype.encodeMsgCombineInfo = function(e2, t2) {
          var r2;
          return e2 = this.encode(this.pb.zim.MsgCombineInfo, e2), (r2 = this.crypto).encrypt.apply(r2, u([e2], a(this.crypto.generateKeyIV(t2)), false));
        }, l.prototype.decodeMsgCombineInfo = function(e2, t2) {
          var r2;
          return e2 = (r2 = this.crypto).decrypt.apply(r2, u([e2], a(this.crypto.generateKeyIV(t2)), false)), this.decode(this.pb.zim.MsgCombineInfo, e2);
        }, l.prototype.encodeHubHTTP = function(e2, t2, r2, s2, i2, a2) {
          var u2 = s2.url.replace(/^(https?):\/\/[\w\-\.]+\//, "/"), c2 = (c2 = s2.headers) && Object.keys(c2).map(function(e3) {
            return { name: e3, val: String(c2[e3]) };
          });
          t2 = o({ txid: t2, appid: r2.appID, id_name: r2.user.userID, location: u2, service_no: a2, method_no: "GET" == s2.method ? 1 : 2, headers: c2, body: i2 ? Object(n.k)(JSON.stringify(i2)) : null }, this.accesshubConf), r2 = this.encode(this.pb.hub.HTTPRequest, t2);
          return this.createHubBody(4, e2, r2);
        }, l.prototype.encodeHubGetAppConf = function(e2, t2, r2, s2) {
          return t2 = o(o({ txid: t2, appid: r2.appID, id_name: r2.user.userID, token: s2 || r2.token, config_key: "init" }, this.accesshubConf), { is_special_customer: 0 }), s2 = this.encode(this.pb.hub.GetAppConfigRequest, t2), this.createHubBody(23, e2, s2);
        }, l.prototype.encodeHubGetSvrAddr = function(e2, t2, r2) {
          return t2 = o({ txid: t2, appid: r2.appID, id_name: r2.user.userID }, this.accesshubConf), this.st.advancedConfig.geoFence.type && (t2.geofencing_type = this.st.advancedConfig.geoFence.type, t2.geofencings = this.st.advancedConfig.geoFence.areas), r2 = this.encode(this.pb.hub.GetSvraddrRequest, t2), this.createHubBody(39, e2, r2);
        }, l.prototype.encodeHubDispatch = function(e2, t2, r2) {
          return t2 = o({ txid: t2, appid: r2.appID, id_name: r2.user.userID }, this.accesshubConf), this.st.advancedConfig.geoFence.type && (t2.geofencing_type = this.st.advancedConfig.geoFence.type, t2.geofencings = this.st.advancedConfig.geoFence.areas), r2 = this.encode(this.pb.hub.AccesshubDispatchRequest, t2), this.createHubBody(26, e2, r2);
        }, l.prototype.encodeHubPCUpwardMessage = function(e2, t2, r2) {
          return t2 = o({ txid: t2.seq, appid: t2.app_id, id_name: t2.user_id, payload: r2, service_no: 9, wss_message_type: 1, wss_path: "/ws" }, this.accesshubConf), this.st.advancedConfig.geoFence.type && (t2.geofencing_type = this.st.advancedConfig.geoFence.type, t2.geofencings = this.st.advancedConfig.geoFence.areas), r2 = this.encode(this.pb.hub.PCUpwardMessage, t2), this.createHubBody(17, e2, r2);
        }, l.prototype.createHubBody = function(e2, t2, r2) {
          var s2 = new Uint8Array(13 + r2.length);
          return s2[0] = 175, s2[1] = 0, s2[2] = e2 >> 8, s2[3] = e2 - (s2[2] << 8), s2.set(new Uint8Array(new Int32Array([r2.length]).buffer).reverse(), 4), s2.set(new Uint8Array(new Int32Array([t2]).buffer).reverse(), 8), s2[12] = 0, s2.set(r2, 13), s2;
        }, l.prototype.encode = function(e2, t2) {
          return e2 ? e2.e(new e2(t2)).finish() : [];
        }, l.prototype.decode = function(e2, t2) {
          return e2 ? e2.d(t2 || []) : {};
        }, l.prototype.getProtoBean = function(e2, t2) {
          return t2 = (e2 = this.protoBeanMap[e2]) && e2[t2], t2 = this.pb.zim[t2], e2.ext && Object.assign(t2, e2.ext), t2;
        }, l.prototype.handleFileProxyHost = function(e2, t2) {
          var r2 = this.st.advancedConfig.geoFence.host.fileproxy;
          return e2 && r2 && t2 ? t2.replace(this.st.advancedConfig.geoFence.reg, r2 + "$4") : t2;
        }, l.prototype.decodeMediaMsgBody = function(e2, t2, r2, s2) {
          var o2, a2 = null, u2 = r2 == i.gb.Image ? "PictureMsgBody" : "VideoMsgBody";
          if (1 == s2)
            try {
              a2 = this.decode(this.pb.zim[u2], e2);
            } catch (t3) {
              try {
                a2 = JSON.parse(Object(n.h)(e2));
              } catch (t4) {
              }
            }
          else
            try {
              a2 = JSON.parse(Object(n.h)(e2));
            } catch (t3) {
              try {
                a2 = this.decode(this.pb.zim[u2], e2);
              } catch (t4) {
              }
            }
          if (a2)
            return s2 = !t2 && a2.file_uid, u2 = this.handleFileProxyHost(s2, a2.file_download_url || ""), (e2 = { type: r2 }).fileUID = !t2 && a2.file_uid || "", e2.fileName = a2.file_name || "", e2.fileSize = +a2.file_size || 0, e2.fileDownloadUrl = u2, r2 == i.gb.Image ? ((o2 = a2.large_image_download_url) ? e2.largeImageDownloadUrl = this.handleFileProxyHost(s2, o2) : a2.large && (e2.largeImageDownloadUrl = u2 + a2.large), (o2 = a2.thumbnail_download_url) ? e2.thumbnailDownloadUrl = this.handleFileProxyHost(s2, o2) : a2.thumbnail && (e2.thumbnailDownloadUrl = u2 + a2.thumbnail), e2.originalImageWidth = a2.origin_width || 0, e2.originalImageHeight = a2.origin_height || 0, e2.thumbnailWidth = a2.small_width || 0, e2.thumbnailHeight = a2.small_height || 0, e2.largeImageWidth = a2.big_width || 0, e2.largeImageHeight = a2.big_height || 0) : r2 == i.gb.Audio ? e2.audioDuration = +a2.media_duration || 0 : r2 == i.gb.Video && (e2.videoDuration = +a2.media_duration || 0, (o2 = a2.video_first_frame_download_url) ? e2.videoFirstFrameDownloadUrl = this.handleFileProxyHost(s2, o2) : a2.thumbnail && (e2.videoFirstFrameDownloadUrl = u2 + a2.thumbnail), e2.videoFirstFrameWidth = a2.frame_width || 0, e2.videoFirstFrameHeight = a2.frame_height || 0), e2;
        }, l.prototype.decodeTipsMsgBody = function(e2, t2) {
          var r2 = this.decode(this.pb.zim.StTipsMsgContent, t2), s2 = r2.type, a2 = r2.op_user_info, u2 = r2.target_users, c2 = 0, l2 = (s2 < 10 ? c2 = s2 : s2 < 30 ? c2 = 8 : s2 < 50 && (c2 = 7), {});
          if (l2.event = c2, l2.operatedUser = o(o({}, Object(n.u)(a2.room_id, e2)), { userName: a2.message, memberRole: a2.reason, memberNickname: a2.sub_room_id }), l2.targetUserList = u2.map(function(t3) {
            return o(o({}, Object(n.u)(t3.room_id, e2)), { userName: t3.message, memberRole: t3.reason, memberNickname: t3.sub_room_id });
          }), 0 == c2 && (l2.message = t2), 7 == c2) {
            var d = r2.group_data_flag, p = r2.group_notice, h = r2.group_name, f = Object(n.h)(r2.group_avatar), m = {};
            switch (s2) {
              case 30:
                switch (d) {
                  case 1:
                    m.type = 3, m.groupName = h;
                    break;
                  case 2:
                    m.type = 2, m.groupNotice = p;
                    break;
                  case 4:
                    m.type = 4, m.groupAvatarUrl = f;
                    break;
                  default:
                    m.type = 1, m.groupDataFlag = d, h && (m.groupName = h), p && (m.groupNotice = p), f && (m.groupAvatarUrl = f);
                }
                break;
              case 34:
                m.type = 5, m.groupMutedInfo = Object(n.f)(r2.forbid, this.st.getRealClientTimestamp());
            }
            l2.changeInfo = m;
          } else if (8 == c2) {
            switch (m = {}, s2) {
              case 11:
                m.type = 10, m.memberRole = i.Q.Owner;
                break;
              case 12:
                m.type = 11, m.memberRole = r2.role;
                break;
              case 13:
                m.type = 12, m.muteExpiredTime = r2.forbid_expire_time;
            }
            l2.changeInfo = m;
          }
          return l2;
        }, l.prototype.handleReactionList = function(e2, t2, r2) {
          var s2, n2, o2;
          r2 && t2.type != i.gb.Revoke ? (s2 = r2.is_detail, r2 = r2.reaction_list, n2 = [], o2 = e2.mailHBConfig.reaction_brief_len, r2 && r2.forEach(function(r3) {
            var i2 = r3.user_reaction.slice(0, o2).map(function(e3) {
              return { userID: e3.userID };
            });
            (i2 = { conversationID: t2.conversationID, conversationType: t2.conversationType, messageID: t2.messageID, userList: i2, totalCount: r3.total_user_count, reactionType: r3.reaction_key, isSelfIncluded: false }).isSelfIncluded = s2 ? i2.userList.some(function(t3) {
              return t3.userID == e2.user.userID;
            }) : !!r3.include_self, n2.push(i2);
          }), t2.reactions = n2) : t2.reactions = [];
        }, l);
        function l(e2, t2) {
          this.crypto = e2, this.st = t2, this.pb = s.a, this.protoBeanMap = Object.values(i.d).reduce(function(e3, t3) {
            return 0 != t3.cmd.indexOf("/") && (t3.cmd = "/im/" + t3.cmd), e3[t3.cmd] = t3, e3;
          }, {}), this.accesshubDecodeTypeMap = { 5: "HTTPResponse", 40: "GetSvraddrResponse", 24: "GetAppConfigResponse", 27: "AccesshubDispatchResponse", 3: "CloseConnection", 22: "Redirect", 19: "PCEstablished", 30: "PushException" }, this.accesshubConf = { mode_no: 1, sdk_type: 4, zegoconn_version: 3, zegoconn_run_env: n.p ? 2 : 1 };
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return I;
        }), t = r(4), t = r.n(t), (r = r(10)).util.Long = t.a, r.configure();
        const s = r.Reader, n = r.Writer;
        s.c = s.create, n.c = n.create;
        var i = n.prototype.bool, o = (n.prototype.bl = function(e2) {
          return i.call(this, e2);
        }, n.prototype.bytes), a = (n.prototype.b = function(e2) {
          return o.call(this, e2);
        }, n.prototype.int32), u = (n.prototype.i = function(e2) {
          return a.call(this, e2);
        }, n.prototype.int64), c = (n.prototype.i6 = function(e2) {
          return u.call(this, e2);
        }, n.prototype.uint32), l = (n.prototype.u = function(e2) {
          return c.call(this, e2);
        }, n.prototype.uint64), d = (n.prototype.u6 = function(e2) {
          return l.call(this, e2);
        }, n.prototype.string), p = (n.prototype.s = function(e2) {
          return d.call(this, e2);
        }, n.prototype.fork), h = (n.prototype.f = function(e2) {
          return p.call(this, e2);
        }, n.prototype.ldelim), f = (n.prototype.l = function(e2) {
          return h.call(this, e2);
        }, s.prototype.bool), m = (s.prototype.bl = function(e2) {
          return f.call(this, e2);
        }, s.prototype.bytes), g = (s.prototype.b = function(e2) {
          return m.call(this, e2);
        }, s.prototype.int32), _ = (s.prototype.i = function(e2) {
          return g.call(this, e2);
        }, s.prototype.int64), b = (s.prototype.i6 = function(e2) {
          return e2 ? +_.call(this).toString() : _.call(this);
        }, s.prototype.uint32), v = (s.prototype.u = function(e2) {
          return b.call(this, e2);
        }, s.prototype.uint64), y = (s.prototype.u6 = function(e2) {
          return e2 ? +v.call(this).toString() : v.call(this);
        }, s.prototype.string), M = (s.prototype.s = function(e2) {
          return y.call(this, e2);
        }, s.prototype.skipType);
        function k(e2, t2) {
          if (t2)
            for (let r2 = Object.keys(t2), s2 = 0; s2 < r2.length; ++s2)
              t2[r2[s2]] && (e2[r2[s2]] = t2[r2[s2]]);
        }
        s.prototype.sk = function(e2) {
          return M.call(this, e2);
        };
        const I = r.roots.default || (r.roots.default = {});
        I.hub = (() => {
          const e2 = {};
          function t2(e3) {
            k(this, e3);
          }
          function r2(e3) {
            k(this, e3);
          }
          function i2() {
            this.headers = [], this.txid = 0;
          }
          function o2(e3) {
            k(this, e3);
          }
          function a2() {
          }
          function u2() {
          }
          function c2() {
            this.groups = [], this.opt_ports = [], this.wss_groups = [];
          }
          function l2() {
            this.txid = 0;
          }
          function d2() {
          }
          function p2(e3) {
            k(this, e3);
          }
          function h2() {
            this.txid = 0;
          }
          function f2() {
          }
          function m2(e3) {
            k(this, e3);
          }
          function g2() {
            this.txid = 0;
          }
          function _2() {
          }
          function b2(e3) {
            k(this, e3);
          }
          function v2() {
            this.txid = 0, this.groups = [], this.opt_ports = [], this.wss_groups = [];
          }
          function y2() {
          }
          function M2() {
            this.quic_nodes = [], this.mtcp_nodes = [], this.wss_nodes = [];
          }
          function S() {
          }
          function D() {
          }
          function q() {
          }
          return e2.HTTPRequest = (t2.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.txid && t3.u(8).u6(e3.txid), e3.appid && t3.u(16).u(e3.appid), e3.mode && t3.u(34).s(e3.mode), e3.id_name && t3.u(42).s(e3.id_name), e3.stick && t3.u(58).s(e3.stick), e3.service && t3.u(66).s(e3.service), e3.location && t3.u(74).s(e3.location), e3.method && t3.u(82).s(e3.method), e3.headers && e3.headers.length)
              for (let r3 = 0; r3 < e3.headers.length; ++r3)
                I.hub.HTTPRequest.HTTPHeader.e(e3.headers[r3], t3.u(90).f()).l();
            return e3.body && t3.u(98).b(e3.body), e3.mode_no && t3.u(112).i(e3.mode_no), e3.service_no && t3.u(120).i(e3.service_no), e3.method_no && t3.u(128).i(e3.method_no), e3.sdk_type && t3.u(136).i(e3.sdk_type), e3.zegoconn_run_env && t3.u(144).i(e3.zegoconn_run_env), e3.zegoconn_version && t3.u(152).u(e3.zegoconn_version), t3;
          }, t2.HTTPHeader = (r2.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.name && t3.u(10).s(e3.name), e3.val && t3.u(18).s(e3.val), t3;
          }, r2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.HTTPRequest.HTTPHeader();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.name = e3.s();
                  break;
                case 2:
                  n2.val = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, r2), t2), e2.HTTPResponse = (i2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.HTTPResponse();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.txid = e3.u6(1);
                  break;
                case 2:
                  n2.headers.push(I.hub.HTTPRequest.HTTPHeader.d(e3, e3.u()));
                  break;
                case 3:
                  n2.status_code = e3.i();
                  break;
                case 4:
                  n2.body = e3.b();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, i2), e2.PCUpwardMessage = (o2.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.txid && t3.u(8).u6(e3.txid), e3.appid && t3.u(16).u(e3.appid), e3.mode_no && t3.u(32).i(e3.mode_no), e3.id_name && t3.u(42).s(e3.id_name), e3.service_no && t3.u(48).i(e3.service_no), e3.payload && t3.u(66).b(e3.payload), e3.sdk_type && t3.u(72).i(e3.sdk_type), e3.wss_message_type && t3.u(80).u(e3.wss_message_type), e3.wss_path && t3.u(90).s(e3.wss_path), e3.zegoconn_version && t3.u(104).u(e3.zegoconn_version), e3.zegoconn_run_env && t3.u(112).i(e3.zegoconn_run_env), e3.geofencing_type && t3.u(136).u(e3.geofencing_type), e3.geofencings && e3.geofencings.length)
              for (let r3 = 0; r3 < e3.geofencings.length; ++r3)
                t3.u(144).u(e3.geofencings[r3]);
            return t3;
          }, o2), e2.PCDownwardMessage = (a2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.PCDownwardMessage();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.payload = e3.b();
                  break;
                case 2:
                  n2.wss_message_type = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, a2), e2.PCEstablished = (u2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.PCEstablished();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.elapse = e3.u();
                  break;
                case 2:
                  n2.from = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, u2), e2.Redirect = (c2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.Redirect();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.rand = e3.s();
                  break;
                case 2:
                  n2.secret = e3.s();
                  break;
                case 3:
                  n2.groups.push(I.hub.AccesshubDispatchGroup.d(e3, e3.u()));
                  break;
                case 4:
                  if (2 == (7 & i3))
                    for (var o3 = e3.u() + e3.pos; e3.pos < o3; )
                      n2.opt_ports.push(e3.u());
                  else
                    n2.opt_ports.push(e3.u());
                  break;
                case 5:
                  n2.wss_groups.push(I.hub.WssAccesshubDispatchGroup.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, c2), e2.PushException = (l2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.PushException();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.reason = e3.i();
                  break;
                case 2:
                  n2.msg = e3.s();
                  break;
                case 3:
                  n2.txid = e3.u6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, l2), e2.CloseConnection = (d2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.CloseConnection();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.reason = e3.i();
                  break;
                case 2:
                  n2.msg = e3.s();
                  break;
                case 3:
                  n2.action = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, d2), e2.GetSvraddrRequest = (p2.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.txid && t3.u(8).u6(e3.txid), e3.appid && t3.u(16).u(e3.appid), e3.mode_no && t3.u(32).i(e3.mode_no), e3.id_name && t3.u(42).s(e3.id_name), e3.sdk_type && t3.u(48).i(e3.sdk_type), e3.zegoconn_run_env && t3.u(56).i(e3.zegoconn_run_env), e3.zegoconn_version && t3.u(64).u(e3.zegoconn_version), e3.geofencing_type && t3.u(80).u(e3.geofencing_type), e3.geofencings && e3.geofencings.length)
              for (let r3 = 0; r3 < e3.geofencings.length; ++r3)
                t3.u(88).u(e3.geofencings[r3]);
            return t3;
          }, p2), e2.GetSvraddrResponseData = (h2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.GetSvraddrResponseData();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.txid = e3.u6(1);
                  break;
                case 2:
                  n2.geofencing_id = e3.u();
                  break;
                case 3:
                  n2.svraddr_ver = e3.u();
                  break;
                case 5:
                  n2.zegons = e3.s();
                  break;
                case 7:
                  n2.accesshub = e3.s();
                  break;
                case 9:
                  n2.logreport = e3.s();
                  break;
                case 11:
                  n2.detaillog = e3.s();
                  break;
                case 13:
                  n2.stunsvr = e3.s();
                  break;
                case 15:
                  n2.zimfile = e3.s();
                  break;
                case 17:
                  n2.accesshub_sni = e3.s();
                  break;
                case 18:
                  n2.accesshub_web = e3.s();
                  break;
                case 19:
                  n2.logreport_web = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, h2), e2.GetSvraddrResponse = (f2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.GetSvraddrResponse();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.i();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  Object.assign(n2, I.hub.GetSvraddrResponseData.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, f2), e2.GetAppConfigRequest = (m2.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.txid && t3.u(8).u6(e3.txid), e3.appid && t3.u(16).u(e3.appid), e3.mode_no && t3.u(32).i(e3.mode_no), e3.id_name && t3.u(42).s(e3.id_name), e3.config_key && t3.u(50).s(e3.config_key), e3.token && t3.u(82).s(e3.token), e3.sdk_type && t3.u(88).i(e3.sdk_type), e3.zegoconn_version && t3.u(96).u(e3.zegoconn_version), e3.zegoconn_run_env && t3.u(104).i(e3.zegoconn_run_env), e3.is_special_customer && t3.u(128).u(e3.is_special_customer), t3;
          }, m2), e2.GetAppConfigResponseData = (g2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.GetAppConfigResponseData();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.txid = e3.u6(1);
                  break;
                case 2:
                  Object.assign(n2, I.hub.InitConfig.d(e3.b()));
                  break;
                case 3:
                  n2.ts = e3.u6();
                  break;
                case 4:
                  n2.etag = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, g2), e2.GetAppConfigResponse = (_2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.GetAppConfigResponse();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.i();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  Object.assign(n2, I.hub.GetAppConfigResponseData.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, _2), e2.AccesshubDispatchRequest = (b2.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.txid && t3.u(8).u6(e3.txid), e3.appid && t3.u(16).u(e3.appid), e3.mode_no && t3.u(32).i(e3.mode_no), e3.id_name && t3.u(42).s(e3.id_name), e3.sdk_type && t3.u(48).i(e3.sdk_type), e3.zegoconn_version && t3.u(56).u(e3.zegoconn_version), e3.zegoconn_run_env && t3.u(64).i(e3.zegoconn_run_env), e3.geofencing_type && t3.u(88).u(e3.geofencing_type), e3.geofencings && e3.geofencings.length)
              for (let r3 = 0; r3 < e3.geofencings.length; ++r3)
                t3.u(96).u(e3.geofencings[r3]);
            return t3;
          }, b2), e2.AccesshubDispatchResponseData = (v2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.AccesshubDispatchResponseData();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.txid = e3.u6(1);
                  break;
                case 2:
                  n2.rand = e3.s();
                  break;
                case 3:
                  n2.secret = e3.s();
                  break;
                case 4:
                  n2.groups.push(I.hub.AccesshubDispatchGroup.d(e3, e3.u()));
                  break;
                case 5:
                  if (2 == (7 & i3))
                    for (var o3 = e3.u() + e3.pos; e3.pos < o3; )
                      n2.opt_ports.push(e3.u());
                  else
                    n2.opt_ports.push(e3.u());
                  break;
                case 6:
                  n2.wss_groups.push(I.hub.WssAccesshubDispatchGroup.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, v2), e2.AccesshubDispatchResponse = (y2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.AccesshubDispatchResponse();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.i();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  Object.assign(n2, I.hub.AccesshubDispatchResponseData.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, y2), e2.AccesshubDispatchGroup = (M2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.AccesshubDispatchGroup();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group = e3.s();
                  break;
                case 2:
                  n2.quic_nodes.push(e3.s());
                  break;
                case 3:
                  n2.mtcp_nodes.push(e3.s());
                  break;
                case 4:
                  n2.wss_nodes.push(e3.s());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, M2), e2.WssAccesshubDispatchGroup = (S.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.WssAccesshubDispatchGroup();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group = e3.s();
                  break;
                case 2:
                  n2.host = e3.s();
                  break;
                case 3:
                  n2.main_domain = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, S), e2.AppConfig = (D.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.AppConfig();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.test_id = e3.i();
                  break;
                case 2:
                  n2.domain = e3.s();
                  break;
                case 3:
                  n2.flexible_domain = e3.s();
                  break;
                case 4:
                  n2.replace_flexible_domain = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, D), e2.InitConfig = (q.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            for (var r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.hub.InitConfig(); e3.pos < r3; ) {
              var i3 = e3.u();
              i3 >>> 3 == 1 ? Object.assign(n2, I.hub.AppConfig.d(e3, e3.u())) : e3.sk(7 & i3);
            }
            return n2;
          }, q), e2;
        })(), I.zim = (() => {
          const e2 = {};
          function t2() {
          }
          function r2(e3) {
            k(this, e3);
          }
          function i2() {
            this.server_timestamp = 0;
          }
          function o2(e3) {
            k(this, e3);
          }
          function a2(e3) {
            k(this, e3);
          }
          function u2() {
            this.server_ips = [], this.redirect_server = [], this.server_timestamp = 0, this.register_time = 0;
          }
          function c2() {
            this.push_requests = [], this.send_time = 0;
          }
          function l2() {
          }
          function d2(e3) {
            k(this, e3);
          }
          function p2(e3) {
            this.conv_sid = "", this.client_msg_seq = 0, k(this, e3);
          }
          function h2(e3) {
            k(this, e3);
          }
          function f2(e3) {
            k(this, e3);
          }
          function m2(e3) {
            k(this, e3);
          }
          function g2(e3) {
            k(this, e3);
          }
          function _2(e3) {
            this.send_user_map = {}, this.child = [], k(this, e3);
          }
          function b2(e3) {
            k(this, e3);
          }
          function v2(e3) {
            k(this, e3);
          }
          function y2(e3) {
            k(this, e3);
          }
          function M2() {
            this.msg_id = "", this.msg_time = 0;
          }
          function S() {
          }
          function D(e3) {
            this.at = [], k(this, e3);
          }
          function q() {
            this.msg_id = "", this.conv_msg_seq = 0, this.c2c_msg_seq = 0, this.msg_time = 0;
          }
          function C() {
          }
          function w() {
            this.msglist_seq = 0;
          }
          function A() {
          }
          function R(e3) {
            k(this, e3);
          }
          function x() {
            this.err_list = [], this.new_err_list = [], this.call_seq = 0, this.call_list_seq = 0, this.create_time = 0;
          }
          function T(e3) {
            k(this, e3);
          }
          function O() {
            this.err_list = [], this.new_err_list = [], this.call_seq = 0, this.call_list_seq = 0, this.call_user_session_id = 0;
          }
          function L() {
            this.user_state = 0, this.accept_time = 0, this.quit_time = 0, this.residue_timeout_time = 0, this.user_session_id = 0;
          }
          function E() {
            this.user_list = [], this.call_seq = 0, this.now_time = 0;
          }
          function U() {
            this.calls = [], this.cur_list_seq = 0, this.max_list_seq = 0;
          }
          function P() {
            this.call_user_list = [], this.create_time = 0, this.call_list_seq = 0, this.call_status = 0, this.now_time = 0, this.destroy_time = 0, this.accept_time = 0, this.quit_time = 0, this.invite_time = 0;
          }
          function j(e3) {
            k(this, e3);
          }
          function G() {
            this.err_list = [], this.call_seq = 0, this.call_user_session_id = 0;
          }
          function z(e3) {
            k(this, e3);
          }
          function F() {
            this.call_list_seq = 0, this.talk_time = 0, this.quit_time = 0, this.call_seq = 0, this.call_user_session_id = 0;
          }
          function B() {
            this.user_state_list = [], this.accept_time = 0, this.create_time = 0;
          }
          function N() {
            this.user_state_list = [], this.call_seq = 0, this.call_list_seq = 0, this.create_time = 0, this.call_user_session_id = 0;
          }
          function W() {
            this.call_seq = 0, this.call_list_seq = 0, this.accept_time = 0, this.call_user_session_id = 0;
          }
          function K() {
            this.call_seq = 0, this.call_list_seq = 0, this.accept_time = 0, this.call_user_session_id = 0;
          }
          function H() {
            this.user_ids = [], this.call_seq = 0, this.call_list_seq = 0, this.call_user_session_id = 0;
          }
          function Q() {
            this.user_state_list = [], this.create_time = 0, this.call_seq = 0, this.call_list_seq = 0, this.call_user_session_id = 0;
          }
          function Z() {
            this.call_seq = 0, this.accept_time = 0, this.quit_time = 0, this.call_user_session_id = 0;
          }
          function J() {
            this.call_list_seq = 0, this.talk_time = 0, this.destroy_time = 0, this.call_user_session_id = 0;
          }
          function V() {
            this.call_seq = 0, this.call_user_session_id = 0;
          }
          function Y() {
            this.user_state_list = [], this.timeout = 0, this.call_seq = 0, this.call_user_session_id = 0;
          }
          function X(e3) {
            this.invitees = [], this.call_id = "", this.caller = "", this.session_id = 0;
          }
          function $() {
            this.msg_id = "", this.conv_msg_seq = 0;
          }
          function ee() {
            this.conv_type = 0, this.conv_list_seq = 0, this.conv_msg_seq = 0, this.read_seq = 0, this.send_count_after_read = 0, this.last_del_msg_seq = 0, this.statemsg_seq = 0, this.receipt_max_conv_msg_seq = 0, this.at_max_conv_msg_seq = 0, this.at_all_max_conv_msg_seq = 0, this.update_time = 0, this.sub_read_count = 0, this.last_revoke_msg_seq = 0, this.last_msg_time = 0, this.at_info_list = [], this.group_tips_msg_type = 0;
          }
          function te() {
            this.conv_list = [], this.conv_list_seq = 0, this.max_list_seq = 0, this.max_del_conv_list_seq = 0;
          }
          function re(e3) {
            k(this, e3);
          }
          function se() {
            this.msgs = [], this.max_conv_msg_seq = 0, this.next_conv_msg_seq = 0;
          }
          function ne() {
            this.msgs = [], this.c2c_msg_seq = 0, this.svr_c2c_msg_seq = 0;
          }
          function ie(e3) {
            k(this, e3);
          }
          function oe() {
          }
          function ae() {
            this.conv_list_seq = 0, this.conv_msg_seq = 0, this.conv_pinned_list_seq = 0;
          }
          function ue(e3) {
            k(this, e3);
          }
          function ce(e3) {
            k(this, e3);
          }
          function le() {
            this.conv_msg_seq2_receipt_seq = {};
          }
          function de() {
            this.read_members = [], this.unread_members = [], this.cur_member_all_seq = 0;
          }
          function pe() {
            this.list = [], this.next_list_seq = 0;
          }
          function he() {
            this.conv_type = 0, this.conv_msg_seq = 0, this.receipt_seq = 0;
          }
          function fe() {
            this.read_count = 0, this.unread_count = 0;
          }
          function me() {
            this.del_conv_msg_seqs = [];
          }
          function ge() {
            this.PushItems = [];
          }
          function _e() {
            this.conv_type = 0, this.conv_msg_seq = 0, this.receipt_seq = 0, this.read_count = 0, this.unread_count = 0;
          }
          function be(e3) {
            k(this, e3);
          }
          function ve() {
            this.statemsg_list = [], this.next_statemsg_seq = 0;
          }
          function ye() {
            this.conv_type = 0, this.conv_msg_seq = 0, this.statemsg_seq = 0, this.reaction_seq = 0;
          }
          function Me() {
            this.reaction_briefs = [];
          }
          function ke(e3) {
            k(this, e3);
          }
          function Ie() {
            this.statemsg_seq = 0, this.revoke_time = 0;
          }
          function Se() {
            this.revoke_time = 0, this.revoke_type = 0;
          }
          function De() {
            this.conv_type = 0, this.statemsg_seq = 0;
          }
          function qe() {
            this.headers = {}, this.forms = {};
          }
          function Ce(e3) {
            k(this, e3);
          }
          function we() {
          }
          function Ae() {
          }
          function Re() {
            this.member_data_seq = 0, this.forbid_expire_time = 0;
          }
          function xe() {
            this.group_create_time = 0;
          }
          function Te() {
            this.conv_msg_seq = 0, this.group_list_seq = 0, this.group_data_seq = 0, this.history_msg_seq = 0;
          }
          function Oe() {
            this.member_seq = 0, this.group_list_seq = 0;
          }
          function Le(e3) {
            k(this, e3);
          }
          function Ee() {
            this.members = [], this.error_users = [], this.member_all_seq = 0, this.group_list_seq = 0, this.group_data_seq = 0, this.group_attribute_seq = 0;
          }
          function Ue(e3) {
            this.value = "", this.seq = 0, k(this, e3);
          }
          function Pe(e3) {
            this.attributes = [], k(this, e3);
          }
          function je(e3) {
            this.seq = 0, this.attributes = [], k(this, e3);
          }
          function Ge() {
            this.group_data_seq = 0, this.forbid_expire_time = 0, this.forbid_list = [];
          }
          function ze() {
          }
          function Fe(e3) {
            k(this, e3);
          }
          function Be() {
            this.fail_keys = [];
          }
          function Ne(e3) {
            k(this, e3);
          }
          function We(e3) {
            k(this, e3);
          }
          function Ke(e3) {
            k(this, e3);
          }
          function He() {
            this.member_all_seq = 0, this.group_list_seq = 0, this.group_data_seq = 0, this.group_attribute_seq = 0, this.conv_msg_seq = 0, this.history_msg_seq = 0;
          }
          function Qe(e3) {
            k(this, e3);
          }
          function Ze() {
          }
          function Je(e3) {
            k(this, e3);
          }
          function Ve() {
            this.members = [], this.error_users = [], this.apply_users = [], this.member_all_seq = 0, this.group_data_seq = 0, this.group_attribute_seq = 0;
          }
          function Ye() {
            this.list = [];
          }
          function Xe() {
            this.error_users = [], this.member_all_seq = 0;
          }
          function $e(e3) {
            k(this, e3);
          }
          function et() {
            this.event_type = 0;
          }
          function tt2() {
            this.change_list = [], this.member_all_seq = 0, this.cur_list_seq = 0;
          }
          function rt() {
            this.members = [], this.deleted_members = [];
          }
          function st() {
            this.cur_seq = 0, this.old_seq = 0;
          }
          function nt() {
            this.members = [];
          }
          function it(e3) {
            k(this, e3);
          }
          function ot() {
          }
          function at(e3) {
            k(this, e3);
          }
          function ut() {
          }
          function ct() {
            this.group_list_seq = 0, this.group_data_seq = 0, this.all_member_seq = 0, this.attribute_seq = 0, this.member_count = 0, this.history_msg_seq = 0;
          }
          function lt() {
            this.group_infos = [], this.fail_keys = [];
          }
          function dt() {
            this.groups = [], this.cur_list_seq = 0, this.max_list_seq = 0;
          }
          function pt(e3) {
            k(this, e3);
          }
          function ht() {
          }
          function ft() {
            this.members = [], this.member_all_seq = 0;
          }
          function mt() {
          }
          function gt() {
            this.members = [], this.change_type = 0, this.member_all_seq = 0;
          }
          function _t() {
            this.forbid_expire_time = 0, this.forbid_list = [];
          }
          function bt() {
          }
          function vt(e3) {
            k(this, e3);
          }
          function yt() {
            this.modify_type = 0, this.group_data_seq = 0;
          }
          function Mt() {
            this.member_all_seq = 0;
          }
          function kt() {
            this.conv_msg_seq = 0, this.history_msg_seq = 0;
          }
          function It() {
            this.list = [];
          }
          function St() {
          }
          function Dt() {
            this.conv_msg_seq = [];
          }
          function qt(e3) {
            k(this, e3);
          }
          function Ct() {
            this.msgs = {};
          }
          function wt(e3) {
            k(this, e3);
          }
          function At() {
            this.msgs = {};
          }
          function Rt(e3) {
            k(this, e3);
          }
          function xt() {
            this.send_count_after_read = 0;
          }
          function Tt(e3) {
            k(this, e3);
          }
          function Ot() {
          }
          function Lt(e3) {
            k(this, e3);
          }
          function Et() {
            this.msg_id = "";
          }
          function Ut(e3) {
            k(this, e3);
          }
          function Pt() {
            this.msgs = [], this.next_conv_msg_seq = 0, this.max_conv_msg_seq = 0;
          }
          function jt(e3) {
            this.msg_id = "", this.msg_time = 0, k(this, e3);
          }
          function Gt(e3) {
            k(this, e3);
          }
          function zt() {
            this.cur_reaction_seq = 0, this.user_total_count = 0;
          }
          function Ft(e3) {
            k(this, e3);
          }
          function Bt() {
            this.succ_list = [], this.error_list = [];
          }
          function Nt(e3) {
            k(this, e3);
          }
          function Wt(e3) {
            k(this, e3);
          }
          function Kt() {
            this.reaction_list = [], this.conv_msg_seq = 0, this.msg_next_reaction_seq = 0, this.msg_max_reaction_seq = 0;
          }
          function Ht(e3) {
            k(this, e3);
          }
          function Qt() {
            this.user_reaction = [], this.max_reaction_seq = 0, this.total_user_count = 0;
          }
          function Zt() {
            this.conv_type = 0, this.msg_reactions = [];
          }
          function Jt() {
            this.reaction_infos = [], this.conv_msg_seq = 0, this.start_reaction_seq = 0, this.end_reaction_seq = 0;
          }
          function Vt() {
            this.send_count_after_read = 0, this.receipt_seq = 0;
          }
          function Yt(e3) {
            k(this, e3);
          }
          function Xt() {
            this.msgs = [], this.max_conv_msg_seq = 0, this.next_conv_msg_seq = 0, this.fetch_end = 0;
          }
          function $t() {
            this.conv_type = 0, this.conv_pinned_list_seq = 0;
          }
          function er() {
            this.conv_msg_seq = 0, this.group_list_seq = 0, this.history_msg_seq = 0;
          }
          function tr() {
            this.del_conv_msg_seqs = [], this.conv_type = 0, this.max_del_conv_msg_seq = 0;
          }
          function rr(e3) {
            k(this, e3);
          }
          function sr() {
            this.state_list = [], this.next_state_seq = 0;
          }
          function nr() {
            this.conv_type = 0, this.conv_msg_seq = 0, this.state_seq = 0;
          }
          function ir() {
          }
          function or() {
          }
          function ar() {
          }
          function ur() {
          }
          function cr() {
            this.send_count_after_read = 0;
          }
          function lr(e3) {
            k(this, e3);
          }
          function dr() {
            this.conv_msg_seq = 0;
          }
          function pr(e3) {
            k(this, e3);
          }
          function hr() {
            this.conv_msg_seq = 0;
          }
          function fr(e3) {
            k(this, e3);
          }
          function mr(e3) {
            k(this, e3);
          }
          function gr() {
            this.users = [];
          }
          function _r(e3) {
            this.updated_at = 0, this.user_info_seq = 0, k(this, e3);
          }
          function br(e3) {
            this.online = [], this.disable_push = [], k(this, e3);
          }
          function vr() {
            this.user_info_seq = 0;
          }
          function yr(e3) {
            k(this, e3);
          }
          function Mr() {
          }
          function kr(e3) {
            k(this, e3);
          }
          function Ir() {
          }
          function Sr(e3) {
            this.value = "", k(this, e3);
          }
          function Dr(e3) {
            k(this, e3);
          }
          function qr(e3) {
            this.attributes = [], k(this, e3);
          }
          function Cr(e3) {
            k(this, e3);
          }
          function wr(e3) {
            k(this, e3);
          }
          function Ar() {
            this.err_list = [];
          }
          function Rr(e3) {
            k(this, e3);
          }
          function xr(e3) {
            k(this, e3);
          }
          function Tr() {
            this.user_attributes = [], this.user_err_list = [];
          }
          function Or(e3) {
            k(this, e3);
          }
          function Lr(e3) {
            this.attributes = [], this.err_list = [], k(this, e3);
          }
          function Er(e3) {
            k(this, e3);
          }
          function Ur(e3) {
            k(this, e3);
          }
          function Pr() {
            this.user_attributes = [];
          }
          function jr() {
          }
          function Gr() {
          }
          function zr() {
            this.attributes = [];
          }
          function Fr() {
            this.push_attributes = [];
          }
          function Br() {
            this.result = [], this.err_list = [];
          }
          function Nr(e3) {
            k(this, e3);
          }
          function Wr() {
          }
          function Kr() {
            this.reaction_list = [], this.msg_max_reaction_seq = 0;
          }
          function Hr() {
            this.user_reaction = [], this.max_reaction_seq = 0, this.total_user_count = 0;
          }
          function Qr() {
          }
          function Zr() {
            this.user_state = 0, this.user_session_id = 0, this.extended_data = "", this.accept_time = 0, this.quit_time = 0, this.residue_timeout_time = 0, this.call_state_list = [];
          }
          function Jr() {
            this.room_list = [];
          }
          function Vr(e3) {
            k(this, e3);
          }
          function Yr() {
            this.msgs = [], this.fail_list = [];
          }
          function Xr(e3) {
            k(this, e3);
          }
          function $r() {
            this.apply_list_seq = "0";
          }
          function es() {
            this.friend_infos = [], this.apply_status_change_list = [], this.err_list = [];
          }
          function ts(e3) {
            this.update_time = 0, k(this, e3);
          }
          function rs() {
            this.apply_list_seq = 0, this.apply_status = 0, this.wording = "", this.create_time = 0, this.update_time = 0;
          }
          function ss(e3) {
            this.attributes = [], this.friend_list_seq = "0", this.wording = "", this.remark = "", this.create_time = 0, k(this, e3);
          }
          function ns() {
            this.apply_infos = [], this.err_list = [], this.friend_infos = [];
          }
          function is() {
            this.app_type = 0, this.status = 0, this.attributes = [], this.apply_list_seq = 0, this.create_time = 0, this.update_time = 0, this.user_info_update_time = 0;
          }
          function os(e3) {
            k(this, e3);
          }
          function as() {
            this.apply_list_seq = "0", this.apply_update_time = 0;
          }
          function us(e3) {
            this.user_ids = [], this.delete_type = 0, k(this, e3);
          }
          function cs(e3) {
            k(this, e3);
          }
          function ls() {
            this.friends = [], this.friend_count = 0;
          }
          function ds() {
            this.is_del = false;
          }
          function ps() {
            this.apply_list = [], this.cur_list_seq = 0, this.max_list_seq = 0;
          }
          function hs(e3) {
            k(this, e3);
          }
          function fs() {
            this.succ_keys = [], this.fail_keys = [], this.friend_list_seq = "0";
          }
          function ms() {
            this.successes = [], this.fails = [];
          }
          function gs(e3) {
            this.sub_code = 0, this.relation = 0, k(this, e3);
          }
          function _s() {
            this.black_list = [], this.err_list = [];
          }
          function bs() {
            this.black_list = [], this.err_list = [];
          }
          function vs() {
            this.blacklists = [], this.cur_list_seq = 0, this.max_list_seq = 0;
          }
          function ys() {
          }
          function Ms() {
            this.black_list_seq = 0, this.create_time = 0;
          }
          function ks() {
            this.friend_list_seq = "0";
          }
          function Is() {
            this.friend_infos = [], this.apply_status_changes_list = [];
          }
          function Ss() {
            this.apply_list_seq = 0;
          }
          function Ds() {
            this.apply_infos = [], this.friends = [];
          }
          function qs() {
            this.friend_list_seq = "0", this.apply_list_seq = "0", this.apply_update_time = 0;
          }
          function Cs() {
            this.user_id = "", this.apply_list_seq = "0", this.update_time = 0;
          }
          function ws() {
            this.attributes = [], this.action = 0, this.friend_list_seq = "0";
          }
          function As() {
            this.black_list = [];
          }
          function Rs() {
            this.black_list = [];
          }
          function xs() {
            this.max_mute_seq = 0, this.user_ids = [];
          }
          function Ts() {
          }
          function Os(e3) {
            k(this, e3);
          }
          function Ls() {
            this.mute_info = [], this.error_user_list = [];
          }
          function Es(e3) {
            this.mute_info = [], k(this, e3);
          }
          function Us() {
            this.target_users = [];
          }
          function Ps(e3) {
            k(this, e3);
          }
          function js() {
            this.succ_list = [], this.fail_list = [];
          }
          function Gs(e3) {
            this.conv_type = 0, this.mark_content = 0, k(this, e3);
          }
          function zs() {
          }
          function Fs(e3) {
            this.conv_mark_list = [];
          }
          function Bs() {
            this.succ_list = [];
          }
          return e2.CodeMsg = (t2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CodeMsg();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, t2), e2.Header = (r2.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.cmd && t3.u(10).s(e3.cmd), e3.seq && t3.u(16).u(e3.seq), e3.timestamp && t3.u(24).i6(e3.timestamp), e3.app_id && t3.u(32).u(e3.app_id), e3.user_id && t3.u(42).s(e3.user_id), e3.session_id && t3.u(48).i6(e3.session_id), e3.user_nid && t3.u(56).i6(e3.user_nid), e3.controls && t3.u(66).b(e3.controls), e3.product && t3.u(72).i(e3.product), e3.flags && t3.u(82).b(e3.flags), e3.caller_type && t3.u(88).i(e3.caller_type), t3;
          }, r2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.Header();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.cmd = e3.s();
                  break;
                case 2:
                  n2.seq = e3.u();
                  break;
                case 3:
                  n2.timestamp = e3.i6(1);
                  break;
                case 4:
                  n2.app_id = e3.u();
                  break;
                case 5:
                  n2.user_id = e3.s();
                  break;
                case 6:
                  n2.session_id = e3.i6();
                  break;
                case 7:
                  n2.user_nid = e3.i6();
                  break;
                case 8:
                  n2.controls = e3.b();
                  break;
                case 9:
                  n2.product = e3.i();
                  break;
                case 10:
                  n2.flags = e3.b();
                  break;
                case 11:
                  n2.caller_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, r2), e2.HbRsp = (i2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.HbRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.heartbeat_interval = e3.u();
                  break;
                case 4:
                  n2.hb_timeout = e3.u();
                  break;
                case 5:
                  n2.server_timestamp = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, i2), e2.HandshakeReq = (o2.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.term_type && t3.u(8).i(e3.term_type), e3.net_type && t3.u(16).i(e3.net_type), e3.sdk_ver && t3.u(24).u(e3.sdk_ver), e3.forward_ip && e3.forward_ip.length)
              for (let r3 = 0; r3 < e3.forward_ip.length; ++r3)
                t3.u(34).s(e3.forward_ip[r3]);
            return e3.device_id && t3.u(42).s(e3.device_id), e3.server_addr && t3.u(50).s(e3.server_addr), e3.channel_index && t3.u(56).u(e3.channel_index), t3;
          }, o2), e2.LoginReq = (a2.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.sdk_ver && t3.u(8).u(e3.sdk_ver), e3.user_name && t3.u(18).b(e3.user_name), e3.term_type && t3.u(24).i(e3.term_type), e3.net_type && t3.u(32).i(e3.net_type), e3.device_id && t3.u(42).s(e3.device_id), e3.server_ip && t3.u(50).s(e3.server_ip), e3.channel_index && t3.u(56).u(e3.channel_index), e3.client_stamp && t3.u(66).b(e3.client_stamp), e3.k1_sign && t3.u(74).b(e3.k1_sign), e3.login_token && t3.u(82).b(e3.login_token), e3.relogin_token && t3.u(90).b(e3.relogin_token), e3.zpns_push_id && t3.u(98).s(e3.zpns_push_id), e3.login_sign && t3.u(106).b(e3.login_sign), e3.old_session_id && t3.u(120).i6(e3.old_session_id), t3;
          }, a2), e2.LoginRsp = (u2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.LoginRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.k2_sign = e3.b();
                  break;
                case 4:
                  n2.hb_interval = e3.u();
                  break;
                case 5:
                  n2.hb_timeout = e3.u();
                  break;
                case 6:
                  n2.server_timestamp = e3.i6(1);
                  break;
                case 7:
                  n2.redirect_server_ip = e3.s();
                  break;
                case 8:
                  n2.server_ips.push(e3.s());
                  break;
                case 9:
                  n2.login_server_ip = e3.s();
                  break;
                case 10:
                  n2.relogin_token = e3.b();
                  break;
                case 11:
                  n2.redirect_server.push(e3.s());
                  break;
                case 12:
                  n2.usermail_hb_interval = e3.u();
                  break;
                case 13:
                  n2.fetch_c2c_msg_list = e3.i();
                  break;
                case 14:
                  n2.fetch_conv_list = e3.i();
                  break;
                case 15:
                  n2.fetch_conv_msg_list = e3.i();
                  break;
                case 16:
                  n2.fetch_group_list = e3.i();
                  break;
                case 17:
                  n2.im_conf_json = e3.s();
                  break;
                case 19:
                  n2.register_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, u2), e2.PushListRequest = (c2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushListRequest();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.push_requests.push(I.zim.PushRequest.d(e3, e3.u()));
                  break;
                case 2:
                  n2.qos_flag = e3.u();
                  break;
                case 3:
                  n2.send_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, c2), e2.PushRequest = (l2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushRequest();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.sub_cmd = e3.s();
                  break;
                case 2:
                  n2.msg_body = e3.b();
                  break;
                case 3:
                  n2.sender_user_id = e3.s();
                  break;
                case 4:
                  n2.msg_id = e3.s();
                  break;
                case 5:
                  n2.sender_user_nid = e3.u6();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, l2), e2.PushListRsp = (d2.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.code && t3.u(8).u(e3.code), e3.message && t3.u(18).s(e3.message), e3.push_responses && e3.push_responses.length)
              for (let r3 = 0; r3 < e3.push_responses.length; ++r3)
                I.zim.StGroupAttribute.e(e3.push_responses[r3], t3.u(26).f()).l();
            return e3.server_send_time && t3.u(32).i6(e3.server_send_time), t3;
          }, d2), e2.StMsgClientInfo = (p2.e = function(e3, t3) {
            return "object" == typeof e3 && (e3 = new I.zim.StMsgClientInfo(e3)), t3 = t3 || n.c(), e3.conv_sid && t3.u(8).i6(e3.conv_sid), e3.client_msg_seq && t3.u(16).i6(e3.client_msg_seq), t3;
          }, p2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StMsgClientInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_sid = e3.i6().toString();
                  break;
                case 2:
                  n2.client_msg_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, p2), e2.StOfflinePushInfo = (h2.e = function(e3, t3) {
            if ("object" == typeof e3 && (e3 = new I.zim.StOfflinePushInfo(e3)), t3 = t3 || n.c(), e3.enable_push && t3.u(8).i(e3.enable_push), e3.title && t3.u(18).s(e3.title), e3.content && t3.u(26).s(e3.content), e3.payload && t3.u(34).s(e3.payload), e3.pushStrategyId && t3.u(42).s(e3.pushStrategyId), e3.custom_map)
              for (let s2 = Object.keys(e3.custom_map), n2 = 0; n2 < s2.length; ++n2) {
                var r3 = e3.custom_map[s2[n2]];
                r3 && t3.u(50).f().u(10).s(s2[n2]).u(18).s(r3).l();
              }
            return e3.enable_force_push && t3.u(72).i(e3.enable_force_push), t3;
          }, h2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3, n2, i3 = void 0 === t3 ? e3.len : e3.pos + t3, o3 = new I.zim.StOfflinePushInfo();
            for (; e3.pos < i3; ) {
              var a3 = e3.u();
              switch (a3 >>> 3) {
                case 1:
                  o3.enable_push = e3.i();
                  break;
                case 2:
                  o3.title = e3.s();
                  break;
                case 3:
                  o3.content = e3.s();
                  break;
                case 4:
                  o3.payload = e3.s();
                  break;
                case 5:
                  o3.pushStrategyId = e3.s();
                  break;
                case 6:
                  o3.custom_map || (o3.custom_map = {});
                  var u3 = e3.u() + e3.pos;
                  for (r3 = "", n2 = ""; e3.pos < u3; ) {
                    var c3 = e3.u();
                    switch (c3 >>> 3) {
                      case 1:
                        r3 = e3.s();
                        break;
                      case 2:
                        n2 = e3.s();
                        break;
                      default:
                        e3.sk(7 & c3);
                    }
                  }
                  o3.custom_map[r3] = n2;
                  break;
                case 7:
                  o3.priority = e3.i();
                  break;
                case 9:
                  o3.enable_force_push = e3.i();
                  break;
                default:
                  e3.sk(7 & a3);
              }
            }
          }, h2), e2.PictureMsgBody = (f2.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.version && t3.u(10).s(e3.version), e3.file_type && t3.u(16).i(e3.file_type), e3.file_uid && t3.u(26).s(e3.file_uid), e3.file_name && t3.u(34).s(e3.file_name), e3.file_size && t3.u(42).s(e3.file_size), e3.file_download_url && t3.u(50).s(e3.file_download_url), e3.large_image_download_url && t3.u(58).s(e3.large_image_download_url), e3.thumbnail_download_url && t3.u(66).s(e3.thumbnail_download_url), e3.large && t3.u(74).s(e3.large), e3.thumbnail && t3.u(82).s(e3.thumbnail), e3.origin_width && t3.u(88).u(e3.origin_width), e3.origin_height && t3.u(96).u(e3.origin_height), e3.big_width && t3.u(104).u(e3.big_width), e3.big_height && t3.u(112).u(e3.big_height), e3.small_width && t3.u(120).u(e3.small_width), e3.small_height && t3.u(128).u(e3.small_height), t3;
          }, f2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PictureMsgBody();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.version = e3.s();
                  break;
                case 2:
                  n2.file_type = e3.i();
                  break;
                case 3:
                  n2.file_uid = e3.s();
                  break;
                case 4:
                  n2.file_name = e3.s();
                  break;
                case 5:
                  n2.file_size = e3.s();
                  break;
                case 6:
                  n2.file_download_url = e3.s();
                  break;
                case 7:
                  n2.large_image_download_url = e3.s();
                  break;
                case 8:
                  n2.thumbnail_download_url = e3.s();
                  break;
                case 9:
                  n2.large = e3.s();
                  break;
                case 10:
                  n2.thumbnail = e3.s();
                  break;
                case 11:
                  n2.origin_width = e3.u();
                  break;
                case 12:
                  n2.origin_height = e3.u();
                  break;
                case 13:
                  n2.big_width = e3.u();
                  break;
                case 14:
                  n2.big_height = e3.u();
                  break;
                case 15:
                  n2.small_width = e3.u();
                  break;
                case 16:
                  n2.small_height = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, f2), e2.VideoMsgBody = (m2.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.version && t3.u(10).s(e3.version), e3.file_type && t3.u(16).i(e3.file_type), e3.file_uid && t3.u(26).s(e3.file_uid), e3.file_name && t3.u(34).s(e3.file_name), e3.file_size && t3.u(42).s(e3.file_size), e3.file_download_url && t3.u(50).s(e3.file_download_url), e3.media_duration && t3.u(58).s(e3.media_duration), e3.video_first_frame_download_url && t3.u(66).s(e3.video_first_frame_download_url), e3.thumbnail && t3.u(74).s(e3.thumbnail), e3.frame_width && t3.u(80).u(e3.frame_width), e3.frame_height && t3.u(88).u(e3.frame_height), t3;
          }, m2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.VideoMsgBody();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.version = e3.s();
                  break;
                case 2:
                  n2.file_type = e3.i();
                  break;
                case 3:
                  n2.file_uid = e3.s();
                  break;
                case 4:
                  n2.file_name = e3.s();
                  break;
                case 5:
                  n2.file_size = e3.s();
                  break;
                case 6:
                  n2.file_download_url = e3.s();
                  break;
                case 7:
                  n2.media_duration = e3.s();
                  break;
                case 8:
                  n2.video_first_frame_download_url = e3.s();
                  break;
                case 9:
                  n2.thumbnail = e3.s();
                  break;
                case 10:
                  n2.frame_width = e3.u();
                  break;
                case 11:
                  n2.frame_height = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, m2), e2.StMsgCombineInfo = (g2.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.title && t3.u(10).s(e3.title), e3.summary && t3.u(18).s(e3.summary), e3.file_body && I.zim.VideoMsgBody.e(e3.file_body, t3.u(26).f()).l(), t3;
          }, g2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StMsgCombineInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.title = e3.s();
                  break;
                case 2:
                  n2.summary = e3.s();
                  break;
                case 3:
                  n2.file_body = I.zim.VideoMsgBody.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, g2), e2.MsgCombineInfo = (_2.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.send_user_map)
              for (let r3 = Object.keys(e3.send_user_map), s2 = 0; s2 < r3.length; ++s2)
                t3.u(10).f().u(10).s(r3[s2]), I.zim.SendUserInfo.e(e3.send_user_map[r3[s2]], t3.u(18).f()).l().l();
            if (e3.child && e3.child.length)
              for (let r3 = 0; r3 < e3.child.length; ++r3)
                I.zim.StConvMsgInfoTree.e(e3.child[r3], t3.u(18).f()).l();
            return t3;
          }, _2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3, n2, i3 = void 0 === t3 ? e3.len : e3.pos + t3, o3 = new I.zim.MsgCombineInfo();
            for (; e3.pos < i3; ) {
              var a3 = e3.u();
              switch (a3 >>> 3) {
                case 1:
                  var u3 = e3.u() + e3.pos;
                  for (r3 = "", n2 = null; e3.pos < u3; ) {
                    var c3 = e3.u();
                    switch (c3 >>> 3) {
                      case 1:
                        r3 = e3.s();
                        break;
                      case 2:
                        n2 = I.zim.SendUserInfo.d(e3, e3.u());
                        break;
                      default:
                        e3.sk(7 & c3);
                    }
                  }
                  o3.send_user_map[r3] = n2;
                  break;
                case 2:
                  o3.child.push(I.zim.StConvMsgInfoTree.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & a3);
              }
            }
            return o3;
          }, _2), e2.StConvMsgInfoTree = (b2.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.msg_type && t3.u(8).i(e3.msg_type), e3.msg && t3.u(18).b(e3.msg), e3.sender_user_id && t3.u(26).s(e3.sender_user_id), e3.msg_time && t3.u(32).i6(e3.msg_time), e3.sub_type && t3.u(40).i6(e3.sub_type), e3.searched_content && t3.u(50).s(e3.searched_content), e3.extended_data && t3.u(58).s(e3.extended_data), e3.cb_id && t3.u(66).s(e3.cb_id), e3.root_id && t3.u(72).u(e3.root_id), e3.parent_id && t3.u(82).s(e3.parent_id), e3.is_server && t3.u(88).u(e3.is_server), e3.root_conv_type && t3.u(96).u(e3.root_conv_type), e3.root_send_user_id && t3.u(106).s(e3.root_send_user_id), e3.root_conv_id && t3.u(114).s(e3.root_conv_id), e3.real_root_id && t3.u(120).i6(e3.real_root_id), t3;
          }, b2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StConvMsgInfoTree();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_type = e3.i();
                  break;
                case 2:
                  n2.msg = e3.b();
                  break;
                case 3:
                  n2.sender_user_id = e3.s();
                  break;
                case 4:
                  n2.msg_time = e3.i6(1);
                  break;
                case 5:
                  n2.sub_type = e3.i6(1);
                  break;
                case 6:
                  n2.searched_content = e3.s();
                  break;
                case 7:
                  n2.extended_data = e3.s();
                  break;
                case 8:
                  n2.cb_id = e3.s();
                  break;
                case 9:
                  n2.root_id = e3.u().toString();
                  break;
                case 10:
                  n2.parent_id = e3.s();
                  break;
                case 11:
                  n2.is_server = e3.u();
                  break;
                case 12:
                  n2.root_conv_type = e3.u();
                  break;
                case 13:
                  n2.root_send_user_id = e3.s();
                  break;
                case 14:
                  n2.root_conv_id = e3.s();
                  break;
                case 15:
                  n2.real_root_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, b2), e2.SendUserInfo = (v2.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.sender_user_name && t3.u(10).b(e3.sender_user_name), e3.sender_user_avatar && t3.u(18).b(e3.sender_user_avatar), e3.update_time && t3.u(24).i6(e3.update_time), t3;
          }, v2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.SendUserInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.sender_user_name = e3.b();
                  break;
                case 2:
                  n2.sender_user_avatar = e3.b();
                  break;
                case 3:
                  n2.update_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, v2), e2.StCommandMsgInfo = (y2.e = function(e3, t3) {
            return "object" == typeof e3 && (e3 = new I.zim.StCommandMsgInfo(e3)), t3 = t3 || n.c(), e3.msg_type && t3.u(8).i(e3.msg_type), e3.msg && t3.u(18).b(e3.msg), e3.priority_type && t3.u(24).i(e3.priority_type), e3.payload && t3.u(34).b(e3.payload), e3.conv_id && t3.u(42).s(e3.conv_id), t3;
          }, y2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StCommandMsgInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_type = e3.i();
                  break;
                case 2:
                  n2.msg = e3.b();
                  break;
                case 3:
                  n2.priority_type = e3.i();
                  break;
                case 4:
                  n2.payload = e3.b();
                  break;
                case 5:
                  n2.conv_id = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, y2), e2.StCommandSvrInfo = (M2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StCommandSvrInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_id = e3.i6().toString();
                  break;
                case 2:
                  n2.sender_user_id = e3.s();
                  break;
                case 3:
                  n2.sender_user_name = e3.b();
                  break;
                case 4:
                  n2.msg_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, M2), e2.StRecvCommandInfo = (S.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StRecvCommandInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.command_msg_info = I.zim.StCommandMsgInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.command_svr_info = I.zim.StCommandSvrInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, S), e2.StConvMsgInfo = (D.e = function(e3, t3) {
            if ("object" == typeof e3 && (e3 = new I.zim.StConvMsgInfo(e3)), t3 = t3 || n.c(), e3.msg_type && t3.u(8).i(e3.msg_type), e3.msg && t3.u(18).b(e3.msg), e3.priority_type && t3.u(24).i(e3.priority_type), e3.conv_id && t3.u(34).s(e3.conv_id), e3.msg_client_info && I.zim.StMsgClientInfo.e(e3.msg_client_info, t3.u(42).f()).l(), e3.payload && t3.u(50).b(e3.payload), e3.offline_push && e3.offline_push && I.zim.StOfflinePushInfo.e(e3.offline_push, t3.u(58).f()).l(), e3.has_receipt && t3.u(80).i(e3.has_receipt), e3.at && e3.at.length)
              for (let r3 = 0; r3 < e3.at.length; ++r3)
                t3.u(90).s(e3.at[r3]);
            return e3.at_all && t3.u(96).bl(e3.at_all), e3.sub_msg_type && t3.u(104).i(e3.sub_msg_type), e3.searched_content && t3.u(122).s(e3.searched_content), e3.reply_info && I.zim.StMsgReplyInfo.e(e3.reply_info, t3.u(146).f()).l(), t3;
          }, D.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StConvMsgInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_type = e3.i();
                  break;
                case 2:
                  n2.msg = e3.b();
                  break;
                case 3:
                  n2.priority_type = e3.i();
                  break;
                case 4:
                  n2.conv_id = e3.s();
                  break;
                case 5:
                  n2.msg_client_info = I.zim.StMsgClientInfo.d(e3, e3.u());
                  break;
                case 6:
                  n2.payload = e3.b();
                  break;
                case 7:
                  n2.offline_push = I.zim.StOfflinePushInfo.d(e3, e3.u());
                  break;
                case 8:
                  n2.pack_count = e3.i();
                  break;
                case 9:
                  n2.pack_index = e3.i();
                  break;
                case 10:
                  n2.has_receipt = e3.i();
                  break;
                case 11:
                  n2.at.push(e3.s());
                  break;
                case 12:
                  n2.at_all = e3.bl();
                  break;
                case 13:
                  n2.sub_msg_type = e3.i();
                  break;
                case 14:
                  n2.save = e3.i();
                  break;
                case 15:
                  n2.searched_content = e3.s();
                  break;
                case 17:
                  n2.sender_unaware = e3.i();
                  break;
                case 18:
                  n2.reply_info = I.zim.StMsgReplyInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, D), e2.StMsgSvrInfo = (q.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StMsgSvrInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_id = e3.i6().toString();
                  break;
                case 2:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 3:
                  n2.c2c_msg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.sender_user_id = e3.s();
                  break;
                case 5:
                  n2.sender_user_name = e3.b();
                  break;
                case 6:
                  n2.msg_time = e3.i6(1);
                  break;
                case 7:
                  n2.has_content = e3.i();
                  break;
                case 9:
                  n2.msg_rsp = e3.b();
                  break;
                case 10:
                  n2.version = e3.u();
                  break;
                case 11:
                  n2.is_server = e3.u();
                  break;
                case 12:
                  n2.reactions = I.zim.StReactions.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, q), e2.StRecvMsgInfo = (C.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StRecvMsgInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_info = I.zim.StConvMsgInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.msg_svr_info = I.zim.StMsgSvrInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, C), e2.FetchMsgInfo = (w.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FetchMsgInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_body = e3.b();
                  break;
                case 2:
                  n2.msg_dyn_info = I.zim.MsgDynInfo.d(e3, e3.u());
                  break;
                case 3:
                  n2.msglist_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            const o3 = I.zim.StRecvMsgInfo.d(n2.msg_body);
            o3.msg_svr_info.conv_msg_seq ? o3.msg_svr_info.c2c_msg_seq = n2.msglist_seq : o3.msg_svr_info.conv_msg_seq = n2.msglist_seq;
            var { msg_status: t3, has_receipt: a3, reply_count: u3 } = n2.msg_dyn_info;
            return o3.msg_info.msg_status = t3, o3.msg_info.has_receipt = a3, u3 && o3.msg_info.reply_info && (o3.msg_info.reply_info.reply_count = u3), o3;
          }, w), e2.MsgDynInfo = (A.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.MsgDynInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_status = e3.i();
                  break;
                case 2:
                  n2.has_receipt = e3.bl() ? 1 : 0;
                  break;
                case 3:
                  n2.reply_count = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, A), e2.CallReq = (R.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.call_id && t3.u(10).s(e3.call_id), e3.user_ids && e3.user_ids.length)
              for (let r3 = 0; r3 < e3.user_ids.length; ++r3)
                t3.u(18).s(e3.user_ids[r3]);
            return e3.timeout && t3.u(24).i(e3.timeout), e3.payload && t3.u(34).b(e3.payload), e3.offline_info && I.zim.StOfflinePushInfo.e(e3.offline_info, t3.u(42).f()).l(), e3.call_mode && t3.u(48).i(e3.call_mode), e3.check_ack_timeout && t3.u(56).bl(e3.check_ack_timeout), t3;
          }, R), e2.CallRsp = (x.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.timeout = e3.i();
                  break;
                case 4:
                  n2.call_id = e3.s();
                  break;
                case 5:
                  n2.err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 6:
                  n2.call_seq = e3.i6(1);
                  break;
                case 7:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 8:
                  n2.create_time = e3.i6(1);
                  break;
                case 9:
                  n2.new_err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, x), e2.CallCancelReq = (T.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.call_id && t3.u(10).s(e3.call_id), e3.user_ids && e3.user_ids.length)
              for (let r3 = 0; r3 < e3.user_ids.length; ++r3)
                t3.u(18).s(e3.user_ids[r3]);
            return e3.state && t3.u(24).i(e3.state), e3.extended_data && t3.u(34).b(e3.extended_data), e3.offline_info && I.zim.StOfflinePushInfo.e(e3.offline_info, t3.u(42).f()).l(), t3;
          }, T), e2.CallCancelRsp = (O.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallCancelRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 4:
                  n2.call_seq = e3.i6(1);
                  break;
                case 5:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 6:
                  n2.new_err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 7:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, O), e2.CallUserInfo = (L.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallUserInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.user_state = e3.u();
                  break;
                case 3:
                  n2.extended_data = e3.b();
                  break;
                case 4:
                  n2.is_timeout = e3.i6(1);
                  break;
                case 5:
                  n2.accept_time = e3.i6(1);
                  break;
                case 6:
                  n2.quit_time = e3.i6(1);
                  break;
                case 7:
                  n2.residue_timeout_time = e3.i6(1);
                  break;
                case 8:
                  n2.user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, L), e2.CallInfoRsp = (E.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallInfoRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.user_list.push(I.zim.CallUserInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.call_seq = e3.i6(1);
                  break;
                case 5:
                  n2.now_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, E), e2.CallListRsp = (U.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.cur_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.max_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.calls.push(I.zim.CallInfo.d(e3, e3.u()));
                  break;
                case 6:
                  n2.fetch_end = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, U), e2.CallInfo = (P.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.caller = e3.s();
                  break;
                case 3:
                  n2.create_time = e3.i6(1);
                  break;
                case 4:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.call_status = e3.i6(1);
                  break;
                case 6:
                  n2.call_user_list.push(I.zim.UserMailCallUserInfo.d(e3, e3.u()));
                  break;
                case 7:
                  n2.now_time = e3.i6(1);
                  break;
                case 8:
                  n2.call_mode = e3.i();
                  break;
                case 9:
                  n2.payload = e3.b();
                  break;
                case 10:
                  n2.destroy_time = e3.i6(1);
                  break;
                case 11:
                  n2.accept_time = e3.i6(1);
                  break;
                case 12:
                  n2.quit_time = e3.i6(1);
                  break;
                case 13:
                  n2.user_timeout = e3.i();
                  break;
                case 14:
                  n2.invite_time = e3.i6(1);
                  break;
                case 15:
                  n2.inviter = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, P), e2.CallInviteReq = (j.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.call_id && t3.u(10).s(e3.call_id), e3.user_ids && e3.user_ids.length)
              for (let r3 = 0; r3 < e3.user_ids.length; ++r3)
                t3.u(18).s(e3.user_ids[r3]);
            return e3.offline_info && I.zim.StOfflinePushInfo.e(e3.offline_info, t3.u(26).f()).l(), t3;
          }, j), e2.CallInviteRsp = (G.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallInviteRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.call_id = e3.s();
                  break;
                case 4:
                  n2.call_seq = e3.i6(1);
                  break;
                case 5:
                  n2.err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 6:
                  n2.timeout = e3.i();
                  break;
                case 7:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, G), e2.CallQuitReq = (z.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.call_id && t3.u(10).s(e3.call_id), e3.offline_info && I.zim.StOfflinePushInfo.e(e3.offline_info, t3.u(18).f()).l(), e3.payload && t3.u(26).b(e3.payload), t3;
          }, z), e2.CallQuitRsp = (F.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallQuitRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.talk_time = e3.i6(1);
                  break;
                case 5:
                  n2.quit_time = e3.i6().toString();
                  break;
                case 6:
                  n2.call_seq = e3.i6(1);
                  break;
                case 7:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, F), e2.CallEnterRsp = (B.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallEnterRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.call_seq = e3.i6(1);
                  break;
                case 4:
                  n2.timeout = e3.i();
                  break;
                case 5:
                  n2.create_time = e3.i6(1);
                  break;
                case 6:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 7:
                  n2.caller = e3.s();
                  break;
                case 8:
                  n2.accept_time = e3.i6(1);
                  break;
                case 9:
                  n2.extended_data = e3.b();
                  break;
                case 10:
                  n2.user_state_list.push(I.zim.CallUserInfo.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, B), e2.PushCallInvited = (N.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCallInvited();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.timeout = e3.i();
                  break;
                case 3:
                  n2.caller = e3.s();
                  break;
                case 4:
                  n2.payload = e3.b();
                  break;
                case 5:
                  n2.call_seq = e3.i6(1);
                  break;
                case 6:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 7:
                  n2.user_state_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 8:
                  n2.call_mode = e3.i();
                  break;
                case 9:
                  n2.create_time = e3.i6(1);
                  break;
                case 10:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, N), e2.PushCallAccept = (W.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCallAccept();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.invitee = e3.s();
                  break;
                case 3:
                  n2.caller = e3.s();
                  break;
                case 4:
                  n2.extended_data = e3.b();
                  break;
                case 5:
                  n2.call_seq = e3.i6(1);
                  break;
                case 6:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 7:
                  n2.accept_time = e3.i6(1);
                  break;
                case 9:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, W), e2.PushCallRefuse = (K.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCallRefuse();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.invitee = e3.s();
                  break;
                case 3:
                  n2.caller = e3.s();
                  break;
                case 4:
                  n2.call_state = e3.u();
                  break;
                case 5:
                  n2.extended_data = e3.b();
                  break;
                case 6:
                  n2.call_seq = e3.i6(1);
                  break;
                case 7:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 9:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, K), e2.PushCallCancel = (H.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCallCancel();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.caller = e3.s();
                  break;
                case 4:
                  n2.state = e3.i();
                  break;
                case 5:
                  n2.extended_data = e3.b();
                  break;
                case 6:
                  n2.call_seq = e3.i6(1);
                  break;
                case 7:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 9:
                  n2.user_ids.push(e3.s());
                  break;
                case 10:
                  n2.operator = e3.s();
                  break;
                case 11:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, H), e2.PushOnCallInvited = (Q.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushOnCallInvited();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.create_time = e3.i6(1);
                  break;
                case 3:
                  n2.timeout = e3.i();
                  break;
                case 4:
                  n2.caller = e3.s();
                  break;
                case 5:
                  n2.invitee = e3.s();
                  break;
                case 6:
                  n2.call_seq = e3.i6(1);
                  break;
                case 7:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 8:
                  n2.payload = e3.b();
                  break;
                case 9:
                  n2.user_state_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 11:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Q), e2.PushCallQuit = (Z.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCallQuit();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.invitee = e3.s();
                  break;
                case 3:
                  n2.caller = e3.s();
                  break;
                case 4:
                  n2.call_seq = e3.i6(1);
                  break;
                case 5:
                  n2.payload = e3.b();
                  break;
                case 6:
                  n2.accept_time = e3.i6(1);
                  break;
                case 7:
                  n2.quit_time = e3.i6(1);
                  break;
                case 8:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                case 9:
                  n2.call_list_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Z), e2.PushCallDestroy = (J.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCallDestroy();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.caller = e3.s();
                  break;
                case 3:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.payload = e3.b();
                  break;
                case 5:
                  n2.talk_time = e3.i6(1);
                  break;
                case 6:
                  n2.destroy_time = e3.i6(1);
                  break;
                case 7:
                  n2.operator = e3.s();
                  break;
                case 8:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, J), e2.PushCallAck = (V.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCallAck();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.caller = e3.s();
                  break;
                case 3:
                  n2.invitee = e3.s();
                  break;
                case 4:
                  n2.call_seq = e3.i6(1);
                  break;
                case 6:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, V), e2.PushCallEnter = (Y.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCallEnter();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.caller = e3.s();
                  break;
                case 3:
                  n2.create_time = e3.i6(1);
                  break;
                case 4:
                  n2.enter_time = e3.i6(1);
                  break;
                case 5:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 6:
                  n2.call_payload = e3.b();
                  break;
                case 7:
                  n2.call_seq = e3.i6(1);
                  break;
                case 8:
                  n2.payload = e3.b();
                  break;
                case 9:
                  n2.user_id = e3.s();
                  break;
                case 10:
                  n2.user_state_list.push(I.zim.UserMailCallUserInfo.d(e3, e3.u()));
                  break;
                case 11:
                  n2.timeout = e3.i();
                  break;
                case 12:
                  n2.call_user_session_id = e3.i6().toString();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Y), e2.PushCallAckTimeout = (X.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCallAckTimeout();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.call_id = e3.s();
                  break;
                case 2:
                  n2.caller = e3.s();
                  break;
                case 3:
                  n2.session_id = e3.i6().toString();
                  break;
                case 4:
                  n2.invitees.push(e3.s());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, X), e2.AtInfo = ($.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.AtInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_id = e3.i6().toString();
                  break;
                case 2:
                  n2.user_id = e3.s();
                  break;
                case 3:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.at_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, $), e2.ConvInfo = (ee.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ConvInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_id = e3.s();
                  break;
                case 2:
                  n2.conv_type = e3.i();
                  break;
                case 3:
                  n2.conv_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 5:
                  n2.read_seq = e3.i6(1);
                  break;
                case 6:
                  n2.is_del = e3.bl();
                  break;
                case 7:
                  n2.last_msg = I.zim.StRecvMsgInfo.d(e3, e3.u());
                  break;
                case 8:
                  n2.send_count_after_read = e3.i6(1);
                  break;
                case 9:
                  n2.last_msg_del = e3.bl();
                  break;
                case 10:
                  n2.last_del_msg_seq = e3.i6(1);
                  break;
                case 11:
                  n2.statemsg_seq = e3.i6(1);
                  break;
                case 12:
                  n2.receipt_max_conv_msg_seq = e3.i6(1);
                  break;
                case 13:
                  n2.at_max_conv_msg_seq = e3.i6(1);
                  break;
                case 14:
                  n2.at_all_max_conv_msg_seq = e3.i6(1);
                  break;
                case 15:
                  n2.update_time = e3.i6(1);
                  break;
                case 16:
                  n2.sub_read_count = e3.i6(1);
                  break;
                case 17:
                  n2.last_revoke_msg_seq = e3.i6(1);
                  break;
                case 18:
                  n2.last_msg_time = e3.i6(1);
                  break;
                case 19:
                  n2.at_info_list.push(I.zim.AtInfo.d(e3, e3.u()));
                  break;
                case 20:
                  n2.group_tips_msg_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ee), e2.GetConvListRsp = (te.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GetConvListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.conv_list.push(I.zim.ConvInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.conv_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.max_list_seq = e3.i6(1);
                  break;
                case 6:
                  n2.full_list = e3.i();
                  break;
                case 7:
                  n2.fetch_end = e3.i();
                  break;
                case 8:
                  n2.max_del_conv_list_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, te), e2.FetchConvMsgReq = (re.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.conv_type && t3.u(16).i(e3.conv_type), e3.conv_msg_seq && t3.u(24).i6(e3.conv_msg_seq), e3.count && t3.u(32).i(e3.count), e3.mode && t3.u(40).i(e3.mode), e3.login_fetch && t3.u(48).i(e3.login_fetch), e3.how && t3.u(56).i(e3.how), e3.degree && t3.u(64).u(e3.degree), t3;
          }, re), e2.FetchConvMsgRsp = (se.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FetchConvMsgRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.max_conv_msg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.next_conv_msg_seq = e3.i6(1);
                  break;
                case 5:
                  n2.msgs.push(I.zim.FetchMsgInfo.d(e3, e3.u()));
                  break;
                case 6:
                  n2.fetch_end = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, se), e2.FetchC2CMsgRsp = (ne.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FetchC2CMsgRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.msgs.push(I.zim.FetchMsgInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.c2c_msg_seq = e3.i6(1);
                  break;
                case 5:
                  n2.svr_c2c_msg_seq = e3.i6(1);
                  break;
                case 6:
                  n2.fetch_end = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ne), e2.UpdateReadSeqReq = (ie.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.conv_type && t3.u(16).i(e3.conv_type), e3.read_seq && t3.u(24).i6(e3.read_seq), t3;
          }, ie), e2.UserMailHbRsp = (oe.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.UserMailHbRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.conv_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.group_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.c2c_msg_seq = e3.i6(1);
                  break;
                case 7:
                  n2.seq_fallback_timeout = e3.u();
                  break;
                case 8:
                  n2.msg_to = e3.u();
                  break;
                case 9:
                  n2.msg_itvl = e3.u();
                  break;
                case 10:
                  n2.list_to = e3.u();
                  break;
                case 11:
                  n2.list_itvl = e3.u();
                  break;
                case 12:
                  n2.conv_to = e3.u();
                  break;
                case 13:
                  n2.conv_itvl = e3.u();
                  break;
                case 14:
                  n2.group_to = e3.u();
                  break;
                case 15:
                  n2.group_itvl = e3.u();
                  break;
                case 16:
                  n2.c2c_statemsg_seq = e3.i6(1);
                  break;
                case 17:
                  n2.extra_msg_list_seq = e3.i6(1);
                  break;
                case 18:
                  n2.conv_pinned_list_seq = e3.i6(1);
                  break;
                case 19:
                  n2.call_list_seq = e3.i6(1);
                  break;
                case 20:
                  n2.friend_list_seq = e3.i6(1);
                  break;
                case 21:
                  n2.friend_apply_list_seq = e3.i6(1);
                  break;
                case 22:
                  n2.black_list_seq = e3.i6(1);
                  break;
                case 23:
                  n2.delete_all_msg_time = e3.i6(1);
                  break;
                case 24:
                  n2.apply_expired_duration = e3.i6(1);
                  break;
                case 25:
                  n2.c2c_mute_max_seq = e3.i6(1);
                  break;
                case 26:
                  n2.user_info_seq = e3.i6(1);
                  break;
                case 27:
                  n2.group_apply_list_seq = e3.i6(1);
                  break;
                case 28:
                  n2.history_c2c_msg_seq = e3.i6(1);
                  break;
                case 29:
                  n2.conv_mark_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, oe), e2.ConvDelRsp = (ae.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ConvDelRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.conv_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 5:
                  n2.conv_pinned_list_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ae), e2.ConvDelMsgByMsgIdReq = (ue.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.conv_type && t3.u(16).i(e3.conv_type), e3.msg_ids && e3.msg_ids.length) {
              t3.u(26).f();
              for (let r3 = 0; r3 < e3.msg_ids.length; ++r3)
                t3.i6(e3.msg_ids[r3]);
              t3.l();
            }
            return t3;
          }, ue), e2.C2CReadReceiptReq = (ce.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.conv_msg_seq && e3.conv_msg_seq.length) {
              t3.u(18).f();
              for (let r3 = 0; r3 < e3.conv_msg_seq.length; ++r3)
                t3.i6(e3.conv_msg_seq[r3]);
              t3.l();
            }
            return t3;
          }, ce), e2.C2CReadReceiptRsp = (le.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3, n2, i3 = void 0 === t3 ? e3.len : e3.pos + t3, o3 = new I.zim.C2CReadReceiptRsp();
            for (; e3.pos < i3; ) {
              var a3 = e3.u();
              switch (a3 >>> 3) {
                case 1:
                  o3.code = e3.u();
                  break;
                case 2:
                  o3.message = e3.s();
                  break;
                case 3:
                  var u3 = e3.u() + e3.pos;
                  for (r3 = 0, n2 = 0; e3.pos < u3; ) {
                    var c3 = e3.u();
                    switch (c3 >>> 3) {
                      case 1:
                        r3 = e3.i6(1);
                        break;
                      case 2:
                        n2 = e3.i6(1);
                        break;
                      default:
                        e3.sk(7 & c3);
                    }
                  }
                  o3.conv_msg_seq2_receipt_seq[r3] = n2;
                  break;
                default:
                  e3.sk(7 & a3);
              }
            }
            return o3;
          }, le), e2.GetGroupReadReceiptDetailRsp = (de.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GetGroupReadReceiptDetailRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  if (2 == (7 & i3))
                    for (var o3 = e3.u() + e3.pos; e3.pos < o3; )
                      n2.read_members.push(e3.i6(1));
                  else
                    n2.read_members.push(e3.i6(1));
                  break;
                case 4:
                  if (2 == (7 & i3))
                    for (var a3 = e3.u() + e3.pos; e3.pos < a3; )
                      n2.unread_members.push(e3.i6(1));
                  else
                    n2.unread_members.push(e3.i6(1));
                  break;
                case 5:
                  n2.next_list_seq = e3.u();
                  break;
                case 6:
                  n2.read_count = e3.sint32();
                  break;
                case 7:
                  n2.unread_count = e3.sint32();
                  break;
                case 8:
                  n2.fetch_end = e3.u();
                  break;
                case 9:
                  n2.cur_member_all_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, de), e2.GetExtraMsgListRsp = (pe.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GetExtraMsgListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.list.push(I.zim.ExtraMsgContent.d(e3, e3.u()));
                  break;
                case 4:
                  n2.next_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.fetch_end = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, pe), e2.ExtraMsgContent = (he.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ExtraMsgContent();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_id = e3.s();
                  break;
                case 2:
                  n2.conv_type = e3.i();
                  break;
                case 3:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.receipt_seq = e3.i6(1);
                  break;
                case 5:
                  n2.type = e3.i();
                  break;
                case 6:
                  Object.assign(n2, I.zim.StReceiptContent.d(e3, e3.u()));
                  break;
                case 7:
                case 8:
                  Object.assign(n2, I.zim.StDeleteContent.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, he), e2.StReceiptContent = (fe.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StReceiptContent();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.read_count = e3.sint32();
                  break;
                case 2:
                  n2.unread_count = e3.sint32();
                  break;
                case 3:
                  n2.is_conv_read = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, fe), e2.StDeleteContent = (me.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StDeleteContent();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              if (i3 >>> 3 == 1)
                if (2 == (7 & i3))
                  for (var o3 = e3.u() + e3.pos; e3.pos < o3; )
                    n2.del_conv_msg_seqs.push(e3.i6(1));
                else
                  n2.del_conv_msg_seqs.push(e3.i6(1));
              else
                e3.sk(7 & i3);
            }
            return n2;
          }, me), e2.PushReadReceipt = (ge.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushReadReceipt();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              i3 >>> 3 == 1 ? n2.PushItems.push(I.zim.PushReadReceipt.PushItem.d(e3, e3.u())) : e3.sk(7 & i3);
            }
            return n2;
          }, ge.PushItem = (_e.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushReadReceipt.PushItem();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 2:
                  n2.conv_id = e3.s();
                  break;
                case 3:
                  n2.conv_type = e3.i();
                  break;
                case 4:
                  n2.read_count = e3.sint32();
                  break;
                case 5:
                  n2.unread_count = e3.sint32();
                  break;
                case 6:
                  n2.receipt_seq = e3.i6(1);
                  break;
                case 7:
                  n2.is_conv_read = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, _e), ge), e2.GetStatemsgListReq = (be.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.statemsg_seq && t3.u(16).i6(e3.statemsg_seq), e3.count && t3.u(24).sint32(e3.count), e3.degree && t3.u(32).u(e3.degree), e3.max_msg_seq && t3.u(40).i6(e3.max_msg_seq), e3.min_msg_seq && t3.u(48).i6(e3.min_msg_seq), t3;
          }, be), e2.GetStatemsgListRsp = (ve.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GetStatemsgListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.statemsg_list.push(I.zim.StStatemsgContent.d(e3, e3.u()));
                  break;
                case 4:
                  n2.next_statemsg_seq = e3.i6(1);
                  break;
                case 5:
                  n2.fetch_end = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ve), e2.StStatemsgContent = (ye.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3, n2, i3 = void 0 === t3 ? e3.len : e3.pos + t3, o3 = new I.zim.StStatemsgContent();
            for (; e3.pos < i3; ) {
              var a3 = e3.u();
              switch (a3 >>> 3) {
                case 1:
                  o3.conv_msg_seq = e3.i6(1);
                  break;
                case 2:
                  o3.msg_status = e3.i();
                  break;
                case 3:
                  o3.statemsg_seq = e3.i6(1);
                  break;
                case 4:
                  o3.conv_id = e3.s();
                  break;
                case 5:
                  o3.conv_type = e3.i();
                  break;
                case 6:
                  Object.assign(o3, I.zim.StRevokeContent.d(e3.b()));
                  break;
                case 7:
                  o3.reaction_seq = e3.i6(1);
                  break;
                case 8:
                  var u3 = e3.u() + e3.pos;
                  for (r3 = 0, n2 = []; e3.pos < u3; ) {
                    var c3 = e3.u();
                    switch (c3 >>> 3) {
                      case 1:
                        r3 = e3.i();
                        break;
                      case 2:
                        n2 = e3.b();
                        break;
                      default:
                        e3.sk(7 & c3);
                    }
                  }
                  1 == r3 && Object.assign(o3, I.zim.StStateMsgReactionBrief.d(n2));
                  break;
                default:
                  e3.sk(7 & a3);
              }
            }
            return o3;
          }, ye), e2.StStateMsgReactionBrief = (Me.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StStateMsgReactionBrief();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              i3 >>> 3 == 1 ? n2.reaction_briefs.push(I.zim.StReactionBrief.d(e3, e3.u())) : e3.sk(7 & i3);
            }
            return n2;
          }, Me), e2.RevokeMsgReq = (ke.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.conv_msg_seq && t3.u(16).i6(e3.conv_msg_seq), e3.offline_push && e3.offline_push && I.zim.StOfflinePushInfo.e(e3.offline_push, t3.u(26).f()).l(), e3.payload && t3.u(34).b(e3.payload), t3;
          }, ke), e2.RevokeMsgRsp = (Ie.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.RevokeMsgRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.statemsg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.msg_status = e3.i();
                  break;
                case 5:
                  n2.revoke_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ie), e2.StRevokeContent = (Se.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StRevokeContent();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.revoke_time = e3.i6(1);
                  break;
                case 3:
                  n2.msg_type = e3.i();
                  break;
                case 4:
                  n2.revoke_type = e3.u();
                  break;
                case 5:
                  n2.payload = e3.b();
                  break;
                case 6:
                  n2.msg_status = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Se), e2.PushMsgRevoke = (De.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushMsgRevoke();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.recv_msg_info = I.zim.StRecvMsgInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.msg_status = e3.i();
                  break;
                case 3:
                  n2.statemsg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.conv_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, De), e2.HttpRequest = (qe.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3, n2, i3 = void 0 === t3 ? e3.len : e3.pos + t3, o3 = new I.zim.HttpRequest();
            for (; e3.pos < i3; ) {
              var a3 = e3.u();
              switch (a3 >>> 3) {
                case 1:
                  o3.url = e3.s();
                  break;
                case 2:
                  o3.method = e3.s();
                  break;
                case 3:
                  var u3 = e3.u() + e3.pos;
                  for (r3 = "", n2 = ""; e3.pos < u3; ) {
                    var c3 = e3.u();
                    switch (c3 >>> 3) {
                      case 1:
                        r3 = e3.s();
                        break;
                      case 2:
                        n2 = e3.s();
                        break;
                      default:
                        e3.sk(7 & c3);
                    }
                  }
                  o3.headers[r3] = n2;
                  break;
                case 4:
                  var l3 = e3.u() + e3.pos;
                  for (r3 = "", n2 = ""; e3.pos < l3; ) {
                    var d3 = e3.u();
                    switch (d3 >>> 3) {
                      case 1:
                        r3 = e3.s();
                        break;
                      case 2:
                        n2 = e3.s();
                        break;
                      default:
                        e3.sk(7 & d3);
                    }
                  }
                  o3.forms[r3] = n2;
                  break;
                default:
                  e3.sk(7 & a3);
              }
            }
            return o3;
          }, qe), e2.FileUploadReq = (Ce.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.md5 && t3.u(10).s(e3.md5), e3.file_type && t3.u(16).i(e3.file_type), e3.name && t3.u(26).s(e3.name), e3.size && t3.u(32).i6(e3.size), e3.duration && t3.u(40).i6(e3.duration), t3;
          }, Ce), e2.FileUploadRsp = (we.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FileUploadRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.state = e3.u();
                  break;
                case 4:
                  n2.upload_req = I.zim.HttpRequest.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, we), e2.FileProcessRsp = (Ae.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FileProcessRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.state = e3.u();
                  break;
                case 4:
                  n2.download_url = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ae), e2.StGroupMemberData = (Re.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StGroupMemberData();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.member_data_seq = e3.i6(1);
                  break;
                case 2:
                  n2.user_name = e3.s();
                  break;
                case 3:
                  n2.group_nick_name = e3.s();
                  break;
                case 4:
                  n2.role = e3.i();
                  break;
                case 5:
                  n2.mute = e3.i();
                  break;
                case 6:
                  n2.not_notify = e3.i();
                  break;
                case 7:
                  n2.not_recv_msg = e3.i();
                  break;
                case 8:
                  n2.user_avatar = e3.b();
                  break;
                case 9:
                  n2.forbid_expire_time = e3.i6(1);
                  break;
                case 10:
                  n2.enter_type = e3.i();
                  break;
                case 11:
                  n2.op_user = I.zim.GroupOperator.d(e3, e3.u());
                  break;
                case 12:
                  n2.enter_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Re), e2.GroupData = (xe.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupData();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.group_name = e3.s();
                  break;
                case 3:
                  n2.group_avatar = e3.b();
                  break;
                case 4:
                  n2.group_notice = e3.s();
                  break;
                case 5:
                  n2.group_create_time = e3.i6(1);
                  break;
                case 6:
                  n2.member_count = e3.u();
                  break;
                case 7:
                  n2.forbid_info = I.zim.GroupForbid.d(e3, e3.u());
                  break;
                case 8:
                  n2.limit_info = I.zim.StGroupLimit.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, xe), e2.FirstJoinGroup = (Te.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FirstJoinGroup();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 2:
                  n2.group_list_seq = e3.i6(1);
                  break;
                case 3:
                  n2.group_data_seq = e3.i6(1);
                  break;
                case 4:
                  Object.assign(n2, I.zim.GroupData.d(e3, e3.u()));
                  break;
                case 5:
                  n2.member = I.zim.StGroupMember.d(e3, e3.u());
                  break;
                case 6:
                  n2.history_msg_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Te), e2.StGroupMember = (Oe.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StGroupMember();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.user_nid = e3.i6();
                  break;
                case 3:
                  n2.member_seq = e3.i6(1);
                  break;
                case 4:
                  n2.member_data = I.zim.StGroupMemberData.d(e3, e3.u());
                  break;
                case 5:
                  n2.attributes = I.zim.StGroupAttributes.d(e3, e3.u());
                  break;
                case 6:
                  n2.group_list_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Oe), e2.GroupCreateReq = (Le.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.group_name && t3.u(18).s(e3.group_name), e3.group_notice && t3.u(26).s(e3.group_notice), e3.user_ids && e3.user_ids.length)
              for (let r3 = 0; r3 < e3.user_ids.length; ++r3)
                t3.u(34).s(e3.user_ids[r3]);
            if (e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StGroupAttribute.e(e3.attributes[r3], t3.u(42).f()).l();
            return e3.group_avatar && t3.u(50).b(e3.group_avatar), e3.limit_info && I.zim.StGroupLimit.e(e3.limit_info, t3.u(58).f()).l(), t3;
          }, Le), e2.GroupCreateRsp = (Ee.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupCreateRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.group_id = e3.s();
                  break;
                case 4:
                  n2.members.push(I.zim.StGroupMember.d(e3, e3.u()));
                  break;
                case 5:
                  n2.member_all_seq = e3.i6(1);
                  break;
                case 6:
                  n2.error_users.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 7:
                  n2.group_list_seq = e3.i6(1);
                  break;
                case 8:
                  n2.group_data_seq = e3.i6(1);
                  break;
                case 9:
                  n2.group_attribute_seq = e3.i6(1);
                  break;
                case 10:
                  n2.member_count = e3.u();
                  break;
                case 11:
                  n2.group_create_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ee), e2.StGroupAttribute = (Ue.e = function(e3, t3) {
            return "object" == typeof e3 && (e3 = new I.zim.StGroupAttribute(e3)), t3 = t3 || n.c(), e3.key && t3.u(10).s(e3.key), e3.value && t3.u(18).s(e3.value), e3.seq && t3.u(24).i6(e3.seq), t3;
          }, Ue.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StGroupAttribute();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.key = e3.s();
                  break;
                case 2:
                  n2.value = e3.s();
                  break;
                case 3:
                  n2.seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ue), e2.StModifyGroupAttribute = (Pe.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.action && t3.u(8).i(e3.action), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StGroupAttribute.e(e3.attributes[r3], t3.u(18).f()).l();
            return t3;
          }, Pe.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StModifyGroupAttribute();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.action = e3.i();
                  break;
                case 2:
                  n2.attributes.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Pe), e2.StGroupAttributes = (je.e = function(e3, t3) {
            if ("object" == typeof e3 && (e3 = new I.zim.StGroupAttributes(e3)), t3 = t3 || n.c(), e3.seq && t3.u(8).i6(e3.seq), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StGroupAttribute.e(e3.attributes[r3], t3.u(18).f()).l();
            return t3;
          }, je.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StGroupAttributes();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.seq = e3.i6(1);
                  break;
                case 2:
                  n2.attributes.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, je), e2.GroupDataRsp = (Ge.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupDataRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.group_name = e3.s();
                  break;
                case 4:
                  n2.group_notice = e3.s();
                  break;
                case 5:
                  n2.group_data_seq = e3.i6(1);
                  break;
                case 6:
                  n2.group_avatar = e3.b();
                  break;
                case 7:
                  n2.is_all_forbid = e3.bl();
                  break;
                case 8:
                  if (2 == (7 & i3))
                    for (var o3 = e3.u() + e3.pos; e3.pos < o3; )
                      n2.forbid_list.push(e3.i());
                  else
                    n2.forbid_list.push(e3.i());
                  break;
                case 9:
                  n2.forbid_expire_time = e3.i6(1);
                  break;
                case 10:
                  n2.limit_info = I.zim.StGroupLimit.d(e3, e3.u());
                  break;
                case 11:
                  n2.group_create_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ge), e2.GroupSimpleInfoRsp = (ze.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupSimpleInfoRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.group_name = e3.s();
                  break;
                case 4:
                  n2.group_avatar = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ze), e2.GroupModifyAttributeReq = (Fe.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.attributes && I.zim.StModifyGroupAttribute.e(e3.attributes, t3.u(18).f()).l(), t3;
          }, Fe), e2.GroupModifyAttributeRsp = (Be.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupModifyAttributeRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.attributes = I.zim.StGroupAttributes.d(e3, e3.u());
                  break;
                case 4:
                  n2.fail_keys.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Be), e2.GroupGetAttributesReq = (Ne.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.attributes && I.zim.StGroupAttributes.e(e3.attributes, t3.u(18).f()).l(), t3;
          }, Ne), e2.GroupSetForbidReq = (We.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.is_all_forbid && t3.u(16).bl(e3.is_all_forbid), e3.forbid_list && e3.forbid_list.length) {
              t3.u(26).f();
              for (let r3 = 0; r3 < e3.forbid_list.length; ++r3)
                t3.i(e3.forbid_list[r3]);
              t3.l();
            }
            return e3.duration && t3.u(32).i(e3.duration), t3;
          }, We), e2.ModifyGroupLimitReq = (Ke.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.set_flag && t3.u(16).u(e3.set_flag), e3.limit_info && I.zim.StGroupLimit.e(e3.limit_info, t3.u(26).f()).l(), t3;
          }, Ke), e2.GroupEnterRsp = (He.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupEnterRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.group_name = e3.s();
                  break;
                case 4:
                  n2.properties = I.zim.StGroupAttributes.d(e3, e3.u());
                  break;
                case 5:
                  n2.member = I.zim.StGroupMember.d(e3, e3.u());
                  break;
                case 6:
                  n2.member_all_seq = e3.i6(1);
                  break;
                case 7:
                  n2.group_list_seq = e3.i6(1);
                  break;
                case 8:
                  n2.group_data_seq = e3.i6(1);
                  break;
                case 9:
                  n2.group_attribute_seq = e3.i6(1);
                  break;
                case 10:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 11:
                  n2.member_count = e3.u();
                  break;
                case 12:
                  n2.group_avatar = e3.b();
                  break;
                case 13:
                  n2.limit_info = I.zim.StGroupLimit.d(e3, e3.u());
                  break;
                case 14:
                  n2.group_create_time = e3.i6(1);
                  break;
                case 15:
                  n2.forbid_info = I.zim.GroupForbid.d(e3, e3.u());
                  break;
                case 16:
                  n2.group_notice = e3.s();
                  break;
                case 17:
                  n2.history_msg_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, He), e2.GroupApplyAccept = (Qe.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.user_id && t3.u(18).s(e3.user_id), e3.offline_info && I.zim.StOfflinePushInfo.e(e3.offline_info, t3.u(26).f()).l(), t3;
          }, Qe), e2.GroupApplyRsp = (Ze.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupApplyRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.apply_group_info = I.zim.StApplyUser.d(e3, e3.u(), I.zim.GroupApplyRsp.isGroup);
                  break;
                case 4:
                  n2.group_info = I.zim.FirstJoinGroup.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ze), e2.GroupInviteReq = (Je.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.user_ids && e3.user_ids.length)
              for (let r3 = 0; r3 < e3.user_ids.length; ++r3)
                t3.u(18).s(e3.user_ids[r3]);
            if (e3.user_infos && e3.user_infos.length)
              for (let r3 = 0; r3 < e3.user_infos.length; ++r3)
                I.zim.StGroupAttribute.e(e3.user_infos[r3], t3.u(26).f()).l();
            return e3.offline_info && I.zim.StOfflinePushInfo.e(e3.offline_info, t3.u(34).f()).l(), t3;
          }, Je), e2.GroupInviteRsp = (Ve.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupInviteRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.member_all_seq = e3.i6(1);
                  break;
                case 4:
                  n2.members.push(I.zim.StGroupMember.d(e3, e3.u()));
                  break;
                case 5:
                  n2.error_users.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 6:
                  n2.group_data_seq = e3.i6(1);
                  break;
                case 7:
                  n2.group_attribute_seq = e3.i6(1);
                  break;
                case 8:
                  n2.member_count = e3.u();
                  break;
                case 9:
                  n2.apply_users.push(I.zim.StApplyUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ve), e2.UserApplyListRsp = (Ye.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.UserApplyListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.cur_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.max_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.fetch_end = e3.i();
                  break;
                case 6:
                  n2.list.push(I.zim.StApplyUser.d(e3, e3.u()), I.zim.UserApplyListRsp.isGroup);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ye), e2.GroupKickOutRsp = (Xe.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupKickOutRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.member_all_seq = e3.i6(1);
                  break;
                case 4:
                  n2.error_users.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 5:
                  n2.member_count = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Xe), e2.GroupGetMembersReq = ($e.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.cur_list_seq && t3.u(16).i6(e3.cur_list_seq), e3.count && t3.u(24).u(e3.count), e3.full_pull && t3.u(32).i(e3.full_pull), e3.degree && t3.u(40).u(e3.degree), t3;
          }, $e), e2.StGroupMemberChangeEvent = (et.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StGroupMemberChangeEvent();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.member = I.zim.StGroupMember.d(e3, e3.u());
                  break;
                case 3:
                  n2.event_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, et), e2.GroupGetMembersRsp = (tt2.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupGetMembersRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.member_all_seq = e3.i6(1);
                  break;
                case 4:
                  n2.change_list.push(I.zim.StGroupMemberChangeEvent.d(e3, e3.u()));
                  break;
                case 5:
                  n2.full_list = e3.i();
                  break;
                case 6:
                  n2.cur_list_seq = e3.i6(1);
                  break;
                case 7:
                  n2.fetch_end = e3.i();
                  break;
                case 8:
                  n2.member_count = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, tt2), e2.GetGroupMembersByMemberSeqRsp = (rt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GetGroupMembersByMemberSeqRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.members.push(I.zim.StGroupMember.d(e3, e3.u()));
                  break;
                case 4:
                  n2.deleted_members.push(I.zim.StGroupMember.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, rt), e2.SimpleMember = (st.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.SimpleMember();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.cur_seq = e3.i6(1);
                  break;
                case 3:
                  n2.old_seq = e3.i6(1);
                  break;
                case 4:
                  n2.is_del = e3.bl();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, st), e2.GetGroupMembersByMemberAllSeqRsp = (nt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GetGroupMembersByMemberAllSeqRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.members.push(I.zim.SimpleMember.d(e3, e3.u()));
                  break;
                case 4:
                  n2.next_seq = e3.i6(1);
                  break;
                case 5:
                  n2.fetch_end = e3.bl();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, nt), e2.GroupMemberDataReq = (it.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.user_id && t3.u(18).s(e3.user_id), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StGroupAttribute.e(e3.attributes[r3], t3.u(26).f()).l();
            return t3;
          }, it), e2.GroupMemberDataRsp = (ot.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupMemberDataRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.member = I.zim.StGroupMember.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ot), e2.GroupSetMemberRoleReq = (at.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.user_id && t3.u(18).s(e3.user_id), e3.role && t3.u(24).i(e3.role), t3;
          }, at), e2.GroupUpdate = (ut.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupUpdate();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.type = e3.i();
                  break;
                case 2:
                  n2.info = I.zim.GroupInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2.info.type = n2.type, n2.info;
          }, ut), e2.GroupInfo = (ct.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.group_name = e3.s();
                  break;
                case 3:
                  n2.group_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.group_data_seq = e3.i6(1);
                  break;
                case 5:
                  n2.all_member_seq = e3.i6(1);
                  break;
                case 6:
                  n2.attribute_seq = e3.i6(1);
                  break;
                case 7:
                  n2.not_notify = e3.bl();
                  break;
                case 8:
                  n2.member_count = e3.u();
                  break;
                case 9:
                  n2.group_avatar = e3.b();
                  break;
                case 10:
                  n2.user_apply_list_seq = e3.i6(1);
                  break;
                case 11:
                  n2.history_msg_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ct), e2.GroupInfosRsp = (lt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupInfosRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.group_infos.push(I.zim.GroupUpdate.d(e3, e3.u()));
                  break;
                case 4:
                  n2.fail_keys.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, lt), e2.GroupListRsp = (dt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.cur_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.max_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.groups.push(I.zim.GroupUpdate.d(e3, e3.u()));
                  break;
                case 6:
                  n2.full_list = e3.i();
                  break;
                case 7:
                  n2.fetch_end = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, dt), e2.GroupMuteReq = (pt.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.enable && t3.u(16).bl(e3.enable), t3;
          }, pt), e2.GroupOperator = (ht.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupOperator();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.user_name = e3.b();
                  break;
                case 3:
                  n2.group_nick_name = e3.s();
                  break;
                case 4:
                  n2.role = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2.user_id ? n2 : null;
          }, ht), e2.PushCreateGroup = (ft.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushCreateGroup();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.group_name = e3.s();
                  break;
                case 3:
                  n2.members.push(I.zim.StGroupMember.d(e3, e3.u()));
                  break;
                case 4:
                  n2.member_all_seq = e3.i6(1);
                  break;
                case 5:
                  n2.attributes = I.zim.StGroupAttributes.d(e3, e3.u());
                  break;
                case 6:
                  n2.op_user = I.zim.GroupOperator.d(e3, e3.u());
                  break;
                case 7:
                  n2.member_count = e3.u();
                  break;
                case 8:
                  n2.group_avatar = e3.b();
                  break;
                case 9:
                  n2.group_list_seq = e3.i6(1);
                  break;
                case 10:
                  n2.limit_info = I.zim.StGroupLimit.d(e3, e3.u());
                  break;
                case 11:
                  n2.group_create_time = e3.i6(1);
                  break;
                case 12:
                  n2.group_notice = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ft), e2.PushModifyGroupAttribute = (mt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushModifyGroupAttribute();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.attributes = I.zim.StGroupAttributes.d(e3, e3.u());
                  break;
                case 3:
                  n2.op_user = I.zim.GroupOperator.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, mt), e2.PushGroupMemberChange = (gt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushGroupMemberChange();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.member_all_seq = e3.i6(1);
                  break;
                case 3:
                  n2.members.push(I.zim.StGroupMember.d(e3, e3.u()));
                  break;
                case 4:
                  n2.change_type = e3.i();
                  break;
                case 5:
                  n2.op_user = I.zim.GroupOperator.d(e3, e3.u());
                  break;
                case 6:
                  n2.new_owner_id = e3.s();
                  break;
                case 7:
                  n2.member_count = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, gt), e2.GroupForbid = (_t.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupForbid();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.is_all_forbid = e3.bl();
                  break;
                case 2:
                  if (2 == (7 & i3))
                    for (var o3 = e3.u() + e3.pos; e3.pos < o3; )
                      n2.forbid_list.push(e3.i());
                  else
                    n2.forbid_list.push(e3.i());
                  break;
                case 3:
                  n2.forbid_expire_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, _t), e2.StGroupData = (bt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StGroupData();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_avatar = e3.b();
                  break;
                case 2:
                  n2.group_name = e3.s();
                  break;
                case 3:
                  n2.group_notice = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, bt), e2.StGroupLimit = (vt.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.maxMemberCount && t3.u(8).i(e3.maxMemberCount), e3.joinMode && t3.u(16).i(e3.joinMode), e3.inviteMode && t3.u(24).i(e3.inviteMode), e3.beInviteMode && t3.u(32).i(e3.beInviteMode), t3;
          }, vt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StGroupLimit();
            for (n2.maxMemberCount = 0, n2.joinMode = 0, n2.inviteMode = 0, n2.beInviteMode = 0; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.maxMemberCount = e3.i();
                  break;
                case 2:
                  n2.joinMode = e3.i();
                  break;
                case 3:
                  n2.inviteMode = e3.i();
                  break;
                case 4:
                  n2.beInviteMode = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, vt), e2.PushModifyGroupData = (yt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushModifyGroupData();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.op_user = I.zim.GroupOperator.d(e3, e3.u());
                  break;
                case 3:
                  n2.group_data_seq = e3.i6(1);
                  break;
                case 4:
                case 5:
                  n2.value = e3.s();
                  break;
                case 7:
                  n2.value = e3.b();
                  break;
                case 8:
                  n2.value = I.zim.GroupForbid.d(e3, e3.u());
                  break;
                case 9:
                  n2.value = I.zim.StGroupLimit.d(e3, e3.u());
                  break;
                case 10:
                  n2.value = I.zim.StGroupData.d(e3, e3.u());
                  break;
                case 6:
                  n2.modify_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, yt), e2.PushGroupOwnerTransfer = (Mt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushGroupOwnerTransfer();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.user_id = e3.s();
                  break;
                case 3:
                  n2.op_user = I.zim.GroupOperator.d(e3, e3.u());
                  break;
                case 4:
                  n2.member_all_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Mt), e2.PushGroupInvite = (kt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushGroupInvite();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.group_name = e3.s();
                  break;
                case 3:
                  n2.group_notice = e3.s();
                  break;
                case 4:
                  n2.op_user = I.zim.GroupOperator.d(e3, e3.u());
                  break;
                case 5:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 6:
                  n2.member_count = e3.u();
                  break;
                case 7:
                  n2.group_avatar = e3.b();
                  break;
                case 8:
                  n2.group_list_seq = e3.i6(1);
                  break;
                case 9:
                  n2.limit_info = I.zim.StGroupLimit.d(e3, e3.u());
                  break;
                case 10:
                  n2.forbid_info = I.zim.GroupForbid.d(e3, e3.u());
                  break;
                case 11:
                  n2.group_create_time = e3.i6(1);
                  break;
                case 12:
                  n2.member = I.zim.StGroupMember.d(e3, e3.u());
                  break;
                case 13:
                  n2.history_msg_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, kt), e2.PushApplyUserStateChange = (It.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushApplyUserStateChange();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.list.push(I.zim.StApplyUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, It), e2.PushApplyGroupStateChange = (St.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushApplyGroupStateChange();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.apply_info = I.zim.StApplyUser.d(e3, e3.u(), true);
                  break;
                case 2:
                  n2.group_info = I.zim.FirstJoinGroup.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, St), e2.FetchReplyListRsp = (Dt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FetchReplyListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.total_count = e3.u();
                  break;
                case 4:
                  if (2 == (7 & i3))
                    for (var o3 = e3.u() + e3.pos; e3.pos < o3; )
                      n2.conv_msg_seq.push(e3.i6(1));
                  else
                    n2.conv_msg_seq.push(e3.i6(1));
                  break;
                case 5:
                  n2.root_info = I.zim.MuteInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Dt), e2.BatchFetchConvMsgReq = (qt.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.how && t3.u(16).i(e3.how), e3.degree && t3.u(24).u(e3.degree), e3.login_fetch && t3.u(32).i(e3.login_fetch), e3.reqs && e3.reqs.length)
              for (let r3 = 0; r3 < e3.reqs.length; ++r3)
                I.zim.FriendListReq.e(e3.reqs[r3], t3.u(42).f()).l();
            return t3;
          }, qt), e2.BatchFetchConvMsgRsp = (Ct.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.BatchFetchConvMsgRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.max_conv_msg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.fetch_end = e3.i();
                  break;
                case 5:
                  var o3 = I.zim.StFetchConvMsgResult.d(e3, e3.u());
                  Object.assign(n2.msgs, o3.msgs);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2.msgs = Object.values(n2.msgs), n2;
          }, Ct), e2.StMsgReplyInfo = (wt.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.root_msg_seq && t3.u(8).i6(e3.root_msg_seq), e3.root_msg_id && t3.u(16).i6(e3.root_msg_id), e3.msg_seq && t3.u(24).i6(e3.msg_seq), e3.msg_id && t3.u(32).i6(e3.msg_id), e3.sender_user_id && t3.u(42).s(e3.sender_user_id), e3.msg_time && t3.u(48).i6(e3.msg_time), e3.is_server && t3.u(56).u(e3.is_server), e3.msg_type && t3.u(64).i(e3.msg_type), e3.msg && t3.u(74).b(e3.msg), e3.reply_count && t3.u(80).u(e3.reply_count), t3;
          }, wt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.create(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StMsgReplyInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.root_msg_seq = e3.i6(1);
                  break;
                case 2:
                  n2.root_msg_id = e3.i6().toString();
                  break;
                case 3:
                  n2.msg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.msg_id = e3.i6().toString();
                  break;
                case 5:
                  n2.sender_user_id = e3.s();
                  break;
                case 6:
                  n2.msg_time = e3.i6(1);
                  break;
                case 7:
                  n2.is_server = e3.u();
                  break;
                case 8:
                  n2.msg_type = e3.i();
                  break;
                case 9:
                  n2.msg = e3.b();
                  break;
                case 10:
                  e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, wt), e2.StFetchConvMsgResult = (At.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StFetchConvMsgResult();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  var o3 = I.zim.FetchMsgInfo.d(e3, e3.u());
                  n2.msgs[o3.msg_svr_info.conv_msg_seq] = o3;
                  break;
                case 4:
                  n2.next_conv_msg_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, At), e2.C2CMsgReq = (Rt.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.msg_info && I.zim.StConvMsgInfo.e(e3.msg_info, t3.u(18).f()).l(), e3.fetch_peer_user_info && t3.u(24).i(e3.fetch_peer_user_info), t3;
          }, Rt), e2.C2CMsgRsp = (xt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.C2CMsgRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.msg_svr_info = I.zim.StMsgSvrInfo.d(e3, e3.u());
                  break;
                case 4:
                  n2.peer_user_name = e3.b();
                  break;
                case 5:
                  n2.send_count_after_read = e3.i6(1);
                  break;
                case 6:
                  n2.conv_disable = e3.bl();
                  break;
                case 7:
                  n2.peer_user_avatar = e3.b();
                  break;
                case 8:
                  n2.msg_status = e3.i();
                  break;
                case 9:
                  n2.audit_info = e3.s();
                  break;
                case 10:
                  var o3 = I.zim.ErrorUser.d(e3, e3.u());
                  n2.audit_message_info = { filtered_text: o3.user_id };
                  break;
                case 11:
                  n2.reply_count = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, xt), e2.C2CCommandReq = (Tt.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.command_msg_info && I.zim.StCommandMsgInfo.e(e3.command_msg_info, t3.u(18).f()).l(), t3;
          }, Tt), e2.C2CCommandReqRsp = (Ot.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.C2CCommandReqRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.command_svr_info = I.zim.StCommandSvrInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ot), e2.RoomMsgReq = (Lt.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.room_user_session_id && t3.u(24).i6(e3.room_user_session_id), e3.msg_info && I.zim.StConvMsgInfo.e(e3.msg_info, t3.u(34).f()).l(), e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, Lt), e2.RoomMsgRsp = (Et.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.RoomMsgRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.msg_id = e3.i6().toString();
                  break;
                case 4:
                  n2.msg_svr_info = I.zim.StMsgSvrInfo.d(e3, e3.u());
                  break;
                case 5:
                  n2.audit_info = e3.s();
                  break;
                case 6:
                  var o3 = I.zim.ErrorUser.d(e3, e3.u());
                  n2.audit_message_info = { filtered_text: o3.user_id };
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Et), e2.RoomMsglistReq = (Ut.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.room_user_session_id && t3.u(24).i6(e3.room_user_session_id), e3.conv_msg_seq && t3.u(32).i6(e3.conv_msg_seq), e3.count && t3.u(40).i(e3.count), e3.sort_type && t3.u(48).i(e3.sort_type), e3.how && t3.u(64).i(e3.how), e3.degree && t3.u(72).u(e3.degree), e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, Ut), e2.RoomMsglistRsp = (Pt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.RoomMsglistRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.next_conv_msg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.max_conv_msg_seq = e3.i6(1);
                  break;
                case 6:
                  n2.msgs.push(I.zim.FetchMsgInfo.d(e3, e3.u()));
                  break;
                case 7:
                  n2.fetch_end = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Pt), e2.StMsgInfo = (jt.e = function(e3, t3) {
            return "object" == typeof e3 && (e3 = new I.zim.StMsgInfo(e3)), t3 = t3 || n.c(), e3.msg_type && t3.u(8).i(e3.msg_type), e3.msg && t3.u(18).b(e3.msg), e3.priority_type && t3.u(24).i(e3.priority_type), e3.msg_id && t3.u(32).i6(e3.msg_id), e3.sender_user_id && t3.u(42).s(e3.sender_user_id), e3.msg_time && t3.u(48).i6(e3.msg_time), e3.payload && t3.u(58).b(e3.payload), t3;
          }, jt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StMsgInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.msg_type = e3.i();
                  break;
                case 2:
                  n2.msg = e3.b();
                  break;
                case 3:
                  n2.priority_type = e3.i();
                  break;
                case 4:
                  n2.msg_id = e3.i6().toString();
                  break;
                case 5:
                  n2.sender_user_id = e3.s();
                  break;
                case 6:
                  n2.msg_time = e3.i6(1);
                  break;
                case 7:
                  n2.payload = e3.b();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, jt), e2.RoomCommandMsgReq = (Gt.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.room_user_session_id && t3.u(24).i6(e3.room_user_session_id), e3.command_msg_info && I.zim.StMsgInfo.e(e3.command_msg_info, t3.u(34).f()).l(), e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, Gt), e2.StReaction = (zt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StReaction();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.reaction_key = e3.s();
                  break;
                case 2:
                  n2.cur_reaction_seq = e3.i6(1);
                  break;
                case 3:
                  n2.user_total_count = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, zt), e2.SetReactionReq = (Ft.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.conv_msg_seq && t3.u(16).i6(e3.conv_msg_seq), e3.reaction_into_map)
              for (let r3 = Object.keys(e3.reaction_into_map), s2 = 0; s2 < r3.length; ++s2)
                t3.u(26).f().u(10).s(r3[s2]), I.zim.C2CReadReceiptReq.e(e3.reaction_into_map[r3[s2]], t3.u(18).f()).l().l();
            return e3.operate_type && t3.u(32).i(e3.operate_type), t3;
          }, Ft), e2.SetReactionRsp = (Bt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.SetReactionRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.succ_list.push(I.zim.StReaction.d(e3, e3.u()));
                  break;
                case 4:
                  n2.error_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Bt), e2.DelReactionReq = (Nt.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.conv_msg_seq && t3.u(16).i6(e3.conv_msg_seq), e3.reaction_key && e3.reaction_key.length)
              for (let r3 = 0; r3 < e3.reaction_key.length; ++r3)
                t3.u(26).s(e3.reaction_key[r3]);
            return t3;
          }, Nt), e2.ReactionListReq = (Wt.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.degree && t3.u(16).u(e3.degree), e3.conv_msg_seq && t3.u(24).i6(e3.conv_msg_seq), e3.start_reaction_seq && t3.u(32).i6(e3.start_reaction_seq), t3;
          }, Wt), e2.ReactionListRsp = (Kt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ReactionListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.fetch_end = e3.u();
                  break;
                case 4:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 5:
                  n2.msg_next_reaction_seq = e3.i6(1);
                  break;
                case 6:
                  n2.msg_max_reaction_seq = e3.i6(1);
                  break;
                case 7:
                  n2.reaction_list.push(I.zim.StReactionBrief.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Kt), e2.ReactionInfoReq = (Ht.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.conv_msg_seq && t3.u(16).i6(e3.conv_msg_seq), e3.reaction_key && t3.u(26).s(e3.reaction_key), e3.max_reaction_seq && t3.u(32).i6(e3.max_reaction_seq), e3.is_detail && t3.u(40).bl(e3.is_detail), t3;
          }, Ht), e2.ReactionInfoRsp = (Qt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ReactionInfoRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.max_reaction_seq = e3.i6(1);
                  break;
                case 4:
                  n2.total_user_count = e3.u();
                  break;
                case 5:
                  n2.user_reaction.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                case 6:
                  n2.include_self = e3.bl();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2.user_reaction = n2.user_reaction.map((e4) => ({ userID: e4.key, seq: +e4.seq.toString() })), n2.user_reaction.sort((e4, t4) => e4.seq - t4.seq), n2;
          }, Qt), e2.PushMsgReaction = (Zt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushMsgReaction();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_id = e3.s();
                  break;
                case 2:
                  n2.conv_type = e3.i();
                  break;
                case 3:
                  n2.msg_reactions.push(I.zim.StPushMsgReaction.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Zt), e2.StPushMsgReaction = (Jt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StPushMsgReaction();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 2:
                  n2.start_reaction_seq = e3.i6(1);
                  break;
                case 3:
                  n2.end_reaction_seq = e3.i6(1);
                  break;
                case 4:
                  n2.reaction_infos.push(I.zim.StReactionBrief.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Jt), e2.GroupMsgRsp = (Vt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GroupMsgRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.msg_svr_info = I.zim.StMsgSvrInfo.d(e3, e3.u());
                  break;
                case 4:
                  n2.send_count_after_read = e3.i6(1);
                  break;
                case 5:
                  n2.msg_status = e3.i();
                  break;
                case 6:
                  n2.receipt_seq = e3.i6(1);
                  break;
                case 7:
                  n2.unread_count = e3.sint32();
                  break;
                case 8:
                  n2.audit_info = e3.s();
                  break;
                case 9:
                  var o3 = I.zim.ErrorUser.d(e3, e3.u());
                  n2.audit_message_info = { filtered_text: o3.user_id };
                  break;
                case 10:
                  n2.reply_count = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Vt), e2.FetchGroupMsgList = (Yt.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.group_id && t3.u(10).s(e3.group_id), e3.conv_msg_seq && t3.u(16).i6(e3.conv_msg_seq), e3.count && t3.u(24).i(e3.count), e3.sort_type && t3.u(32).i(e3.sort_type), e3.max_conv_msg_seq && t3.u(40).i6(e3.max_conv_msg_seq), e3.how && t3.u(48).i(e3.how), e3.degree && t3.u(56).u(e3.degree), t3;
          }, Yt), e2.FetchGroupMsgListRsp = (Xt.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FetchGroupMsgListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.max_conv_msg_seq = e3.i6(1);
                  break;
                case 4:
                  n2.next_conv_msg_seq = e3.i6(1);
                  break;
                case 5:
                  n2.msgs.push(I.zim.FetchMsgInfo.d(e3, e3.u()));
                  break;
                case 6:
                  n2.fetch_end = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Xt), e2.PushPinnedConvChange = ($t.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushPinnedConvChange();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_id = e3.s();
                  break;
                case 2:
                  n2.conv_type = e3.i();
                  break;
                case 3:
                  n2.conv_pinned_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.pinned_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, $t), e2.PushEnterGroup = (er.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushEnterGroup();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.group_id = e3.s();
                  break;
                case 2:
                  n2.group_name = e3.s();
                  break;
                case 3:
                  n2.group_notice = e3.s();
                  break;
                case 4:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 5:
                  n2.member_count = e3.u();
                  break;
                case 6:
                  n2.group_avatar = e3.b();
                  break;
                case 7:
                  n2.group_list_seq = e3.i6(1);
                  break;
                case 8:
                  n2.user_id = e3.s();
                  break;
                case 9:
                  n2.member = I.zim.StGroupMember.d(e3, e3.u());
                  break;
                case 10:
                  n2.properties = I.zim.StGroupAttributes.d(e3, e3.u());
                  break;
                case 11:
                  n2.group_create_time = e3.i6(1);
                  break;
                case 12:
                  n2.limit_info = I.zim.StGroupLimit.d(e3, e3.u());
                  break;
                case 13:
                  n2.forbid_info = I.zim.GroupForbid.d(e3, e3.u());
                  break;
                case 14:
                  n2.history_msg_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, er), e2.PushDelConvMsg = (tr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushDelConvMsg();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_id = e3.s();
                  break;
                case 2:
                  n2.conv_type = e3.i();
                  break;
                case 3:
                  n2.is_del_all = e3.u();
                  break;
                case 4:
                  if (2 == (7 & i3))
                    for (var o3 = e3.u() + e3.pos; e3.pos < o3; )
                      n2.del_conv_msg_seqs.push(e3.i6(1));
                  else
                    n2.del_conv_msg_seqs.push(e3.i6(1));
                  break;
                case 5:
                  n2.max_del_conv_msg_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, tr), e2.GetMsgStateListReq = (rr.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.state_seq && t3.u(16).i6(e3.state_seq), e3.count && t3.u(24).sint32(e3.count), e3.degree && t3.u(32).u(e3.degree), e3.max_msg_seq && t3.u(40).i6(e3.max_msg_seq), e3.min_msg_seq && t3.u(48).i6(e3.min_msg_seq), t3;
          }, rr), e2.GetMsgStateListRsp = (sr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GetMsgStateListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.state_list.push(I.zim.StMsgStateContent.d(e3, e3.u()));
                  break;
                case 4:
                  n2.next_state_seq = e3.i6(1);
                  break;
                case 5:
                  n2.fetch_end = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, sr), e2.StMsgStateContent = (nr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StMsgStateContent();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 3:
                  n2.state = e3.i();
                  break;
                case 4:
                  n2.state_seq = e3.i6(1);
                  break;
                case 5:
                  n2.conv_id = e3.s();
                  break;
                case 6:
                  n2.conv_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, nr), e2.PushC2CCommand = (ir.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushC2CCommand();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              i3 >>> 3 == 1 ? n2.recv_command_info = I.zim.StRecvCommandInfo.d(e3, e3.u()) : e3.sk(7 & i3);
            }
            return n2;
          }, ir), e2.PushRoomMsg = (or.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushRoomMsg();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.room_id = e3.s();
                  break;
                case 2:
                  n2.room_session_id = e3.i6();
                  break;
                case 3:
                  n2.recv_msg_info = I.zim.StRecvMsgInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, or), e2.PushRoomCommand = (ar.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushRoomCommand();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.room_id = e3.s();
                  break;
                case 2:
                  n2.room_session_id = e3.i6();
                  break;
                case 3:
                  n2.msg_info = I.zim.StMsgInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ar), e2.PushGroupCommand = (ur.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushGroupCommand();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              i3 >>> 3 == 2 ? n2.recv_command_info = I.zim.StRecvCommandInfo.d(e3, e3.u()) : e3.sk(7 & i3);
            }
            return n2;
          }, ur), e2.PushGroupMsg = (cr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushGroupMsg();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.recv_msg_info = I.zim.StRecvMsgInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.msg_status = e3.i();
                  break;
                case 3:
                  n2.send_count_after_read = e3.i6(1);
                  break;
                case 4:
                  n2.reply_count = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2.recv_msg_info && n2.reply_count && n2.recv_msg_info.msg_info.reply_info && (n2.recv_msg_info.msg_info.reply_info.reply_count = n2.reply_count), n2;
          }, cr), e2.RoomCreateReq = (lr.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_name && t3.u(18).b(e3.room_name), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StRoomAttribute.e(e3.attributes[r3], t3.u(26).f()).l();
            return e3.destroy_delay && t3.u(32).u(e3.destroy_delay), t3;
          }, lr), e2.RoomCreateRsp = (dr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.RoomCreateRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.room_session_id = e3.i6();
                  break;
                case 4:
                  n2.room_user_session_id = e3.i6();
                  break;
                case 5:
                  n2.room_info_interval = e3.u();
                  break;
                case 6:
                  n2.userlist_enable = e3.u();
                  break;
                case 7:
                  n2.userlist_merge_timeout = e3.u();
                  break;
                case 8:
                  n2.userlist_interval = e3.u();
                  break;
                case 9:
                  n2.attributes = I.zim.StRoomAttributes.d(e3, e3.u());
                  break;
                case 10:
                  n2.attributes_pull_interval = e3.u();
                  break;
                case 11:
                  n2.attributes_merge_timeout = e3.u();
                  break;
                case 13:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 14:
                  n2.enabled_offline_msg = e3.u();
                  break;
                case 15:
                  n2.msg_merge_timeout = e3.u();
                  break;
                case 16:
                  n2.msg_pull_interval = e3.u();
                  break;
                case 17:
                  n2.destroy_delay = e3.u();
                  break;
                case 18:
                  n2.sub_room_id = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, dr), e2.RoomEnterReq = (pr.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_user_session_id && t3.u(16).i6(e3.room_user_session_id), e3.room_name && t3.u(26).b(e3.room_name), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StRoomAttribute.e(e3.attributes[r3], t3.u(34).f()).l();
            return e3.destroy_delay && t3.u(40).u(e3.destroy_delay), e3.create_if_not_exist && t3.u(48).bl(e3.create_if_not_exist), t3;
          }, pr), e2.RoomEnterRsp = (hr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.RoomEnterRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.room_name = e3.b();
                  break;
                case 4:
                  n2.room_session_id = e3.i6();
                  break;
                case 5:
                  n2.room_user_session_id = e3.i6();
                  break;
                case 6:
                  n2.userlist_seq = e3.u();
                  break;
                case 7:
                  n2.user_count = e3.u();
                  break;
                case 8:
                  n2.room_info_interval = e3.u();
                  break;
                case 9:
                  n2.userlist_enable = e3.u();
                  break;
                case 10:
                  n2.userlist_merge_timeout = e3.u();
                  break;
                case 11:
                  n2.userlist_interval = e3.u();
                  break;
                case 12:
                  n2.attribute_seq = e3.u();
                  break;
                case 13:
                  n2.attributes_pull_interval = e3.u();
                  break;
                case 14:
                  n2.attributes_merge_timeout = e3.u();
                  break;
                case 15:
                  n2.sub_room_id = e3.s();
                  break;
                case 17:
                  n2.conv_msg_seq = e3.i6(1);
                  break;
                case 18:
                  n2.enabled_offline_msg = e3.u();
                  break;
                case 19:
                  n2.msg_merge_timeout = e3.u();
                  break;
                case 20:
                  n2.msg_pull_interval = e3.u();
                  break;
                case 21:
                  n2.destroy_delay = e3.u();
                  break;
                case 22:
                  n2.attributes = I.zim.StRoomAttributes.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, hr), e2.QueryRoomUserInfosReq = (fr.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.room_user_session_id && t3.u(24).i6(e3.room_user_session_id), e3.user_ids && e3.user_ids.length)
              for (let r3 = 0; r3 < e3.user_ids.length; ++r3)
                t3.u(34).s(e3.user_ids[r3]);
            return e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, fr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.QueryRoomUserInfosReq();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.room_id = e3.s();
                  break;
                case 2:
                  n2.room_session_id = e3.i6();
                  break;
                case 3:
                  n2.room_user_session_id = e3.i6();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, fr), e2.RoomUserlistReq = (mr.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.pos_flag && t3.u(26).s(e3.pos_flag), e3.count && t3.u(32).i(e3.count), e3.mode && t3.u(40).i(e3.mode), e3.expect_seq && t3.u(48).u(e3.expect_seq), e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, mr), e2.RoomUserlistRsp = (gr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.RoomUserlistRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.pos_flag = e3.s();
                  break;
                case 4:
                  n2.userlist_seq = e3.u();
                  break;
                case 5:
                  n2.user_count = e3.u();
                  break;
                case 6:
                  n2.users.push(I.zim.StUserInfo.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, gr), e2.StUserInfo = (_r.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.user_id && t3.u(10).s(e3.user_id), e3.user_name && t3.u(18).b(e3.user_name), e3.online_state && t3.u(24).i(e3.online_state), e3.extra && t3.u(34).b(e3.extra), e3.avatar && t3.u(42).b(e3.avatar), t3;
          }, _r.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StUserInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.user_name = e3.b();
                  break;
                case 3:
                  n2.online_state = e3.i();
                  break;
                case 4:
                  n2.extra = e3.b();
                  break;
                case 5:
                  n2.avatar = e3.b();
                  break;
                case 6:
                  n2.updated_at = e3.i6(1);
                  break;
                case 7:
                  n2.user_info_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, _r), e2.UserRule = (br.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.online && e3.online.length) {
              t3.u(10).f();
              for (let r3 = 0; r3 < e3.online.length; ++r3)
                t3.i(e3.online[r3]);
              t3.l();
            }
            if (e3.disable_push && e3.disable_push.length) {
              t3.u(18).f();
              for (let r3 = 0; r3 < e3.disable_push.length; ++r3)
                t3.i(e3.disable_push[r3]);
              t3.l();
            }
            return t3;
          }, br.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.UserRule();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  if (2 == (7 & i3))
                    for (var o3 = e3.u() + e3.pos; e3.pos < o3; )
                      n2.online.push(e3.i());
                  else
                    n2.online.push(e3.i());
                  break;
                case 2:
                  if (2 == (7 & i3))
                    for (var a3 = e3.u() + e3.pos; e3.pos < a3; )
                      n2.disable_push.push(e3.i());
                  else
                    n2.disable_push.push(e3.i());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, br), e2.StUserSelfRule = (vr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StUserSelfRule();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.app_custom_push = I.zim.UserRule.d(e3, e3.u());
                  break;
                case 2:
                  n2.user_custom_push = I.zim.UserRule.d(e3, e3.u());
                  break;
                case 3:
                  n2.user_info_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, vr), e2.ErrorUser = (yr.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.user_id && t3.u(10).s(e3.user_id), e3.sub_code && t3.u(16).u(e3.sub_code), t3;
          }, yr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ErrorUser();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.sub_code = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, yr), e2.RoomInfoRsp = (Mr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.RoomInfoRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.userlist_seq = e3.u();
                  break;
                case 4:
                  n2.user_count = e3.u();
                  break;
                case 5:
                  n2.room_info_interval = e3.u();
                  break;
                case 6:
                  n2.attribute_seq = e3.u();
                  break;
                case 7:
                  n2.max_conv_msg_seq = e3.i6(1);
                  break;
                case 9:
                  n2.ulist_to = e3.u();
                  break;
                case 10:
                  n2.ulist_itvl = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Mr), e2.ModifyUserCustomPush = (kr.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.user_rule && I.zim.UserRule.e(e3.user_rule, t3.u(10).f()).l(), t3;
          }, kr), e2.SelfUserInfoRsp = (Ir.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.SelfUserInfoRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.base_info = I.zim.StUserInfo.d(e3, e3.u());
                  break;
                case 4:
                  n2.rule = I.zim.StUserSelfRule.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ir), e2.StRoomAttribute = (Sr.e = function(e3, t3) {
            return "object" == typeof e3 && (e3 = new I.zim.StRoomAttribute(e3)), t3 = t3 || n.c(), e3.key && t3.u(10).s(e3.key), e3.value && t3.u(18).s(e3.value), e3.seq && t3.u(24).u(e3.seq), e3.auto_delete && t3.u(32).i(e3.auto_delete), t3;
          }, Sr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StRoomAttribute();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.key = e3.s();
                  break;
                case 2:
                  n2.value = e3.s();
                  break;
                case 3:
                  n2.seq = e3.u();
                  break;
                case 4:
                  n2.auto_delete = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Sr), e2.StModifyRoomAttribute = (Dr.e = function(e3, t3) {
            return "object" == typeof e3 && (e3 = new I.zim.StModifyRoomAttribute(e3)), t3 = t3 || n.c(), e3.action && t3.u(8).i(e3.action), e3.attribute && I.zim.StRoomAttribute.e(e3.attribute, t3.u(18).f()).l(), t3;
          }, Dr), e2.StRoomAttributes = (qr.e = function(e3, t3) {
            if ("object" == typeof e3 && (e3 = new I.zim.StRoomAttributes(e3)), t3 = t3 || n.c(), e3.attribute_seq && t3.u(8).u(e3.attribute_seq), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StRoomAttribute.e(e3.attributes[r3], t3.u(18).f()).l();
            return t3;
          }, qr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StRoomAttributes();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.attribute_seq = e3.u();
                  break;
                case 2:
                  n2.attributes.push(I.zim.StRoomAttribute.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, qr), e2.ModifyRoomAttributesReq = (Cr.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.force_modify && t3.u(24).i(e3.force_modify), e3.set_member && t3.u(32).i(e3.set_member), e3.attribute_seq && t3.u(40).u(e3.attribute_seq), e3.op_fail_fast && t3.u(48).u(e3.op_fail_fast), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StModifyRoomAttribute.e(e3.attributes[r3], t3.u(58).f()).l();
            return e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, Cr), e2.ErrList = (wr.e = function(e3, t3) {
            return "object" == typeof e3 && (e3 = new I.zim.ErrList(e3)), t3 = t3 || n.c(), e3.code && t3.u(8).u(e3.code), e3.key && t3.u(18).s(e3.key), e3.seq && t3.u(24).u(e3.seq), t3;
          }, wr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ErrList();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.key = e3.s();
                  break;
                case 3:
                  n2.seq = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, wr), e2.ModifyRoomAttributesRsp = (Ar.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ModifyRoomAttributesRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.attributes = I.zim.StRoomAttributes.d(e3, e3.u());
                  break;
                case 4:
                  n2.err_list.push(I.zim.ErrList.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ar), e2.GetRoomAttributesReq = (Rr.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.attributes && I.zim.StRoomAttributes.e(e3.attributes, t3.u(26).f()).l(), e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, Rr), e2.ModifyRoomUserAttributesReq = (xr.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.room_user_session_id && t3.u(24).i6(e3.room_user_session_id), e3.force_modify && t3.u(32).i(e3.force_modify), e3.op_fail_fast && t3.u(40).u(e3.op_fail_fast), e3.attributes && I.zim.StModifyRoomUserAttributes.e(e3.attributes, t3.u(50).f()).l(), e3.auto_save && t3.u(56).i(e3.auto_save), e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, xr), e2.ModifyRoomUserAttributesRsp = (Tr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ModifyRoomUserAttributesRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.user_attributes.push(I.zim.StModifyRoomUserAttributeRsp.d(e3, e3.u()));
                  break;
                case 4:
                  n2.user_err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Tr), e2.StModifyRoomUserAttributes = (Or.e = function(e3, t3) {
            if ("object" == typeof e3 && (e3 = new I.zim.StModifyRoomUserAttributes(e3)), t3 = t3 || n.c(), e3.user_ids && e3.user_ids.length)
              for (let r3 = 0; r3 < e3.user_ids.length; ++r3)
                t3.u(10).s(e3.user_ids[r3]);
            if (e3.modify_attribute && e3.modify_attribute.length)
              for (let r3 = 0; r3 < e3.modify_attribute.length; ++r3)
                I.zim.StModifyRoomAttribute.e(e3.modify_attribute[r3], t3.u(18).f()).l();
            return t3;
          }, Or), e2.StModifyRoomUserAttributeRsp = (Lr.e = function(e3, t3) {
            if ("object" == typeof e3 && (e3 = new I.zim.StModifyRoomUserAttributeRsp(e3)), t3 = t3 || n.c(), e3.user_id && t3.u(10).s(e3.user_id), e3.user_attributes_seq && t3.u(16).u(e3.user_attributes_seq), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StRoomAttribute.e(e3.attributes[r3], t3.u(26).f()).l();
            if (e3.err_list && e3.err_list.length)
              for (let r3 = 0; r3 < e3.err_list.length; ++r3)
                I.zim.ErrList.e(e3.err_list[r3], t3.u(34).f()).l();
            return t3;
          }, Lr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StModifyRoomUserAttributeRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.user_attributes_seq = e3.u();
                  break;
                case 3:
                  n2.attributes.push(I.zim.StRoomAttribute.d(e3, e3.u()));
                  break;
                case 4:
                  n2.err_list.push(I.zim.ErrList.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Lr), e2.GetRoomUserAttributesReq = (Er.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.room_user_session_id && t3.u(24).i6(e3.room_user_session_id), e3.req_attributes && e3.req_attributes.length)
              for (let r3 = 0; r3 < e3.req_attributes.length; ++r3)
                I.zim.StModifyRoomUserAttributeRsp.e(e3.req_attributes[r3], t3.u(34).f()).l();
            return e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, Er), e2.GetRoomUserAttributeListReq = (Ur.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.room_user_session_id && t3.u(24).i6(e3.room_user_session_id), e3.pos_flag && t3.u(34).s(e3.pos_flag), e3.count && t3.u(40).i(e3.count), e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, Ur), e2.GetRoomUserAttributeListRsp = (Pr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GetRoomUserAttributeListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.pos_flag = e3.s();
                  break;
                case 4:
                  n2.user_attributes_list_seq = e3.u();
                  break;
                case 5:
                  n2.user_count = e3.u();
                  break;
                case 6:
                  n2.user_attributes.push(I.zim.StModifyRoomUserAttributeRsp.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Pr), e2.PushRoomEnter = (jr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushRoomEnter();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.room_id = e3.s();
                  break;
                case 2:
                  n2.room_session_id = e3.i6();
                  break;
                case 3:
                  n2.user_id = e3.s();
                  break;
                case 4:
                  n2.user_name = e3.b();
                  break;
                case 5:
                  n2.enter_time = e3.i6(1);
                  break;
                case 6:
                  n2.userlist_seq = e3.u();
                  break;
                case 7:
                  n2.user_count = e3.u();
                  break;
                case 8:
                  n2.sub_room_id = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, jr), e2.PushRoomKickout = (Gr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushRoomKickout();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.room_id = e3.s();
                  break;
                case 2:
                  n2.reason = e3.u();
                  break;
                case 3:
                  n2.message = e3.s();
                  break;
                case 4:
                  n2.sub_room_id = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Gr), e2.PushRoomAttributesModify = (zr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushRoomAttributesModify();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.attributes.push(I.zim.StRoomAttribute.d(e3, e3.u()));
                  break;
                case 2:
                  n2.room_id = e3.s();
                  break;
                case 3:
                  n2.room_session_id = e3.i6();
                  break;
                case 4:
                  n2.user_id = e3.s();
                  break;
                case 5:
                  n2.attributes_seq = e3.u();
                  break;
                case 6:
                  n2.sub_room_id = e3.s();
                  break;
                case 7:
                  n2.old_attributes_seq = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, zr), e2.PushRoomUserAttributesModify = (Fr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushRoomUserAttributesModify();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.push_attributes.push(I.zim.StModifyRoomUserAttributeRsp.d(e3, e3.u()));
                  break;
                case 2:
                  n2.room_id = e3.s();
                  break;
                case 3:
                  n2.room_session_id = e3.i6();
                  break;
                case 4:
                  n2.user_id = e3.s();
                  break;
                case 6:
                  n2.sub_room_id = e3.s();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Fr), e2.UserInfoRsp = (Br.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.UserInfoRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.result.push(I.zim.StUserInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Br), e2.ModifyUserInfoReq = (Nr.e = function(e3, t3) {
            return t3 = t3 || n.c(), !e3.user_name || e3.set_flag && 1 != e3.set_flag || t3.u(10).b(e3.user_name), 10 == e3.set_flag && t3.u(18).b(e3.user_name), e3.set_flag && t3.u(24).u(e3.set_flag), 16 == e3.set_flag && t3.u(34).b(e3.user_name), t3;
          }, Nr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ModifyUserInfoReq();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.userName = e3.b();
                  break;
                case 2:
                  n2.extendedData = e3.b();
                  break;
                case 3:
                  n2.set_flag = e3.u();
                  break;
                case 4:
                  n2.userAvatarUrl = e3.b();
                  break;
                case 5:
                  n2.rule = I.zim.StUserSelfRule.d(e3, e3.u());
                  break;
                case 6:
                  n2.user_info_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Nr), e2.MsgStatusFail = (Wr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.MsgStatusFail();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.client_info = I.zim.StMsgClientInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.reason = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Wr), e2.StReactions = (Kr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StReactions();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.is_detail = e3.bl();
                  break;
                case 2:
                  n2.reaction_list.push(I.zim.StReactionBrief.d(e3, e3.u()));
                  break;
                case 3:
                  n2.msg_max_reaction_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Kr), e2.StReactionBrief = (Hr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StReactionBrief();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.max_reaction_seq = e3.i6(1);
                  break;
                case 2:
                  n2.reaction_key = e3.s();
                  break;
                case 3:
                  n2.total_user_count = e3.i();
                  break;
                case 4:
                  n2.include_self = e3.bl();
                  break;
                case 5:
                  n2.user_reaction.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                case 6:
                  n2.is_multi = e3.bl();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2.user_reaction = n2.user_reaction.map((e4) => ({ userID: e4.key, seq: +e4.seq.toString() })), n2.user_reaction.sort((e4, t4) => e4.seq - t4.seq), n2;
          }, Hr), e2.CallStateVersion = (Qr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.CallStateVersion();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.state = e3.i();
                  break;
                case 2:
                  n2.start_version = e3.u();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Qr), e2.UserMailCallUserInfo = (Zr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.UserMailCallUserInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.user_state = e3.u();
                  break;
                case 3:
                  n2.user_session_id = e3.i6().toString();
                  break;
                case 4:
                  n2.extended_data = e3.b();
                  break;
                case 5:
                  n2.is_timeout = e3.i6(1);
                  break;
                case 6:
                  n2.accept_time = e3.i6(1);
                  break;
                case 7:
                  n2.quit_time = e3.i6(1);
                  break;
                case 8:
                  n2.residue_timeout_time = e3.i6(1);
                  break;
                case 9:
                  n2.call_state_list.push(I.zim.CallStateVersion.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Zr), e2.QuitAllRoomRsp = (Jr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.QuitAllRoomRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.room_list.push(I.zim.QueryRoomUserInfosReq.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Jr), e2.QueryRoomMsgReq = (Vr.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.room_id && t3.u(10).s(e3.room_id), e3.room_session_id && t3.u(16).i6(e3.room_session_id), e3.room_user_session_id && t3.u(24).i6(e3.room_user_session_id), e3.client_infos && e3.client_infos.length)
              for (let r3 = 0; r3 < e3.client_infos.length; ++r3)
                I.zim.StMsgClientInfo.e(e3.client_infos[r3], t3.u(34).f()).l();
            return e3.sub_room_id && t3.u(402).s(e3.sub_room_id), t3;
          }, Vr), e2.QueryRoomMsgRsp = (Yr.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.QueryRoomMsgRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.msgs.push(I.zim.FetchMsgInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.fail_list.push(I.zim.MsgStatusFail.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Yr), e2.FriendAddReq = (Xr.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.friend_infos && e3.friend_infos.length)
              for (let r3 = 0; r3 < e3.friend_infos.length; ++r3)
                I.zim.StFriendInfo.e(e3.friend_infos[r3], t3.u(10).f()).l();
            return e3.offline_info && I.zim.StOfflinePushInfo.e(e3.offline_info, t3.u(18).f()).l(), t3;
          }, Xr), e2.StApplyStatusChange = ($r.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StApplyStatusChange();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.status = e3.i();
                  break;
                case 3:
                  n2.apply_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.apply_update_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, $r), e2.FriendAddRsp = (es.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FriendAddRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.friend_infos.push(I.zim.StFriendInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.apply_status_change_list.push(I.zim.StApplyStatusChange.d(e3, e3.u()));
                  break;
                case 5:
                  n2.err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, es), e2.StUserBaseInfo = (ts.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.user_id && t3.u(10).s(e3.user_id), e3.user_name && t3.u(18).b(e3.user_name), e3.avatar && t3.u(26).b(e3.avatar), e3.update_time && t3.u(32).i6(e3.update_time), t3;
          }, ts.d = function(e3, t3, r3) {
            e3 instanceof s || (e3 = s.c(e3));
            let n2 = void 0 === t3 ? e3.len : e3.pos + t3, i3 = new I.zim.StUserBaseInfo();
            for (; e3.pos < n2; ) {
              var o3 = e3.u();
              switch (o3 >>> 3) {
                case 1:
                  i3.user_id = e3.s();
                  break;
                case 2:
                  i3.user_name = r3 ? e3.s() : e3.b();
                  break;
                case 3:
                  i3.avatar = e3.b();
                  break;
                case 4:
                  i3.update_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & o3);
              }
            }
            return i3;
          }, ts), e2.StApplyUser = (rs.d = function(e3, t3, r3) {
            e3 instanceof s || (e3 = s.c(e3));
            let n2 = void 0 === t3 ? e3.len : e3.pos + t3, i3 = new I.zim.StApplyUser();
            for (; e3.pos < n2; ) {
              var o3 = e3.u();
              switch (o3 >>> 3) {
                case 1:
                  i3.base_info = I.zim.StUserBaseInfo.d(e3, e3.u(), r3);
                  break;
                case 2:
                  i3.apply_list_seq = e3.i6(1);
                  break;
                case 3:
                  i3.apply_status = e3.i();
                  break;
                case 4:
                  i3.op_user = I.zim.GroupOperator.d(e3, e3.u());
                  break;
                case 5:
                  i3.wording = e3.s();
                  break;
                case 6:
                  i3.create_time = e3.i6(1);
                  break;
                case 7:
                  i3.update_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & o3);
              }
            }
            return i3;
          }, rs), e2.StFriendInfo = (ss.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.user_base_info && I.zim.StUserBaseInfo.e(e3.user_base_info, t3.u(10).f()).l(), e3.wording && t3.u(18).s(e3.wording), e3.remark && t3.u(26).s(e3.remark), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StGroupAttribute.e(e3.attributes[r3], t3.u(34).f()).l();
            return e3.friend_list_seq && t3.u(40).i6(e3.friend_list_seq), e3.create_time && t3.u(48).i6(e3.create_time), t3;
          }, ss.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StFriendInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_base_info = I.zim.StUserBaseInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.wording = e3.s();
                  break;
                case 3:
                  n2.remark = e3.s();
                  break;
                case 4:
                  n2.attributes.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                case 5:
                  n2.friend_list_seq = e3.i6(1);
                  break;
                case 6:
                  n2.create_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ss), e2.FriendApplyRsp = (ns.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FriendApplyRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.apply_infos.push(I.zim.StFriendApplyInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                case 5:
                  n2.friend_infos.push(I.zim.StFriendInfo.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ns), e2.StFriendApplyInfo = (is.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StFriendApplyInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.user_name = e3.b();
                  break;
                case 3:
                  n2.avatar = e3.b();
                  break;
                case 4:
                  n2.app_type = e3.i();
                  break;
                case 5:
                  n2.wording = e3.s();
                  break;
                case 6:
                  n2.status = e3.i();
                  break;
                case 7:
                  n2.remark = e3.s();
                  break;
                case 8:
                  n2.attributes.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                case 9:
                  n2.apply_list_seq = e3.i6(1);
                  break;
                case 10:
                  n2.create_time = e3.i6(1);
                  break;
                case 11:
                  n2.update_time = e3.i6(1);
                  break;
                case 12:
                  n2.user_info_update_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, is), e2.FriendAcceptReq = (os.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.user_id && t3.u(10).s(e3.user_id), e3.remark && t3.u(18).s(e3.remark), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StGroupAttribute.e(e3.attributes[r3], t3.u(26).f()).l();
            return e3.offline_info && I.zim.StOfflinePushInfo.e(e3.offline_info, t3.u(34).f()).l(), t3;
          }, os), e2.FriendAcceptRsp = (as.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FriendAcceptRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.friend = I.zim.StFriendInfo.d(e3, e3.u());
                  break;
                case 4:
                  n2.apply_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.apply_update_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, as), e2.FriendDeletedReq = (us.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.user_ids && e3.user_ids.length)
              for (let r3 = 0; r3 < e3.user_ids.length; ++r3)
                t3.u(10).s(e3.user_ids[r3]);
            return e3.delete_type && t3.u(16).i(e3.delete_type), t3;
          }, us.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FriendDeletedReq();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_ids.push(e3.s());
                  break;
                case 2:
                  n2.delete_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, us), e2.FriendListReq = (cs.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.cur_list_seq && t3.u(8).i6(e3.cur_list_seq), e3.count && t3.u(16).u(e3.count), e3.full_pull && t3.u(24).i(e3.full_pull), e3.degree && t3.u(32).u(e3.degree), e3.how && t3.u(40).u(e3.how), t3;
          }, cs), e2.FriendListRsp = (ls.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FriendListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.cur_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.max_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.full_list = e3.i();
                  break;
                case 6:
                  n2.fetch_end = e3.i();
                  break;
                case 7:
                  n2.friends.push(I.zim.FriendUpdateInfo.d(e3, e3.u()));
                  break;
                case 8:
                  n2.friend_count = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ls), e2.FriendUpdateInfo = (ds.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FriendUpdateInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.is_del = e3.bl();
                  break;
                case 2:
                  n2.info = I.zim.StFriendInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ds), e2.FriendApplyListRsp = (ps.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FriendApplyListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.cur_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.max_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.fetch_end = e3.i();
                  break;
                case 6:
                  n2.apply_list.push(I.zim.StFriendApplyInfo.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ps), e2.ModifyFriendAttributeReq = (hs.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.user_id && t3.u(10).s(e3.user_id), e3.action && t3.u(16).i(e3.action), e3.attributes && e3.attributes.length)
              for (let r3 = 0; r3 < e3.attributes.length; ++r3)
                I.zim.StGroupAttribute.e(e3.attributes[r3], t3.u(26).f()).l();
            return t3;
          }, hs), e2.ModifyFriendAttributeRsp = (fs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ModifyFriendAttributeRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.succ_keys.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                case 4:
                  n2.fail_keys.push(I.zim.StCheckFriendFail.d(e3, e3.u()));
                  break;
                case 5:
                  n2.friend_list_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, fs), e2.FriendCheckedRsp = (ms.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FriendCheckedRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.successes.push(I.zim.StCheckFriendFail.d(e3, e3.u()));
                  break;
                case 4:
                  n2.fails.push(I.zim.StCheckFriendFail.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ms), e2.StCheckFriendFail = (gs.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.user_id && t3.u(10).s(e3.user_id), e3.sub_code && t3.u(16).u(e3.sub_code), e3.relation && t3.u(24).i(e3.relation), t3;
          }, gs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StCheckFriendFail();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.sub_code = e3.u();
                  break;
                case 3:
                  n2.relation = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, gs), e2.BlacklistAddRsp = (_s.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.BlacklistAddRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.black_list.push(I.zim.StBlacklistInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, _s), e2.BlacklistDeleteRsp = (bs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.BlacklistDeleteRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.black_list.push(I.zim.PushFriendRefuse.d(e3, e3.u()));
                  break;
                case 4:
                  n2.err_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, bs), e2.BlacklistRsp = (vs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.BlacklistRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.cur_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.max_list_seq = e3.i6(1);
                  break;
                case 5:
                  n2.full_list = e3.i();
                  break;
                case 6:
                  n2.fetch_end = e3.i();
                  break;
                case 7:
                  n2.blacklists.push(I.zim.BlacklistUpdateInfo.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, vs), e2.BlacklistUpdateInfo = (ys.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.BlacklistUpdateInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.is_del = e3.bl();
                  break;
                case 2:
                  n2.info = I.zim.StBlacklistInfo.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ys), e2.StBlacklistInfo = (Ms.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StBlacklistInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_base_info = I.zim.StUserBaseInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.black_list_seq = e3.i6(1);
                  break;
                case 3:
                  n2.create_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ms), e2.PushFriendAdd = (ks.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushFriendAdd();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.friend_info = I.zim.StFriendInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.friend_list_seq = e3.i6(1);
                  break;
                case 3:
                  n2.apply_status_change = I.zim.StApplyStatusChange.d(e3, e3.u());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ks), e2.PushFriendAdd2Self = (Is.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushFriendAdd2Self();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.friend_infos.push(I.zim.StFriendInfo.d(e3, e3.u()));
                  break;
                case 2:
                  n2.apply_status_changes_list.push(I.zim.StApplyStatusChange.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Is), e2.PushFriendApply = (Ss.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushFriendApply();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.apply_info = I.zim.StFriendApplyInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.apply_list_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ss), e2.PushFriendApply2Self = (Ds.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushFriendApply2Self();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.apply_infos.push(I.zim.StFriendApplyInfo.d(e3, e3.u()));
                  break;
                case 2:
                  n2.friends.push(I.zim.StFriendInfo.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ds), e2.PushFriendAccept = (qs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushFriendAccept();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.friend_info = I.zim.StFriendInfo.d(e3, e3.u());
                  break;
                case 2:
                  n2.friend_list_seq = e3.i6(1);
                  break;
                case 3:
                  n2.apply_list_seq = e3.i6(1);
                  break;
                case 4:
                  n2.apply_update_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, qs), e2.PushFriendRefuse = (Cs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushFriendRefuse();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.apply_list_seq = e3.i6(1);
                  break;
                case 3:
                  n2.update_time = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Cs), e2.PushModifyFriendAttribute = (ws.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushModifyFriendAttribute();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.user_id = e3.s();
                  break;
                case 2:
                  n2.action = e3.i();
                  break;
                case 3:
                  n2.attributes.push(I.zim.StGroupAttribute.d(e3, e3.u()));
                  break;
                case 4:
                  n2.friend_list_seq = e3.i6(1);
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, ws), e2.PushBlacklistAdd = (As.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushBlacklistAdd();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              i3 >>> 3 == 1 ? n2.black_list.push(I.zim.StBlacklistInfo.d(e3, e3.u())) : e3.sk(7 & i3);
            }
            return n2;
          }, As), e2.PushBlacklistDelete = (Rs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushBlacklistDelete();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              i3 >>> 3 == 1 ? n2.black_list.push(I.zim.PushFriendRefuse.d(e3, e3.u())) : e3.sk(7 & i3);
            }
            return n2;
          }, Rs), e2.GetMuteInfoListRsp = (xs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.GetMuteInfoListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.max_mute_seq = e3.i6(1);
                  break;
                case 4:
                  n2.user_ids.push(e3.s());
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, xs), e2.MuteInfo = (Ts.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.MuteInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.peer_user_id = e3.s();
                  break;
                case 2:
                  n2.mute_list_seq = e3.i6(1);
                  break;
                case 3:
                  n2.mute = e3.bl();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ts), e2.C2CMuteReq = (Os.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.c2c_mute_list && e3.c2c_mute_list.length)
              for (let r3 = 0; r3 < e3.c2c_mute_list.length; ++r3)
                I.zim.GroupMuteReq.e(e3.c2c_mute_list[r3], t3.u(10).f()).l();
            return t3;
          }, Os), e2.C2CMuteRsp = (Ls.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.C2CMuteRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.mute_info.push(I.zim.MuteInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.error_user_list.push(I.zim.ErrorUser.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Ls), e2.PushC2cMute = (Es.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushC2cMute();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              i3 >>> 3 == 1 ? (n2.mute_info && n2.mute_info.length || (n2.mute_info = []), n2.mute_info.push(I.zim.MuteInfo.d(e3, e3.u()))) : e3.sk(7 & i3);
            }
            return n2;
          }, Es), e2.StTipsMsgContent = (Us.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.StTipsMsgContent();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.type = e3.i();
                  break;
                case 2:
                  n2.op_user_info = I.zim.PushRoomKickout.d(e3, e3.u());
                  break;
                case 3:
                  n2.target_users.push(I.zim.PushRoomKickout.d(e3, e3.u()));
                  break;
                case 4:
                  n2.group_data_flag = e3.u();
                  break;
                case 5:
                  n2.group_notice = e3.s();
                  break;
                case 6:
                  n2.group_name = e3.s();
                  break;
                case 7:
                  n2.group_avatar = e3.b();
                  break;
                case 8:
                  n2.forbid = I.zim.GroupForbid.d(e3, e3.u());
                  break;
                case 9:
                  n2.forbid_expire_time = e3.i6(1);
                  break;
                case 10:
                  n2.role = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Us), e2.SetConvMarkReq = (Ps.e = function(e3, t3) {
            if (t3 = t3 || n.c(), e3.set_mark_c2c)
              for (let r3 = Object.keys(e3.set_mark_c2c), s2 = 0; s2 < r3.length; ++s2)
                t3.u(10).f().u(10).s(r3[s2]), I.zim.ConvMarkInfo.e(e3.set_mark_c2c[r3[s2]], t3.u(18).f()).l().l();
            if (e3.set_mark_group)
              for (let r3 = Object.keys(e3.set_mark_group), s2 = 0; s2 < r3.length; ++s2)
                t3.u(18).f().u(10).s(r3[s2]), I.zim.ConvMarkInfo.e(e3.set_mark_group[r3[s2]], t3.u(18).f()).l().l();
            return t3;
          }, Ps), e2.SetConvMarkRsp = (js.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.SetConvMarkRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.succ_list.push(I.zim.ConvMarkInfo.d(e3, e3.u()));
                  break;
                case 4:
                  n2.fail_list.push(I.zim.ConvMarkFailList.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, js), e2.ConvMarkInfo = (Gs.e = function(e3, t3) {
            return t3 = t3 || n.c(), e3.conv_id && t3.u(10).s(e3.conv_id), e3.conv_type && t3.u(16).i(e3.conv_type), e3.mark_content && t3.u(24).u6(e3.mark_content), e3.mark_seq && t3.u(32).u6(e3.mark_seq), e3.action && t3.u(40).bl(e3.action), t3;
          }, Gs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ConvMarkInfo();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.conv_id = e3.s();
                  break;
                case 2:
                  n2.conv_type = e3.i();
                  break;
                case 3:
                  n2.mark_content = e3.u6();
                  break;
                case 4:
                  n2.mark_seq = e3.u6(1);
                  break;
                case 5:
                  n2.action = e3.bl();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Gs), e2.ConvMarkFailList = (zs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.ConvMarkFailList();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.conv_id = e3.s();
                  break;
                case 4:
                  n2.conv_type = e3.i();
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, zs), e2.FetchConvMarkListRsp = (Fs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.FetchConvMarkListRsp();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              switch (i3 >>> 3) {
                case 1:
                  n2.code = e3.u();
                  break;
                case 2:
                  n2.message = e3.s();
                  break;
                case 3:
                  n2.full_list = e3.bl();
                  break;
                case 4:
                  n2.max_mark_seq = e3.u6();
                  break;
                case 5:
                  n2.conv_mark_list.push(I.zim.ConvMarkInfo.d(e3, e3.u()));
                  break;
                default:
                  e3.sk(7 & i3);
              }
            }
            return n2;
          }, Fs), e2.PushConvMark = (Bs.d = function(e3, t3) {
            e3 instanceof s || (e3 = s.c(e3));
            let r3 = void 0 === t3 ? e3.len : e3.pos + t3, n2 = new I.zim.PushConvMark();
            for (; e3.pos < r3; ) {
              var i3 = e3.u();
              i3 >>> 3 == 1 ? n2.succ_list.push(I.zim.ConvMarkInfo.d(e3, e3.u())) : e3.sk(7 & i3);
            }
            return n2;
          }, Bs), e2;
        })();
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return u;
        });
        t = r(4);
        var s = r.n(t), n = r(82), i = r(1), o = r(0), a = function() {
          return (a = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, u = (c.prototype.setDB = function(e2) {
          this.dr.setDB(e2);
        }, c.prototype.clearDB = function() {
          this.dr.clearDB();
        }, c.prototype.init = function(e2) {
          this.isInited || (this.isInited = true, this.dr.init({ isProd: this.isProd, appID: e2, deviceID: this.st.deviceInfo.device_id, importantLevel: 0, levels: [0, 10] }));
        }, c.prototype.start = function(e2, t2, r2) {
          var s2;
          t2 ? ((s2 = /* @__PURE__ */ new Map()).set("userID", e2), s2.set("token", t2), r2 && s2.set("serverUrl", r2), this.dr.startReport(s2), this.dr.resume()) : this.dr.pause();
        }, c.prototype.beginNetworkReq = function(e2, t2, r2, s2) {
          var n2 = this.createDateEvent(e2);
          n2.caller_type = r2, n2._req_ = s2, this.evenDatatMap.set(e2 + t2, n2);
        }, c.prototype.endNetworkReq = function(e2, t2, r2, s2) {
          var n2 = this.evenDatatMap.get(e2 + t2);
          !n2 || r2 && r2.code == o.mb || (r2 && r2.code ? (n2.error = r2.code, n2.error_message = (r2.message || "") + (s2 || "")) : (n2.error_message = s2 || "", n2._rsp_ = r2), n2.time_consumed = Date.now() - n2.time_consumed, this.upload(n2, true), this.evenDatatMap.delete(e2 + t2));
        }, c.prototype.reportNetworkReq = function(e2, t2) {
          (e2 = this.createDateEvent(e2)).time_consumed = 0, e2._rsp_ = t2, this.upload(e2, true);
        }, c.prototype.reportSDKEvent = function(e2, t2) {
          17040384e5 < (e2 = this.createDateEvent(e2, t2)).time_consumed && (e2.time_consumed = 0), this.upload(e2, false);
        }, c.prototype.reportPushEvent = function(e2, t2, r2, s2) {
          var n2 = this.createDateEvent("/sdk/push");
          n2.push_cmd = e2, n2.push_id = r2, n2.push_type = this.stringify(s2), n2.time_consumed = t2, this.upload(n2, false);
        }, c.prototype.stringify = function(e2) {
          return JSON.stringify(e2, function(e3, t2) {
            return t2 instanceof Uint8Array ? "b=" + t2.length : t2 instanceof Array && 2 < t2.length ? [r2 = t2.length, t2[0], t2[r2 - 1]] : "string" == typeof t2 && 64 < t2.length ? "s=" + t2.length : t2 instanceof s.a ? t2.toString() : t2;
            var r2;
          }).replace(/\"(\w+)\":/g, "$1:");
        }, c.prototype.createDateEvent = function(e2, t2) {
          return a(a({ event: e2, event_time: this.st.getRealClientTimestamp(), time_consumed: Date.now(), time_offset: this.st.serverOffsetTime }, this.commonFields), t2);
        }, c.prototype.upload = function(e2, t2) {
          if (t2)
            try {
              this.hookCMDEvent(e2);
            } catch (e3) {
            }
          e2.net_type = this.st.netType, t2 = JSON.stringify(e2, function(e3, t3) {
            return t3 instanceof s.a ? +t3.toString() : t3;
          }), this.dr.report(t2, -1 != this.unSaveEvents.indexOf(e2.event));
        }, c.prototype.set_offline_push = function(e2, t2) {
          e2.offline_push_w = t2 ? t2.pushStrategyId || "1" : "0", t2 && t2.custom_map && (e2.offline_push_map = JSON.stringify(t2.custom_map));
        }, c.prototype.hookCMDEvent = function(e2) {
          var t2, r2, s2, n2, a2 = e2._req_, u2 = e2._rsp_;
          switch (delete e2._req_, delete e2._rsp_, e2.event) {
            case o.d.sw_login.cmd:
              e2.os_type = i.j, this.st.advancedConfig.zim_cross_platform && (e2.cross_platform = this.st.advancedConfig.zim_cross_platform), this.st.advancedConfig.zim_product_source && (e2.product_source = this.st.advancedConfig.zim_product_source), this.st.advancedConfig.geoFence.id && (t2 = (n2 = this.st.advancedConfig.geoFence).id, r2 = n2.type, s2 = n2.areas, n2 = n2.dispatch, e2.geo_fence = JSON.stringify({ id: t2, type: r2, areas: s2, dispatch: n2 })), e2.zpns_push_id = a2.zpns_push_id, e2.sdk_action = a2.sdk_action, e2.sdk_duration = a2.sdk_duration, e2.sdk_time = new Date().toString(), e2.server_ip = a2.sdk_server_ip, u2 && (e2.usernid = u2.rspHeader.user_nid.toString(), e2.session_id = u2.rspHeader.session_id.toString(), e2.hb_interval = u2.hb_interval, e2.hb_timeout = u2.hb_timeout, e2.server_timestamp = u2.server_timestamp, e2.im_conf_json = u2.im_conf_json);
              break;
            case o.d.sw_logout.cmd:
              e2.reason = a2.reason;
              break;
            case o.d.sw_renew_token.cmd:
              e2.sdk_duration = a2.sdk_duration;
              break;
            case o.d.sw_hb.cmd:
              u2 && (e2.heartbeat_interval = u2.heartbeat_interval, e2.hb_timeout = u2.hb_timeout, e2.server_timestamp = u2.server_timestamp);
              break;
            case o.d.swp_kickout.cmd:
              e2.error = u2.code, e2.error_message = u2.key, e2.need_relogin = u2.seq;
              break;
            case o.d.swp_redirect.cmd:
              e2.error_message = u2.user_ids.join();
              break;
            case o.d.user_mdf.cmd:
              e2.set_flag = a2.set_flag;
              break;
            case o.d.user_fetch.cmd:
              u2 && (e2.result_len = u2.result.length, e2.err_list_len = u2.err_list.length, 0 < e2.err_list_len && e2.err_list_len < 6 && (e2.err_list = JSON.stringify(u2.err_list)));
              break;
            case o.d.user_zpns.cmd:
              e2.zpns_push_id = a2.key;
              break;
            case o.d.conv_hb.cmd:
              u2 && (e2.conv_list_seq = u2.conv_list_seq, e2.group_list_seq = u2.group_list_seq, e2.c2c_msg_seq = u2.c2c_msg_seq, e2.c2c_statemsg_seq = u2.c2c_statemsg_seq, e2.extra_msg_list_seq = u2.extra_msg_list_seq, e2.conv_pinned_list_seq = u2.conv_pinned_list_seq, e2.call_list_seq = u2.call_list_seq, e2.db_seq_json = JSON.stringify(a2.db_seq_json), e2.im_conf_json = JSON.stringify(Object(i.s)(this.pickCmds.usermail_hb, u2)));
              break;
            case o.d.conv_list.cmd:
              e2.how = a2.how, e2.count = a2.count, e2.full_pull = a2.full_pull, e2.conv_list_seq = a2.cur_list_seq, e2.degree = a2.degree, u2 && (e2.rsp_conv_list_seq = u2.cur, e2.max_list_seq = u2.max, e2.full_list = u2.full_list, e2.fetch_end = u2.fetch_end);
              break;
            case o.d.conv_pinned_list.cmd:
              e2.how = a2.how, e2.count = a2.count, e2.full_pull = a2.full_pull, e2.conv_pinned_list_seq = a2.cur_list_seq, e2.degree = a2.degree, u2 && (e2.rsp_conv_pinned_list_seq = u2.cur, e2.max_pinned_list_seq = u2.max, e2.full_list = u2.full_list, e2.fetch_end = u2.fetch_end);
              break;
            case o.d.conv_del.cmd:
              e2.conv_id = a2.conv_id, e2.conv_type = a2.conv_type, u2 && (e2.conv_list_seq = u2.conv_list_seq, e2.conv_msg_seq = u2.conv_msg_seq);
              break;
            case o.d.conv_pinned.cmd:
              e2.conv_id = a2.user_id, e2.conv_type = a2.sub_code, e2.pinned_type = a2.relation;
              break;
            case o.d.conv_read.cmd:
              e2.conv_id = a2.conv_id, e2.conv_type = a2.conv_type, e2.read_seq = a2.read_seq;
              break;
            case o.d.c2c_msglist.cmd:
              e2.conv_id = a2.conv_id, e2.conv_type = a2.conv_type, e2.how = a2.how, e2.count = a2.count, e2.mode = a2.mode, e2.login_fetch = a2.login_fetch, e2.conv_msg_seq = a2.conv_msg_seq, e2.degree = a2.degree, u2 && (e2.fetch_end = u2.fetch_end, e2.next_conv_msg_seq = u2.next_seq, e2.max_conv_msg_seq = u2.maxSeq);
              break;
            case o.d.gp_msglist.cmd:
              e2.group_id = a2.group_id, e2.how = a2.how, e2.count = a2.count, e2.sort_type = a2.sort_type, e2.conv_msg_seq = a2.conv_msg_seq, e2.degree = a2.degree, u2 && (e2.fetch_end = u2.fetch_end, e2.next_conv_msg_seq = u2.next_seq, e2.max_conv_msg_seq = u2.maxSeq);
              break;
            case o.d.rm_msglist.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.room_user_session_id = a2.room_user_session_id.toString(), e2.how = a2.how, e2.count = a2.count, e2.sort_type = a2.sort_type, e2.conv_msg_seq = a2.conv_msg_seq, e2.degree = a2.degree, u2 && (e2.fetch_end = u2.fetch_end, e2.next_conv_msg_seq = u2.next_seq, e2.max_conv_msg_seq = u2.maxSeq);
              break;
            case o.d.c2c_msg.cmd:
              e2.peer_user_id = a2.conv_id, e2.fetch_peer_user_info = a2.fetch_peer_user_info, e2.msg_type = a2.msg_info.msg_type, e2.msg_len = a2.msg_info.msg.length, e2.priority = a2.msg_info.priority_type, this.set_offline_push(e2, a2.msg_info.offline_push), u2 && (e2.conv_disable = u2.conv_disable, e2.send_count_after_read = u2.send_count_after_read, e2.msg_id = u2.msg_svr_info.msg_id, e2.conv_msg_seq = u2.msg_svr_info.conv_msg_seq, e2.c2c_msg_seq = u2.msg_svr_info.c2c_msg_seq, e2.has_content = u2.msg_svr_info.has_content, e2.msg_version = u2.msg_svr_info.version);
              break;
            case o.d.c2c_cmd.cmd:
              e2.peer_user_id = a2.conv_id, e2.msg_type = a2.command_msg_info.msg_type, e2.msg_len = a2.command_msg_info.msg.length, e2.priority = a2.command_msg_info.priority_type, u2 && (e2.msg_id = u2.command_svr_info.msg_id.toString(), e2.msg_time = u2.command_svr_info.conv_msg_seq);
              break;
            case o.d.c2c_del_msg.cmd:
              e2.conv_id = a2.conv_id, e2.conv_type = a2.conv_type, e2.msg_ids_len = a2.msg_ids.length, 0 < e2.msg_ids_len && e2.msg_ids_len < 6 && (e2.msg_ids = a2.msg_ids.join());
              break;
            case o.d.c2c_del_all_msg.cmd:
              e2.conv_id = a2.conv_id, e2.conv_type = a2.conv_type;
              break;
            case o.d.gp_msg.cmd:
              e2.group_id = a2.conv_id, e2.msg_type = a2.msg_info.msg_type, e2.msg_len = a2.msg_info.msg.length, e2.priority = a2.msg_info.priority_type, this.set_offline_push(e2, a2.msg_info.offline_push), u2 && (e2.send_count_after_read = u2.send_count_after_read, e2.msg_id = u2.msg_svr_info.msg_id, e2.conv_msg_seq = u2.msg_svr_info.conv_msg_seq, e2.has_content = u2.msg_svr_info.has_content, e2.msg_version = u2.msg_svr_info.version);
              break;
            case o.d.gp_cmd.cmd:
              e2.group_id = a2.conv_id, e2.msg_type = a2.command_msg_info.msg_type, e2.msg_len = a2.command_msg_info.msg.length, e2.priority = a2.command_msg_info.priority_type, u2 && (e2.msg_id = u2.command_svr_info.msg_id.toString(), e2.msg_time = u2.command_svr_info.conv_msg_seq);
              break;
            case o.d.gp_del_msg.cmd:
              e2.group_id = a2.conv_id, e2.conv_msg_seq_len = a2.conv_msg_seq.length, 0 < e2.conv_msg_seq_len && e2.conv_msg_seq_len < 6 && (e2.conv_msg_seqs = a2.conv_msg_seq.join());
              break;
            case o.d.gp_del_all_msg.cmd:
              e2.group_id = a2.conv_id;
              break;
            case o.d.rm_msg.cmd:
              e2.room_id = a2.conv_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.room_user_session_id = a2.room_user_session_id.toString(), e2.msg_type = a2.msg_info.msg_type, e2.msg_len = a2.msg_info.msg.length, e2.priority = a2.msg_info.priority_type, u2 && (e2.msg_id = u2.msg_svr_info.msg_id.toString(), e2.conv_msg_seq = u2.msg_svr_info.conv_msg_seq, e2.has_content = u2.msg_svr_info.has_content, e2.msg_version = u2.msg_svr_info.version);
              break;
            case o.d.rm_cmd.cmd:
              e2.room_id = a2.conv_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.room_user_session_id = a2.room_user_session_id.toString(), e2.msg_type = a2.command_msg_info.msg_type, e2.msg_len = a2.command_msg_info.msg.length, e2.priority = a2.command_msg_info.priority_type, u2 && (e2.msg_id = u2.msg_id.toString());
              break;
            case o.d.file_upload.cmd:
              e2.md5 = a2.md5, e2.file_type = a2.file_type, e2.name = a2.name, e2.size = a2.size, e2.duration = a2.duration, u2 && (e2.state = u2.state, e2.upload_url = u2.upload_req.url, e2.upload_url.indexOf("?") && (e2.upload_url = e2.upload_url.substring(0, e2.upload_url.indexOf("?"))));
              break;
            case o.d.file_process.cmd:
              e2.md5 = a2.md5, e2.file_type = a2.file_type, u2 && (e2.state = u2.state, e2.download_url = u2.download_url, e2.download_url.indexOf("?") && (e2.download_url = e2.download_url.substring(0, e2.download_url.indexOf("?"))));
              break;
            case o.d.c2c_conv_read.cmd:
              e2.conv_id = a2.group_id, e2.conv_msg_seq = a2.cur_list_seq, u2 && (e2.receipt_seq = u2.conv_list_seq);
              break;
            case o.d.c2c_msg_read.cmd:
              e2.conv_id = a2.conv_id, e2.conv_msg_seq_len = a2.conv_msg_seq.length, u2 && (e2.receipt_seqs = JSON.stringify(u2.conv_msg_seq2_receipt_seq));
              break;
            case o.d.gp_msg_read.cmd:
              e2.group_id = a2.conv_id, e2.conv_msg_seq_len = a2.conv_msg_seq.length, u2 && (e2.receipt_seqs = JSON.stringify(u2.conv_msg_seq2_receipt_seq));
              break;
            case o.d.msg_read_detail.cmd:
              e2.group_id = a2.group_id, e2.conv_msg_seq = a2.cur_list_seq, u2 && (e2.list_seq = u2.list_seq, e2.fetch_end = u2.fetch_end, e2.next_list_seq = u2.next_list_seq, e2.read_count = u2.read_count, e2.unread_count = u2.unread_count, e2.read_members_len = u2.read_members_len, e2.unread_members_len = u2.unread_members_len, e2.degree = u2.degree);
              break;
            case o.d.c2c_msg_revoke.cmd:
            case o.d.gp_msg_revoke.cmd:
              a2.conv_id && (e2.conv_id = a2.conv_id), e2.conv_msg_seq = a2.conv_msg_seq, e2.extended_data_len = (null == (t2 = a2.payload) ? void 0 : t2.length) || 0, this.set_offline_push(e2, a2.offline_push), u2 && (e2.statemsg_seq = u2.statemsg_seq);
              break;
            case o.d.c2c_add_reaction.cmd:
            case o.d.c2c_del_reaction.cmd:
            case o.d.gp_add_reaction.cmd:
            case o.d.gp_del_reaction.cmd:
              e2.conv_id = a2.conv_id, e2.conv_msg_seq = a2.conv_msg_seq, e2.reaction_key = Array.isArray(a2.reaction_key) ? a2.reaction_key[0] : a2.reaction_key, u2 && (e2.succ_list_len = u2.succ_list.length, e2.error_list_len = u2.error_list.length);
              break;
            case o.d.c2c_get_reaction.cmd:
            case o.d.gp_get_reaction.cmd:
              e2.conv_id = a2.conv_id, e2.conv_msg_seq = a2.conv_msg_seq, e2.reaction_key = a2.reaction_key, e2.max_reaction_seq = a2.max_reaction_seq, e2.is_detail = a2.is_detail, u2 && (e2.rsp_max_reaction_seq = u2.max_reaction_seq, e2.total_user_count = u2.total_user_count, e2.user_reaction_len = u2.user_reaction.length, e2.include_self = u2.include_self);
              break;
            case o.d.c2c_reaction_list.cmd:
            case o.d.gp_reaction_list.cmd:
              e2.conv_id = a2.conv_id, e2.conv_msg_seq = a2.conv_msg_seq, e2.start_reaction_seq = a2.start_reaction_seq, e2.degree = a2.degree, u2 && (e2.fetch_end = u2.fetch_end, e2.msg_next_reaction_seq = u2.msg_next_reaction_seq, e2.msg_max_reaction_seq = u2.msg_max_reaction_seq);
              break;
            case o.d.extra_msglist.cmd:
              e2.how = a2.how, e2.count = a2.count, e2.list_seq = a2.cur_list_seq, e2.degree = a2.degree, u2 && (e2.fetch_end = u2.fetch_end, e2.next_list_seq = u2.next_list_seq);
              break;
            case o.d.c2c_msg_state_list.cmd:
            case o.d.gp_msg_state_list.cmd:
              e2.conv_id = a2.conv_id, e2.min_msg_seq = a2.min_msg_seq, e2.max_msg_seq = a2.max_msg_seq, e2.how = a2.how, e2.statemsg_seq = a2.statemsg_seq, e2.count = a2.count, e2.degree = a2.degree, u2 && (e2.fetch_end = u2.fetch_end, e2.next_statemsg_seq = u2.next_statemsg_seq);
              break;
            case o.d.c2c_query_msg.cmd:
            case o.d.gp_query_msg.cmd:
            case o.d.rm_query_msg.cmd:
              e2.event == o.d.c2c_query_msg.cmd ? e2.conv_id = a2.room_id : e2.event == o.d.gp_query_msg.cmd ? e2.group_id = a2.room_id : (e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.room_user_session_id = a2.room_user_session_id.toString()), e2.client_infos_len = a2.client_infos.length, u2 && (e2.msgs_len = u2.msgs.length, e2.fail_list_len = u2.fail_list.length);
              break;
            case o.d.rm_create.cmd:
            case o.d.rm_enter.cmd:
              e2.room_id = a2.room_id, e2.create_if_not_exist = a2.create_if_not_exist || false, u2 && (e2.sub_room_id = u2.sub_room_id, e2.room_session_id = u2.room_session_id.toString(), e2.room_user_session_id = u2.room_user_session_id.toString(), e2.destroy_delay = a2.destroy_delay || u2.destroy_delay || 0, e2.userlist_seq = u2.userlist_seq || 0, e2.user_count = u2.user_count || 0, e2.room_info_interval = u2.room_info_interval, e2.userlist_enable = u2.userlist_enable, e2.userlist_merge_timeout = u2.userlist_merge_timeout, e2.userlist_interval = u2.userlist_interval, u2.attributes && (e2.attribute_seq = u2.attributes.attribute_seq, e2.attributes_len = u2.attributes.attributes.length), e2.attributes_pull_interval = u2.attributes_pull_interval, e2.attributes_merge_timeout = u2.attributes_merge_timeout, e2.msg_merge_timeout = u2.msg_merge_timeout, e2.msg_pull_interval = u2.msg_pull_interval, e2.enabled_offline_msg = u2.enabled_offline_msg, e2.conv_msg_seq = u2.conv_msg_seq);
              break;
            case o.d.rm_quit.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.room_user_session_id = a2.room_user_session_id.toString();
              break;
            case o.d.rm_info.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), u2 && (e2.userlist_seq = u2.userlist_seq, e2.user_count = u2.user_count, e2.room_info_interval = u2.room_info_interval, e2.ulist_to = u2.ulist_to, e2.ulist_itvl = u2.ulist_itvl, e2.attribute_seq = u2.attribute_seq, e2.max_conv_msg_seq = u2.max_conv_msg_seq);
              break;
            case o.d.rm_userlist.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.count = a2.count, e2.mode = a2.mode, e2.expect_seq = a2.expect_seq, e2.pos_flag = a2.pos_flag, e2.degree = a2.degree, u2 && (e2.rsp_pos_flag = u2.pos_flag, e2.userlist_seq = u2.userlist_seq, e2.user_count = u2.user_count);
              break;
            case o.d.rm_userinfos.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.room_user_session_id = a2.room_user_session_id.toString(), e2.user_ids_len = a2.user_ids.length, u2 && (e2.user_infos_len = u2.result.length, e2.errlist_len = u2.err_list.length, 0 < e2.errlist_len && e2.errlist_len < 6 && (e2.errlist = JSON.stringify(u2.err_list)));
              break;
            case o.d.rm_attr.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.attribute_seq = a2.attributes.attribute_seq, u2 && u2.attributes && (e2.rsp_attribute_seq = u2.attributes.attribute_seq, e2.attributes_len = u2.attributes.attributes.length);
              break;
            case o.d.rm_attr_mdf.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.force_modify = a2.force_modify, e2.set_member = a2.set_member, e2.op_fail_fast = a2.op_fail_fast, e2.attribute_seq = a2.attribute_seq, e2.attribute_action = null == (r2 = a2.attributes[0]) ? void 0 : r2.action, e2.attributes_len = a2.attributes.length, u2 && (u2.attributes && (e2.rsp_attribute_seq = u2.attributes.attribute_seq, e2.rsp_attributes_len = u2.attributes.attributes.length), e2.err_list_len = u2.err_list.length, 0 < e2.err_list_len && e2.err_list_len < 6 && (e2.err_list = JSON.stringify(u2.err_list)));
              break;
            case o.d.rm_user_attr_mdf.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.room_user_session_id = a2.room_user_session_id.toString(), e2.force_modify = a2.force_modify, e2.auto_save = a2.auto_save, e2.op_fail_fast = a2.op_fail_fast, e2.user_ids_len = a2.attributes.user_ids.length, e2.attributes_len = a2.attributes.modify_attribute.length, u2 && (e2.user_attributes_len = u2.user_attributes.length, e2.user_err_list_len = u2.user_err_list.length, 0 < e2.user_err_list_len && e2.user_err_list_len < 6 && (e2.user_err_list = JSON.stringify(u2.user_err_list)));
              break;
            case o.d.rm_user_attr.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.room_user_session_id = a2.room_user_session_id.toString(), e2.req_attributes_len = a2.req_attributes.length, u2 && (e2.user_attributes_len = u2.user_attributes.length);
              break;
            case o.d.rm_user_attr_list.cmd:
              e2.room_id = a2.room_id, e2.sub_room_id = a2.sub_room_id, e2.room_session_id = a2.room_session_id.toString(), e2.room_user_session_id = a2.room_user_session_id.toString(), e2.pos_flag = a2.pos_flag, e2.count = a2.count, u2 && (e2.user_attributes_len = u2.user_attributes.length, e2.rsp_pos_flag = u2.pos_flag, e2.user_count = u2.user_count, e2.user_attributes_list_seq = u2.user_attributes_list_seq);
              break;
            case o.d.gp_create.cmd:
              e2.group_id = a2.group_id, e2.group_name = a2.group_name, e2.group_notice = a2.group_notice, e2.user_ids_len = a2.user_ids.length, e2.attributes_len = (null == (s2 = a2.attributes) ? void 0 : s2.length) || 0, e2.group_avatar_len = (null == (n2 = a2.group_avatar) ? void 0 : n2.length) || 0, u2 && (e2.members_len = u2.members.length, e2.member_count = u2.member_count, e2.group_list_seq = u2.group_list_seq, e2.group_data_seq = u2.group_data_seq, e2.group_attribute_seq = u2.group_attribute_seq, e2.member_all_seq = u2.member_all_seq, e2.error_users_len = u2.error_users.length, 0 < e2.error_users_len && e2.error_users_len < 6 && (e2.error_users = JSON.stringify(u2.error_users)));
              break;
            case o.d.gp_enter.cmd:
              e2.group_id = a2.key, u2 && (e2.group_name = u2.group_name, e2.group_avatar_len = (null == (t2 = u2.group_avatar) ? void 0 : t2.length) || 0, u2.properties && (e2.attributes_len = u2.properties.attributes.length), e2.member_count = u2.member_count, e2.group_list_seq = u2.group_list_seq, e2.group_data_seq = u2.group_data_seq, e2.group_attribute_seq = u2.group_attribute_seq, e2.member_all_seq = u2.member_all_seq, e2.conv_msg_seq = u2.conv_msg_seq);
              break;
            case o.d.gp_invite.cmd:
              e2.group_id = a2.group_id, e2.user_ids_len = (a2.user_infos || a2.user_ids).length, u2 && (e2.member_count = u2.member_count, e2.members_len = u2.members.length, e2.group_data_seq = u2.group_data_seq, e2.group_attribute_seq = u2.group_attribute_seq, e2.member_all_seq = u2.member_all_seq, e2.error_users_len = u2.error_users.length, 0 < e2.error_users_len && e2.error_users_len < 6 && (e2.error_users = JSON.stringify(u2.error_users)));
              break;
            case o.d.gp_kickout.cmd:
              e2.group_id = a2.group_id, e2.user_ids_len = a2.user_ids.length, u2 && (e2.member_count = u2.member_count, e2.member_all_seq = u2.member_all_seq, e2.error_users_len = u2.error_users.length, 0 < e2.error_users_len && e2.error_users_len < 6 && (e2.error_users = JSON.stringify(u2.error_users)));
              break;
            case o.d.gp_quit.cmd:
            case o.d.gp_destroy.cmd:
              e2.group_id = a2.group_id, u2 && (e2.group_list_seq = u2.conv_list_seq);
              break;
            case o.d.gp_list.cmd:
              e2.how = a2.how, e2.full_pull = a2.full_pull, e2.count = a2.count, e2.cur_list_seq = a2.cur_list_seq, e2.degree = a2.degree, u2 && (e2.fetch_end = u2.fetch_end, e2.full_list = u2.full_list, e2.rsp_cur_list_seq = u2.cur, e2.max_list_seq = u2.max);
              break;
            case o.d.gp_infos.cmd:
              e2.group_ids_len = a2.user_ids.length, u2 && (e2.group_infos_len = u2.group_infos.length, e2.fail_keys_len = u2.fail_keys.length);
              break;
            case o.d.gp_owner_transfer.cmd:
              e2.group_id = a2.group_id, e2.req_user_id = a2.group_name, u2 && (e2.old_owner_data_seq = u2.conv_list_seq, e2.new_owner_data_seq = u2.conv_msg_seq);
              break;
            case o.d.gp_data.cmd:
              e2.group_id = a2.group_id, u2 && (e2.group_name = u2.group_name, e2.group_notice = u2.group_notice, e2.group_avatar_len = (null == (r2 = u2.group_avatar) ? void 0 : r2.length) || 0, e2.group_data_seq = u2.group_data_seq);
              break;
            case o.d.gp_attr.cmd:
              e2.group_id = a2.group_id, e2.attributes_len = (null == (s2 = a2.attributes.attributes) ? void 0 : s2.length) || 0, e2.attribute_seq = a2.attributes.seq, u2 && (e2.rsp_attributes_len = u2.attributes.attributes.length, e2.rsp_attribute_seq = u2.attributes.seq);
              break;
            case o.d.conv_gp_mute.cmd:
              e2.group_id = a2.conv_id, e2.enable = a2.enable;
              break;
            case o.d.gp_mdf_name.cmd:
              e2.group_id = a2.group_id, e2.group_name = a2.group_name, u2 && (e2.group_data_seq = u2.conv_list_seq);
              break;
            case o.d.gp_mdf_avatar.cmd:
              e2.group_id = a2.user_id, e2.group_avatar_len = a2.user_name.length, u2 && (e2.group_data_seq = u2.conv_list_seq);
              break;
            case o.d.gp_mdf_notice.cmd:
              e2.group_id = a2.group_id, e2.group_notice = a2.group_name, u2 && (e2.group_data_seq = u2.conv_list_seq);
              break;
            case o.d.gp_mdf_attr.cmd:
              e2.group_id = a2.group_id, e2.attribute_action = a2.attributes.action, e2.attributes_len = a2.attributes.attributes.length, u2 && (e2.attribute_seq = u2.attributes.seq, e2.fail_keys_len = u2.fail_keys.length, 0 < e2.fail_keys_len && e2.fail_keys_len < 6 && (e2.fail_keys = JSON.stringify(u2.fail_keys)));
              break;
            case o.d.gp_member_list.cmd:
              e2.how = a2.how, e2.group_id = a2.group_id, e2.count = a2.count, e2.full_pull = a2.full_pull, e2.cur_member_seq = a2.cur_list_seq, e2.degree = a2.degree, u2 && (e2.rsp_cur_member_seq = u2.cur_list_seq, e2.member_all_seq = u2.member_all_seq, e2.full_list = u2.full_list, e2.fetch_end = u2.fetch_end, e2.member_count = u2.member_count);
              break;
            case o.d.gp_members_by_seq.cmd:
              e2.group_id = a2.conv_id, e2.member_seqs_len = a2.conv_msg_seq.length, u2 && (e2.members_len = u2.members.length);
              break;
            case o.d.gp_member_data.cmd:
              e2.group_id = a2.group_id, e2.req_user_id = a2.user_id, u2 && u2.member && u2.member.member_data && (n2 = u2.member.member_data, e2.user_name = n2.user_name, e2.group_nick_name = n2.group_nick_name, e2.role = n2.role, e2.user_avatar_len = (null == (t2 = n2.user_avatar) ? void 0 : t2.length) || 0);
              break;
            case o.d.gp_member_nickname.cmd:
              e2.group_id = a2.group_id, e2.req_user_id = a2.group_name, e2.member_nickname = a2.group_notice, u2 && (e2.member_data_seq = u2.conv_list_seq);
              break;
            case o.d.gp_member_role.cmd:
              e2.group_id = a2.group_id, e2.req_user_id = a2.user_id, e2.role = a2.role, u2 && (e2.member_data_seq = u2.conv_list_seq);
              break;
            case o.d.cl_create.cmd:
              e2.call_id = a2.call_id, e2.user_ids_len = a2.user_ids.length, e2.extended_data_len = (null == (r2 = a2.payload) ? void 0 : r2.length) || 0, e2.call_mode = a2.call_mode, this.set_offline_push(e2, a2.offline_info), u2 && (e2.timeout = a2.timeout || u2.timeout, e2.call_seq = u2.call_seq, e2.call_list_seq = u2.call_list_seq, e2.create_time = u2.create_time, e2.err_list_len = u2.new_err_list.length, 0 < e2.err_list_len && e2.err_list_len < 6 && (e2.err_list = JSON.stringify(u2.new_err_list)));
              break;
            case o.d.cl_cancel.cmd:
              e2.call_id = a2.call_id, e2.state = a2.timeout, e2.user_ids_len = a2.user_ids.length, e2.extended_data_len = (null == (s2 = a2.payload) ? void 0 : s2.length) || 0, this.set_offline_push(e2, a2.offline_info), u2 && (e2.call_seq = u2.call_seq, e2.call_list_seq = u2.now_time, e2.err_list_len = u2.err_list.length, 0 < e2.err_list_len && e2.err_list_len < 6 && (e2.err_list = JSON.stringify(u2.err_list)));
              break;
            case o.d.cl_accept.cmd:
            case o.d.cl_enter.cmd:
              e2.call_id = a2.user_id, e2.extended_data_len = (null == (n2 = a2.user_name) ? void 0 : n2.length) || 0, u2 && (e2.call_seq = u2.call_list_seq, e2.call_list_seq = u2.talk_time, e2.accept_time = u2.quit_time || u2.accept_time);
              break;
            case o.d.cl_refuse.cmd:
              e2.call_id = a2.call_id, e2.extended_data_len = (null == (t2 = a2.extended_data) ? void 0 : t2.length) || 0, u2 && (e2.call_seq = u2.call_list_seq, e2.call_list_seq = u2.talk_time);
              break;
            case o.d.cl_ack.cmd:
              e2.call_id = a2.call_id;
              break;
            case o.d.cl_info.cmd:
              e2.call_id = a2.call_id, u2 && (e2.user_list_len = u2.user_list.length, e2.call_seq = u2.call_seq);
              break;
            case o.d.cl_invite.cmd:
              e2.call_id = a2.call_id, e2.user_ids_len = a2.user_ids.length, this.set_offline_push(e2, a2.offline_info), u2 && (e2.call_seq = u2.call_seq, e2.timeout = u2.timeout, e2.err_list_len = u2.err_list.length, 0 < e2.err_list_len && e2.err_list_len < 6 && (e2.err_list = JSON.stringify(u2.err_list)));
              break;
            case o.d.cl_quit.cmd:
              e2.call_id = a2.call_id, e2.extended_data_len = (null == (r2 = a2.payload) ? void 0 : r2.length) || 0, this.set_offline_push(e2, a2.offline_info), u2 && (e2.call_list_seq = u2.call_list_seq, e2.talk_time = u2.talk_time, e2.quit_time = u2.quit_time, e2.call_seq = u2.call_seq);
              break;
            case o.d.cl_destroy.cmd:
              e2.call_id = a2.call_id, e2.extended_data_len = (null == (s2 = a2.payload) ? void 0 : s2.length) || 0, this.set_offline_push(e2, a2.offline_info), u2 && (e2.call_list_seq = u2.call_list_seq, e2.destroy_time = u2.talk_time);
              break;
            case o.d.cl_list.cmd:
              e2.how = a2.how, e2.count = a2.count, e2.cur_list_seq = a2.cur_list_seq, e2.degree = a2.degree, u2 && (e2.rsp_cur_list_seq = u2.cur, e2.max_list_seq = u2.max, e2.fetch_end = u2.fetch_end);
              break;
            default:
              (a2 || u2) && (e2.webmessage = this.stringify({ req: a2, rsp: u2 }));
          }
        }, c);
        function c(e2) {
          this.st = e2, this.dr = new n.a("zim", i.p), this.evenDatatMap = /* @__PURE__ */ new Map(), this.isProd = true, this.isInited = false, this.commonFields = { error: 0, error_message: "", sdk_version: "2.17.0.0", term_type: i.p ? "miniprogram" : "web", net_type: "" }, this.unSaveEvents = [o.d.sw_hb.cmd, o.d.conv_hb.cmd, o.d.rm_info.cmd], this.pickCmds = { usermail_hb: ["msg_to", "msg_itvl", "list_to", "list_itvl", "conv_to", "conv_itvl", "group_to", "group_itvl"] };
        }
      }, function(e, t, r) {
        "use strict";
        var s = r(44);
        r.d(t, "a", function() {
          return s.a;
        });
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return u;
        });
        var s = r(84), n = r(87), i = r(3), o = function(e2, t2) {
          var r2 = "function" == typeof Symbol && e2[Symbol.iterator];
          if (!r2)
            return e2;
          var s2, n2, i2 = r2.call(e2), o2 = [];
          try {
            for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
              o2.push(s2.value);
          } catch (e3) {
            n2 = { error: e3 };
          } finally {
            try {
              s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
            } finally {
              if (n2)
                throw n2.error;
            }
          }
          return o2;
        }, a = function(e2, t2, r2) {
          if (r2 || 2 === arguments.length)
            for (var s2, n2 = 0, i2 = t2.length; n2 < i2; n2++)
              !s2 && n2 in t2 || ((s2 = s2 || Array.prototype.slice.call(t2, 0, n2))[n2] = t2[n2]);
          return e2.concat(s2 || Array.prototype.slice.call(t2));
        }, u = (c.prototype.setLogServer = function(e2) {
          this.openWebSocketLogServer(e2);
        }, c.prototype.setLogUrlParams = function(e2) {
          this.logParams = e2;
        }, c.prototype.openWebSocketLogServer = function(e2) {
          var t2, r2 = this;
          e2 && this.logParams.id_name && (this.url = e2, this.stopWebSocketServer(), t2 = { product: this.logParams.product, appid: this.logParams.appid, id_name: this.logParams.id_name, deviceid: this.logParams.deviceid, token: encodeURIComponent(this.logParams.signature) }, this.service.createSocket(e2, t2), this.service.openHandler(function() {
            r2.service.onPush(), r2.service.startCheck(), r2.openHandler();
          }), this.service.closeHandler(function() {
            r2.service.closeSocket();
          }));
        }, c.prototype.stopWebSocketServer = function() {
          this.service.closeSocket();
        }, c.prototype.openHandler = function() {
          this.startReport();
        }, c.prototype.setPostSucCallback = function(e2) {
          this.postSucCallback = e2;
        }, c.prototype.setPostFailCallback = function(e2) {
          this.postFailCallback = e2;
        }, c.prototype.reportAllowed = function() {
          return this.packageLen < this.PACKAGE_MAX_LEN;
        }, c.prototype.report = function(e2) {
          this.packageLen++, this.reportQueue.enqueue(e2), this.netWorkFail = false, this.failCount = 0, this.failStartTime = 0, this.startReport();
        }, c.prototype.startReport = function() {
          var e2, t2, r2 = this;
          this.reportQueue.size() < 1 || (e2 = this.reportQueue.dequeue(), t2 = 0, e2.forEach(function(e3) {
            return t2 += e3.value.length;
          }), this.tokenBucket.removeTokens(t2, function() {
            r2.reportData(e2, function() {
              r2.failCount = 0, r2.failStartTime = 0, r2.packageLen--, r2.postSucCallback && r2.postSucCallback(e2);
            }, function(t3) {
              r2.reportQueue.enqueue(e2), r2.failCount++, 0 == r2.failCount && (r2.failStartTime = Date.now());
              var s2 = (Date.now() - r2.failStartTime) / 1e3;
              if (10 <= r2.failCount && 60 < s2)
                return r2.netWorkFail = true, s2 = r2.decodeReportQueue(), void r2.postFailCallback(s2);
              t3 !== i.e && r2.startReport();
            });
          }));
        }, c.prototype.reportData = function(e2, t2, r2) {
          var s2 = this;
          e2 = e2.map(function(e3) {
            return e3.value;
          });
          this.service.sendMessage(e2, t2, function(e3) {
            e3 === i.e && s2.setLogServer(s2.url), r2 && r2(e3);
          });
        }, c.prototype.decodeReportQueue = function() {
          for (var e2 = []; this.reportQueue.size(); ) {
            var t2 = this.reportQueue.dequeue();
            e2.push.apply(e2, a([], o(t2), false));
          }
          return e2;
        }, c);
        function c(e2) {
          this.packageLen = 0, this.PACKAGE_MAX_LEN = 5, this.msgID = 0, this.logUploadTimer = null, this.logUploadInterval = 1e4, this.logCacheSend = [], this.logCacheMax = 100, this.failCount = 0, this.failStartTime = 0, this.netWorkFail = false, this.service = new s.a(e2), this.reportQueue = new i.d(), this.tokenBucket = new n.a(1e4, 2e3, "sec");
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return i;
        });
        var s = r(85), n = r(3), i = (o.prototype.handleSendCommandMsgRsp = function(e2) {
          var t2, r2 = this, s2 = this.service.sendCommandMap[e2.messageId];
          null != s2 && (t2 = s2._data, delete this.service.sendCommandMap[e2.messageId], this.service.sendCommandList.remove(s2), 0 === e2.code ? setTimeout(function() {
            t2 && null != t2.success && t2.success(e2, r2.cmdSeq);
          }, 0) : setTimeout(function() {
            t2 && null != t2.error && t2.error(e2, r2.cmdSeq);
          }, 0));
        }, o.prototype.onPush = function() {
          var e2 = this;
          this.service.onMessage = function(t2) {
            e2.handleSendCommandMsgRsp(t2);
          };
        }, o.prototype.closeHandler = function(e2) {
          this.service.closeHandler(e2);
        }, o.prototype.openHandler = function(e2) {
          this.service.openHandler(e2);
        }, o.prototype.errorHandler = function(e2) {
          this.service.errorHandler(e2);
        }, o.prototype.startCheck = function() {
          this.service.startCheck();
        }, o.prototype.stopCheck = function() {
          this.service.stopCheck();
        }, o.prototype.createSocket = function(e2, t2) {
          this.service.createSocket(e2, t2);
        }, o.prototype.closeSocket = function() {
          this.service.closeSocket();
        }, o.prototype.sendMessage = function(e2, t2, r2) {
          var s2 = this;
          this.service.isDisConnect() ? setTimeout(function() {
            s2.service.isDisConnect() ? r2 && r2(n.e) : s2.service.sendMessage(++s2.cmdSeq, e2, t2, r2);
          }, 100) : this.service.sendMessage(++this.cmdSeq, e2, t2, r2);
        }, o);
        function o(e2) {
          this.cmdSeq = 0, this.service = new s.a(e2);
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return i;
        });
        var s = r(86), n = r(3), i = (o.prototype.createSocket = function(e2, t2) {
          var s2 = this;
          try {
            this.closeSocket();
            var n2 = this.miniProgram ? "zego.impl.wx" : "zego.impl.web", i2 = r(45)("./" + n2).createZegoWebSocket;
            this.socket = i2(e2, t2, this.miniProgram), this.socket.onerror = function() {
              s2.closeSocket();
              var r2 = s2.recreateTime.shift();
              r2 && setTimeout(function() {
                return s2.createSocket(e2, t2);
              }, r2);
            };
          } catch (n3) {
          }
        }, o.prototype.closeSocket = function() {
          this.socket && (this.socket.onclose = null, this.socket.onerror = null, this.socket.close(), this.socket = null);
        }, o.prototype.isDisConnect = function() {
          return !this.socket;
        }, o.prototype.sendMessage = function(e2, t2, r2, n2) {
          if (void 0 === r2 && (r2 = null), void 0 === n2 && (n2 = null), this.socket) {
            r2 = { data: t2 = { message_id: e2, s: '{"speed_detail":[' + t2.join() + "]}" }, seq: e2, deleted: false, sendTime: Date.now(), timeOut: 6e3, success: r2, error: n2 }, r2 = this.sendCommandList.push(r2), this.sendCommandMap[e2] = r2;
            try {
              this.socket.send(Object(s.a)(JSON.stringify(t2)));
            } catch (n3) {
            }
          }
        }, o.prototype.checkSendMessageList = function(e2) {
          for (var t2 = e2.getFirst(); null != t2; )
            e2.remove(t2), t2._data && t2._data.error && setTimeout(function() {
              t2 && t2._data && t2._data.error && t2._data.error(n.f.TIMEOUT, t2._data.data.message_id, t2._data.data.s);
            }, 0), t2 = e2.getFirst();
        }, o.prototype.checkMessageListTimeout = function(e2, t2) {
          for (var r2 = e2.getFirst(), s2 = Date.now(), i2 = 0; !(null == r2 || r2._data && r2._data.sendTime + r2._data.timeOut > s2 || (r2._data && delete t2[r2._data.data.message_id], e2.remove(r2), r2._data && null == r2._data.error || r2._data && r2._data.sendTime + this.sendDataDropTimeout < s2 || r2 && r2._data && r2._data.error && r2._data.error(n.f.TIMEOUT, r2._data.data.message_id, r2._data.data.s), ++i2 >= this.sendDataCheckOnceCount)); )
            r2 = e2.getFirst();
        }, o.prototype.startCheck = function() {
          var e2 = this;
          this.checkMessageListTimeout(this.sendCommandList, this.sendCommandMap), this.sendDataCheckTimer = setTimeout(function() {
            e2.startCheck();
          }, this.sendDataCheckInterval);
        }, o.prototype.stopCheck = function() {
          this.checkSendMessageList(this.sendCommandList), clearTimeout(this.sendDataCheckTimer);
        }, o.prototype.openHandler = function(e2) {
          var t2 = this;
          this.socket && (this.socket.onopen = function(r2) {
            t2.responseHandler(), e2(r2);
          });
        }, o.prototype.responseHandler = function() {
          var e2 = this;
          this.socket && (this.socket.onmessage = function(t2) {
            t2 = "string" == typeof t2.data ? JSON.parse(t2.data) : JSON.parse(String.fromCharCode.apply(null, new Uint8Array(t2.data))), e2.onMessage(t2);
          });
        }, o.prototype.closeHandler = function(e2) {
          this.socket && (this.socket.onclose = function(t2) {
            e2(t2);
          });
        }, o.prototype.errorHandler = function(e2) {
          this.socket && (this.socket.onerror = e2);
        }, o.prototype.onMessage = function(e2) {
        }, o);
        function o(e2) {
          this.miniProgram = e2, this.socket = null, this.sendCommandList = new n.c(), this.sendCommandMap = {}, this.sendDataCheckOnceCount = 100, this.sendDataDropTimeout = 1e4, this.sendDataCheckInterval = 2e3, this.recreateTime = [2e3, 4e3, 8e3];
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return dt;
        });
        function s(e2) {
          let t2 = e2.length;
          for (; 0 <= --t2; )
            e2[t2] = 0;
        }
        const n = 256, i = 286, o = 30, a = 15, u = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]), c = new Uint8Array([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]), l = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]), d = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), p = new Array(576), h = (s(p), new Array(60)), f = (s(h), new Array(512)), m = (s(f), new Array(256)), g = (s(m), new Array(29)), _ = (s(g), new Array(o));
        function b(e2, t2, r2, s2, n2) {
          this.static_tree = e2, this.extra_bits = t2, this.extra_base = r2, this.elems = s2, this.max_length = n2, this.has_stree = e2 && e2.length;
        }
        let v, y, M;
        function k(e2, t2) {
          this.dyn_tree = e2, this.max_code = 0, this.stat_desc = t2;
        }
        s(_);
        const I = (e2) => e2 < 256 ? f[e2] : f[256 + (e2 >>> 7)], S = (e2, t2) => {
          e2.pending_buf[e2.pending++] = 255 & t2, e2.pending_buf[e2.pending++] = t2 >>> 8 & 255;
        }, D = (e2, t2, r2) => {
          e2.bi_valid > 16 - r2 ? (e2.bi_buf |= t2 << e2.bi_valid & 65535, S(e2, e2.bi_buf), e2.bi_buf = t2 >> 16 - e2.bi_valid, e2.bi_valid += r2 - 16) : (e2.bi_buf |= t2 << e2.bi_valid & 65535, e2.bi_valid += r2);
        }, q = (e2, t2, r2) => {
          D(e2, r2[2 * t2], r2[2 * t2 + 1]);
        }, C = (e2, t2) => {
          let r2 = 0;
          for (; r2 |= 1 & e2, e2 >>>= 1, r2 <<= 1, 0 < --t2; )
            ;
          return r2 >>> 1;
        }, w = (e2, t2, r2) => {
          const s2 = new Array(16);
          let n2, i2, o2 = 0;
          for (n2 = 1; n2 <= a; n2++)
            s2[n2] = o2 = o2 + r2[n2 - 1] << 1;
          for (i2 = 0; i2 <= t2; i2++) {
            var u2 = e2[2 * i2 + 1];
            0 !== u2 && (e2[2 * i2] = C(s2[u2]++, u2));
          }
        }, A = (e2) => {
          let t2;
          for (t2 = 0; t2 < i; t2++)
            e2.dyn_ltree[2 * t2] = 0;
          for (t2 = 0; t2 < o; t2++)
            e2.dyn_dtree[2 * t2] = 0;
          for (t2 = 0; t2 < 19; t2++)
            e2.bl_tree[2 * t2] = 0;
          e2.dyn_ltree[512] = 1, e2.opt_len = e2.static_len = 0, e2.last_lit = e2.matches = 0;
        }, R = (e2) => {
          8 < e2.bi_valid ? S(e2, e2.bi_buf) : 0 < e2.bi_valid && (e2.pending_buf[e2.pending++] = e2.bi_buf), e2.bi_buf = 0, e2.bi_valid = 0;
        }, x = (e2, t2, r2, s2) => {
          var n2 = 2 * t2, i2 = 2 * r2;
          return e2[n2] < e2[i2] || e2[n2] === e2[i2] && s2[t2] <= s2[r2];
        }, T = (e2, t2, r2) => {
          var s2 = e2.heap[r2];
          let n2 = r2 << 1;
          for (; n2 <= e2.heap_len && (n2 < e2.heap_len && x(t2, e2.heap[n2 + 1], e2.heap[n2], e2.depth) && n2++, !x(t2, s2, e2.heap[n2], e2.depth)); )
            e2.heap[r2] = e2.heap[n2], r2 = n2, n2 <<= 1;
          e2.heap[r2] = s2;
        }, O = (e2, t2, r2) => {
          var s2;
          let i2, o2, a2, l2 = 0;
          if (0 !== e2.last_lit)
            for (; s2 = e2.pending_buf[e2.d_buf + 2 * l2] << 8 | e2.pending_buf[e2.d_buf + 2 * l2 + 1], i2 = e2.pending_buf[e2.l_buf + l2], l2++, 0 == s2 ? q(e2, i2, t2) : (o2 = m[i2], q(e2, o2 + n + 1, t2), 0 !== (a2 = u[o2]) && (i2 -= g[o2], D(e2, i2, a2)), s2--, o2 = I(s2), q(e2, o2, r2), 0 !== (a2 = c[o2]) && (s2 -= _[o2], D(e2, s2, a2))), l2 < e2.last_lit; )
              ;
          q(e2, 256, t2);
        }, L = (e2, t2) => {
          const r2 = t2.dyn_tree;
          var s2 = t2.stat_desc.static_tree, n2 = t2.stat_desc.has_stree, i2 = t2.stat_desc.elems;
          let o2, u2, c2, l2 = -1;
          for (e2.heap_len = 0, e2.heap_max = 573, o2 = 0; o2 < i2; o2++)
            0 !== r2[2 * o2] ? (e2.heap[++e2.heap_len] = l2 = o2, e2.depth[o2] = 0) : r2[2 * o2 + 1] = 0;
          for (; e2.heap_len < 2; )
            c2 = e2.heap[++e2.heap_len] = l2 < 2 ? ++l2 : 0, r2[2 * c2] = 1, e2.depth[c2] = 0, e2.opt_len--, n2 && (e2.static_len -= s2[2 * c2 + 1]);
          for (t2.max_code = l2, o2 = e2.heap_len >> 1; 1 <= o2; o2--)
            T(e2, r2, o2);
          for (c2 = i2; o2 = e2.heap[1], e2.heap[1] = e2.heap[e2.heap_len--], T(e2, r2, 1), u2 = e2.heap[1], e2.heap[--e2.heap_max] = o2, e2.heap[--e2.heap_max] = u2, r2[2 * c2] = r2[2 * o2] + r2[2 * u2], e2.depth[c2] = (e2.depth[o2] >= e2.depth[u2] ? e2.depth[o2] : e2.depth[u2]) + 1, r2[2 * o2 + 1] = r2[2 * u2 + 1] = c2, e2.heap[1] = c2++, T(e2, r2, 1), 2 <= e2.heap_len; )
            ;
          e2.heap[--e2.heap_max] = e2.heap[1], ((e3, t3) => {
            const r3 = t3.dyn_tree;
            var s3, n3 = t3.max_code, i3 = t3.stat_desc.static_tree, o3 = t3.stat_desc.has_stree, u3 = t3.stat_desc.extra_bits, c3 = t3.stat_desc.extra_base, l3 = t3.stat_desc.max_length;
            let d2, p2, h2, f2, m2, g2 = 0;
            for (f2 = 0; f2 <= a; f2++)
              e3.bl_count[f2] = 0;
            for (r3[2 * e3.heap[e3.heap_max] + 1] = 0, d2 = e3.heap_max + 1; d2 < 573; d2++)
              p2 = e3.heap[d2], (f2 = r3[2 * r3[2 * p2 + 1] + 1] + 1) > l3 && (f2 = l3, g2++), r3[2 * p2 + 1] = f2, p2 > n3 || (e3.bl_count[f2]++, m2 = 0, p2 >= c3 && (m2 = u3[p2 - c3]), s3 = r3[2 * p2], e3.opt_len += s3 * (f2 + m2), o3 && (e3.static_len += s3 * (i3[2 * p2 + 1] + m2)));
            if (0 !== g2) {
              do {
                for (f2 = l3 - 1; 0 === e3.bl_count[f2]; )
                  f2--;
              } while (e3.bl_count[f2]--, e3.bl_count[f2 + 1] += 2, e3.bl_count[l3]--, 0 < (g2 -= 2));
              for (f2 = l3; 0 !== f2; f2--)
                for (p2 = e3.bl_count[f2]; 0 !== p2; )
                  n3 < (h2 = e3.heap[--d2]) || (r3[2 * h2 + 1] !== f2 && (e3.opt_len += (f2 - r3[2 * h2 + 1]) * r3[2 * h2], r3[2 * h2 + 1] = f2), p2--);
            }
          })(e2, t2), w(r2, l2, e2.bl_count);
        }, E = (e2, t2, r2) => {
          let s2, n2 = -1;
          var i2;
          let o2 = t2[1], a2 = 0, u2 = 7, c2 = 4;
          for (0 === o2 && (u2 = 138, c2 = 3), t2[2 * (r2 + 1) + 1] = 65535, s2 = 0; s2 <= r2; s2++)
            i2 = o2, o2 = t2[2 * (s2 + 1) + 1], ++a2 < u2 && i2 === o2 || (a2 < c2 ? e2.bl_tree[2 * i2] += a2 : 0 !== i2 ? (i2 !== n2 && e2.bl_tree[2 * i2]++, e2.bl_tree[32]++) : a2 <= 10 ? e2.bl_tree[34]++ : e2.bl_tree[36]++, a2 = 0, n2 = i2, c2 = 0 === o2 ? (u2 = 138, 3) : i2 === o2 ? (u2 = 6, 3) : (u2 = 7, 4));
        }, U = (e2, t2, r2) => {
          let s2, n2 = -1;
          var i2;
          let o2 = t2[1], a2 = 0, u2 = 7, c2 = 4;
          for (0 === o2 && (u2 = 138, c2 = 3), s2 = 0; s2 <= r2; s2++)
            if (i2 = o2, o2 = t2[2 * (s2 + 1) + 1], !(++a2 < u2 && i2 === o2)) {
              if (a2 < c2)
                for (; q(e2, i2, e2.bl_tree), 0 != --a2; )
                  ;
              else
                0 !== i2 ? (i2 !== n2 && (q(e2, i2, e2.bl_tree), a2--), q(e2, 16, e2.bl_tree), D(e2, a2 - 3, 2)) : a2 <= 10 ? (q(e2, 17, e2.bl_tree), D(e2, a2 - 3, 3)) : (q(e2, 18, e2.bl_tree), D(e2, a2 - 11, 7));
              a2 = 0, n2 = i2, c2 = 0 === o2 ? (u2 = 138, 3) : i2 === o2 ? (u2 = 6, 3) : (u2 = 7, 4);
            }
        };
        let P = false;
        const j = (e2, t2, r2, s2) => {
          D(e2, 0 + (s2 ? 1 : 0), 3), s2 = e2, e2 = t2, t2 = r2, r2 = true, R(s2), r2 && (S(s2, t2), S(s2, ~t2)), s2.pending_buf.set(s2.window.subarray(e2, e2 + t2), s2.pending), s2.pending += t2;
        };
        r = { _tr_init: (e2) => {
          if (!P) {
            {
              let e3, t2, r2, s2, n2;
              const d2 = new Array(16);
              for (r2 = 0, s2 = 0; s2 < 28; s2++)
                for (g[s2] = r2, e3 = 0; e3 < 1 << u[s2]; e3++)
                  m[r2++] = s2;
              for (m[r2 - 1] = s2, n2 = 0, s2 = 0; s2 < 16; s2++)
                for (_[s2] = n2, e3 = 0; e3 < 1 << c[s2]; e3++)
                  f[n2++] = s2;
              for (n2 >>= 7; s2 < o; s2++)
                for (_[s2] = n2 << 7, e3 = 0; e3 < 1 << c[s2] - 7; e3++)
                  f[256 + n2++] = s2;
              for (t2 = 0; t2 <= a; t2++)
                d2[t2] = 0;
              for (e3 = 0; e3 <= 143; )
                p[2 * e3 + 1] = 8, e3++, d2[8]++;
              for (; e3 <= 255; )
                p[2 * e3 + 1] = 9, e3++, d2[9]++;
              for (; e3 <= 279; )
                p[2 * e3 + 1] = 7, e3++, d2[7]++;
              for (; e3 <= 287; )
                p[2 * e3 + 1] = 8, e3++, d2[8]++;
              for (w(p, 287, d2), e3 = 0; e3 < o; e3++)
                h[2 * e3 + 1] = 5, h[2 * e3] = C(e3, 5);
              v = new b(p, u, 257, i, a), y = new b(h, c, 0, o, a), M = new b(new Array(0), l, 0, 19, 7);
            }
            P = true;
          }
          e2.l_desc = new k(e2.dyn_ltree, v), e2.d_desc = new k(e2.dyn_dtree, y), e2.bl_desc = new k(e2.bl_tree, M), e2.bi_buf = 0, e2.bi_valid = 0, A(e2);
        }, _tr_stored_block: j, _tr_flush_block: (e2, t2, r2, s2) => {
          let i2, o2, a2 = 0;
          if (0 < e2.level ? (2 === e2.strm.data_type && (e2.strm.data_type = ((e3) => {
            let t3, r3 = 4093624447;
            for (t3 = 0; t3 <= 31; t3++, r3 >>>= 1)
              if (1 & r3 && 0 !== e3.dyn_ltree[2 * t3])
                return 0;
            if (0 !== e3.dyn_ltree[18] || 0 !== e3.dyn_ltree[20] || 0 !== e3.dyn_ltree[26])
              return 1;
            for (t3 = 32; t3 < n; t3++)
              if (0 !== e3.dyn_ltree[2 * t3])
                return 1;
            return 0;
          })(e2)), L(e2, e2.l_desc), L(e2, e2.d_desc), a2 = ((e3) => {
            let t3;
            for (E(e3, e3.dyn_ltree, e3.l_desc.max_code), E(e3, e3.dyn_dtree, e3.d_desc.max_code), L(e3, e3.bl_desc), t3 = 18; 3 <= t3 && 0 === e3.bl_tree[2 * d[t3] + 1]; t3--)
              ;
            return e3.opt_len += 3 * (t3 + 1) + 5 + 5 + 4, t3;
          })(e2), i2 = e2.opt_len + 3 + 7 >>> 3, (o2 = e2.static_len + 3 + 7 >>> 3) <= i2 && (i2 = o2)) : i2 = o2 = r2 + 5, r2 + 4 <= i2 && -1 !== t2)
            j(e2, t2, r2, s2);
          else if (4 === e2.strategy || o2 === i2)
            D(e2, 2 + (s2 ? 1 : 0), 3), O(e2, p, h);
          else {
            D(e2, 4 + (s2 ? 1 : 0), 3);
            {
              var u2 = e2;
              t2 = e2.l_desc.max_code + 1, r2 = e2.d_desc.max_code + 1;
              var c2 = a2 + 1;
              let s3;
              for (D(u2, t2 - 257, 5), D(u2, r2 - 1, 5), D(u2, c2 - 4, 4), s3 = 0; s3 < c2; s3++)
                D(u2, u2.bl_tree[2 * d[s3] + 1], 3);
              U(u2, u2.dyn_ltree, t2 - 1), U(u2, u2.dyn_dtree, r2 - 1);
            }
            O(e2, e2.dyn_ltree, e2.dyn_dtree);
          }
          A(e2), s2 && R(e2);
        }, _tr_tally: (e2, t2, r2) => (e2.pending_buf[e2.d_buf + 2 * e2.last_lit] = t2 >>> 8 & 255, e2.pending_buf[e2.d_buf + 2 * e2.last_lit + 1] = 255 & t2, e2.pending_buf[e2.l_buf + e2.last_lit] = 255 & r2, e2.last_lit++, 0 === t2 ? e2.dyn_ltree[2 * r2]++ : (e2.matches++, t2--, e2.dyn_ltree[2 * (m[r2] + n + 1)]++, e2.dyn_dtree[2 * I(t2)]++), e2.last_lit === e2.lit_bufsize - 1), _tr_align: (e2) => {
          D(e2, 2, 3), q(e2, 256, p), 16 === (e2 = e2).bi_valid ? (S(e2, e2.bi_buf), e2.bi_buf = 0, e2.bi_valid = 0) : 8 <= e2.bi_valid && (e2.pending_buf[e2.pending++] = 255 & e2.bi_buf, e2.bi_buf >>= 8, e2.bi_valid -= 8);
        } };
        var G = (e2, t2, r2, s2) => {
          let n2 = 65535 & e2 | 0, i2 = e2 >>> 16 & 65535 | 0, o2 = 0;
          for (; 0 !== r2; ) {
            for (r2 -= o2 = 2e3 < r2 ? 2e3 : r2; n2 = n2 + t2[s2++] | 0, i2 = i2 + n2 | 0, --o2; )
              ;
            n2 %= 65521, i2 %= 65521;
          }
          return n2 | i2 << 16 | 0;
        };
        const z = new Uint32Array((() => {
          let e2, t2 = [];
          for (var r2 = 0; r2 < 256; r2++) {
            e2 = r2;
            for (var s2 = 0; s2 < 8; s2++)
              e2 = 1 & e2 ? 3988292384 ^ e2 >>> 1 : e2 >>> 1;
            t2[r2] = e2;
          }
          return t2;
        })());
        var F = (e2, t2, r2, s2) => {
          var n2 = z, i2 = s2 + r2;
          e2 ^= -1;
          for (let r3 = s2; r3 < i2; r3++)
            e2 = e2 >>> 8 ^ n2[255 & (e2 ^ t2[r3])];
          return -1 ^ e2;
        }, B = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
        t = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_MEM_ERROR: -4, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
        const { _tr_init: N, _tr_stored_block: W, _tr_flush_block: K, _tr_tally: H, _tr_align: Q } = r, { Z_NO_FLUSH: Z, Z_PARTIAL_FLUSH: J, Z_FULL_FLUSH: V, Z_FINISH: Y, Z_BLOCK: X, Z_OK: $, Z_STREAM_END: ee, Z_STREAM_ERROR: te, Z_DATA_ERROR: re, Z_BUF_ERROR: se, Z_DEFAULT_COMPRESSION: ne, Z_FILTERED: ie, Z_HUFFMAN_ONLY: oe, Z_RLE: ae, Z_FIXED: ue, Z_DEFAULT_STRATEGY: ce, Z_UNKNOWN: le, Z_DEFLATED: de } = t, pe = 258, he = 262, fe = 113, me = (e2, t2) => (e2.msg = B[t2], t2), ge = (e2) => (e2 << 1) - (4 < e2 ? 9 : 0), _e = (e2) => {
          let t2 = e2.length;
          for (; 0 <= --t2; )
            e2[t2] = 0;
        };
        let be = (e2, t2, r2) => (t2 << e2.hash_shift ^ r2) & e2.hash_mask;
        const ve = (e2) => {
          const t2 = e2.state;
          let r2 = t2.pending;
          0 !== (r2 = r2 > e2.avail_out ? e2.avail_out : r2) && (e2.output.set(t2.pending_buf.subarray(t2.pending_out, t2.pending_out + r2), e2.next_out), e2.next_out += r2, t2.pending_out += r2, e2.total_out += r2, e2.avail_out -= r2, t2.pending -= r2, 0 === t2.pending && (t2.pending_out = 0));
        }, ye = (e2, t2) => {
          K(e2, 0 <= e2.block_start ? e2.block_start : -1, e2.strstart - e2.block_start, t2), e2.block_start = e2.strstart, ve(e2.strm);
        }, Me = (e2, t2) => {
          e2.pending_buf[e2.pending++] = t2;
        }, ke = (e2, t2) => {
          e2.pending_buf[e2.pending++] = t2 >>> 8 & 255, e2.pending_buf[e2.pending++] = 255 & t2;
        }, Ie = (e2, t2, r2, s2) => {
          let n2 = e2.avail_in;
          return 0 === (n2 = n2 > s2 ? s2 : n2) ? 0 : (e2.avail_in -= n2, t2.set(e2.input.subarray(e2.next_in, e2.next_in + n2), r2), 1 === e2.state.wrap ? e2.adler = G(e2.adler, t2, n2, r2) : 2 === e2.state.wrap && (e2.adler = F(e2.adler, t2, n2, r2)), e2.next_in += n2, e2.total_in += n2, n2);
        }, Se = (e2, t2) => {
          let r2, s2 = e2.max_chain_length, n2 = e2.strstart;
          var i2;
          let o2 = e2.prev_length, a2 = e2.nice_match;
          var u2 = e2.strstart > e2.w_size - he ? e2.strstart - (e2.w_size - he) : 0, c2 = e2.window, l2 = e2.w_mask, d2 = e2.prev, p2 = e2.strstart + pe;
          let h2 = c2[n2 + o2 - 1], f2 = c2[n2 + o2];
          e2.prev_length >= e2.good_match && (s2 >>= 2), a2 > e2.lookahead && (a2 = e2.lookahead);
          do {
            if (c2[(r2 = t2) + o2] === f2 && c2[r2 + o2 - 1] === h2 && c2[r2] === c2[n2] && c2[++r2] === c2[n2 + 1]) {
              for (n2 += 2, r2++; c2[++n2] === c2[++r2] && c2[++n2] === c2[++r2] && c2[++n2] === c2[++r2] && c2[++n2] === c2[++r2] && c2[++n2] === c2[++r2] && c2[++n2] === c2[++r2] && c2[++n2] === c2[++r2] && c2[++n2] === c2[++r2] && n2 < p2; )
                ;
              if (i2 = pe - (p2 - n2), n2 = p2 - pe, i2 > o2) {
                if (e2.match_start = t2, (o2 = i2) >= a2)
                  break;
                h2 = c2[n2 + o2 - 1], f2 = c2[n2 + o2];
              }
            }
          } while ((t2 = d2[t2 & l2]) > u2 && 0 != --s2);
          return o2 <= e2.lookahead ? o2 : e2.lookahead;
        }, De = (e2) => {
          var t2 = e2.w_size;
          let r2, s2, n2, i2, o2;
          do {
            if (i2 = e2.window_size - e2.lookahead - e2.strstart, e2.strstart >= t2 + (t2 - he)) {
              for (e2.window.set(e2.window.subarray(t2, t2 + t2), 0), e2.match_start -= t2, e2.strstart -= t2, e2.block_start -= t2, s2 = e2.hash_size, r2 = s2; n2 = e2.head[--r2], e2.head[r2] = n2 >= t2 ? n2 - t2 : 0, --s2; )
                ;
              for (s2 = t2, r2 = s2; n2 = e2.prev[--r2], e2.prev[r2] = n2 >= t2 ? n2 - t2 : 0, --s2; )
                ;
              i2 += t2;
            }
            if (0 === e2.strm.avail_in)
              break;
            if (s2 = Ie(e2.strm, e2.window, e2.strstart + e2.lookahead, i2), e2.lookahead += s2, e2.lookahead + e2.insert >= 3)
              for (o2 = e2.strstart - e2.insert, e2.ins_h = e2.window[o2], e2.ins_h = be(e2, e2.ins_h, e2.window[o2 + 1]); e2.insert && (e2.ins_h = be(e2, e2.ins_h, e2.window[o2 + 3 - 1]), e2.prev[o2 & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = o2, o2++, e2.insert--, !(e2.lookahead + e2.insert < 3)); )
                ;
          } while (e2.lookahead < he && 0 !== e2.strm.avail_in);
        };
        r = (e2, t2) => {
          let r2, s2;
          for (; ; ) {
            if (e2.lookahead < he) {
              if (De(e2), e2.lookahead < he && t2 === Z)
                return 1;
              if (0 === e2.lookahead)
                break;
            }
            if (r2 = 0, e2.lookahead >= 3 && (e2.ins_h = be(e2, e2.ins_h, e2.window[e2.strstart + 3 - 1]), r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), 0 !== r2 && e2.strstart - r2 <= e2.w_size - he && (e2.match_length = Se(e2, r2)), e2.match_length >= 3)
              if (s2 = H(e2, e2.strstart - e2.match_start, e2.match_length - 3), e2.lookahead -= e2.match_length, e2.match_length <= e2.max_lazy_match && e2.lookahead >= 3) {
                for (e2.match_length--; e2.strstart++, e2.ins_h = be(e2, e2.ins_h, e2.window[e2.strstart + 3 - 1]), r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart, 0 != --e2.match_length; )
                  ;
                e2.strstart++;
              } else
                e2.strstart += e2.match_length, e2.match_length = 0, e2.ins_h = e2.window[e2.strstart], e2.ins_h = be(e2, e2.ins_h, e2.window[e2.strstart + 1]);
            else
              s2 = H(e2, 0, e2.window[e2.strstart]), e2.lookahead--, e2.strstart++;
            if (s2 && (ye(e2, false), 0 === e2.strm.avail_out))
              return 1;
          }
          return e2.insert = e2.strstart < 2 ? e2.strstart : 2, t2 === Y ? (ye(e2, true), 0 === e2.strm.avail_out ? 3 : 4) : e2.last_lit && (ye(e2, false), 0 === e2.strm.avail_out) ? 1 : 2;
        };
        var qe = (e2, t2) => {
          let r2, s2;
          for (var n2; ; ) {
            if (e2.lookahead < he) {
              if (De(e2), e2.lookahead < he && t2 === Z)
                return 1;
              if (0 === e2.lookahead)
                break;
            }
            if (r2 = 0, e2.lookahead >= 3 && (e2.ins_h = be(e2, e2.ins_h, e2.window[e2.strstart + 3 - 1]), r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), e2.prev_length = e2.match_length, e2.prev_match = e2.match_start, e2.match_length = 2, 0 !== r2 && e2.prev_length < e2.max_lazy_match && e2.strstart - r2 <= e2.w_size - he && (e2.match_length = Se(e2, r2), e2.match_length <= 5 && (e2.strategy === ie || 3 === e2.match_length && 4096 < e2.strstart - e2.match_start) && (e2.match_length = 2)), e2.prev_length >= 3 && e2.match_length <= e2.prev_length) {
              for (n2 = e2.strstart + e2.lookahead - 3, s2 = H(e2, e2.strstart - 1 - e2.prev_match, e2.prev_length - 3), e2.lookahead -= e2.prev_length - 1, e2.prev_length -= 2; ++e2.strstart <= n2 && (e2.ins_h = be(e2, e2.ins_h, e2.window[e2.strstart + 3 - 1]), r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), 0 != --e2.prev_length; )
                ;
              if (e2.match_available = 0, e2.match_length = 2, e2.strstart++, s2 && (ye(e2, false), 0 === e2.strm.avail_out))
                return 1;
            } else if (e2.match_available) {
              if ((s2 = H(e2, 0, e2.window[e2.strstart - 1])) && ye(e2, false), e2.strstart++, e2.lookahead--, 0 === e2.strm.avail_out)
                return 1;
            } else
              e2.match_available = 1, e2.strstart++, e2.lookahead--;
          }
          return e2.match_available && (s2 = H(e2, 0, e2.window[e2.strstart - 1]), e2.match_available = 0), e2.insert = e2.strstart < 2 ? e2.strstart : 2, t2 === Y ? (ye(e2, true), 0 === e2.strm.avail_out ? 3 : 4) : e2.last_lit && (ye(e2, false), 0 === e2.strm.avail_out) ? 1 : 2;
        };
        function Ce(e2, t2, r2, s2, n2) {
          this.good_length = e2, this.max_lazy = t2, this.nice_length = r2, this.max_chain = s2, this.func = n2;
        }
        const we = [new Ce(0, 0, 0, 0, (e2, t2) => {
          let r2 = 65535;
          for (r2 > e2.pending_buf_size - 5 && (r2 = e2.pending_buf_size - 5); ; ) {
            if (e2.lookahead <= 1) {
              if (De(e2), 0 === e2.lookahead && t2 === Z)
                return 1;
              if (0 === e2.lookahead)
                break;
            }
            e2.strstart += e2.lookahead, e2.lookahead = 0;
            var s2 = e2.block_start + r2;
            if ((0 === e2.strstart || e2.strstart >= s2) && (e2.lookahead = e2.strstart - s2, e2.strstart = s2, ye(e2, false), 0 === e2.strm.avail_out))
              return 1;
            if (e2.strstart - e2.block_start >= e2.w_size - he && (ye(e2, false), 0 === e2.strm.avail_out))
              return 1;
          }
          return e2.insert = 0, t2 === Y ? (ye(e2, true), 0 === e2.strm.avail_out ? 3 : 4) : (e2.strstart > e2.block_start && (ye(e2, false), e2.strm.avail_out), 1);
        }), new Ce(4, 4, 8, 4, r), new Ce(4, 5, 16, 8, r), new Ce(4, 6, 32, 32, r), new Ce(4, 4, 16, 16, qe), new Ce(8, 16, 32, 32, qe), new Ce(8, 16, 128, 128, qe), new Ce(8, 32, 128, 256, qe), new Ce(32, 128, 258, 1024, qe), new Ce(32, 258, 258, 4096, qe)];
        function Ae() {
          this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = de, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new Uint16Array(1146), this.dyn_dtree = new Uint16Array(122), this.bl_tree = new Uint16Array(78), _e(this.dyn_ltree), _e(this.dyn_dtree), _e(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new Uint16Array(16), this.heap = new Uint16Array(573), _e(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new Uint16Array(573), _e(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
        }
        const Re = (e2) => {
          if (!e2 || !e2.state)
            return me(e2, te);
          e2.total_in = e2.total_out = 0, e2.data_type = le;
          const t2 = e2.state;
          return t2.pending = 0, t2.pending_out = 0, t2.wrap < 0 && (t2.wrap = -t2.wrap), t2.status = t2.wrap ? 42 : fe, e2.adler = 2 === t2.wrap ? 0 : 1, t2.last_flush = Z, N(t2), $;
        }, xe = (e2) => {
          var t2 = Re(e2);
          return t2 === $ && ((e2 = e2.state).window_size = 2 * e2.w_size, _e(e2.head), e2.max_lazy_match = we[e2.level].max_lazy, e2.good_match = we[e2.level].good_length, e2.nice_match = we[e2.level].nice_length, e2.max_chain_length = we[e2.level].max_chain, e2.strstart = 0, e2.block_start = 0, e2.lookahead = 0, e2.insert = 0, e2.match_length = e2.prev_length = 2, e2.match_available = 0, e2.ins_h = 0), t2;
        }, Te = (e2, t2, r2, s2, n2, i2) => {
          if (!e2)
            return te;
          let o2 = 1;
          if (t2 === ne && (t2 = 6), s2 < 0 ? (o2 = 0, s2 = -s2) : 15 < s2 && (o2 = 2, s2 -= 16), n2 < 1 || n2 > 9 || r2 !== de || s2 < 8 || 15 < s2 || t2 < 0 || 9 < t2 || i2 < 0 || i2 > ue)
            return me(e2, te);
          8 === s2 && (s2 = 9);
          const a2 = new Ae();
          return (e2.state = a2).strm = e2, a2.wrap = o2, a2.gzhead = null, a2.w_bits = s2, a2.w_size = 1 << a2.w_bits, a2.w_mask = a2.w_size - 1, a2.hash_bits = n2 + 7, a2.hash_size = 1 << a2.hash_bits, a2.hash_mask = a2.hash_size - 1, a2.hash_shift = ~~((a2.hash_bits + 3 - 1) / 3), a2.window = new Uint8Array(2 * a2.w_size), a2.head = new Uint16Array(a2.hash_size), a2.prev = new Uint16Array(a2.w_size), a2.lit_bufsize = 1 << n2 + 6, a2.pending_buf_size = 4 * a2.lit_bufsize, a2.pending_buf = new Uint8Array(a2.pending_buf_size), a2.d_buf = +a2.lit_bufsize, a2.l_buf = 3 * a2.lit_bufsize, a2.level = t2, a2.strategy = i2, a2.method = r2, xe(e2);
        };
        var Oe = Te, Le = (e2, t2) => e2 && e2.state && 2 === e2.state.wrap ? (e2.state.gzhead = t2, $) : te, Ee = (e2, t2) => {
          let r2, s2;
          if (!e2 || !e2.state || t2 > X || t2 < 0)
            return e2 ? me(e2, te) : te;
          const n2 = e2.state;
          if (!e2.output || !e2.input && 0 !== e2.avail_in || 666 === n2.status && t2 !== Y)
            return me(e2, 0 === e2.avail_out ? se : te);
          n2.strm = e2;
          var i2 = n2.last_flush;
          if (n2.last_flush = t2, 42 === n2.status)
            if (2 === n2.wrap)
              e2.adler = 0, Me(n2, 31), Me(n2, 139), Me(n2, 8), n2.gzhead ? (Me(n2, (n2.gzhead.text ? 1 : 0) + (n2.gzhead.hcrc ? 2 : 0) + (n2.gzhead.extra ? 4 : 0) + (n2.gzhead.name ? 8 : 0) + (n2.gzhead.comment ? 16 : 0)), Me(n2, 255 & n2.gzhead.time), Me(n2, n2.gzhead.time >> 8 & 255), Me(n2, n2.gzhead.time >> 16 & 255), Me(n2, n2.gzhead.time >> 24 & 255), Me(n2, 9 === n2.level ? 2 : n2.strategy >= oe || n2.level < 2 ? 4 : 0), Me(n2, 255 & n2.gzhead.os), n2.gzhead.extra && n2.gzhead.extra.length && (Me(n2, 255 & n2.gzhead.extra.length), Me(n2, n2.gzhead.extra.length >> 8 & 255)), n2.gzhead.hcrc && (e2.adler = F(e2.adler, n2.pending_buf, n2.pending, 0)), n2.gzindex = 0, n2.status = 69) : (Me(n2, 0), Me(n2, 0), Me(n2, 0), Me(n2, 0), Me(n2, 0), Me(n2, 9 === n2.level ? 2 : n2.strategy >= oe || n2.level < 2 ? 4 : 0), Me(n2, 3), n2.status = fe);
            else {
              let t3 = de + (n2.w_bits - 8 << 4) << 8, r3 = -1;
              r3 = n2.strategy >= oe || n2.level < 2 ? 0 : n2.level < 6 ? 1 : 6 === n2.level ? 2 : 3, t3 |= r3 << 6, 0 !== n2.strstart && (t3 |= 32), t3 += 31 - t3 % 31, n2.status = fe, ke(n2, t3), 0 !== n2.strstart && (ke(n2, e2.adler >>> 16), ke(n2, 65535 & e2.adler)), e2.adler = 1;
            }
          if (69 === n2.status)
            if (n2.gzhead.extra) {
              for (r2 = n2.pending; n2.gzindex < (65535 & n2.gzhead.extra.length) && (n2.pending !== n2.pending_buf_size || (n2.gzhead.hcrc && n2.pending > r2 && (e2.adler = F(e2.adler, n2.pending_buf, n2.pending - r2, r2)), ve(e2), r2 = n2.pending, n2.pending !== n2.pending_buf_size)); )
                Me(n2, 255 & n2.gzhead.extra[n2.gzindex]), n2.gzindex++;
              n2.gzhead.hcrc && n2.pending > r2 && (e2.adler = F(e2.adler, n2.pending_buf, n2.pending - r2, r2)), n2.gzindex === n2.gzhead.extra.length && (n2.gzindex = 0, n2.status = 73);
            } else
              n2.status = 73;
          if (73 === n2.status)
            if (n2.gzhead.name) {
              r2 = n2.pending;
              do {
                if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > r2 && (e2.adler = F(e2.adler, n2.pending_buf, n2.pending - r2, r2)), ve(e2), r2 = n2.pending, n2.pending === n2.pending_buf_size)) {
                  s2 = 1;
                  break;
                }
              } while (s2 = n2.gzindex < n2.gzhead.name.length ? 255 & n2.gzhead.name.charCodeAt(n2.gzindex++) : 0, Me(n2, s2), 0 !== s2);
              n2.gzhead.hcrc && n2.pending > r2 && (e2.adler = F(e2.adler, n2.pending_buf, n2.pending - r2, r2)), 0 === s2 && (n2.gzindex = 0, n2.status = 91);
            } else
              n2.status = 91;
          if (91 === n2.status)
            if (n2.gzhead.comment) {
              r2 = n2.pending;
              do {
                if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > r2 && (e2.adler = F(e2.adler, n2.pending_buf, n2.pending - r2, r2)), ve(e2), r2 = n2.pending, n2.pending === n2.pending_buf_size)) {
                  s2 = 1;
                  break;
                }
              } while (s2 = n2.gzindex < n2.gzhead.comment.length ? 255 & n2.gzhead.comment.charCodeAt(n2.gzindex++) : 0, Me(n2, s2), 0 !== s2);
              n2.gzhead.hcrc && n2.pending > r2 && (e2.adler = F(e2.adler, n2.pending_buf, n2.pending - r2, r2)), 0 === s2 && (n2.status = 103);
            } else
              n2.status = 103;
          if (103 === n2.status && (n2.gzhead.hcrc ? (n2.pending + 2 > n2.pending_buf_size && ve(e2), n2.pending + 2 <= n2.pending_buf_size && (Me(n2, 255 & e2.adler), Me(n2, e2.adler >> 8 & 255), e2.adler = 0, n2.status = fe)) : n2.status = fe), 0 !== n2.pending) {
            if (ve(e2), 0 === e2.avail_out)
              return n2.last_flush = -1, $;
          } else if (0 === e2.avail_in && ge(t2) <= ge(i2) && t2 !== Y)
            return me(e2, se);
          if (666 === n2.status && 0 !== e2.avail_in)
            return me(e2, se);
          if (0 !== e2.avail_in || 0 !== n2.lookahead || t2 !== Z && 666 !== n2.status) {
            if (3 !== (i2 = n2.strategy === oe ? ((e3, t3) => {
              for (var r3; ; ) {
                if (0 === e3.lookahead && (De(e3), 0 === e3.lookahead)) {
                  if (t3 === Z)
                    return 1;
                  break;
                }
                if (e3.match_length = 0, r3 = H(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++, r3 && (ye(e3, false), 0 === e3.strm.avail_out))
                  return 1;
              }
              return e3.insert = 0, t3 === Y ? (ye(e3, true), 0 === e3.strm.avail_out ? 3 : 4) : e3.last_lit && (ye(e3, false), 0 === e3.strm.avail_out) ? 1 : 2;
            })(n2, t2) : n2.strategy === ae ? ((e3, t3) => {
              let r3;
              var s3;
              let n3, i3;
              for (var o2 = e3.window; ; ) {
                if (e3.lookahead <= pe) {
                  if (De(e3), e3.lookahead <= pe && t3 === Z)
                    return 1;
                  if (0 === e3.lookahead)
                    break;
                }
                if (e3.match_length = 0, e3.lookahead >= 3 && 0 < e3.strstart && (s3 = o2[n3 = e3.strstart - 1]) === o2[++n3] && s3 === o2[++n3] && s3 === o2[++n3]) {
                  for (i3 = e3.strstart + pe; s3 === o2[++n3] && s3 === o2[++n3] && s3 === o2[++n3] && s3 === o2[++n3] && s3 === o2[++n3] && s3 === o2[++n3] && s3 === o2[++n3] && s3 === o2[++n3] && n3 < i3; )
                    ;
                  e3.match_length = pe - (i3 - n3), e3.match_length > e3.lookahead && (e3.match_length = e3.lookahead);
                }
                if (e3.match_length >= 3 ? (r3 = H(e3, 1, e3.match_length - 3), e3.lookahead -= e3.match_length, e3.strstart += e3.match_length, e3.match_length = 0) : (r3 = H(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++), r3 && (ye(e3, false), 0 === e3.strm.avail_out))
                  return 1;
              }
              return e3.insert = 0, t3 === Y ? (ye(e3, true), 0 === e3.strm.avail_out ? 3 : 4) : e3.last_lit && (ye(e3, false), 0 === e3.strm.avail_out) ? 1 : 2;
            })(n2, t2) : we[n2.level].func(n2, t2)) && 4 !== i2 || (n2.status = 666), 1 === i2 || 3 === i2)
              return 0 === e2.avail_out && (n2.last_flush = -1), $;
            if (2 === i2 && (t2 === J ? Q(n2) : t2 !== X && (W(n2, 0, 0, false), t2 === V && (_e(n2.head), 0 === n2.lookahead && (n2.strstart = 0, n2.block_start = 0, n2.insert = 0))), ve(e2), 0 === e2.avail_out))
              return n2.last_flush = -1, $;
          }
          return t2 !== Y ? $ : n2.wrap <= 0 ? ee : (2 === n2.wrap ? (Me(n2, 255 & e2.adler), Me(n2, e2.adler >> 8 & 255), Me(n2, e2.adler >> 16 & 255), Me(n2, e2.adler >> 24 & 255), Me(n2, 255 & e2.total_in), Me(n2, e2.total_in >> 8 & 255), Me(n2, e2.total_in >> 16 & 255), Me(n2, e2.total_in >> 24 & 255)) : (ke(n2, e2.adler >>> 16), ke(n2, 65535 & e2.adler)), ve(e2), 0 < n2.wrap && (n2.wrap = -n2.wrap), 0 !== n2.pending ? $ : ee);
        }, Ue = (e2) => {
          if (!e2 || !e2.state)
            return te;
          var t2 = e2.state.status;
          return 42 !== t2 && 69 !== t2 && 73 !== t2 && 91 !== t2 && 103 !== t2 && t2 !== fe && 666 !== t2 ? me(e2, te) : (e2.state = null, t2 === fe ? me(e2, re) : $);
        }, Pe = (e2, t2) => {
          let r2 = t2.length;
          if (!e2 || !e2.state)
            return te;
          const s2 = e2.state;
          var n2 = s2.wrap;
          if (2 === n2 || 1 === n2 && 42 !== s2.status || s2.lookahead)
            return te;
          if (1 === n2 && (e2.adler = G(e2.adler, t2, r2, 0)), s2.wrap = 0, r2 >= s2.w_size) {
            0 === n2 && (_e(s2.head), s2.strstart = 0, s2.block_start = 0, s2.insert = 0);
            let e3 = new Uint8Array(s2.w_size);
            e3.set(t2.subarray(r2 - s2.w_size, r2), 0), t2 = e3, r2 = s2.w_size;
          }
          var i2 = e2.avail_in, o2 = e2.next_in, a2 = e2.input;
          for (e2.avail_in = r2, e2.next_in = 0, e2.input = t2, De(s2); s2.lookahead >= 3; ) {
            let e3 = s2.strstart, t3 = s2.lookahead - 2;
            for (; s2.ins_h = be(s2, s2.ins_h, s2.window[e3 + 3 - 1]), s2.prev[e3 & s2.w_mask] = s2.head[s2.ins_h], s2.head[s2.ins_h] = e3, e3++, --t3; )
              ;
            s2.strstart = e3, s2.lookahead = 2, De(s2);
          }
          return s2.strstart += s2.lookahead, s2.block_start = s2.strstart, s2.insert = s2.lookahead, s2.lookahead = 0, s2.match_length = s2.prev_length = 2, s2.match_available = 0, e2.next_in = o2, e2.input = a2, e2.avail_in = i2, s2.wrap = n2, $;
        };
        let je = true;
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch (t2) {
          je = false;
        }
        const Ge = new Uint8Array(256);
        for (let e2 = 0; e2 < 256; e2++)
          Ge[e2] = 252 <= e2 ? 6 : 248 <= e2 ? 5 : 240 <= e2 ? 4 : 224 <= e2 ? 3 : 192 <= e2 ? 2 : 1;
        Ge[254] = Ge[254] = 1;
        var ze = (e2) => {
          if ("function" == typeof TextEncoder && TextEncoder.prototype.encode)
            return new TextEncoder().encode(e2);
          let t2, r2, s2, n2, i2, o2 = e2.length, a2 = 0;
          for (n2 = 0; n2 < o2; n2++)
            55296 == (64512 & (r2 = e2.charCodeAt(n2))) && n2 + 1 < o2 && 56320 == (64512 & (s2 = e2.charCodeAt(n2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (s2 - 56320), n2++), a2 += r2 < 128 ? 1 : r2 < 2048 ? 2 : r2 < 65536 ? 3 : 4;
          for (t2 = new Uint8Array(a2), i2 = 0, n2 = 0; i2 < a2; n2++)
            55296 == (64512 & (r2 = e2.charCodeAt(n2))) && n2 + 1 < o2 && 56320 == (64512 & (s2 = e2.charCodeAt(n2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (s2 - 56320), n2++), r2 < 128 ? t2[i2++] = r2 : (r2 < 2048 ? t2[i2++] = 192 | r2 >>> 6 : (r2 < 65536 ? t2[i2++] = 224 | r2 >>> 12 : (t2[i2++] = 240 | r2 >>> 18, t2[i2++] = 128 | r2 >>> 12 & 63), t2[i2++] = 128 | r2 >>> 6 & 63), t2[i2++] = 128 | 63 & r2);
          return t2;
        }, Fe = function() {
          this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
        };
        const Be = Object.prototype.toString, { Z_NO_FLUSH: Ne, Z_SYNC_FLUSH: We, Z_FULL_FLUSH: Ke, Z_FINISH: He, Z_OK: Qe, Z_STREAM_END: Ze, Z_DEFAULT_COMPRESSION: Je, Z_DEFAULT_STRATEGY: Ve, Z_DEFLATED: Ye } = t;
        function Xe(e2) {
          this.options = function(e3) {
            const t3 = Array.prototype.slice.call(arguments, 1);
            for (; t3.length; ) {
              var r3 = t3.shift();
              if (r3) {
                if ("object" != typeof r3)
                  throw new TypeError(r3 + "must be non-object");
                for (const t4 in r3)
                  s2 = r3, n2 = t4, Object.prototype.hasOwnProperty.call(s2, n2) && (e3[t4] = r3[t4]);
              }
            }
            var s2, n2;
            return e3;
          }({ level: Je, method: Ye, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: Ve }, e2 || {});
          let t2 = this.options, r2 = (t2.raw && 0 < t2.windowBits ? t2.windowBits = -t2.windowBits : t2.gzip && 0 < t2.windowBits && t2.windowBits < 16 && (t2.windowBits += 16), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new Fe(), this.strm.avail_out = 0, Oe(this.strm, t2.level, t2.method, t2.windowBits, t2.memLevel, t2.strategy));
          if (r2 !== Qe)
            throw new Error(B[r2]);
          if (t2.header && Le(this.strm, t2.header), t2.dictionary) {
            let e3;
            if (e3 = "string" == typeof t2.dictionary ? ze(t2.dictionary) : "[object ArrayBuffer]" === Be.call(t2.dictionary) ? new Uint8Array(t2.dictionary) : t2.dictionary, (r2 = Pe(this.strm, e3)) !== Qe)
              throw new Error(B[r2]);
            this._dict_set = true;
          }
        }
        function $e(e2, t2) {
          const r2 = new Xe(t2);
          if (r2.push(e2, true), r2.err)
            throw r2.msg || B[r2.err];
          return r2.result;
        }
        Xe.prototype.push = function(e2, t2) {
          const r2 = this.strm;
          var s2 = this.options.chunkSize;
          let n2, i2;
          if (this.ended)
            return false;
          for (i2 = t2 === ~~t2 ? t2 : true === t2 ? He : Ne, "string" == typeof e2 ? r2.input = ze(e2) : "[object ArrayBuffer]" === Be.call(e2) ? r2.input = new Uint8Array(e2) : r2.input = e2, r2.next_in = 0, r2.avail_in = r2.input.length; ; )
            if (0 === r2.avail_out && (r2.output = new Uint8Array(s2), r2.next_out = 0, r2.avail_out = s2), (i2 === We || i2 === Ke) && r2.avail_out <= 6)
              this.onData(r2.output.subarray(0, r2.next_out)), r2.avail_out = 0;
            else {
              if (Ee(r2, i2) === Ze)
                return 0 < r2.next_out && this.onData(r2.output.subarray(0, r2.next_out)), n2 = Ue(this.strm), this.onEnd(n2), this.ended = true, n2 === Qe;
              if (0 === r2.avail_out)
                this.onData(r2.output);
              else if (0 < i2 && 0 < r2.next_out)
                this.onData(r2.output.subarray(0, r2.next_out)), r2.avail_out = 0;
              else if (0 === r2.avail_in)
                break;
            }
          return true;
        }, Xe.prototype.onData = function(e2) {
          this.chunks.push(e2);
        }, Xe.prototype.onEnd = function(e2) {
          e2 === Qe && (this.result = ((e3) => {
            let t2 = 0;
            for (let r3 = 0, s3 = e3.length; r3 < s3; r3++)
              t2 += e3[r3].length;
            const r2 = new Uint8Array(t2);
            for (let t3 = 0, n2 = 0, i2 = e3.length; t3 < i2; t3++) {
              var s2 = e3[t3];
              r2.set(s2, n2), n2 += s2.length;
            }
            return r2;
          })(this.chunks)), this.chunks = [], this.err = e2, this.msg = this.strm.msg;
        }, r = { Deflate: Xe, deflate: $e, deflateRaw: function(e2, t2) {
          return (t2 = t2 || {}).raw = true, $e(e2, t2);
        }, gzip: function(e2, t2) {
          return (t2 = t2 || {}).gzip = true, $e(e2, t2);
        }, constants: t };
        new Uint16Array([3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]), new Uint8Array([16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]), new Uint16Array([1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]), new Uint8Array([16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64]);
        const { Z_FINISH: et, Z_BLOCK: tt2, Z_TREES: rt, Z_OK: st, Z_STREAM_END: nt, Z_NEED_DICT: it, Z_STREAM_ERROR: ot, Z_DATA_ERROR: at, Z_MEM_ERROR: ut, Z_BUF_ERROR: ct, Z_DEFLATED: lt } = t;
        Object.prototype.toString;
        const {} = t;
        var dt = qe = r.deflate;
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return s;
        }), n.prototype.removeTokens = function(e2, t2) {
          var r2 = this;
          return this.bucketSize ? e2 > this.bucketSize ? (setTimeout(t2.bind(null, "Requested tokens " + e2 + " exceeds bucket size " + this.bucketSize, null), 0), false) : (this.drip(), e2 > this.content ? s2() : this.parentBucket ? this.parentBucket.removeTokens(e2, function(n2, i) {
            return n2 ? t2(n2, null) : e2 > r2.content ? s2() : (r2.content -= e2, void t2(null, Math.min(i, r2.content)));
          }) : (this.content -= e2, setTimeout(t2.bind(null, null, this.content), 0), true)) : (setTimeout(t2.bind(null, null, e2, Number.POSITIVE_INFINITY), 0), true);
          function s2() {
            var s3 = Math.ceil((e2 - r2.content) * (r2.interval / r2.tokensPerInterval));
            return setTimeout(function() {
              r2.removeTokens(e2, t2);
            }, s3), false;
          }
        }, n.prototype.tryRemoveTokens = function(e2) {
          if (this.bucketSize) {
            if (e2 > this.bucketSize)
              return false;
            if (this.drip(), e2 > this.content)
              return false;
            if (this.parentBucket && !this.parentBucket.tryRemoveTokens(e2))
              return false;
            this.content -= e2;
          }
          return true;
        }, n.prototype.drip = function() {
          var e2, t2;
          this.tokensPerInterval ? (t2 = +new Date(), e2 = Math.max(t2 - this.lastDrip, 0), this.lastDrip = t2, t2 = e2 * (this.tokensPerInterval / this.interval), this.content = Math.min(this.content + t2, this.bucketSize)) : this.content = this.bucketSize;
        };
        var s = n;
        function n(e2, t2, r2, s2) {
          if (this.bucketSize = 1, this.tokensPerInterval = 1, this.interval = 1e3, this.parentBucket = null, this.content = 0, this.lastDrip = 0, this.bucketSize = e2, this.tokensPerInterval = t2, "string" == typeof r2)
            switch (r2) {
              case "sec":
              case "second":
                this.interval = 1e3;
                break;
              case "min":
              case "minute":
                this.interval = 6e4;
                break;
              case "hr":
              case "hour":
                this.interval = 36e5;
                break;
              case "day":
                this.interval = 864e5;
                break;
              default:
                throw new Error("Invaid interval " + r2);
            }
          else
            this.interval = r2;
          this.parentBucket = s2, this.content = 0, this.lastDrip = +new Date();
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return n;
        });
        var s = r(3), n = (i.prototype.enqueue = function(e2) {
          this.queue.enqueue(e2), e2 = e2.value.length, this.pendingDataSize += e2, this.size++, s.a.totalAvailCache -= e2, this.enCallback && this.enCallback(this.byteLength, this.size, this.pendingDataSize);
        }, i.prototype.dequeue = function() {
          var e2 = this.queue.dequeue();
          return this.size--, this.deCallback && this.deCallback(), e2;
        }, i.prototype.readReportData = function(e2) {
          return e2 = this.readData(e2), this.reset(), { totalLen: e2.totalLen, reportDataArr: e2.resArr };
        }, i.prototype.readStoreData = function(e2) {
          return e2 = Math.ceil(this.pendingDataSize * e2), e2 = this.readData(e2), this.refresh(e2.totalLen), e2.resArr;
        }, i.prototype.readData = function(e2) {
          for (var t2 = [], r2 = 0; this.queue.size(); ) {
            var s2 = this.dequeue();
            if (s2 && (t2.push(s2), r2 += s2.value.length), e2 < r2)
              break;
          }
          return { totalLen: r2, resArr: t2 };
        }, i.prototype.decodeReportData = function(e2) {
          var t2 = this;
          e2.forEach(function(e3) {
            t2.enqueue(e3);
          });
        }, i.prototype.setListener = function(e2) {
          this.enCallback = e2.enCallback, this.deCallback = e2.deCallback;
        }, i.prototype.getPendingDataInfo = function() {
          return { pendingDataSize: this.pendingDataSize, size: this.size };
        }, i.prototype.refresh = function(e2) {
          this.pendingDataSize -= e2, s.a.totalAvailCache += e2;
        }, i.prototype.reset = function() {
          this.byteLength = 0;
        }, i.prototype.clear = function() {
          this.queue.clear();
        }, i);
        function i() {
          this.queue = new s.d(), this.byteLength = 0, this.size = 0, this.pendingDataSize = 0;
        }
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return u;
        });
        t = r(4);
        var s = r.n(t), n = r(90), i = r(1), o = r(0), a = function() {
          return (a = Object.assign || function(e2) {
            for (var t2, r2 = 1, s2 = arguments.length; r2 < s2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        }, u = (c.prototype.setLogConfig = function(e2) {
          this.lg.setLogLevel(e2.logLevel);
        }, c.prototype.setDB = function(e2) {
          this.lg.setDB(e2);
        }, c.prototype.init = function(e2, t2, r2) {
          this.config.appID = e2, this.config.userID = t2, this.config.deviceID = i.i, t2 = { version: this.config.version + " 8/2 18:19", appID: e2, userID: this.config.userID, userName: r2, origin: i.p ? "" : location.origin, deviceID: this.config.deviceID, device: i.j }, this.lg.setCommonField(/* @__PURE__ */ new Map([["userID", this.config.userID]])), this.lg.setHeaderInfo(JSON.stringify(t2));
        }, c.prototype.renewToken = function(e2) {
          this.config.token = e2;
        }, c.prototype.setUploadURL = function(e2) {
          this.config.uploadURL = e2;
        }, c.prototype.upload = function(e2, t2) {
          return this.config.uploadURL && this.config.token && this.config.userID ? this.isProd ? this.lg.upload(a({}, this.config), e2, t2) : Promise.resolve() : Promise.reject(Object(i.y)(6000121, o.W.UploadLog));
        }, c.prototype.i = function(e2, t2, r2) {
          this.emitLog(e2, t2, "info", r2);
        }, c.prototype.w = function(e2, t2, r2) {
          this.emitLog(e2, t2, "warn", r2);
        }, c.prototype.emitLog = function(e2, t2, r2, s2) {
          var n2;
          this.isProd ? (n2 = s2 && "object" == typeof s2 ? this.stringify(s2) : s2 || "", this.proxyLog ? this.proxyLog(n2, t2) : this.lg.write(e2, r2, t2, n2)) : (e2 = void 0, s2 && "object" == typeof s2 && (s2.cmd && (t2 += s2.cmd), s2.time instanceof Date && (e2 = s2.time, s2.time = Date.now() - e2.getTime(), s2.time || delete s2.time)), e2 = e2 || new Date());
        }, c.prototype.formatTime = function(e2) {
          return e2.toLocaleTimeString("zh-CN") + "." + e2.getMilliseconds();
        }, c.prototype.stringify = function(e2) {
          e2.time instanceof Date && (t2 = e2.time, 0 < (r2 = Date.now() - t2.getTime()) ? e2.time = r2 + "," + this.formatTime(t2) : delete e2.time);
          var t2, r2, n2 = null;
          return JSON.stringify(e2, function(e3, t3) {
            if (t3 instanceof Uint8Array)
              return t3.length ? "b=" + t3.length : "";
            var r3;
            if (t3 instanceof Array && 2 < t3.length && "object" == typeof t3[0])
              return [r3 = t3.length, t3[0], t3[r3 - 1]];
            if (t3 && "object" == typeof t3 && t3.type && t3.message && (n2 = t3), "string" == typeof t3 && t3) {
              if (100 < t3.length)
                return "s=" + t3.length;
              if ("message" == e3 && n2 && n2.type)
                return n2 = null, "s=" + t3.length;
            }
            return t3 instanceof s.a ? t3.toString() : t3;
          }).replace(/\"(\w+)\":/g, "$1:").replace(/(https?:\/\/)|(wss?:\/\/)/g, "");
        }, c);
        function c(e2) {
          this.isProd = true, this.config = { product: "zim", appID: "", userID: "", token: "", uploadURL: "", deviceID: i.i, version: "" }, this.hbLog = [], this.lg = new n.a("zim", i.p), this.config.version = e2;
        }
      }, function(e, t, r) {
        "use strict";
        var s = r(48);
        r.d(t, "a", function() {
          return s.a;
        });
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return s;
        }), n.getInstance = function() {
          return n.instance || (n.instance = new n()).init(), n.instance;
        }, n.prototype.init = function() {
        }, Object.defineProperty(n.prototype, "testEnvironment", { get: function() {
          return this._testEnvironment;
        }, set: function(e2) {
          this._testEnvironment = e2;
        }, enumerable: false, configurable: true }), Object.defineProperty(n.prototype, "ENV", { get: function() {
          return this._ENV;
        }, set: function(e2) {
          this._ENV = e2;
        }, enumerable: false, configurable: true }), n.instance = new n();
        var s = n;
        function n() {
          this._testEnvironment = true, this._ENV = 0;
        }
      }, function(e, t, r) {
        (function(t2, r2, s, n) {
          e.exports = function e2(t3, r3, s2) {
            function n2(o2, a) {
              if (!r3[o2]) {
                if (!t3[o2]) {
                  if (i)
                    return i(o2, true);
                  var u = new Error("Cannot find module '" + o2 + "'");
                  throw u.code = "MODULE_NOT_FOUND", u;
                }
                u = r3[o2] = { exports: {} }, t3[o2][0].call(u.exports, function(e3) {
                  return n2(t3[o2][1][e3] || e3);
                }, u, u.exports, e2, t3, r3, s2);
              }
              return r3[o2].exports;
            }
            for (var i = false, o = 0; o < s2.length; o++)
              n2(s2[o]);
            return n2;
          }({ 1: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./utils"), n2 = e2("./support"), i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            r3.encode = function(e3) {
              for (var t4, r4, n3, o, a, u, c = [], l = 0, d = e3.length, p = "string" !== s2.getTypeOf(e3); l < e3.length; )
                u = d - l, n3 = p ? (t4 = e3[l++], r4 = l < d ? e3[l++] : 0, l < d ? e3[l++] : 0) : (t4 = e3.charCodeAt(l++), r4 = l < d ? e3.charCodeAt(l++) : 0, l < d ? e3.charCodeAt(l++) : 0), o = (3 & t4) << 4 | r4 >> 4, a = 1 < u ? (15 & r4) << 2 | n3 >> 6 : 64, u = 2 < u ? 63 & n3 : 64, c.push(i.charAt(t4 >> 2) + i.charAt(o) + i.charAt(a) + i.charAt(u));
              return c.join("");
            }, r3.decode = function(e3) {
              var t4, r4, s3, o, a, u = 0, c = 0;
              if ("data:" === e3.substr(0, "data:".length))
                throw new Error("Invalid base64 input, it looks like a data url.");
              var l, d = 3 * (e3 = e3.replace(/[^A-Za-z0-9\+\/\=]/g, "")).length / 4;
              if (e3.charAt(e3.length - 1) === i.charAt(64) && d--, e3.charAt(e3.length - 2) === i.charAt(64) && d--, d % 1 != 0)
                throw new Error("Invalid base64 input, bad content length.");
              for (l = new (n2.uint8array ? Uint8Array : Array)(0 | d); u < e3.length; )
                t4 = i.indexOf(e3.charAt(u++)) << 2 | (o = i.indexOf(e3.charAt(u++))) >> 4, r4 = (15 & o) << 4 | (o = i.indexOf(e3.charAt(u++))) >> 2, s3 = (3 & o) << 6 | (a = i.indexOf(e3.charAt(u++))), l[c++] = t4, 64 !== o && (l[c++] = r4), 64 !== a && (l[c++] = s3);
              return l;
            };
          }, { "./support": 30, "./utils": 32 }], 2: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./external"), n2 = e2("./stream/DataWorker"), i = e2("./stream/Crc32Probe"), o = e2("./stream/DataLengthProbe");
            function a(e3, t4, r4, s3, n3) {
              this.compressedSize = e3, this.uncompressedSize = t4, this.crc32 = r4, this.compression = s3, this.compressedContent = n3;
            }
            a.prototype = { getContentWorker: function() {
              var e3 = new n2(s2.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new o("data_length")), t4 = this;
              return e3.on("end", function() {
                if (this.streamInfo.data_length !== t4.uncompressedSize)
                  throw new Error("Bug : uncompressed data size mismatch");
              }), e3;
            }, getCompressedWorker: function() {
              return new n2(s2.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
            } }, a.createWorkerFrom = function(e3, t4, r4) {
              return e3.pipe(new i()).pipe(new o("uncompressedSize")).pipe(t4.compressWorker(r4)).pipe(new o("compressedSize")).withStreamInfo("compression", t4);
            }, t3.exports = a;
          }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./stream/GenericWorker");
            r3.STORE = { magic: "\0\0", compressWorker: function(e3) {
              return new s2("STORE compression");
            }, uncompressWorker: function() {
              return new s2("STORE decompression");
            } }, r3.DEFLATE = e2("./flate");
          }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./utils"), n2 = function() {
              for (var e3 = [], t4 = 0; t4 < 256; t4++) {
                for (var r4 = t4, s3 = 0; s3 < 8; s3++)
                  r4 = 1 & r4 ? 3988292384 ^ r4 >>> 1 : r4 >>> 1;
                e3[t4] = r4;
              }
              return e3;
            }();
            t3.exports = function(e3, t4) {
              return void 0 !== e3 && e3.length ? ("string" !== s2.getTypeOf(e3) ? function(e4, t5, r4) {
                var s3 = n2, i = 0 + r4;
                e4 ^= -1;
                for (var o = 0; o < i; o++)
                  e4 = e4 >>> 8 ^ s3[255 & (e4 ^ t5[o])];
                return -1 ^ e4;
              } : function(e4, t5, r4) {
                var s3 = n2, i = 0 + r4;
                e4 ^= -1;
                for (var o = 0; o < i; o++)
                  e4 = e4 >>> 8 ^ s3[255 & (e4 ^ t5.charCodeAt(o))];
                return -1 ^ e4;
              })(0 | t4, e3, e3.length) : 0;
            };
          }, { "./utils": 32 }], 5: [function(e2, t3, r3) {
            "use strict";
            r3.base64 = false, r3.binary = false, r3.dir = false, r3.createFolders = true, r3.date = null, r3.compression = null, r3.compressionOptions = null, r3.comment = null, r3.unixPermissions = null, r3.dosPermissions = null;
          }, {}], 6: [function(e2, t3, r3) {
            "use strict";
            e2 = "undefined" != typeof Promise ? Promise : e2("lie"), t3.exports = { Promise: e2 };
          }, { lie: 37 }], 7: [function(e2, t3, r3) {
            "use strict";
            var s2 = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array, n2 = e2("pako"), i = e2("./utils"), o = e2("./stream/GenericWorker"), a = s2 ? "uint8array" : "array";
            function u(e3, t4) {
              o.call(this, "FlateWorker/" + e3), this._pako = null, this._pakoAction = e3, this._pakoOptions = t4, this.meta = {};
            }
            r3.magic = "\b\0", i.inherits(u, o), u.prototype.processChunk = function(e3) {
              this.meta = e3.meta, null === this._pako && this._createPako(), this._pako.push(i.transformTo(a, e3.data), false);
            }, u.prototype.flush = function() {
              o.prototype.flush.call(this), null === this._pako && this._createPako(), this._pako.push([], true);
            }, u.prototype.cleanUp = function() {
              o.prototype.cleanUp.call(this), this._pako = null;
            }, u.prototype._createPako = function() {
              this._pako = new n2[this._pakoAction]({ raw: true, level: this._pakoOptions.level || -1 });
              var e3 = this;
              this._pako.onData = function(t4) {
                e3.push({ data: t4, meta: e3.meta });
              };
            }, r3.compressWorker = function(e3) {
              return new u("Deflate", e3);
            }, r3.uncompressWorker = function() {
              return new u("Inflate", {});
            };
          }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(e2, t3, r3) {
            "use strict";
            function s2(e3, t4) {
              for (var r4 = "", s3 = 0; s3 < t4; s3++)
                r4 += String.fromCharCode(255 & e3), e3 >>>= 8;
              return r4;
            }
            function n2(e3, t4, r4, n3, o2, l2) {
              var d = e3.file, p = e3.compression, h = l2 !== a.utf8encode, f = i.transformTo("string", l2(d.name)), m = i.transformTo("string", a.utf8encode(d.name)), g = d.comment, _ = (l2 = i.transformTo("string", l2(g)), i.transformTo("string", a.utf8encode(g))), b = m.length !== d.name.length, v = (g = _.length !== g.length, ""), y = d.dir, M = d.date, k = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
              t4 && !r4 || (k.crc32 = e3.crc32, k.compressedSize = e3.compressedSize, k.uncompressedSize = e3.uncompressedSize), r4 = 0, t4 && (r4 |= 8), h || !b && !g || (r4 |= 2048), e3 = 0, t4 = 0, y && (e3 |= 16), "UNIX" === o2 ? (t4 = 798, e3 |= (65535 & ((h = d.unixPermissions) ? h : y ? 16893 : 33204)) << 16) : (t4 = 20, e3 |= 63 & (d.dosPermissions || 0)), o2 = M.getUTCHours(), o2 = (o2 = ((o2 <<= 6) | M.getUTCMinutes()) << 5) | M.getUTCSeconds() / 2, h = M.getUTCFullYear() - 1980, h = (h = ((h <<= 4) | M.getUTCMonth() + 1) << 5) | M.getUTCDate(), b && (y = s2(1, 1) + s2(u(f), 4) + m, v += "up" + s2(y.length, 2) + y), g && (d = s2(1, 1) + s2(u(l2), 4) + _, v += "uc" + s2(d.length, 2) + d), M = "", M = (M = (M = (M = (M = (M = (M = (M = (M = (M += "\n\0") + s2(r4, 2)) + p.magic) + s2(o2, 2)) + s2(h, 2)) + s2(k.crc32, 4)) + s2(k.compressedSize, 4)) + s2(k.uncompressedSize, 4)) + s2(f.length, 2)) + s2(v.length, 2);
              return { fileRecord: c.LOCAL_FILE_HEADER + M + f + v, dirRecord: c.CENTRAL_FILE_HEADER + s2(t4, 2) + M + s2(l2.length, 2) + "\0\0\0\0" + s2(e3, 4) + s2(n3, 4) + f + v + l2 };
            }
            var i = e2("../utils"), o = e2("../stream/GenericWorker"), a = e2("../utf8"), u = e2("../crc32"), c = e2("../signature");
            function l(e3, t4, r4, s3) {
              o.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = t4, this.zipPlatform = r4, this.encodeFileName = s3, this.streamFiles = e3, this.accumulate = false, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
            }
            i.inherits(l, o), l.prototype.push = function(e3) {
              var t4 = e3.meta.percent || 0, r4 = this.entriesCount, s3 = this._sources.length;
              this.accumulate ? this.contentBuffer.push(e3) : (this.bytesWritten += e3.data.length, o.prototype.push.call(this, { data: e3.data, meta: { currentFile: this.currentFile, percent: r4 ? (t4 + 100 * (r4 - s3 - 1)) / r4 : 100 } }));
            }, l.prototype.openedSource = function(e3) {
              this.currentSourceOffset = this.bytesWritten, this.currentFile = e3.file.name;
              var t4 = this.streamFiles && !e3.file.dir;
              t4 ? (e3 = n2(e3, t4, false, this.currentSourceOffset, this.zipPlatform, this.encodeFileName), this.push({ data: e3.fileRecord, meta: { percent: 0 } })) : this.accumulate = true;
            }, l.prototype.closedSource = function(e3) {
              this.accumulate = false;
              var t4 = this.streamFiles && !e3.file.dir, r4 = n2(e3, t4, true, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
              if (this.dirRecords.push(r4.dirRecord), t4)
                this.push({ data: (t4 = e3, c.DATA_DESCRIPTOR + s2(t4.crc32, 4) + s2(t4.compressedSize, 4) + s2(t4.uncompressedSize, 4)), meta: { percent: 100 } });
              else
                for (this.push({ data: r4.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
                  this.push(this.contentBuffer.shift());
              this.currentFile = null;
            }, l.prototype.flush = function() {
              for (var e3 = this.bytesWritten, t4 = 0; t4 < this.dirRecords.length; t4++)
                this.push({ data: this.dirRecords[t4], meta: { percent: 100 } });
              var r4 = this.bytesWritten - e3;
              r4 = function(e4, t5, r5, n3, o2) {
                return o2 = i.transformTo("string", o2(n3)), c.CENTRAL_DIRECTORY_END + "\0\0\0\0" + s2(e4, 2) + s2(e4, 2) + s2(t5, 4) + s2(r5, 4) + s2(o2.length, 2) + o2;
              }(this.dirRecords.length, r4, e3, this.zipComment, this.encodeFileName);
              this.push({ data: r4, meta: { percent: 100 } });
            }, l.prototype.prepareNextSource = function() {
              this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
            }, l.prototype.registerPrevious = function(e3) {
              this._sources.push(e3);
              var t4 = this;
              return e3.on("data", function(e4) {
                t4.processChunk(e4);
              }), e3.on("end", function() {
                t4.closedSource(t4.previous.streamInfo), t4._sources.length ? t4.prepareNextSource() : t4.end();
              }), e3.on("error", function(e4) {
                t4.error(e4);
              }), this;
            }, l.prototype.resume = function() {
              return !!o.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), true) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), true));
            }, l.prototype.error = function(e3) {
              var t4 = this._sources;
              if (!o.prototype.error.call(this, e3))
                return false;
              for (var r4 = 0; r4 < t4.length; r4++)
                try {
                  t4[r4].error(e3);
                } catch (e4) {
                }
              return true;
            }, l.prototype.lock = function() {
              o.prototype.lock.call(this);
              for (var e3 = this._sources, t4 = 0; t4 < e3.length; t4++)
                e3[t4].lock();
            }, t3.exports = l;
          }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("../compressions"), n2 = e2("./ZipFileWorker");
            r3.generateWorker = function(e3, t4, r4) {
              var i = new n2(t4.streamFiles, r4, t4.platform, t4.encodeFileName), o = 0;
              try {
                e3.forEach(function(e4, r5) {
                  o++;
                  var n3 = function(e5, t5) {
                    if (t5 = s2[e5 = e5 || t5])
                      return t5;
                    throw new Error(e5 + " is not a valid compression method !");
                  }(r5.options.compression, t4.compression), a = r5.options.compressionOptions || t4.compressionOptions || {}, u = r5.dir, c = r5.date;
                  r5._compressWorker(n3, a).withStreamInfo("file", { name: e4, dir: u, date: c, comment: r5.comment || "", unixPermissions: r5.unixPermissions, dosPermissions: r5.dosPermissions }).pipe(i);
                }), i.entriesCount = o;
              } catch (e4) {
                i.error(e4);
              }
              return i;
            };
          }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(e2, t3, r3) {
            "use strict";
            function s2() {
              if (!(this instanceof s2))
                return new s2();
              if (arguments.length)
                throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
              this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
                var e3, t4 = new s2();
                for (e3 in this)
                  "function" != typeof this[e3] && (t4[e3] = this[e3]);
                return t4;
              };
            }
            (s2.prototype = e2("./object")).loadAsync = e2("./load"), s2.support = e2("./support"), s2.defaults = e2("./defaults"), s2.version = "3.10.0", s2.loadAsync = function(e3, t4) {
              return new s2().loadAsync(e3, t4);
            }, s2.external = e2("./external"), t3.exports = s2;
          }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./utils"), n2 = e2("./external"), i = e2("./utf8"), o = e2("./zipEntries"), a = e2("./stream/Crc32Probe"), u = e2("./nodejsUtils");
            t3.exports = function(e3, t4) {
              var r4 = this;
              return t4 = s2.extend(t4 || {}, { base64: false, checkCRC32: false, optimizedBinaryString: false, createFolders: false, decodeFileName: i.utf8decode }), u.isNode && u.isStream(e3) ? n2.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : s2.prepareContent("the loaded zip file", e3, true, t4.optimizedBinaryString, t4.base64).then(function(e4) {
                var r5 = new o(t4);
                return r5.load(e4), r5;
              }).then(function(e4) {
                var r5 = [n2.Promise.resolve(e4)], s3 = e4.files;
                if (t4.checkCRC32)
                  for (var i2 = 0; i2 < s3.length; i2++)
                    r5.push(function(e5) {
                      return new n2.Promise(function(t5, r6) {
                        var s4 = e5.decompressed.getContentWorker().pipe(new a());
                        s4.on("error", function(e6) {
                          r6(e6);
                        }).on("end", function() {
                          s4.streamInfo.crc32 !== e5.decompressed.crc32 ? r6(new Error("Corrupted zip : CRC32 mismatch")) : t5();
                        }).resume();
                      });
                    }(s3[i2]));
                return n2.Promise.all(r5);
              }).then(function(e4) {
                for (var n3 = (e4 = e4.shift()).files, i2 = 0; i2 < n3.length; i2++) {
                  var o2 = n3[i2], a2 = o2.fileNameStr, u2 = s2.resolve(o2.fileNameStr);
                  r4.file(u2, o2.decompressed, { binary: true, optimizedBinaryString: true, date: o2.date, dir: o2.dir, comment: o2.fileCommentStr.length ? o2.fileCommentStr : null, unixPermissions: o2.unixPermissions, dosPermissions: o2.dosPermissions, createFolders: t4.createFolders }), o2.dir || (r4.file(u2).unsafeOriginalName = a2);
                }
                return e4.zipComment.length && (r4.comment = e4.zipComment), r4;
              });
            };
          }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("../utils"), n2 = e2("../stream/GenericWorker");
            function i(e3, t4) {
              n2.call(this, "Nodejs stream input adapter for " + e3), this._upstreamEnded = false, this._bindStream(t4);
            }
            s2.inherits(i, n2), i.prototype._bindStream = function(e3) {
              var t4 = this;
              (this._stream = e3).pause(), e3.on("data", function(e4) {
                t4.push({ data: e4, meta: { percent: 0 } });
              }).on("error", function(e4) {
                t4.isPaused ? this.generatedError = e4 : t4.error(e4);
              }).on("end", function() {
                t4.isPaused ? t4._upstreamEnded = true : t4.end();
              });
            }, i.prototype.pause = function() {
              return !!n2.prototype.pause.call(this) && (this._stream.pause(), true);
            }, i.prototype.resume = function() {
              return !!n2.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), true);
            }, t3.exports = i;
          }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("readable-stream").Readable;
            function n2(e3, t4, r4) {
              s2.call(this, t4), this._helper = e3;
              var n3 = this;
              e3.on("data", function(e4, t5) {
                n3.push(e4) || n3._helper.pause(), r4 && r4(t5);
              }).on("error", function(e4) {
                n3.emit("error", e4);
              }).on("end", function() {
                n3.push(null);
              });
            }
            e2("../utils").inherits(n2, s2), n2.prototype._read = function() {
              this._helper.resume();
            }, t3.exports = n2;
          }, { "../utils": 32, "readable-stream": 16 }], 14: [function(e2, r3, s2) {
            "use strict";
            r3.exports = { isNode: void 0 !== t2, newBufferFrom: function(e3, r4) {
              if (t2.from && t2.from !== Uint8Array.from)
                return t2.from(e3, r4);
              if ("number" == typeof e3)
                throw new Error('The "data" argument must not be a number');
              return new t2(e3, r4);
            }, allocBuffer: function(e3) {
              return t2.alloc ? t2.alloc(e3) : ((e3 = new t2(e3)).fill(0), e3);
            }, isBuffer: function(e3) {
              return t2.isBuffer(e3);
            }, isStream: function(e3) {
              return e3 && "function" == typeof e3.on && "function" == typeof e3.pause && "function" == typeof e3.resume;
            } };
          }, {}], 15: [function(e2, t3, r3) {
            "use strict";
            function s2(e3, t4, r4) {
              var s3 = o.getTypeOf(t4), i2 = o.extend(r4 || {}, c), u2 = (i2.date = i2.date || new Date(), null !== i2.compression && (i2.compression = i2.compression.toUpperCase()), "string" == typeof i2.unixPermissions && (i2.unixPermissions = parseInt(i2.unixPermissions, 8)), i2.unixPermissions && 16384 & i2.unixPermissions && (i2.dir = true), i2.dosPermissions && 16 & i2.dosPermissions && (i2.dir = true), i2.dir && (e3 = m(e3)), i2.createFolders && (u2 = function(e4) {
                var t5 = (e4 = "/" === e4.slice(-1) ? e4.substring(0, e4.length - 1) : e4).lastIndexOf("/");
                return 0 < t5 ? e4.substring(0, t5) : "";
              }(e3)) && n2.call(this, u2, true), "string" === s3 && false === i2.binary && false === i2.base64);
              r4 && void 0 !== r4.binary || (i2.binary = !u2), (t4 instanceof l && 0 === t4.uncompressedSize || i2.dir || !t4 || 0 === t4.length) && (i2.base64 = false, i2.binary = true, t4 = "", i2.compression = "STORE"), s3 = t4 instanceof l || t4 instanceof a ? t4 : h.isNode && h.isStream(t4) ? new f(e3, t4) : o.prepareContent(e3, t4, i2.binary, i2.optimizedBinaryString, i2.base64), r4 = new d(e3, s3, i2);
              this.files[e3] = r4;
            }
            function n2(e3, t4) {
              return t4 = void 0 !== t4 ? t4 : c.createFolders, e3 = m(e3), this.files[e3] || s2.call(this, e3, null, { dir: true, createFolders: t4 }), this.files[e3];
            }
            var i = e2("./utf8"), o = e2("./utils"), a = e2("./stream/GenericWorker"), u = e2("./stream/StreamHelper"), c = e2("./defaults"), l = e2("./compressedObject"), d = e2("./zipObject"), p = e2("./generate"), h = e2("./nodejsUtils"), f = e2("./nodejs/NodejsStreamInputAdapter"), m = function(e3) {
              return "/" !== e3.slice(-1) && (e3 += "/"), e3;
            };
            function g(e3) {
              return "[object RegExp]" === Object.prototype.toString.call(e3);
            }
            t3.exports = { load: function() {
              throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
            }, forEach: function(e3) {
              var t4, r4, s3;
              for (t4 in this.files)
                s3 = this.files[t4], (r4 = t4.slice(this.root.length, t4.length)) && t4.slice(0, this.root.length) === this.root && e3(r4, s3);
            }, filter: function(e3) {
              var t4 = [];
              return this.forEach(function(r4, s3) {
                e3(r4, s3) && t4.push(s3);
              }), t4;
            }, file: function(e3, t4, r4) {
              return 1 !== arguments.length ? (e3 = this.root + e3, s2.call(this, e3, t4, r4), this) : g(e3) ? (n3 = e3, this.filter(function(e4, t5) {
                return !t5.dir && n3.test(e4);
              })) : (t4 = this.files[this.root + e3]) && !t4.dir ? t4 : null;
              var n3;
            }, folder: function(e3) {
              if (!e3)
                return this;
              if (g(e3))
                return this.filter(function(t5, r5) {
                  return r5.dir && e3.test(t5);
                });
              var t4 = this.root + e3, r4 = (t4 = n2.call(this, t4), this.clone());
              return r4.root = t4.name, r4;
            }, remove: function(e3) {
              e3 = this.root + e3;
              var t4 = this.files[e3];
              if (t4 || ("/" !== e3.slice(-1) && (e3 += "/"), t4 = this.files[e3]), t4 && !t4.dir)
                delete this.files[e3];
              else
                for (var r4 = this.filter(function(t5, r5) {
                  return r5.name.slice(0, e3.length) === e3;
                }), s3 = 0; s3 < r4.length; s3++)
                  delete this.files[r4[s3].name];
              return this;
            }, generate: function(e3) {
              throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
            }, generateInternalStream: function(e3) {
              var t4 = {};
              try {
                if ((t4 = o.extend(e3 || {}, { streamFiles: false, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: i.utf8encode })).type = t4.type.toLowerCase(), t4.compression = t4.compression.toUpperCase(), "binarystring" === t4.type && (t4.type = "string"), !t4.type)
                  throw new Error("No output type specified.");
                o.checkSupport(t4.type), "darwin" !== t4.platform && "freebsd" !== t4.platform && "linux" !== t4.platform && "sunos" !== t4.platform || (t4.platform = "UNIX"), "win32" === t4.platform && (t4.platform = "DOS");
                var r4 = t4.comment || this.comment || "", s3 = p.generateWorker(this, t4, r4);
              } catch (e4) {
                (s3 = new a("error")).error(e4);
              }
              return new u(s3, t4.type || "string", t4.mimeType);
            }, generateAsync: function(e3, t4) {
              return this.generateInternalStream(e3).accumulate(t4);
            }, generateNodeStream: function(e3, t4) {
              return (e3 = e3 || {}).type || (e3.type = "nodebuffer"), this.generateInternalStream(e3).toNodejsStream(t4);
            } };
          }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(e2, t3, r3) {
            t3.exports = e2("stream");
          }, { stream: void 0 }], 17: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./DataReader");
            function n2(e3) {
              s2.call(this, e3);
              for (var t4 = 0; t4 < this.data.length; t4++)
                e3[t4] = 255 & e3[t4];
            }
            e2("../utils").inherits(n2, s2), n2.prototype.byteAt = function(e3) {
              return this.data[this.zero + e3];
            }, n2.prototype.lastIndexOfSignature = function(e3) {
              for (var t4 = e3.charCodeAt(0), r4 = e3.charCodeAt(1), s3 = e3.charCodeAt(2), n3 = e3.charCodeAt(3), i = this.length - 4; 0 <= i; --i)
                if (this.data[i] === t4 && this.data[i + 1] === r4 && this.data[i + 2] === s3 && this.data[i + 3] === n3)
                  return i - this.zero;
              return -1;
            }, n2.prototype.readAndCheckSignature = function(e3) {
              var t4 = e3.charCodeAt(0), r4 = e3.charCodeAt(1), s3 = e3.charCodeAt(2), n3 = (e3 = e3.charCodeAt(3), this.readData(4));
              return t4 === n3[0] && r4 === n3[1] && s3 === n3[2] && e3 === n3[3];
            }, n2.prototype.readData = function(e3) {
              if (this.checkOffset(e3), 0 === e3)
                return [];
              var t4 = this.data.slice(this.zero + this.index, this.zero + this.index + e3);
              return this.index += e3, t4;
            }, t3.exports = n2;
          }, { "../utils": 32, "./DataReader": 18 }], 18: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("../utils");
            function n2(e3) {
              this.data = e3, this.length = e3.length, this.index = 0, this.zero = 0;
            }
            n2.prototype = { checkOffset: function(e3) {
              this.checkIndex(this.index + e3);
            }, checkIndex: function(e3) {
              if (this.length < this.zero + e3 || e3 < 0)
                throw new Error("End of data reached (data length = " + this.length + ", asked index = " + e3 + "). Corrupted zip ?");
            }, setIndex: function(e3) {
              this.checkIndex(e3), this.index = e3;
            }, skip: function(e3) {
              this.setIndex(this.index + e3);
            }, byteAt: function(e3) {
            }, readInt: function(e3) {
              var t4, r4 = 0;
              for (this.checkOffset(e3), t4 = this.index + e3 - 1; t4 >= this.index; t4--)
                r4 = (r4 << 8) + this.byteAt(t4);
              return this.index += e3, r4;
            }, readString: function(e3) {
              return s2.transformTo("string", this.readData(e3));
            }, readData: function(e3) {
            }, lastIndexOfSignature: function(e3) {
            }, readAndCheckSignature: function(e3) {
            }, readDate: function() {
              var e3 = this.readInt(4);
              return new Date(Date.UTC(1980 + (e3 >> 25 & 127), (e3 >> 21 & 15) - 1, e3 >> 16 & 31, e3 >> 11 & 31, e3 >> 5 & 63, (31 & e3) << 1));
            } }, t3.exports = n2;
          }, { "../utils": 32 }], 19: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./Uint8ArrayReader");
            function n2(e3) {
              s2.call(this, e3);
            }
            e2("../utils").inherits(n2, s2), n2.prototype.readData = function(e3) {
              this.checkOffset(e3);
              var t4 = this.data.slice(this.zero + this.index, this.zero + this.index + e3);
              return this.index += e3, t4;
            }, t3.exports = n2;
          }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./DataReader");
            function n2(e3) {
              s2.call(this, e3);
            }
            e2("../utils").inherits(n2, s2), n2.prototype.byteAt = function(e3) {
              return this.data.charCodeAt(this.zero + e3);
            }, n2.prototype.lastIndexOfSignature = function(e3) {
              return this.data.lastIndexOf(e3) - this.zero;
            }, n2.prototype.readAndCheckSignature = function(e3) {
              return e3 === this.readData(4);
            }, n2.prototype.readData = function(e3) {
              this.checkOffset(e3);
              var t4 = this.data.slice(this.zero + this.index, this.zero + this.index + e3);
              return this.index += e3, t4;
            }, t3.exports = n2;
          }, { "../utils": 32, "./DataReader": 18 }], 21: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./ArrayReader");
            function n2(e3) {
              s2.call(this, e3);
            }
            e2("../utils").inherits(n2, s2), n2.prototype.readData = function(e3) {
              if (this.checkOffset(e3), 0 === e3)
                return new Uint8Array(0);
              var t4 = this.data.subarray(this.zero + this.index, this.zero + this.index + e3);
              return this.index += e3, t4;
            }, t3.exports = n2;
          }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("../utils"), n2 = e2("../support"), i = e2("./ArrayReader"), o = e2("./StringReader"), a = e2("./NodeBufferReader"), u = e2("./Uint8ArrayReader");
            t3.exports = function(e3) {
              var t4 = s2.getTypeOf(e3);
              return s2.checkSupport(t4), "string" !== t4 || n2.uint8array ? "nodebuffer" === t4 ? new a(e3) : n2.uint8array ? new u(s2.transformTo("uint8array", e3)) : new i(s2.transformTo("array", e3)) : new o(e3);
            };
          }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(e2, t3, r3) {
            "use strict";
            r3.LOCAL_FILE_HEADER = "PK", r3.CENTRAL_FILE_HEADER = "PK", r3.CENTRAL_DIRECTORY_END = "PK", r3.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", r3.ZIP64_CENTRAL_DIRECTORY_END = "PK", r3.DATA_DESCRIPTOR = "PK\x07\b";
          }, {}], 24: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./GenericWorker"), n2 = e2("../utils");
            function i(e3) {
              s2.call(this, "ConvertWorker to " + e3), this.destType = e3;
            }
            n2.inherits(i, s2), i.prototype.processChunk = function(e3) {
              this.push({ data: n2.transformTo(this.destType, e3.data), meta: e3.meta });
            }, t3.exports = i;
          }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./GenericWorker"), n2 = e2("../crc32");
            function i() {
              s2.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
            }
            e2("../utils").inherits(i, s2), i.prototype.processChunk = function(e3) {
              this.streamInfo.crc32 = n2(e3.data, this.streamInfo.crc32 || 0), this.push(e3);
            }, t3.exports = i;
          }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("../utils"), n2 = e2("./GenericWorker");
            function i(e3) {
              n2.call(this, "DataLengthProbe for " + e3), this.propName = e3, this.withStreamInfo(e3, 0);
            }
            s2.inherits(i, n2), i.prototype.processChunk = function(e3) {
              var t4;
              e3 && (t4 = this.streamInfo[this.propName] || 0, this.streamInfo[this.propName] = t4 + e3.data.length), n2.prototype.processChunk.call(this, e3);
            }, t3.exports = i;
          }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("../utils"), n2 = e2("./GenericWorker");
            function i(e3) {
              n2.call(this, "DataWorker");
              var t4 = this;
              this.dataIsReady = false, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = false, e3.then(function(e4) {
                t4.dataIsReady = true, t4.data = e4, t4.max = e4 && e4.length || 0, t4.type = s2.getTypeOf(e4), t4.isPaused || t4._tickAndRepeat();
              }, function(e4) {
                t4.error(e4);
              });
            }
            s2.inherits(i, n2), i.prototype.cleanUp = function() {
              n2.prototype.cleanUp.call(this), this.data = null;
            }, i.prototype.resume = function() {
              return !!n2.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = true, s2.delay(this._tickAndRepeat, [], this)), true);
            }, i.prototype._tickAndRepeat = function() {
              this._tickScheduled = false, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (s2.delay(this._tickAndRepeat, [], this), this._tickScheduled = true));
            }, i.prototype._tick = function() {
              if (this.isPaused || this.isFinished)
                return false;
              var e3 = null, t4 = Math.min(this.max, this.index + 16384);
              if (this.index >= this.max)
                return this.end();
              switch (this.type) {
                case "string":
                  e3 = this.data.substring(this.index, t4);
                  break;
                case "uint8array":
                  e3 = this.data.subarray(this.index, t4);
                  break;
                case "array":
                case "nodebuffer":
                  e3 = this.data.slice(this.index, t4);
              }
              return this.index = t4, this.push({ data: e3, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
            }, t3.exports = i;
          }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(e2, t3, r3) {
            "use strict";
            function s2(e3) {
              this.name = e3 || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = true, this.isFinished = false, this.isLocked = false, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
            }
            s2.prototype = { push: function(e3) {
              this.emit("data", e3);
            }, end: function() {
              if (this.isFinished)
                return false;
              this.flush();
              try {
                this.emit("end"), this.cleanUp(), this.isFinished = true;
              } catch (e3) {
                this.emit("error", e3);
              }
              return true;
            }, error: function(e3) {
              return !this.isFinished && (this.isPaused ? this.generatedError = e3 : (this.isFinished = true, this.emit("error", e3), this.previous && this.previous.error(e3), this.cleanUp()), true);
            }, on: function(e3, t4) {
              return this._listeners[e3].push(t4), this;
            }, cleanUp: function() {
              this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
            }, emit: function(e3, t4) {
              if (this._listeners[e3])
                for (var r4 = 0; r4 < this._listeners[e3].length; r4++)
                  this._listeners[e3][r4].call(this, t4);
            }, pipe: function(e3) {
              return e3.registerPrevious(this);
            }, registerPrevious: function(e3) {
              if (this.isLocked)
                throw new Error("The stream '" + this + "' has already been used.");
              this.streamInfo = e3.streamInfo, this.mergeStreamInfo(), this.previous = e3;
              var t4 = this;
              return e3.on("data", function(e4) {
                t4.processChunk(e4);
              }), e3.on("end", function() {
                t4.end();
              }), e3.on("error", function(e4) {
                t4.error(e4);
              }), this;
            }, pause: function() {
              return !this.isPaused && !this.isFinished && (this.isPaused = true, this.previous && this.previous.pause(), true);
            }, resume: function() {
              if (!this.isPaused || this.isFinished)
                return false;
              var e3 = this.isPaused = false;
              return this.generatedError && (this.error(this.generatedError), e3 = true), this.previous && this.previous.resume(), !e3;
            }, flush: function() {
            }, processChunk: function(e3) {
              this.push(e3);
            }, withStreamInfo: function(e3, t4) {
              return this.extraStreamInfo[e3] = t4, this.mergeStreamInfo(), this;
            }, mergeStreamInfo: function() {
              for (var e3 in this.extraStreamInfo)
                this.extraStreamInfo.hasOwnProperty(e3) && (this.streamInfo[e3] = this.extraStreamInfo[e3]);
            }, lock: function() {
              if (this.isLocked)
                throw new Error("The stream '" + this + "' has already been used.");
              this.isLocked = true, this.previous && this.previous.lock();
            }, toString: function() {
              var e3 = "Worker " + this.name;
              return this.previous ? this.previous + " -> " + e3 : e3;
            } }, t3.exports = s2;
          }, {}], 29: [function(e2, r3, s2) {
            "use strict";
            var n2 = e2("../utils"), i = e2("./ConvertWorker"), o = e2("./GenericWorker"), a = e2("../base64"), u = e2("../support"), c = e2("../external"), l = null;
            if (u.nodestream)
              try {
                l = e2("../nodejs/NodejsStreamOutputAdapter");
              } catch (e3) {
              }
            function d(e3, t3, r4) {
              var s3 = t3;
              switch (t3) {
                case "blob":
                case "arraybuffer":
                  s3 = "uint8array";
                  break;
                case "base64":
                  s3 = "string";
              }
              try {
                this._internalType = s3, this._outputType = t3, this._mimeType = r4, n2.checkSupport(s3), this._worker = e3.pipe(new i(s3)), e3.lock();
              } catch (e4) {
                this._worker = new o("error"), this._worker.error(e4);
              }
            }
            d.prototype = { accumulate: function(e3) {
              return r4 = this, s3 = e3, new c.Promise(function(e4, i2) {
                var o2 = [], u2 = r4._internalType, c2 = r4._outputType, l2 = r4._mimeType;
                r4.on("data", function(e5, t3) {
                  o2.push(e5), s3 && s3(t3);
                }).on("error", function(e5) {
                  o2 = [], i2(e5);
                }).on("end", function() {
                  try {
                    var r5 = function(e5, t3, r6) {
                      switch (e5) {
                        case "blob":
                          return n2.newBlob(n2.transformTo("arraybuffer", t3), r6);
                        case "base64":
                          return a.encode(t3);
                        default:
                          return n2.transformTo(e5, t3);
                      }
                    }(c2, function(e5, r6) {
                      for (var s4 = 0, n3 = null, i3 = 0, o3 = 0; o3 < r6.length; o3++)
                        i3 += r6[o3].length;
                      switch (e5) {
                        case "string":
                          return r6.join("");
                        case "array":
                          return Array.prototype.concat.apply([], r6);
                        case "uint8array":
                          for (n3 = new Uint8Array(i3), o3 = 0; o3 < r6.length; o3++)
                            n3.set(r6[o3], s4), s4 += r6[o3].length;
                          return n3;
                        case "nodebuffer":
                          return t2.concat(r6);
                        default:
                          throw new Error("concat : unsupported type '" + e5 + "'");
                      }
                    }(u2, o2), l2);
                    e4(r5);
                  } catch (r6) {
                    i2(r6);
                  }
                  o2 = [];
                }).resume();
              });
              var r4, s3;
            }, on: function(e3, t3) {
              var r4 = this;
              return "data" === e3 ? this._worker.on(e3, function(e4) {
                t3.call(r4, e4.data, e4.meta);
              }) : this._worker.on(e3, function() {
                n2.delay(t3, arguments, r4);
              }), this;
            }, resume: function() {
              return n2.delay(this._worker.resume, [], this._worker), this;
            }, pause: function() {
              return this._worker.pause(), this;
            }, toNodejsStream: function(e3) {
              if (n2.checkSupport("nodestream"), "nodebuffer" !== this._outputType)
                throw new Error(this._outputType + " is not supported by this method");
              return new l(this, { objectMode: "nodebuffer" !== this._outputType }, e3);
            } }, r3.exports = d;
          }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(e2, r3, s2) {
            "use strict";
            if (s2.base64 = true, s2.array = true, s2.string = true, s2.arraybuffer = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array, s2.nodebuffer = void 0 !== t2, s2.uint8array = "undefined" != typeof Uint8Array, "undefined" == typeof ArrayBuffer)
              s2.blob = false;
            else {
              var n2 = new ArrayBuffer(0);
              try {
                s2.blob = 0 === new Blob([n2], { type: "application/zip" }).size;
              } catch (e3) {
                try {
                  var i = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
                  i.append(n2), s2.blob = 0 === i.getBlob("application/zip").size;
                } catch (e4) {
                  s2.blob = false;
                }
              }
            }
            try {
              s2.nodestream = !!e2("readable-stream").Readable;
            } catch (e3) {
              s2.nodestream = false;
            }
          }, { "readable-stream": 16 }], 31: [function(e2, t3, r3) {
            "use strict";
            for (var s2 = e2("./utils"), n2 = e2("./support"), i = e2("./nodejsUtils"), o = e2("./stream/GenericWorker"), a = new Array(256), u = 0; u < 256; u++)
              a[u] = 252 <= u ? 6 : 248 <= u ? 5 : 240 <= u ? 4 : 224 <= u ? 3 : 192 <= u ? 2 : 1;
            function c() {
              o.call(this, "utf-8 decode"), this.leftOver = null;
            }
            function l() {
              o.call(this, "utf-8 encode");
            }
            a[254] = a[254] = 1, r3.utf8encode = function(e3) {
              if (n2.nodebuffer)
                return i.newBufferFrom(e3, "utf-8");
              for (var t4, r4, s3, o2, a2 = e3, u2 = a2.length, c2 = 0, l2 = 0; l2 < u2; l2++)
                55296 == (64512 & (r4 = a2.charCodeAt(l2))) && l2 + 1 < u2 && 56320 == (64512 & (s3 = a2.charCodeAt(l2 + 1))) && (r4 = 65536 + (r4 - 55296 << 10) + (s3 - 56320), l2++), c2 += r4 < 128 ? 1 : r4 < 2048 ? 2 : r4 < 65536 ? 3 : 4;
              for (t4 = new (n2.uint8array ? Uint8Array : Array)(c2), l2 = o2 = 0; o2 < c2; l2++)
                55296 == (64512 & (r4 = a2.charCodeAt(l2))) && l2 + 1 < u2 && 56320 == (64512 & (s3 = a2.charCodeAt(l2 + 1))) && (r4 = 65536 + (r4 - 55296 << 10) + (s3 - 56320), l2++), r4 < 128 ? t4[o2++] = r4 : (r4 < 2048 ? t4[o2++] = 192 | r4 >>> 6 : (r4 < 65536 ? t4[o2++] = 224 | r4 >>> 12 : (t4[o2++] = 240 | r4 >>> 18, t4[o2++] = 128 | r4 >>> 12 & 63), t4[o2++] = 128 | r4 >>> 6 & 63), t4[o2++] = 128 | 63 & r4);
              return t4;
            }, r3.utf8decode = function(e3) {
              if (n2.nodebuffer)
                return s2.transformTo("nodebuffer", e3).toString("utf-8");
              for (var t4, r4, i2, o2 = e3 = s2.transformTo(n2.uint8array ? "uint8array" : "array", e3), u2 = o2.length, c2 = new Array(2 * u2), l2 = t4 = 0; l2 < u2; )
                if ((r4 = o2[l2++]) < 128)
                  c2[t4++] = r4;
                else if (4 < (i2 = a[r4]))
                  c2[t4++] = 65533, l2 += i2 - 1;
                else {
                  for (r4 &= 2 === i2 ? 31 : 3 === i2 ? 15 : 7; 1 < i2 && l2 < u2; )
                    r4 = r4 << 6 | 63 & o2[l2++], i2--;
                  1 < i2 ? c2[t4++] = 65533 : r4 < 65536 ? c2[t4++] = r4 : (r4 -= 65536, c2[t4++] = 55296 | r4 >> 10 & 1023, c2[t4++] = 56320 | 1023 & r4);
                }
              return c2.length !== t4 && (c2.subarray ? c2 = c2.subarray(0, t4) : c2.length = t4), s2.applyFromCharCode(c2);
            }, s2.inherits(c, o), c.prototype.processChunk = function(e3) {
              var t4 = s2.transformTo(n2.uint8array ? "uint8array" : "array", e3.data), i2 = (this.leftOver && this.leftOver.length && (n2.uint8array ? (i2 = t4, (t4 = new Uint8Array(i2.length + this.leftOver.length)).set(this.leftOver, 0), t4.set(i2, this.leftOver.length)) : t4 = this.leftOver.concat(t4), this.leftOver = null), function(e4, t5) {
                for (var r4 = (t5 = (t5 = t5 || e4.length) > e4.length ? e4.length : t5) - 1; 0 <= r4 && 128 == (192 & e4[r4]); )
                  r4--;
                return !(r4 < 0) && 0 !== r4 && r4 + a[e4[r4]] > t5 ? r4 : t5;
              }(t4)), o2 = t4;
              i2 !== t4.length && (n2.uint8array ? (o2 = t4.subarray(0, i2), this.leftOver = t4.subarray(i2, t4.length)) : (o2 = t4.slice(0, i2), this.leftOver = t4.slice(i2, t4.length))), this.push({ data: r3.utf8decode(o2), meta: e3.meta });
            }, c.prototype.flush = function() {
              this.leftOver && this.leftOver.length && (this.push({ data: r3.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
            }, r3.Utf8DecodeWorker = c, s2.inherits(l, o), l.prototype.processChunk = function(e3) {
              this.push({ data: r3.utf8encode(e3.data), meta: e3.meta });
            }, r3.Utf8EncodeWorker = l;
          }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(e2, t3, s2) {
            "use strict";
            var n2 = e2("./support"), i = e2("./base64"), o = e2("./nodejsUtils"), a = e2("./external");
            function u(e3) {
              return e3;
            }
            function c(e3, t4) {
              for (var r3 = 0; r3 < e3.length; ++r3)
                t4[r3] = 255 & e3.charCodeAt(r3);
              return t4;
            }
            e2("setimmediate"), s2.newBlob = function(e3, t4) {
              s2.checkSupport("blob");
              try {
                return new Blob([e3], { type: t4 });
              } catch (s3) {
                try {
                  var r3 = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
                  return r3.append(e3), r3.getBlob(t4);
                } catch (e4) {
                  throw new Error("Bug : can't construct the Blob.");
                }
              }
            };
            var l = { stringifyByChunk: function(e3, t4, r3) {
              var s3 = [], n3 = 0, i2 = e3.length;
              if (i2 <= r3)
                return String.fromCharCode.apply(null, e3);
              for (; n3 < i2; )
                "array" === t4 || "nodebuffer" === t4 ? s3.push(String.fromCharCode.apply(null, e3.slice(n3, Math.min(n3 + r3, i2)))) : s3.push(String.fromCharCode.apply(null, e3.subarray(n3, Math.min(n3 + r3, i2)))), n3 += r3;
              return s3.join("");
            }, stringifyByChar: function(e3) {
              for (var t4 = "", r3 = 0; r3 < e3.length; r3++)
                t4 += String.fromCharCode(e3[r3]);
              return t4;
            }, applyCanBeUsed: { uint8array: function() {
              try {
                return n2.uint8array && 1 === String.fromCharCode.apply(null, new Uint8Array(1)).length;
              } catch (e3) {
                return false;
              }
            }(), nodebuffer: function() {
              try {
                return n2.nodebuffer && 1 === String.fromCharCode.apply(null, o.allocBuffer(1)).length;
              } catch (e3) {
                return false;
              }
            }() } };
            function d(e3) {
              var t4 = 65536, r3 = s2.getTypeOf(e3), n3 = true;
              if ("uint8array" === r3 ? n3 = l.applyCanBeUsed.uint8array : "nodebuffer" === r3 && (n3 = l.applyCanBeUsed.nodebuffer), n3)
                for (; 1 < t4; )
                  try {
                    return l.stringifyByChunk(e3, r3, t4);
                  } catch (e4) {
                    t4 = Math.floor(t4 / 2);
                  }
              return l.stringifyByChar(e3);
            }
            function p(e3, t4) {
              for (var r3 = 0; r3 < e3.length; r3++)
                t4[r3] = e3[r3];
              return t4;
            }
            s2.applyFromCharCode = d;
            var h = {};
            h.string = { string: u, array: function(e3) {
              return c(e3, new Array(e3.length));
            }, arraybuffer: function(e3) {
              return h.string.uint8array(e3).buffer;
            }, uint8array: function(e3) {
              return c(e3, new Uint8Array(e3.length));
            }, nodebuffer: function(e3) {
              return c(e3, o.allocBuffer(e3.length));
            } }, h.array = { string: d, array: u, arraybuffer: function(e3) {
              return new Uint8Array(e3).buffer;
            }, uint8array: function(e3) {
              return new Uint8Array(e3);
            }, nodebuffer: function(e3) {
              return o.newBufferFrom(e3);
            } }, h.arraybuffer = { string: function(e3) {
              return d(new Uint8Array(e3));
            }, array: function(e3) {
              return p(new Uint8Array(e3), new Array(e3.byteLength));
            }, arraybuffer: u, uint8array: function(e3) {
              return new Uint8Array(e3);
            }, nodebuffer: function(e3) {
              return o.newBufferFrom(new Uint8Array(e3));
            } }, h.uint8array = { string: d, array: function(e3) {
              return p(e3, new Array(e3.length));
            }, arraybuffer: function(e3) {
              return e3.buffer;
            }, uint8array: u, nodebuffer: function(e3) {
              return o.newBufferFrom(e3);
            } }, h.nodebuffer = { string: d, array: function(e3) {
              return p(e3, new Array(e3.length));
            }, arraybuffer: function(e3) {
              return h.nodebuffer.uint8array(e3).buffer;
            }, uint8array: function(e3) {
              return p(e3, new Uint8Array(e3.length));
            }, nodebuffer: u }, s2.transformTo = function(e3, t4) {
              if (t4 = t4 || "", !e3)
                return t4;
              s2.checkSupport(e3);
              var r3 = s2.getTypeOf(t4);
              return h[r3][e3](t4);
            }, s2.resolve = function(e3) {
              for (var t4 = e3.split("/"), r3 = [], s3 = 0; s3 < t4.length; s3++) {
                var n3 = t4[s3];
                "." === n3 || "" === n3 && 0 !== s3 && s3 !== t4.length - 1 || (".." === n3 ? r3.pop() : r3.push(n3));
              }
              return r3.join("/");
            }, s2.getTypeOf = function(e3) {
              return "string" == typeof e3 ? "string" : "[object Array]" === Object.prototype.toString.call(e3) ? "array" : n2.nodebuffer && o.isBuffer(e3) ? "nodebuffer" : n2.uint8array && e3 instanceof Uint8Array ? "uint8array" : n2.arraybuffer && e3 instanceof ArrayBuffer ? "arraybuffer" : void 0;
            }, s2.checkSupport = function(e3) {
              if (!n2[e3.toLowerCase()])
                throw new Error(e3 + " is not supported by this platform");
            }, s2.MAX_VALUE_16BITS = 65535, s2.MAX_VALUE_32BITS = -1, s2.pretty = function(e3) {
              for (var t4, r3 = "", s3 = 0; s3 < (e3 || "").length; s3++)
                r3 += "\\x" + ((t4 = e3.charCodeAt(s3)) < 16 ? "0" : "") + t4.toString(16).toUpperCase();
              return r3;
            }, s2.delay = function(e3, t4, s3) {
              r2(function() {
                e3.apply(s3 || null, t4 || []);
              });
            }, s2.inherits = function(e3, t4) {
              function r3() {
              }
              r3.prototype = t4.prototype, e3.prototype = new r3();
            }, s2.extend = function() {
              for (var e3, t4 = {}, r3 = 0; r3 < arguments.length; r3++)
                for (e3 in arguments[r3])
                  arguments[r3].hasOwnProperty(e3) && void 0 === t4[e3] && (t4[e3] = arguments[r3][e3]);
              return t4;
            }, s2.prepareContent = function(e3, t4, r3, o2, u2) {
              return a.Promise.resolve(t4).then(function(e4) {
                return n2.blob && (e4 instanceof Blob || -1 !== ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(e4))) && "undefined" != typeof FileReader ? new a.Promise(function(t5, r4) {
                  var s3 = new FileReader();
                  s3.onload = function(e5) {
                    t5(e5.target.result);
                  }, s3.onerror = function(e5) {
                    r4(e5.target.error);
                  }, s3.readAsArrayBuffer(e4);
                }) : e4;
              }).then(function(t5) {
                var l2 = s2.getTypeOf(t5);
                return l2 ? ("arraybuffer" === l2 ? t5 = s2.transformTo("uint8array", t5) : "string" === l2 && (u2 ? t5 = i.decode(t5) : r3 && true !== o2 && (t5 = c(l2 = t5, new (n2.uint8array ? Uint8Array : Array)(l2.length)))), t5) : a.Promise.reject(new Error("Can't read the data of '" + e3 + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
              });
            };
          }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./reader/readerFor"), n2 = e2("./utils"), i = e2("./signature"), o = e2("./zipEntry"), a = (e2("./utf8"), e2("./support"));
            function u(e3) {
              this.files = [], this.loadOptions = e3;
            }
            u.prototype = { checkSignature: function(e3) {
              var t4;
              if (!this.reader.readAndCheckSignature(e3))
                throw this.reader.index -= 4, t4 = this.reader.readString(4), new Error("Corrupted zip or bug: unexpected signature (" + n2.pretty(t4) + ", expected " + n2.pretty(e3) + ")");
            }, isSignature: function(e3, t4) {
              var r4 = this.reader.index;
              this.reader.setIndex(e3), e3 = this.reader.readString(4) === t4;
              return this.reader.setIndex(r4), e3;
            }, readBlockEndOfCentral: function() {
              this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
              var e3 = this.reader.readData(this.zipCommentLength), t4 = a.uint8array ? "uint8array" : "array";
              t4 = n2.transformTo(t4, e3);
              this.zipComment = this.loadOptions.decodeFileName(t4);
            }, readBlockZip64EndOfCentral: function() {
              this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
              for (var e3, t4, r4, s3 = this.zip64EndOfCentralSize - 44; 0 < s3; )
                e3 = this.reader.readInt(2), t4 = this.reader.readInt(4), r4 = this.reader.readData(t4), this.zip64ExtensibleData[e3] = { id: e3, length: t4, value: r4 };
            }, readBlockZip64EndOfCentralLocator: function() {
              if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
                throw new Error("Multi-volumes zip are not supported");
            }, readLocalFiles: function() {
              for (var e3, t4 = 0; t4 < this.files.length; t4++)
                e3 = this.files[t4], this.reader.setIndex(e3.localHeaderOffset), this.checkSignature(i.LOCAL_FILE_HEADER), e3.readLocalPart(this.reader), e3.handleUTF8(), e3.processAttributes();
            }, readCentralDir: function() {
              var e3;
              for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(i.CENTRAL_FILE_HEADER); )
                (e3 = new o({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(e3);
              if (this.centralDirRecords !== this.files.length && 0 !== this.centralDirRecords && 0 === this.files.length)
                throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
            }, readEndOfCentral: function() {
              var e3 = this.reader.lastIndexOfSignature(i.CENTRAL_DIRECTORY_END);
              if (e3 < 0)
                throw this.isSignature(0, i.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
              this.reader.setIndex(e3);
              var t4 = e3;
              if (this.checkSignature(i.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === n2.MAX_VALUE_16BITS || this.diskWithCentralDirStart === n2.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === n2.MAX_VALUE_16BITS || this.centralDirRecords === n2.MAX_VALUE_16BITS || this.centralDirSize === n2.MAX_VALUE_32BITS || this.centralDirOffset === n2.MAX_VALUE_32BITS) {
                if (this.zip64 = true, (e3 = this.reader.lastIndexOfSignature(i.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
                  throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
                if (this.reader.setIndex(e3), this.checkSignature(i.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, i.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(i.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
                  throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
                this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(i.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
              }
              if (e3 = this.centralDirOffset + this.centralDirSize, 0 < (e3 = t4 - (e3 = this.zip64 ? e3 + 20 + (12 + this.zip64EndOfCentralSize) : e3)))
                this.isSignature(t4, i.CENTRAL_FILE_HEADER) || (this.reader.zero = e3);
              else if (e3 < 0)
                throw new Error("Corrupted zip: missing " + Math.abs(e3) + " bytes.");
            }, prepareReader: function(e3) {
              this.reader = s2(e3);
            }, load: function(e3) {
              this.prepareReader(e3), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
            } }, t3.exports = u;
          }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utf8": 31, "./utils": 32, "./zipEntry": 34 }], 34: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./reader/readerFor"), n2 = e2("./utils"), i = e2("./compressedObject"), o = e2("./crc32"), a = e2("./utf8"), u = e2("./compressions"), c = e2("./support");
            function l(e3, t4) {
              this.options = e3, this.loadOptions = t4;
            }
            l.prototype = { isEncrypted: function() {
              return 1 == (1 & this.bitFlag);
            }, useUTF8: function() {
              return 2048 == (2048 & this.bitFlag);
            }, readLocalPart: function(e3) {
              var t4;
              if (e3.skip(22), this.fileNameLength = e3.readInt(2), t4 = e3.readInt(2), this.fileName = e3.readData(this.fileNameLength), e3.skip(t4), -1 === this.compressedSize || -1 === this.uncompressedSize)
                throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
              if (null === (t4 = function(e4) {
                for (var t5 in u)
                  if (u.hasOwnProperty(t5) && u[t5].magic === e4)
                    return u[t5];
                return null;
              }(this.compressionMethod)))
                throw new Error("Corrupted zip : compression " + n2.pretty(this.compressionMethod) + " unknown (inner file : " + n2.transformTo("string", this.fileName) + ")");
              this.decompressed = new i(this.compressedSize, this.uncompressedSize, this.crc32, t4, e3.readData(this.compressedSize));
            }, readCentralPart: function(e3) {
              this.versionMadeBy = e3.readInt(2), e3.skip(2), this.bitFlag = e3.readInt(2), this.compressionMethod = e3.readString(2), this.date = e3.readDate(), this.crc32 = e3.readInt(4), this.compressedSize = e3.readInt(4), this.uncompressedSize = e3.readInt(4);
              var t4 = e3.readInt(2);
              if (this.extraFieldsLength = e3.readInt(2), this.fileCommentLength = e3.readInt(2), this.diskNumberStart = e3.readInt(2), this.internalFileAttributes = e3.readInt(2), this.externalFileAttributes = e3.readInt(4), this.localHeaderOffset = e3.readInt(4), this.isEncrypted())
                throw new Error("Encrypted zip are not supported");
              e3.skip(t4), this.readExtraFields(e3), this.parseZIP64ExtraField(e3), this.fileComment = e3.readData(this.fileCommentLength);
            }, processAttributes: function() {
              this.unixPermissions = null, this.dosPermissions = null;
              var e3 = this.versionMadeBy >> 8;
              this.dir = !!(16 & this.externalFileAttributes), 0 == e3 && (this.dosPermissions = 63 & this.externalFileAttributes), 3 == e3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || "/" !== this.fileNameStr.slice(-1) || (this.dir = true);
            }, parseZIP64ExtraField: function(e3) {
              var t4;
              this.extraFields[1] && (t4 = s2(this.extraFields[1].value), this.uncompressedSize === n2.MAX_VALUE_32BITS && (this.uncompressedSize = t4.readInt(8)), this.compressedSize === n2.MAX_VALUE_32BITS && (this.compressedSize = t4.readInt(8)), this.localHeaderOffset === n2.MAX_VALUE_32BITS && (this.localHeaderOffset = t4.readInt(8)), this.diskNumberStart === n2.MAX_VALUE_32BITS && (this.diskNumberStart = t4.readInt(4)));
            }, readExtraFields: function(e3) {
              var t4, r4, s3, n3 = e3.index + this.extraFieldsLength;
              for (this.extraFields || (this.extraFields = {}); e3.index + 4 < n3; )
                t4 = e3.readInt(2), r4 = e3.readInt(2), s3 = e3.readData(r4), this.extraFields[t4] = { id: t4, length: r4, value: s3 };
              e3.setIndex(n3);
            }, handleUTF8: function() {
              var e3, t4 = c.uint8array ? "uint8array" : "array";
              this.useUTF8() ? (this.fileNameStr = a.utf8decode(this.fileName), this.fileCommentStr = a.utf8decode(this.fileComment)) : (null !== (e3 = this.findExtraFieldUnicodePath()) ? this.fileNameStr = e3 : (e3 = n2.transformTo(t4, this.fileName), this.fileNameStr = this.loadOptions.decodeFileName(e3)), null !== (e3 = this.findExtraFieldUnicodeComment()) ? this.fileCommentStr = e3 : (e3 = n2.transformTo(t4, this.fileComment), this.fileCommentStr = this.loadOptions.decodeFileName(e3)));
            }, findExtraFieldUnicodePath: function() {
              var e3, t4 = this.extraFields[28789];
              return t4 && 1 === (e3 = s2(t4.value)).readInt(1) && o(this.fileName) === e3.readInt(4) ? a.utf8decode(e3.readData(t4.length - 5)) : null;
            }, findExtraFieldUnicodeComment: function() {
              var e3, t4 = this.extraFields[25461];
              return t4 && 1 === (e3 = s2(t4.value)).readInt(1) && o(this.fileComment) === e3.readInt(4) ? a.utf8decode(e3.readData(t4.length - 5)) : null;
            } }, t3.exports = l;
          }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(e2, t3, r3) {
            "use strict";
            function s2(e3, t4, r4) {
              this.name = e3, this.dir = r4.dir, this.date = r4.date, this.comment = r4.comment, this.unixPermissions = r4.unixPermissions, this.dosPermissions = r4.dosPermissions, this._data = t4, this._dataBinary = r4.binary, this.options = { compression: r4.compression, compressionOptions: r4.compressionOptions };
            }
            var n2 = e2("./stream/StreamHelper"), i = e2("./stream/DataWorker"), o = e2("./utf8"), a = e2("./compressedObject"), u = e2("./stream/GenericWorker");
            s2.prototype = { internalStream: function(e3) {
              var t4 = null, r4 = "string";
              try {
                if (!e3)
                  throw new Error("No output type specified.");
                var s3 = "string" === (r4 = e3.toLowerCase()) || "text" === r4, i2 = ("binarystring" !== r4 && "text" !== r4 || (r4 = "string"), t4 = this._decompressWorker(), !this._dataBinary);
                i2 && !s3 && (t4 = t4.pipe(new o.Utf8EncodeWorker())), !i2 && s3 && (t4 = t4.pipe(new o.Utf8DecodeWorker()));
              } catch (e4) {
                (t4 = new u("error")).error(e4);
              }
              return new n2(t4, r4, "");
            }, async: function(e3, t4) {
              return this.internalStream(e3).accumulate(t4);
            }, nodeStream: function(e3, t4) {
              return this.internalStream(e3 || "nodebuffer").toNodejsStream(t4);
            }, _compressWorker: function(e3, t4) {
              if (this._data instanceof a && this._data.compression.magic === e3.magic)
                return this._data.getCompressedWorker();
              var r4 = this._decompressWorker();
              return this._dataBinary || (r4 = r4.pipe(new o.Utf8EncodeWorker())), a.createWorkerFrom(r4, e3, t4);
            }, _decompressWorker: function() {
              return this._data instanceof a ? this._data.getContentWorker() : this._data instanceof u ? this._data : new i(this._data);
            } };
            for (var c = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], l = function() {
              throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
            }, d = 0; d < c.length; d++)
              s2.prototype[c[d]] = l;
            t3.exports = s2;
          }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(e2, t3, r3) {
            (function(e3) {
              "use strict";
              var r4, s2, n2, i, o = e3.MutationObserver || e3.WebKitMutationObserver, a = o ? (s2 = 0, o = new o(c), n2 = e3.document.createTextNode(""), o.observe(n2, { characterData: true }), function() {
                n2.data = s2 = ++s2 % 2;
              }) : e3.setImmediate || void 0 === e3.MessageChannel ? "document" in e3 && "onreadystatechange" in e3.document.createElement("script") ? function() {
                var t4 = e3.document.createElement("script");
                t4.onreadystatechange = function() {
                  c(), t4.onreadystatechange = null, t4.parentNode.removeChild(t4), t4 = null;
                }, e3.document.documentElement.appendChild(t4);
              } : function() {
                setTimeout(c, 0);
              } : ((i = new e3.MessageChannel()).port1.onmessage = c, function() {
                i.port2.postMessage(0);
              }), u = [];
              function c() {
                var e4, t4;
                r4 = true;
                for (var s3 = u.length; s3; ) {
                  for (t4 = u, u = [], e4 = -1; ++e4 < s3; )
                    t4[e4]();
                  s3 = u.length;
                }
                r4 = false;
              }
              t3.exports = function(e4) {
                1 !== u.push(e4) || r4 || a();
              };
            }).call(this, void 0 !== s ? s : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
          }, {}], 37: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("immediate");
            function n2() {
            }
            var i = {}, o = ["REJECTED"], a = ["FULFILLED"], u = ["PENDING"];
            function c(e3) {
              if ("function" != typeof e3)
                throw new TypeError("resolver must be a function");
              this.state = u, this.queue = [], this.outcome = void 0, e3 !== n2 && h(this, e3);
            }
            function l(e3, t4, r4) {
              this.promise = e3, "function" == typeof t4 && (this.onFulfilled = t4, this.callFulfilled = this.otherCallFulfilled), "function" == typeof r4 && (this.onRejected = r4, this.callRejected = this.otherCallRejected);
            }
            function d(e3, t4, r4) {
              s2(function() {
                var s3;
                try {
                  s3 = t4(r4);
                } catch (s4) {
                  return i.reject(e3, s4);
                }
                s3 === e3 ? i.reject(e3, new TypeError("Cannot resolve promise with itself")) : i.resolve(e3, s3);
              });
            }
            function p(e3) {
              var t4 = e3 && e3.then;
              if (e3 && ("object" == typeof e3 || "function" == typeof e3) && "function" == typeof t4)
                return function() {
                  t4.apply(e3, arguments);
                };
            }
            function h(e3, t4) {
              var r4 = false;
              function s3(t5) {
                r4 || (r4 = true, i.reject(e3, t5));
              }
              function n3(t5) {
                r4 || (r4 = true, i.resolve(e3, t5));
              }
              var o2 = f(function() {
                t4(n3, s3);
              });
              "error" === o2.status && s3(o2.value);
            }
            function f(e3, t4) {
              var r4 = {};
              try {
                r4.value = e3(t4), r4.status = "success";
              } catch (e4) {
                r4.status = "error", r4.value = e4;
              }
              return r4;
            }
            (t3.exports = c).prototype.finally = function(e3) {
              if ("function" != typeof e3)
                return this;
              var t4 = this.constructor;
              return this.then(function(r4) {
                return t4.resolve(e3()).then(function() {
                  return r4;
                });
              }, function(r4) {
                return t4.resolve(e3()).then(function() {
                  throw r4;
                });
              });
            }, c.prototype.catch = function(e3) {
              return this.then(null, e3);
            }, c.prototype.then = function(e3, t4) {
              if ("function" != typeof e3 && this.state === a || "function" != typeof t4 && this.state === o)
                return this;
              var r4 = new this.constructor(n2);
              return this.state !== u ? d(r4, this.state === a ? e3 : t4, this.outcome) : this.queue.push(new l(r4, e3, t4)), r4;
            }, l.prototype.callFulfilled = function(e3) {
              i.resolve(this.promise, e3);
            }, l.prototype.otherCallFulfilled = function(e3) {
              d(this.promise, this.onFulfilled, e3);
            }, l.prototype.callRejected = function(e3) {
              i.reject(this.promise, e3);
            }, l.prototype.otherCallRejected = function(e3) {
              d(this.promise, this.onRejected, e3);
            }, i.resolve = function(e3, t4) {
              var r4 = f(p, t4);
              if ("error" === r4.status)
                return i.reject(e3, r4.value);
              if (r4 = r4.value)
                h(e3, r4);
              else {
                e3.state = a, e3.outcome = t4;
                for (var s3 = -1, n3 = e3.queue.length; ++s3 < n3; )
                  e3.queue[s3].callFulfilled(t4);
              }
              return e3;
            }, i.reject = function(e3, t4) {
              e3.state = o, e3.outcome = t4;
              for (var r4 = -1, s3 = e3.queue.length; ++r4 < s3; )
                e3.queue[r4].callRejected(t4);
              return e3;
            }, c.resolve = function(e3) {
              return e3 instanceof this ? e3 : i.resolve(new this(n2), e3);
            }, c.reject = function(e3) {
              var t4 = new this(n2);
              return i.reject(t4, e3);
            }, c.all = function(e3) {
              var t4 = this;
              if ("[object Array]" !== Object.prototype.toString.call(e3))
                return this.reject(new TypeError("must be an array"));
              var r4 = e3.length, s3 = false;
              if (!r4)
                return this.resolve([]);
              for (var o2 = new Array(r4), a2 = 0, u2 = -1, c2 = new this(n2); ++u2 < r4; )
                !function(e4, n3) {
                  t4.resolve(e4).then(function(e5) {
                    o2[n3] = e5, ++a2 !== r4 || s3 || (s3 = true, i.resolve(c2, o2));
                  }, function(e5) {
                    s3 || (s3 = true, i.reject(c2, e5));
                  });
                }(e3[u2], u2);
              return c2;
            }, c.race = function(e3) {
              if ("[object Array]" !== Object.prototype.toString.call(e3))
                return this.reject(new TypeError("must be an array"));
              var t4 = e3.length, r4 = false;
              if (!t4)
                return this.resolve([]);
              for (var s3, o2 = -1, a2 = new this(n2); ++o2 < t4; )
                s3 = e3[o2], this.resolve(s3).then(function(e4) {
                  r4 || (r4 = true, i.resolve(a2, e4));
                }, function(e4) {
                  r4 || (r4 = true, i.reject(a2, e4));
                });
              return a2;
            };
          }, { immediate: 36 }], 38: [function(e2, t3, r3) {
            "use strict";
            var s2 = {};
            (0, e2("./lib/utils/common").assign)(s2, e2("./lib/deflate"), e2("./lib/inflate"), e2("./lib/zlib/constants")), t3.exports = s2;
          }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./zlib/deflate"), n2 = e2("./utils/common"), i = e2("./utils/strings"), o = e2("./zlib/messages"), a = e2("./zlib/zstream"), u = Object.prototype.toString;
            function c(e3) {
              if (!(this instanceof c))
                return new c(e3);
              this.options = n2.assign({ level: -1, method: 8, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: 0, to: "" }, e3 || {});
              var t4 = ((e3 = this.options).raw && 0 < e3.windowBits ? e3.windowBits = -e3.windowBits : e3.gzip && 0 < e3.windowBits && e3.windowBits < 16 && (e3.windowBits += 16), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new a(), this.strm.avail_out = 0, s2.deflateInit2(this.strm, e3.level, e3.method, e3.windowBits, e3.memLevel, e3.strategy));
              if (0 !== t4)
                throw new Error(o[t4]);
              if (e3.header && s2.deflateSetHeader(this.strm, e3.header), e3.dictionary) {
                if (e3 = "string" == typeof e3.dictionary ? i.string2buf(e3.dictionary) : "[object ArrayBuffer]" === u.call(e3.dictionary) ? new Uint8Array(e3.dictionary) : e3.dictionary, 0 !== (t4 = s2.deflateSetDictionary(this.strm, e3)))
                  throw new Error(o[t4]);
                this._dict_set = true;
              }
            }
            function l(e3, t4) {
              if ((t4 = new c(t4)).push(e3, true), t4.err)
                throw t4.msg || o[t4.err];
              return t4.result;
            }
            c.prototype.push = function(e3, t4) {
              var r4, o2, a2 = this.strm, c2 = this.options.chunkSize;
              if (this.ended)
                return false;
              o2 = t4 === ~~t4 ? t4 : true === t4 ? 4 : 0, "string" == typeof e3 ? a2.input = i.string2buf(e3) : "[object ArrayBuffer]" === u.call(e3) ? a2.input = new Uint8Array(e3) : a2.input = e3, a2.next_in = 0, a2.avail_in = a2.input.length;
              do {
                if (0 === a2.avail_out && (a2.output = new n2.Buf8(c2), a2.next_out = 0, a2.avail_out = c2), 1 !== (r4 = s2.deflate(a2, o2)) && 0 !== r4)
                  return this.onEnd(r4), !(this.ended = true);
              } while (0 !== a2.avail_out && (0 !== a2.avail_in || 4 !== o2 && 2 !== o2) || ("string" === this.options.to ? this.onData(i.buf2binstring(n2.shrinkBuf(a2.output, a2.next_out))) : this.onData(n2.shrinkBuf(a2.output, a2.next_out))), (0 < a2.avail_in || 0 === a2.avail_out) && 1 !== r4);
              return 4 === o2 ? (r4 = s2.deflateEnd(this.strm), this.onEnd(r4), this.ended = true, 0 === r4) : 2 !== o2 || (this.onEnd(0), !(a2.avail_out = 0));
            }, c.prototype.onData = function(e3) {
              this.chunks.push(e3);
            }, c.prototype.onEnd = function(e3) {
              0 === e3 && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = n2.flattenChunks(this.chunks)), this.chunks = [], this.err = e3, this.msg = this.strm.msg;
            }, r3.Deflate = c, r3.deflate = l, r3.deflateRaw = function(e3, t4) {
              return (t4 = t4 || {}).raw = true, l(e3, t4);
            }, r3.gzip = function(e3, t4) {
              return (t4 = t4 || {}).gzip = true, l(e3, t4);
            };
          }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./zlib/inflate"), n2 = e2("./utils/common"), i = e2("./utils/strings"), o = e2("./zlib/constants"), a = e2("./zlib/messages"), u = e2("./zlib/zstream"), c = e2("./zlib/gzheader"), l = Object.prototype.toString;
            function d(e3) {
              if (!(this instanceof d))
                return new d(e3);
              this.options = n2.assign({ chunkSize: 16384, windowBits: 0, to: "" }, e3 || {});
              var t4 = this.options;
              if ((e3 = (t4.raw && 0 <= t4.windowBits && t4.windowBits < 16 && (t4.windowBits = -t4.windowBits, 0 === t4.windowBits && (t4.windowBits = -15)), !(0 <= t4.windowBits && t4.windowBits < 16) || e3 && e3.windowBits || (t4.windowBits += 32), 15 < t4.windowBits && t4.windowBits < 48 && 0 == (15 & t4.windowBits) && (t4.windowBits |= 15), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new u(), this.strm.avail_out = 0, s2.inflateInit2(this.strm, t4.windowBits))) !== o.Z_OK)
                throw new Error(a[e3]);
              this.header = new c(), s2.inflateGetHeader(this.strm, this.header);
            }
            function p(e3, t4) {
              if ((t4 = new d(t4)).push(e3, true), t4.err)
                throw t4.msg || a[t4.err];
              return t4.result;
            }
            d.prototype.push = function(e3, t4) {
              var r4, a2, u2, c2, d2, p2 = this.strm, h = this.options.chunkSize, f = this.options.dictionary, m = false;
              if (this.ended)
                return false;
              a2 = t4 === ~~t4 ? t4 : true === t4 ? o.Z_FINISH : o.Z_NO_FLUSH, "string" == typeof e3 ? p2.input = i.binstring2buf(e3) : "[object ArrayBuffer]" === l.call(e3) ? p2.input = new Uint8Array(e3) : p2.input = e3, p2.next_in = 0, p2.avail_in = p2.input.length;
              do {
                if (0 === p2.avail_out && (p2.output = new n2.Buf8(h), p2.next_out = 0, p2.avail_out = h), (r4 = s2.inflate(p2, o.Z_NO_FLUSH)) === o.Z_NEED_DICT && f && (d2 = "string" == typeof f ? i.string2buf(f) : "[object ArrayBuffer]" === l.call(f) ? new Uint8Array(f) : f, r4 = s2.inflateSetDictionary(this.strm, d2)), r4 === o.Z_BUF_ERROR && true === m && (r4 = o.Z_OK, m = false), r4 !== o.Z_STREAM_END && r4 !== o.Z_OK)
                  return this.onEnd(r4), !(this.ended = true);
              } while (!p2.next_out || 0 !== p2.avail_out && r4 !== o.Z_STREAM_END && (0 !== p2.avail_in || a2 !== o.Z_FINISH && a2 !== o.Z_SYNC_FLUSH) || ("string" === this.options.to ? (d2 = i.utf8border(p2.output, p2.next_out), u2 = p2.next_out - d2, c2 = i.buf2string(p2.output, d2), p2.next_out = u2, p2.avail_out = h - u2, u2 && n2.arraySet(p2.output, p2.output, d2, u2, 0), this.onData(c2)) : this.onData(n2.shrinkBuf(p2.output, p2.next_out))), 0 === p2.avail_in && 0 === p2.avail_out && (m = true), (0 < p2.avail_in || 0 === p2.avail_out) && r4 !== o.Z_STREAM_END);
              return (a2 = r4 === o.Z_STREAM_END ? o.Z_FINISH : a2) === o.Z_FINISH ? (r4 = s2.inflateEnd(this.strm), this.onEnd(r4), this.ended = true, r4 === o.Z_OK) : a2 !== o.Z_SYNC_FLUSH || (this.onEnd(o.Z_OK), !(p2.avail_out = 0));
            }, d.prototype.onData = function(e3) {
              this.chunks.push(e3);
            }, d.prototype.onEnd = function(e3) {
              e3 === o.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = n2.flattenChunks(this.chunks)), this.chunks = [], this.err = e3, this.msg = this.strm.msg;
            }, r3.Inflate = d, r3.inflate = p, r3.inflateRaw = function(e3, t4) {
              return (t4 = t4 || {}).raw = true, p(e3, t4);
            }, r3.ungzip = p;
          }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(e2, t3, r3) {
            "use strict";
            var s2 = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array, n2 = (r3.assign = function(e3) {
              for (var t4 = Array.prototype.slice.call(arguments, 1); t4.length; ) {
                var r4 = t4.shift();
                if (r4) {
                  if ("object" != typeof r4)
                    throw new TypeError(r4 + "must be non-object");
                  for (var s3 in r4)
                    r4.hasOwnProperty(s3) && (e3[s3] = r4[s3]);
                }
              }
              return e3;
            }, r3.shrinkBuf = function(e3, t4) {
              return e3.length === t4 ? e3 : e3.subarray ? e3.subarray(0, t4) : (e3.length = t4, e3);
            }, { arraySet: function(e3, t4, r4, s3, n3) {
              if (t4.subarray && e3.subarray)
                e3.set(t4.subarray(r4, r4 + s3), n3);
              else
                for (var i2 = 0; i2 < s3; i2++)
                  e3[n3 + i2] = t4[r4 + i2];
            }, flattenChunks: function(e3) {
              for (var t4, r4, s3, n3, i2 = t4 = 0, o = e3.length; i2 < o; i2++)
                t4 += e3[i2].length;
              for (n3 = new Uint8Array(t4), i2 = r4 = 0, o = e3.length; i2 < o; i2++)
                s3 = e3[i2], n3.set(s3, r4), r4 += s3.length;
              return n3;
            } }), i = { arraySet: function(e3, t4, r4, s3, n3) {
              for (var i2 = 0; i2 < s3; i2++)
                e3[n3 + i2] = t4[r4 + i2];
            }, flattenChunks: function(e3) {
              return [].concat.apply([], e3);
            } };
            r3.setTyped = function(e3) {
              e3 ? (r3.Buf8 = Uint8Array, r3.Buf16 = Uint16Array, r3.Buf32 = Int32Array, r3.assign(r3, n2)) : (r3.Buf8 = Array, r3.Buf16 = Array, r3.Buf32 = Array, r3.assign(r3, i));
            }, r3.setTyped(s2);
          }, {}], 42: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("./common"), n2 = true, i = true;
            try {
              String.fromCharCode.apply(null, [0]);
            } catch (e3) {
              n2 = false;
            }
            try {
              String.fromCharCode.apply(null, new Uint8Array(1));
            } catch (e3) {
              i = false;
            }
            for (var o = new s2.Buf8(256), a = 0; a < 256; a++)
              o[a] = 252 <= a ? 6 : 248 <= a ? 5 : 240 <= a ? 4 : 224 <= a ? 3 : 192 <= a ? 2 : 1;
            function u(e3, t4) {
              if (t4 < 65537 && (e3.subarray && i || !e3.subarray && n2))
                return String.fromCharCode.apply(null, s2.shrinkBuf(e3, t4));
              for (var r4 = "", o2 = 0; o2 < t4; o2++)
                r4 += String.fromCharCode(e3[o2]);
              return r4;
            }
            o[254] = o[254] = 1, r3.string2buf = function(e3) {
              for (var t4, r4, n3, i2, o2 = e3.length, a2 = 0, u2 = 0; u2 < o2; u2++)
                55296 == (64512 & (r4 = e3.charCodeAt(u2))) && u2 + 1 < o2 && 56320 == (64512 & (n3 = e3.charCodeAt(u2 + 1))) && (r4 = 65536 + (r4 - 55296 << 10) + (n3 - 56320), u2++), a2 += r4 < 128 ? 1 : r4 < 2048 ? 2 : r4 < 65536 ? 3 : 4;
              for (t4 = new s2.Buf8(a2), u2 = i2 = 0; i2 < a2; u2++)
                55296 == (64512 & (r4 = e3.charCodeAt(u2))) && u2 + 1 < o2 && 56320 == (64512 & (n3 = e3.charCodeAt(u2 + 1))) && (r4 = 65536 + (r4 - 55296 << 10) + (n3 - 56320), u2++), r4 < 128 ? t4[i2++] = r4 : (r4 < 2048 ? t4[i2++] = 192 | r4 >>> 6 : (r4 < 65536 ? t4[i2++] = 224 | r4 >>> 12 : (t4[i2++] = 240 | r4 >>> 18, t4[i2++] = 128 | r4 >>> 12 & 63), t4[i2++] = 128 | r4 >>> 6 & 63), t4[i2++] = 128 | 63 & r4);
              return t4;
            }, r3.buf2binstring = function(e3) {
              return u(e3, e3.length);
            }, r3.binstring2buf = function(e3) {
              for (var t4 = new s2.Buf8(e3.length), r4 = 0, n3 = t4.length; r4 < n3; r4++)
                t4[r4] = e3.charCodeAt(r4);
              return t4;
            }, r3.buf2string = function(e3, t4) {
              for (var r4, s3, n3, i2 = t4 || e3.length, a2 = new Array(2 * i2), c = r4 = 0; c < i2; )
                if ((s3 = e3[c++]) < 128)
                  a2[r4++] = s3;
                else if (4 < (n3 = o[s3]))
                  a2[r4++] = 65533, c += n3 - 1;
                else {
                  for (s3 &= 2 === n3 ? 31 : 3 === n3 ? 15 : 7; 1 < n3 && c < i2; )
                    s3 = s3 << 6 | 63 & e3[c++], n3--;
                  1 < n3 ? a2[r4++] = 65533 : s3 < 65536 ? a2[r4++] = s3 : (s3 -= 65536, a2[r4++] = 55296 | s3 >> 10 & 1023, a2[r4++] = 56320 | 1023 & s3);
                }
              return u(a2, r4);
            }, r3.utf8border = function(e3, t4) {
              for (var r4 = (t4 = (t4 = t4 || e3.length) > e3.length ? e3.length : t4) - 1; 0 <= r4 && 128 == (192 & e3[r4]); )
                r4--;
              return !(r4 < 0) && 0 !== r4 && r4 + o[e3[r4]] > t4 ? r4 : t4;
            };
          }, { "./common": 41 }], 43: [function(e2, t3, r3) {
            "use strict";
            t3.exports = function(e3, t4, r4, s2) {
              for (var n2 = 65535 & e3 | 0, i = e3 >>> 16 & 65535 | 0, o = 0; 0 !== r4; ) {
                for (r4 -= o = 2e3 < r4 ? 2e3 : r4; i = i + (n2 = n2 + t4[s2++] | 0) | 0, --o; )
                  ;
                n2 %= 65521, i %= 65521;
              }
              return n2 | i << 16 | 0;
            };
          }, {}], 44: [function(e2, t3, r3) {
            "use strict";
            t3.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
          }, {}], 45: [function(e2, t3, r3) {
            "use strict";
            var s2 = function() {
              for (var e3 = [], t4 = 0; t4 < 256; t4++) {
                for (var r4 = t4, s3 = 0; s3 < 8; s3++)
                  r4 = 1 & r4 ? 3988292384 ^ r4 >>> 1 : r4 >>> 1;
                e3[t4] = r4;
              }
              return e3;
            }();
            t3.exports = function(e3, t4, r4, n2) {
              var i = s2, o = n2 + r4;
              e3 ^= -1;
              for (var a = n2; a < o; a++)
                e3 = e3 >>> 8 ^ i[255 & (e3 ^ t4[a])];
              return -1 ^ e3;
            };
          }, {}], 46: [function(e2, t3, r3) {
            "use strict";
            var s2, n2 = e2("../utils/common"), i = e2("./trees"), o = e2("./adler32"), a = e2("./crc32"), u = e2("./messages"), c = -2, l = 258, d = 262, p = 113;
            function h(e3, t4) {
              return e3.msg = u[t4], t4;
            }
            function f(e3) {
              return (e3 << 1) - (4 < e3 ? 9 : 0);
            }
            function m(e3) {
              for (var t4 = e3.length; 0 <= --t4; )
                e3[t4] = 0;
            }
            function g(e3) {
              var t4 = e3.state, r4 = t4.pending;
              0 !== (r4 = r4 > e3.avail_out ? e3.avail_out : r4) && (n2.arraySet(e3.output, t4.pending_buf, t4.pending_out, r4, e3.next_out), e3.next_out += r4, t4.pending_out += r4, e3.total_out += r4, e3.avail_out -= r4, t4.pending -= r4, 0 === t4.pending && (t4.pending_out = 0));
            }
            function _(e3, t4) {
              i._tr_flush_block(e3, 0 <= e3.block_start ? e3.block_start : -1, e3.strstart - e3.block_start, t4), e3.block_start = e3.strstart, g(e3.strm);
            }
            function b(e3, t4) {
              e3.pending_buf[e3.pending++] = t4;
            }
            function v(e3, t4) {
              e3.pending_buf[e3.pending++] = t4 >>> 8 & 255, e3.pending_buf[e3.pending++] = 255 & t4;
            }
            function y(e3, t4) {
              var r4, s3, n3 = e3.max_chain_length, i2 = e3.strstart, o2 = e3.prev_length, a2 = e3.nice_match, u2 = e3.strstart > e3.w_size - d ? e3.strstart - (e3.w_size - d) : 0, c2 = e3.window, p2 = e3.w_mask, h2 = e3.prev, f2 = e3.strstart + l, m2 = c2[i2 + o2 - 1], g2 = c2[i2 + o2];
              e3.prev_length >= e3.good_match && (n3 >>= 2), a2 > e3.lookahead && (a2 = e3.lookahead);
              do {
                if (c2[(r4 = t4) + o2] === g2 && c2[r4 + o2 - 1] === m2 && c2[r4] === c2[i2] && c2[++r4] === c2[i2 + 1]) {
                  for (i2 += 2, r4++; c2[++i2] === c2[++r4] && c2[++i2] === c2[++r4] && c2[++i2] === c2[++r4] && c2[++i2] === c2[++r4] && c2[++i2] === c2[++r4] && c2[++i2] === c2[++r4] && c2[++i2] === c2[++r4] && c2[++i2] === c2[++r4] && i2 < f2; )
                    ;
                  if (s3 = l - (f2 - i2), i2 = f2 - l, o2 < s3) {
                    if (e3.match_start = t4, a2 <= (o2 = s3))
                      break;
                    m2 = c2[i2 + o2 - 1], g2 = c2[i2 + o2];
                  }
                }
              } while ((t4 = h2[t4 & p2]) > u2 && 0 != --n3);
              return o2 <= e3.lookahead ? o2 : e3.lookahead;
            }
            function M(e3) {
              var t4, r4, s3, i2, u2, c2, l2, p2, h2, f2 = e3.w_size;
              do {
                if (p2 = e3.window_size - e3.lookahead - e3.strstart, e3.strstart >= f2 + (f2 - d)) {
                  for (n2.arraySet(e3.window, e3.window, f2, f2, 0), e3.match_start -= f2, e3.strstart -= f2, e3.block_start -= f2, t4 = r4 = e3.hash_size; s3 = e3.head[--t4], e3.head[t4] = f2 <= s3 ? s3 - f2 : 0, --r4; )
                    ;
                  for (t4 = r4 = f2; s3 = e3.prev[--t4], e3.prev[t4] = f2 <= s3 ? s3 - f2 : 0, --r4; )
                    ;
                  p2 += f2;
                }
                if (0 === e3.strm.avail_in)
                  break;
                if (u2 = e3.strm, c2 = e3.window, l2 = e3.strstart + e3.lookahead, h2 = void 0, r4 = 0 === (h2 = (p2 = p2) < (h2 = u2.avail_in) ? p2 : h2) ? 0 : (u2.avail_in -= h2, n2.arraySet(c2, u2.input, u2.next_in, h2, l2), 1 === u2.state.wrap ? u2.adler = o(u2.adler, c2, h2, l2) : 2 === u2.state.wrap && (u2.adler = a(u2.adler, c2, h2, l2)), u2.next_in += h2, u2.total_in += h2, h2), e3.lookahead += r4, e3.lookahead + e3.insert >= 3)
                  for (i2 = e3.strstart - e3.insert, e3.ins_h = e3.window[i2], e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[i2 + 1]) & e3.hash_mask; e3.insert && (e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[i2 + 3 - 1]) & e3.hash_mask, e3.prev[i2 & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = i2, i2++, e3.insert--, !(e3.lookahead + e3.insert < 3)); )
                    ;
              } while (e3.lookahead < d && 0 !== e3.strm.avail_in);
            }
            function k(e3, t4) {
              for (var r4, s3; ; ) {
                if (e3.lookahead < d) {
                  if (M(e3), e3.lookahead < d && 0 === t4)
                    return 1;
                  if (0 === e3.lookahead)
                    break;
                }
                if (r4 = 0, e3.lookahead >= 3 && (e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + 3 - 1]) & e3.hash_mask, r4 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = e3.strstart), 0 !== r4 && e3.strstart - r4 <= e3.w_size - d && (e3.match_length = y(e3, r4)), e3.match_length >= 3)
                  if (s3 = i._tr_tally(e3, e3.strstart - e3.match_start, e3.match_length - 3), e3.lookahead -= e3.match_length, e3.match_length <= e3.max_lazy_match && e3.lookahead >= 3) {
                    for (e3.match_length--; e3.strstart++, e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + 3 - 1]) & e3.hash_mask, r4 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = e3.strstart, 0 != --e3.match_length; )
                      ;
                    e3.strstart++;
                  } else
                    e3.strstart += e3.match_length, e3.match_length = 0, e3.ins_h = e3.window[e3.strstart], e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + 1]) & e3.hash_mask;
                else
                  s3 = i._tr_tally(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++;
                if (s3 && (_(e3, false), 0 === e3.strm.avail_out))
                  return 1;
              }
              return e3.insert = e3.strstart < 2 ? e3.strstart : 2, 4 === t4 ? (_(e3, true), 0 === e3.strm.avail_out ? 3 : 4) : e3.last_lit && (_(e3, false), 0 === e3.strm.avail_out) ? 1 : 2;
            }
            function I(e3, t4) {
              for (var r4, s3, n3; ; ) {
                if (e3.lookahead < d) {
                  if (M(e3), e3.lookahead < d && 0 === t4)
                    return 1;
                  if (0 === e3.lookahead)
                    break;
                }
                if (r4 = 0, e3.lookahead >= 3 && (e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + 3 - 1]) & e3.hash_mask, r4 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = e3.strstart), e3.prev_length = e3.match_length, e3.prev_match = e3.match_start, e3.match_length = 2, 0 !== r4 && e3.prev_length < e3.max_lazy_match && e3.strstart - r4 <= e3.w_size - d && (e3.match_length = y(e3, r4), e3.match_length <= 5 && (1 === e3.strategy || 3 === e3.match_length && 4096 < e3.strstart - e3.match_start) && (e3.match_length = 2)), e3.prev_length >= 3 && e3.match_length <= e3.prev_length) {
                  for (n3 = e3.strstart + e3.lookahead - 3, s3 = i._tr_tally(e3, e3.strstart - 1 - e3.prev_match, e3.prev_length - 3), e3.lookahead -= e3.prev_length - 1, e3.prev_length -= 2; ++e3.strstart <= n3 && (e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + 3 - 1]) & e3.hash_mask, r4 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h], e3.head[e3.ins_h] = e3.strstart), 0 != --e3.prev_length; )
                    ;
                  if (e3.match_available = 0, e3.match_length = 2, e3.strstart++, s3 && (_(e3, false), 0 === e3.strm.avail_out))
                    return 1;
                } else if (e3.match_available) {
                  if ((s3 = i._tr_tally(e3, 0, e3.window[e3.strstart - 1])) && _(e3, false), e3.strstart++, e3.lookahead--, 0 === e3.strm.avail_out)
                    return 1;
                } else
                  e3.match_available = 1, e3.strstart++, e3.lookahead--;
              }
              return e3.match_available && (s3 = i._tr_tally(e3, 0, e3.window[e3.strstart - 1]), e3.match_available = 0), e3.insert = e3.strstart < 2 ? e3.strstart : 2, 4 === t4 ? (_(e3, true), 0 === e3.strm.avail_out ? 3 : 4) : e3.last_lit && (_(e3, false), 0 === e3.strm.avail_out) ? 1 : 2;
            }
            function S(e3, t4, r4, s3, n3) {
              this.good_length = e3, this.max_lazy = t4, this.nice_length = r4, this.max_chain = s3, this.func = n3;
            }
            function D() {
              this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = 8, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new n2.Buf16(1146), this.dyn_dtree = new n2.Buf16(122), this.bl_tree = new n2.Buf16(78), m(this.dyn_ltree), m(this.dyn_dtree), m(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new n2.Buf16(16), this.heap = new n2.Buf16(573), m(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new n2.Buf16(573), m(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
            }
            function q(e3) {
              var t4;
              return e3 && e3.state ? (e3.total_in = e3.total_out = 0, e3.data_type = 2, (t4 = e3.state).pending = 0, t4.pending_out = 0, t4.wrap < 0 && (t4.wrap = -t4.wrap), t4.status = t4.wrap ? 42 : p, e3.adler = 2 === t4.wrap ? 0 : 1, t4.last_flush = 0, i._tr_init(t4), 0) : h(e3, c);
            }
            function C(e3) {
              var t4 = q(e3);
              return 0 === t4 && ((e3 = e3.state).window_size = 2 * e3.w_size, m(e3.head), e3.max_lazy_match = s2[e3.level].max_lazy, e3.good_match = s2[e3.level].good_length, e3.nice_match = s2[e3.level].nice_length, e3.max_chain_length = s2[e3.level].max_chain, e3.strstart = 0, e3.block_start = 0, e3.lookahead = 0, e3.insert = 0, e3.match_length = e3.prev_length = 2, e3.match_available = 0, e3.ins_h = 0), t4;
            }
            function w(e3, t4, r4, s3, i2, o2) {
              if (!e3)
                return c;
              var a2 = 1;
              if (-1 === t4 && (t4 = 6), s3 < 0 ? (a2 = 0, s3 = -s3) : 15 < s3 && (a2 = 2, s3 -= 16), i2 < 1 || 9 < i2 || 8 !== r4 || s3 < 8 || 15 < s3 || t4 < 0 || 9 < t4 || o2 < 0 || 4 < o2)
                return h(e3, c);
              8 === s3 && (s3 = 9);
              var u2 = new D();
              return (e3.state = u2).strm = e3, u2.wrap = a2, u2.gzhead = null, u2.w_bits = s3, u2.w_size = 1 << u2.w_bits, u2.w_mask = u2.w_size - 1, u2.hash_bits = i2 + 7, u2.hash_size = 1 << u2.hash_bits, u2.hash_mask = u2.hash_size - 1, u2.hash_shift = ~~((u2.hash_bits + 3 - 1) / 3), u2.window = new n2.Buf8(2 * u2.w_size), u2.head = new n2.Buf16(u2.hash_size), u2.prev = new n2.Buf16(u2.w_size), u2.lit_bufsize = 1 << i2 + 6, u2.pending_buf_size = 4 * u2.lit_bufsize, u2.pending_buf = new n2.Buf8(u2.pending_buf_size), u2.d_buf = +u2.lit_bufsize, u2.l_buf = 3 * u2.lit_bufsize, u2.level = t4, u2.strategy = o2, u2.method = r4, C(e3);
            }
            s2 = [new S(0, 0, 0, 0, function(e3, t4) {
              var r4 = 65535;
              for (r4 > e3.pending_buf_size - 5 && (r4 = e3.pending_buf_size - 5); ; ) {
                if (e3.lookahead <= 1) {
                  if (M(e3), 0 === e3.lookahead && 0 === t4)
                    return 1;
                  if (0 === e3.lookahead)
                    break;
                }
                e3.strstart += e3.lookahead, e3.lookahead = 0;
                var s3 = e3.block_start + r4;
                if ((0 === e3.strstart || e3.strstart >= s3) && (e3.lookahead = e3.strstart - s3, e3.strstart = s3, _(e3, false), 0 === e3.strm.avail_out))
                  return 1;
                if (e3.strstart - e3.block_start >= e3.w_size - d && (_(e3, false), 0 === e3.strm.avail_out))
                  return 1;
              }
              return e3.insert = 0, 4 === t4 ? (_(e3, true), 0 === e3.strm.avail_out ? 3 : 4) : (e3.strstart > e3.block_start && (_(e3, false), e3.strm.avail_out), 1);
            }), new S(4, 4, 8, 4, k), new S(4, 5, 16, 8, k), new S(4, 6, 32, 32, k), new S(4, 4, 16, 16, I), new S(8, 16, 32, 32, I), new S(8, 16, 128, 128, I), new S(8, 32, 128, 256, I), new S(32, 128, 258, 1024, I), new S(32, 258, 258, 4096, I)], r3.deflateInit = function(e3, t4) {
              return w(e3, t4, 8, 15, 8, 0);
            }, r3.deflateInit2 = w, r3.deflateReset = C, r3.deflateResetKeep = q, r3.deflateSetHeader = function(e3, t4) {
              return e3 && e3.state && 2 === e3.state.wrap ? (e3.state.gzhead = t4, 0) : c;
            }, r3.deflate = function(e3, t4) {
              var r4, n3, o2, u2;
              if (!e3 || !e3.state || 5 < t4 || t4 < 0)
                return e3 ? h(e3, c) : c;
              if (n3 = e3.state, !e3.output || !e3.input && 0 !== e3.avail_in || 666 === n3.status && 4 !== t4)
                return h(e3, 0 === e3.avail_out ? -5 : c);
              if (n3.strm = e3, r4 = n3.last_flush, n3.last_flush = t4, 42 === n3.status && (2 === n3.wrap ? (e3.adler = 0, b(n3, 31), b(n3, 139), b(n3, 8), n3.gzhead ? (b(n3, (n3.gzhead.text ? 1 : 0) + (n3.gzhead.hcrc ? 2 : 0) + (n3.gzhead.extra ? 4 : 0) + (n3.gzhead.name ? 8 : 0) + (n3.gzhead.comment ? 16 : 0)), b(n3, 255 & n3.gzhead.time), b(n3, n3.gzhead.time >> 8 & 255), b(n3, n3.gzhead.time >> 16 & 255), b(n3, n3.gzhead.time >> 24 & 255), b(n3, 9 === n3.level ? 2 : 2 <= n3.strategy || n3.level < 2 ? 4 : 0), b(n3, 255 & n3.gzhead.os), n3.gzhead.extra && n3.gzhead.extra.length && (b(n3, 255 & n3.gzhead.extra.length), b(n3, n3.gzhead.extra.length >> 8 & 255)), n3.gzhead.hcrc && (e3.adler = a(e3.adler, n3.pending_buf, n3.pending, 0)), n3.gzindex = 0, n3.status = 69) : (b(n3, 0), b(n3, 0), b(n3, 0), b(n3, 0), b(n3, 0), b(n3, 9 === n3.level ? 2 : 2 <= n3.strategy || n3.level < 2 ? 4 : 0), b(n3, 3), n3.status = p)) : (d2 = 8 + (n3.w_bits - 8 << 4) << 8, d2 |= (2 <= n3.strategy || n3.level < 2 ? 0 : n3.level < 6 ? 1 : 6 === n3.level ? 2 : 3) << 6, 0 !== n3.strstart && (d2 |= 32), d2 += 31 - d2 % 31, n3.status = p, v(n3, d2), 0 !== n3.strstart && (v(n3, e3.adler >>> 16), v(n3, 65535 & e3.adler)), e3.adler = 1)), 69 === n3.status)
                if (n3.gzhead.extra) {
                  for (o2 = n3.pending; n3.gzindex < (65535 & n3.gzhead.extra.length) && (n3.pending !== n3.pending_buf_size || (n3.gzhead.hcrc && n3.pending > o2 && (e3.adler = a(e3.adler, n3.pending_buf, n3.pending - o2, o2)), g(e3), o2 = n3.pending, n3.pending !== n3.pending_buf_size)); )
                    b(n3, 255 & n3.gzhead.extra[n3.gzindex]), n3.gzindex++;
                  n3.gzhead.hcrc && n3.pending > o2 && (e3.adler = a(e3.adler, n3.pending_buf, n3.pending - o2, o2)), n3.gzindex === n3.gzhead.extra.length && (n3.gzindex = 0, n3.status = 73);
                } else
                  n3.status = 73;
              if (73 === n3.status)
                if (n3.gzhead.name) {
                  o2 = n3.pending;
                  do {
                    if (n3.pending === n3.pending_buf_size && (n3.gzhead.hcrc && n3.pending > o2 && (e3.adler = a(e3.adler, n3.pending_buf, n3.pending - o2, o2)), g(e3), o2 = n3.pending, n3.pending === n3.pending_buf_size)) {
                      u2 = 1;
                      break;
                    }
                  } while (u2 = n3.gzindex < n3.gzhead.name.length ? 255 & n3.gzhead.name.charCodeAt(n3.gzindex++) : 0, b(n3, u2), 0 !== u2);
                  n3.gzhead.hcrc && n3.pending > o2 && (e3.adler = a(e3.adler, n3.pending_buf, n3.pending - o2, o2)), 0 === u2 && (n3.gzindex = 0, n3.status = 91);
                } else
                  n3.status = 91;
              if (91 === n3.status)
                if (n3.gzhead.comment) {
                  o2 = n3.pending;
                  do {
                    if (n3.pending === n3.pending_buf_size && (n3.gzhead.hcrc && n3.pending > o2 && (e3.adler = a(e3.adler, n3.pending_buf, n3.pending - o2, o2)), g(e3), o2 = n3.pending, n3.pending === n3.pending_buf_size)) {
                      u2 = 1;
                      break;
                    }
                  } while (u2 = n3.gzindex < n3.gzhead.comment.length ? 255 & n3.gzhead.comment.charCodeAt(n3.gzindex++) : 0, b(n3, u2), 0 !== u2);
                  n3.gzhead.hcrc && n3.pending > o2 && (e3.adler = a(e3.adler, n3.pending_buf, n3.pending - o2, o2)), 0 === u2 && (n3.status = 103);
                } else
                  n3.status = 103;
              if (103 === n3.status && (n3.gzhead.hcrc ? (n3.pending + 2 > n3.pending_buf_size && g(e3), n3.pending + 2 <= n3.pending_buf_size && (b(n3, 255 & e3.adler), b(n3, e3.adler >> 8 & 255), e3.adler = 0, n3.status = p)) : n3.status = p), 0 !== n3.pending) {
                if (g(e3), 0 === e3.avail_out)
                  return n3.last_flush = -1, 0;
              } else if (0 === e3.avail_in && f(t4) <= f(r4) && 4 !== t4)
                return h(e3, -5);
              if (666 === n3.status && 0 !== e3.avail_in)
                return h(e3, -5);
              if (0 !== e3.avail_in || 0 !== n3.lookahead || 0 !== t4 && 666 !== n3.status) {
                var d2 = 2 === n3.strategy ? function(e4, t5) {
                  for (var r5; ; ) {
                    if (0 === e4.lookahead && (M(e4), 0 === e4.lookahead)) {
                      if (0 === t5)
                        return 1;
                      break;
                    }
                    if (e4.match_length = 0, r5 = i._tr_tally(e4, 0, e4.window[e4.strstart]), e4.lookahead--, e4.strstart++, r5 && (_(e4, false), 0 === e4.strm.avail_out))
                      return 1;
                  }
                  return e4.insert = 0, 4 === t5 ? (_(e4, true), 0 === e4.strm.avail_out ? 3 : 4) : e4.last_lit && (_(e4, false), 0 === e4.strm.avail_out) ? 1 : 2;
                }(n3, t4) : 3 === n3.strategy ? function(e4, t5) {
                  for (var r5, s3, n4, o3, a2 = e4.window; ; ) {
                    if (e4.lookahead <= l) {
                      if (M(e4), e4.lookahead <= l && 0 === t5)
                        return 1;
                      if (0 === e4.lookahead)
                        break;
                    }
                    if (e4.match_length = 0, e4.lookahead >= 3 && 0 < e4.strstart && (s3 = a2[n4 = e4.strstart - 1]) === a2[++n4] && s3 === a2[++n4] && s3 === a2[++n4]) {
                      for (o3 = e4.strstart + l; s3 === a2[++n4] && s3 === a2[++n4] && s3 === a2[++n4] && s3 === a2[++n4] && s3 === a2[++n4] && s3 === a2[++n4] && s3 === a2[++n4] && s3 === a2[++n4] && n4 < o3; )
                        ;
                      e4.match_length = l - (o3 - n4), e4.match_length > e4.lookahead && (e4.match_length = e4.lookahead);
                    }
                    if (e4.match_length >= 3 ? (r5 = i._tr_tally(e4, 1, e4.match_length - 3), e4.lookahead -= e4.match_length, e4.strstart += e4.match_length, e4.match_length = 0) : (r5 = i._tr_tally(e4, 0, e4.window[e4.strstart]), e4.lookahead--, e4.strstart++), r5 && (_(e4, false), 0 === e4.strm.avail_out))
                      return 1;
                  }
                  return e4.insert = 0, 4 === t5 ? (_(e4, true), 0 === e4.strm.avail_out ? 3 : 4) : e4.last_lit && (_(e4, false), 0 === e4.strm.avail_out) ? 1 : 2;
                }(n3, t4) : s2[n3.level].func(n3, t4);
                if (3 !== d2 && 4 !== d2 || (n3.status = 666), 1 === d2 || 3 === d2)
                  return 0 === e3.avail_out && (n3.last_flush = -1), 0;
                if (2 === d2 && (1 === t4 ? i._tr_align(n3) : 5 !== t4 && (i._tr_stored_block(n3, 0, 0, false), 3 === t4 && (m(n3.head), 0 === n3.lookahead && (n3.strstart = 0, n3.block_start = 0, n3.insert = 0))), g(e3), 0 === e3.avail_out))
                  return n3.last_flush = -1, 0;
              }
              return 4 !== t4 ? 0 : n3.wrap <= 0 ? 1 : (2 === n3.wrap ? (b(n3, 255 & e3.adler), b(n3, e3.adler >> 8 & 255), b(n3, e3.adler >> 16 & 255), b(n3, e3.adler >> 24 & 255), b(n3, 255 & e3.total_in), b(n3, e3.total_in >> 8 & 255), b(n3, e3.total_in >> 16 & 255), b(n3, e3.total_in >> 24 & 255)) : (v(n3, e3.adler >>> 16), v(n3, 65535 & e3.adler)), g(e3), 0 < n3.wrap && (n3.wrap = -n3.wrap), 0 !== n3.pending ? 0 : 1);
            }, r3.deflateEnd = function(e3) {
              var t4;
              return e3 && e3.state ? 42 !== (t4 = e3.state.status) && 69 !== t4 && 73 !== t4 && 91 !== t4 && 103 !== t4 && t4 !== p && 666 !== t4 ? h(e3, c) : (e3.state = null, t4 === p ? h(e3, -3) : 0) : c;
            }, r3.deflateSetDictionary = function(e3, t4) {
              var r4, s3, i2, a2, u2, l2, d2, p2 = t4.length;
              if (!e3 || !e3.state)
                return c;
              if (2 === (a2 = (r4 = e3.state).wrap) || 1 === a2 && 42 !== r4.status || r4.lookahead)
                return c;
              for (1 === a2 && (e3.adler = o(e3.adler, t4, p2, 0)), r4.wrap = 0, p2 >= r4.w_size && (0 === a2 && (m(r4.head), r4.strstart = 0, r4.block_start = 0, r4.insert = 0), d2 = new n2.Buf8(r4.w_size), n2.arraySet(d2, t4, p2 - r4.w_size, r4.w_size, 0), t4 = d2, p2 = r4.w_size), d2 = e3.avail_in, u2 = e3.next_in, l2 = e3.input, e3.avail_in = p2, e3.next_in = 0, e3.input = t4, M(r4); r4.lookahead >= 3; ) {
                for (s3 = r4.strstart, i2 = r4.lookahead - 2; r4.ins_h = (r4.ins_h << r4.hash_shift ^ r4.window[s3 + 3 - 1]) & r4.hash_mask, r4.prev[s3 & r4.w_mask] = r4.head[r4.ins_h], r4.head[r4.ins_h] = s3, s3++, --i2; )
                  ;
                r4.strstart = s3, r4.lookahead = 2, M(r4);
              }
              return r4.strstart += r4.lookahead, r4.block_start = r4.strstart, r4.insert = r4.lookahead, r4.lookahead = 0, r4.match_length = r4.prev_length = 2, r4.match_available = 0, e3.next_in = u2, e3.input = l2, e3.avail_in = d2, r4.wrap = a2, 0;
            }, r3.deflateInfo = "pako deflate (from Nodeca project)";
          }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(e2, t3, r3) {
            "use strict";
            t3.exports = function() {
              this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
            };
          }, {}], 48: [function(e2, t3, r3) {
            "use strict";
            t3.exports = function(e3, t4) {
              var r4, s2, n2, i, o, a, u = e3.state, c = e3.next_in, l = e3.input, d = c + (e3.avail_in - 5), p = e3.next_out, h = e3.output, f = p - (t4 - e3.avail_out), m = p + (e3.avail_out - 257), g = u.dmax, _ = u.wsize, b = u.whave, v = u.wnext, y = u.window, M = u.hold, k = u.bits, I = u.lencode, S = u.distcode, D = (1 << u.lenbits) - 1, q = (1 << u.distbits) - 1;
              e:
                do {
                  for (k < 15 && (M += l[c++] << k, k += 8, M += l[c++] << k, k += 8), r4 = I[M & D]; ; ) {
                    if (M >>>= s2 = r4 >>> 24, k -= s2, 0 == (s2 = r4 >>> 16 & 255))
                      h[p++] = 65535 & r4;
                    else {
                      if (!(16 & s2)) {
                        if (0 == (64 & s2)) {
                          r4 = I[(65535 & r4) + (M & (1 << s2) - 1)];
                          continue;
                        }
                        if (32 & s2) {
                          u.mode = 12;
                          break e;
                        }
                        e3.msg = "invalid literal/length code", u.mode = 30;
                        break e;
                      }
                      for (n2 = 65535 & r4, (s2 &= 15) && (k < s2 && (M += l[c++] << k, k += 8), n2 += M & (1 << s2) - 1, M >>>= s2, k -= s2), k < 15 && (M += l[c++] << k, k += 8, M += l[c++] << k, k += 8), r4 = S[M & q]; ; ) {
                        if (M >>>= s2 = r4 >>> 24, k -= s2, !(16 & (s2 = r4 >>> 16 & 255))) {
                          if (0 == (64 & s2)) {
                            r4 = S[(65535 & r4) + (M & (1 << s2) - 1)];
                            continue;
                          }
                          e3.msg = "invalid distance code", u.mode = 30;
                          break e;
                        }
                        if (i = 65535 & r4, k < (s2 &= 15) && (M += l[c++] << k, (k += 8) < s2 && (M += l[c++] << k, k += 8)), g < (i += M & (1 << s2) - 1)) {
                          e3.msg = "invalid distance too far back", u.mode = 30;
                          break e;
                        }
                        if (M >>>= s2, k -= s2, (s2 = p - f) < i) {
                          if (b < (s2 = i - s2) && u.sane) {
                            e3.msg = "invalid distance too far back", u.mode = 30;
                            break e;
                          }
                          if (a = y, (o = 0) === v) {
                            if (o += _ - s2, s2 < n2) {
                              for (n2 -= s2; h[p++] = y[o++], --s2; )
                                ;
                              o = p - i, a = h;
                            }
                          } else if (v < s2) {
                            if (o += _ + v - s2, (s2 -= v) < n2) {
                              for (n2 -= s2; h[p++] = y[o++], --s2; )
                                ;
                              if (o = 0, v < n2) {
                                for (n2 -= s2 = v; h[p++] = y[o++], --s2; )
                                  ;
                                o = p - i, a = h;
                              }
                            }
                          } else if (o += v - s2, s2 < n2) {
                            for (n2 -= s2; h[p++] = y[o++], --s2; )
                              ;
                            o = p - i, a = h;
                          }
                          for (; 2 < n2; )
                            h[p++] = a[o++], h[p++] = a[o++], h[p++] = a[o++], n2 -= 3;
                          n2 && (h[p++] = a[o++], 1 < n2 && (h[p++] = a[o++]));
                        } else {
                          for (o = p - i; h[p++] = h[o++], h[p++] = h[o++], h[p++] = h[o++], 2 < (n2 -= 3); )
                            ;
                          n2 && (h[p++] = h[o++], 1 < n2 && (h[p++] = h[o++]));
                        }
                        break;
                      }
                    }
                    break;
                  }
                } while (c < d && p < m);
              c -= n2 = k >> 3, M &= (1 << (k -= n2 << 3)) - 1, e3.next_in = c, e3.next_out = p, e3.avail_in = c < d ? d - c + 5 : 5 - (c - d), e3.avail_out = p < m ? m - p + 257 : 257 - (p - m), u.hold = M, u.bits = k;
            };
          }, {}], 49: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("../utils/common"), n2 = e2("./adler32"), i = e2("./crc32"), o = e2("./inffast"), a = e2("./inftrees"), u = -2;
            function c(e3) {
              return (e3 >>> 24 & 255) + (e3 >>> 8 & 65280) + ((65280 & e3) << 8) + ((255 & e3) << 24);
            }
            function l() {
              this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new s2.Buf16(320), this.work = new s2.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
            }
            function d(e3) {
              var t4;
              return e3 && e3.state ? (t4 = e3.state, e3.total_in = e3.total_out = t4.total = 0, e3.msg = "", t4.wrap && (e3.adler = 1 & t4.wrap), t4.mode = 1, t4.last = 0, t4.havedict = 0, t4.dmax = 32768, t4.head = null, t4.hold = 0, t4.bits = 0, t4.lencode = t4.lendyn = new s2.Buf32(852), t4.distcode = t4.distdyn = new s2.Buf32(592), t4.sane = 1, t4.back = -1, 0) : u;
            }
            function p(e3) {
              var t4;
              return e3 && e3.state ? ((t4 = e3.state).wsize = 0, t4.whave = 0, t4.wnext = 0, d(e3)) : u;
            }
            function h(e3, t4) {
              var r4, s3;
              return e3 && e3.state ? (s3 = e3.state, t4 < 0 ? (r4 = 0, t4 = -t4) : (r4 = 1 + (t4 >> 4), t4 < 48 && (t4 &= 15)), t4 && (t4 < 8 || 15 < t4) ? u : (null !== s3.window && s3.wbits !== t4 && (s3.window = null), s3.wrap = r4, s3.wbits = t4, p(e3))) : u;
            }
            function f(e3, t4) {
              var r4;
              return e3 ? (r4 = new l(), (e3.state = r4).window = null, 0 !== (r4 = h(e3, t4)) && (e3.state = null), r4) : u;
            }
            var m, g, _ = true;
            function b(e3, t4, r4, n3) {
              var i2;
              return null === (e3 = e3.state).window && (e3.wsize = 1 << e3.wbits, e3.wnext = 0, e3.whave = 0, e3.window = new s2.Buf8(e3.wsize)), n3 >= e3.wsize ? (s2.arraySet(e3.window, t4, r4 - e3.wsize, e3.wsize, 0), e3.wnext = 0, e3.whave = e3.wsize) : (n3 < (i2 = e3.wsize - e3.wnext) && (i2 = n3), s2.arraySet(e3.window, t4, r4 - n3, i2, e3.wnext), (n3 -= i2) ? (s2.arraySet(e3.window, t4, r4 - n3, n3, 0), e3.wnext = n3, e3.whave = e3.wsize) : (e3.wnext += i2, e3.wnext === e3.wsize && (e3.wnext = 0), e3.whave < e3.wsize && (e3.whave += i2))), 0;
            }
            r3.inflateReset = p, r3.inflateReset2 = h, r3.inflateResetKeep = d, r3.inflateInit = function(e3) {
              return f(e3, 15);
            }, r3.inflateInit2 = f, r3.inflate = function(e3, t4) {
              var r4, l2, d2, p2, h2, f2, v, y, M, k, I, S, D, q, C, w, A, R, x, T, O, L, E, U, P = 0, j = new s2.Buf8(4), G = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
              if (!e3 || !e3.state || !e3.output || !e3.input && 0 !== e3.avail_in)
                return u;
              12 === (r4 = e3.state).mode && (r4.mode = 13), h2 = e3.next_out, d2 = e3.output, v = e3.avail_out, p2 = e3.next_in, l2 = e3.input, f2 = e3.avail_in, y = r4.hold, M = r4.bits, k = f2, I = v, L = 0;
              e:
                for (; ; )
                  switch (r4.mode) {
                    case 1:
                      if (0 === r4.wrap) {
                        r4.mode = 13;
                        break;
                      }
                      for (; M < 16; ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      if (2 & r4.wrap && 35615 === y) {
                        j[r4.check = 0] = 255 & y, j[1] = y >>> 8 & 255, r4.check = i(r4.check, j, 2, 0), M = y = 0, r4.mode = 2;
                        break;
                      }
                      if (r4.flags = 0, r4.head && (r4.head.done = false), !(1 & r4.wrap) || (((255 & y) << 8) + (y >> 8)) % 31) {
                        e3.msg = "incorrect header check", r4.mode = 30;
                        break;
                      }
                      if (8 != (15 & y)) {
                        e3.msg = "unknown compression method", r4.mode = 30;
                        break;
                      }
                      if (M -= 4, O = 8 + (15 & (y >>>= 4)), 0 === r4.wbits)
                        r4.wbits = O;
                      else if (O > r4.wbits) {
                        e3.msg = "invalid window size", r4.mode = 30;
                        break;
                      }
                      r4.dmax = 1 << O, e3.adler = r4.check = 1, r4.mode = 512 & y ? 10 : 12, M = y = 0;
                      break;
                    case 2:
                      for (; M < 16; ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      if (r4.flags = y, 8 != (255 & r4.flags)) {
                        e3.msg = "unknown compression method", r4.mode = 30;
                        break;
                      }
                      if (57344 & r4.flags) {
                        e3.msg = "unknown header flags set", r4.mode = 30;
                        break;
                      }
                      r4.head && (r4.head.text = y >> 8 & 1), 512 & r4.flags && (j[0] = 255 & y, j[1] = y >>> 8 & 255, r4.check = i(r4.check, j, 2, 0)), M = y = 0, r4.mode = 3;
                    case 3:
                      for (; M < 32; ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      r4.head && (r4.head.time = y), 512 & r4.flags && (j[0] = 255 & y, j[1] = y >>> 8 & 255, j[2] = y >>> 16 & 255, j[3] = y >>> 24 & 255, r4.check = i(r4.check, j, 4, 0)), M = y = 0, r4.mode = 4;
                    case 4:
                      for (; M < 16; ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      r4.head && (r4.head.xflags = 255 & y, r4.head.os = y >> 8), 512 & r4.flags && (j[0] = 255 & y, j[1] = y >>> 8 & 255, r4.check = i(r4.check, j, 2, 0)), M = y = 0, r4.mode = 5;
                    case 5:
                      if (1024 & r4.flags) {
                        for (; M < 16; ) {
                          if (0 === f2)
                            break e;
                          f2--, y += l2[p2++] << M, M += 8;
                        }
                        r4.length = y, r4.head && (r4.head.extra_len = y), 512 & r4.flags && (j[0] = 255 & y, j[1] = y >>> 8 & 255, r4.check = i(r4.check, j, 2, 0)), M = y = 0;
                      } else
                        r4.head && (r4.head.extra = null);
                      r4.mode = 6;
                    case 6:
                      if (1024 & r4.flags && ((S = f2 < (S = r4.length) ? f2 : S) && (r4.head && (O = r4.head.extra_len - r4.length, r4.head.extra || (r4.head.extra = new Array(r4.head.extra_len)), s2.arraySet(r4.head.extra, l2, p2, S, O)), 512 & r4.flags && (r4.check = i(r4.check, l2, S, p2)), f2 -= S, p2 += S, r4.length -= S), r4.length))
                        break e;
                      r4.length = 0, r4.mode = 7;
                    case 7:
                      if (2048 & r4.flags) {
                        if (0 === f2)
                          break e;
                        for (S = 0; O = l2[p2 + S++], r4.head && O && r4.length < 65536 && (r4.head.name += String.fromCharCode(O)), O && S < f2; )
                          ;
                        if (512 & r4.flags && (r4.check = i(r4.check, l2, S, p2)), f2 -= S, p2 += S, O)
                          break e;
                      } else
                        r4.head && (r4.head.name = null);
                      r4.length = 0, r4.mode = 8;
                    case 8:
                      if (4096 & r4.flags) {
                        if (0 === f2)
                          break e;
                        for (S = 0; O = l2[p2 + S++], r4.head && O && r4.length < 65536 && (r4.head.comment += String.fromCharCode(O)), O && S < f2; )
                          ;
                        if (512 & r4.flags && (r4.check = i(r4.check, l2, S, p2)), f2 -= S, p2 += S, O)
                          break e;
                      } else
                        r4.head && (r4.head.comment = null);
                      r4.mode = 9;
                    case 9:
                      if (512 & r4.flags) {
                        for (; M < 16; ) {
                          if (0 === f2)
                            break e;
                          f2--, y += l2[p2++] << M, M += 8;
                        }
                        if (y !== (65535 & r4.check)) {
                          e3.msg = "header crc mismatch", r4.mode = 30;
                          break;
                        }
                        M = y = 0;
                      }
                      r4.head && (r4.head.hcrc = r4.flags >> 9 & 1, r4.head.done = true), e3.adler = r4.check = 0, r4.mode = 12;
                      break;
                    case 10:
                      for (; M < 32; ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      e3.adler = r4.check = c(y), M = y = 0, r4.mode = 11;
                    case 11:
                      if (0 === r4.havedict)
                        return e3.next_out = h2, e3.avail_out = v, e3.next_in = p2, e3.avail_in = f2, r4.hold = y, r4.bits = M, 2;
                      e3.adler = r4.check = 1, r4.mode = 12;
                    case 12:
                      if (5 === t4 || 6 === t4)
                        break e;
                    case 13:
                      if (r4.last) {
                        y >>>= 7 & M, M -= 7 & M, r4.mode = 27;
                        break;
                      }
                      for (; M < 3; ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      switch (r4.last = 1 & y, --M, 3 & (y >>>= 1)) {
                        case 0:
                          r4.mode = 14;
                          break;
                        case 1:
                          z = F = void 0;
                          var z, F = r4;
                          if (_) {
                            for (m = new s2.Buf32(512), g = new s2.Buf32(32), z = 0; z < 144; )
                              F.lens[z++] = 8;
                            for (; z < 256; )
                              F.lens[z++] = 9;
                            for (; z < 280; )
                              F.lens[z++] = 7;
                            for (; z < 288; )
                              F.lens[z++] = 8;
                            for (a(1, F.lens, 0, 288, m, 0, F.work, { bits: 9 }), z = 0; z < 32; )
                              F.lens[z++] = 5;
                            a(2, F.lens, 0, 32, g, 0, F.work, { bits: 5 }), _ = false;
                          }
                          if (F.lencode = m, F.lenbits = 9, F.distcode = g, F.distbits = 5, r4.mode = 20, 6 !== t4)
                            break;
                          y >>>= 2, M -= 2;
                          break e;
                        case 2:
                          r4.mode = 17;
                          break;
                        case 3:
                          e3.msg = "invalid block type", r4.mode = 30;
                      }
                      y >>>= 2, M -= 2;
                      break;
                    case 14:
                      for (y >>>= 7 & M, M -= 7 & M; M < 32; ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      if ((65535 & y) != (y >>> 16 ^ 65535)) {
                        e3.msg = "invalid stored block lengths", r4.mode = 30;
                        break;
                      }
                      if (r4.length = 65535 & y, M = y = 0, r4.mode = 15, 6 === t4)
                        break e;
                    case 15:
                      r4.mode = 16;
                    case 16:
                      if (S = r4.length) {
                        if (0 === (S = v < (S = f2 < S ? f2 : S) ? v : S))
                          break e;
                        s2.arraySet(d2, l2, p2, S, h2), f2 -= S, p2 += S, v -= S, h2 += S, r4.length -= S;
                        break;
                      }
                      r4.mode = 12;
                      break;
                    case 17:
                      for (; M < 14; ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      if (r4.nlen = 257 + (31 & y), y >>>= 5, M -= 5, r4.ndist = 1 + (31 & y), y >>>= 5, M -= 5, r4.ncode = 4 + (15 & y), y >>>= 4, M -= 4, 286 < r4.nlen || 30 < r4.ndist) {
                        e3.msg = "too many length or distance symbols", r4.mode = 30;
                        break;
                      }
                      r4.have = 0, r4.mode = 18;
                    case 18:
                      for (; r4.have < r4.ncode; ) {
                        for (; M < 3; ) {
                          if (0 === f2)
                            break e;
                          f2--, y += l2[p2++] << M, M += 8;
                        }
                        r4.lens[G[r4.have++]] = 7 & y, y >>>= 3, M -= 3;
                      }
                      for (; r4.have < 19; )
                        r4.lens[G[r4.have++]] = 0;
                      if (r4.lencode = r4.lendyn, r4.lenbits = 7, E = { bits: r4.lenbits }, L = a(0, r4.lens, 0, 19, r4.lencode, 0, r4.work, E), r4.lenbits = E.bits, L) {
                        e3.msg = "invalid code lengths set", r4.mode = 30;
                        break;
                      }
                      r4.have = 0, r4.mode = 19;
                    case 19:
                      for (; r4.have < r4.nlen + r4.ndist; ) {
                        for (; w = (P = r4.lencode[y & (1 << r4.lenbits) - 1]) >>> 16 & 255, A = 65535 & P, !((C = P >>> 24) <= M); ) {
                          if (0 === f2)
                            break e;
                          f2--, y += l2[p2++] << M, M += 8;
                        }
                        if (A < 16)
                          y >>>= C, M -= C, r4.lens[r4.have++] = A;
                        else {
                          if (16 === A) {
                            for (U = C + 2; M < U; ) {
                              if (0 === f2)
                                break e;
                              f2--, y += l2[p2++] << M, M += 8;
                            }
                            if (y >>>= C, M -= C, 0 === r4.have) {
                              e3.msg = "invalid bit length repeat", r4.mode = 30;
                              break;
                            }
                            O = r4.lens[r4.have - 1], S = 3 + (3 & y), y >>>= 2, M -= 2;
                          } else if (17 === A) {
                            for (U = C + 3; M < U; ) {
                              if (0 === f2)
                                break e;
                              f2--, y += l2[p2++] << M, M += 8;
                            }
                            O = 0, S = 3 + (7 & (y >>>= C)), y >>>= 3, M = M - C - 3;
                          } else {
                            for (U = C + 7; M < U; ) {
                              if (0 === f2)
                                break e;
                              f2--, y += l2[p2++] << M, M += 8;
                            }
                            O = 0, S = 11 + (127 & (y >>>= C)), y >>>= 7, M = M - C - 7;
                          }
                          if (r4.have + S > r4.nlen + r4.ndist) {
                            e3.msg = "invalid bit length repeat", r4.mode = 30;
                            break;
                          }
                          for (; S--; )
                            r4.lens[r4.have++] = O;
                        }
                      }
                      if (30 === r4.mode)
                        break;
                      if (0 === r4.lens[256]) {
                        e3.msg = "invalid code -- missing end-of-block", r4.mode = 30;
                        break;
                      }
                      if (r4.lenbits = 9, E = { bits: r4.lenbits }, L = a(1, r4.lens, 0, r4.nlen, r4.lencode, 0, r4.work, E), r4.lenbits = E.bits, L) {
                        e3.msg = "invalid literal/lengths set", r4.mode = 30;
                        break;
                      }
                      if (r4.distbits = 6, r4.distcode = r4.distdyn, E = { bits: r4.distbits }, L = a(2, r4.lens, r4.nlen, r4.ndist, r4.distcode, 0, r4.work, E), r4.distbits = E.bits, L) {
                        e3.msg = "invalid distances set", r4.mode = 30;
                        break;
                      }
                      if (r4.mode = 20, 6 === t4)
                        break e;
                    case 20:
                      r4.mode = 21;
                    case 21:
                      if (6 <= f2 && 258 <= v) {
                        e3.next_out = h2, e3.avail_out = v, e3.next_in = p2, e3.avail_in = f2, r4.hold = y, r4.bits = M, o(e3, I), h2 = e3.next_out, d2 = e3.output, v = e3.avail_out, p2 = e3.next_in, l2 = e3.input, f2 = e3.avail_in, y = r4.hold, M = r4.bits, 12 === r4.mode && (r4.back = -1);
                        break;
                      }
                      for (r4.back = 0; w = (P = r4.lencode[y & (1 << r4.lenbits) - 1]) >>> 16 & 255, A = 65535 & P, !((C = P >>> 24) <= M); ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      if (w && 0 == (240 & w)) {
                        for (R = C, x = w, T = A; w = (P = r4.lencode[T + ((y & (1 << R + x) - 1) >> R)]) >>> 16 & 255, A = 65535 & P, !(R + (C = P >>> 24) <= M); ) {
                          if (0 === f2)
                            break e;
                          f2--, y += l2[p2++] << M, M += 8;
                        }
                        y >>>= R, M -= R, r4.back += R;
                      }
                      if (y >>>= C, M -= C, r4.back += C, r4.length = A, 0 === w) {
                        r4.mode = 26;
                        break;
                      }
                      if (32 & w) {
                        r4.back = -1, r4.mode = 12;
                        break;
                      }
                      if (64 & w) {
                        e3.msg = "invalid literal/length code", r4.mode = 30;
                        break;
                      }
                      r4.extra = 15 & w, r4.mode = 22;
                    case 22:
                      if (r4.extra) {
                        for (U = r4.extra; M < U; ) {
                          if (0 === f2)
                            break e;
                          f2--, y += l2[p2++] << M, M += 8;
                        }
                        r4.length += y & (1 << r4.extra) - 1, y >>>= r4.extra, M -= r4.extra, r4.back += r4.extra;
                      }
                      r4.was = r4.length, r4.mode = 23;
                    case 23:
                      for (; w = (P = r4.distcode[y & (1 << r4.distbits) - 1]) >>> 16 & 255, A = 65535 & P, !((C = P >>> 24) <= M); ) {
                        if (0 === f2)
                          break e;
                        f2--, y += l2[p2++] << M, M += 8;
                      }
                      if (0 == (240 & w)) {
                        for (R = C, x = w, T = A; w = (P = r4.distcode[T + ((y & (1 << R + x) - 1) >> R)]) >>> 16 & 255, A = 65535 & P, !(R + (C = P >>> 24) <= M); ) {
                          if (0 === f2)
                            break e;
                          f2--, y += l2[p2++] << M, M += 8;
                        }
                        y >>>= R, M -= R, r4.back += R;
                      }
                      if (y >>>= C, M -= C, r4.back += C, 64 & w) {
                        e3.msg = "invalid distance code", r4.mode = 30;
                        break;
                      }
                      r4.offset = A, r4.extra = 15 & w, r4.mode = 24;
                    case 24:
                      if (r4.extra) {
                        for (U = r4.extra; M < U; ) {
                          if (0 === f2)
                            break e;
                          f2--, y += l2[p2++] << M, M += 8;
                        }
                        r4.offset += y & (1 << r4.extra) - 1, y >>>= r4.extra, M -= r4.extra, r4.back += r4.extra;
                      }
                      if (r4.offset > r4.dmax) {
                        e3.msg = "invalid distance too far back", r4.mode = 30;
                        break;
                      }
                      r4.mode = 25;
                    case 25:
                      if (0 === v)
                        break e;
                      if (r4.offset > (S = I - v)) {
                        if ((S = r4.offset - S) > r4.whave && r4.sane) {
                          e3.msg = "invalid distance too far back", r4.mode = 30;
                          break;
                        }
                        D = S > r4.wnext ? (S -= r4.wnext, r4.wsize - S) : r4.wnext - S, S > r4.length && (S = r4.length), q = r4.window;
                      } else
                        q = d2, D = h2 - r4.offset, S = r4.length;
                      for (v -= S = v < S ? v : S, r4.length -= S; d2[h2++] = q[D++], --S; )
                        ;
                      0 === r4.length && (r4.mode = 21);
                      break;
                    case 26:
                      if (0 === v)
                        break e;
                      d2[h2++] = r4.length, v--, r4.mode = 21;
                      break;
                    case 27:
                      if (r4.wrap) {
                        for (; M < 32; ) {
                          if (0 === f2)
                            break e;
                          f2--, y |= l2[p2++] << M, M += 8;
                        }
                        if (I -= v, e3.total_out += I, r4.total += I, I && (e3.adler = r4.check = (r4.flags ? i : n2)(r4.check, d2, I, h2 - I)), I = v, (r4.flags ? y : c(y)) !== r4.check) {
                          e3.msg = "incorrect data check", r4.mode = 30;
                          break;
                        }
                        M = y = 0;
                      }
                      r4.mode = 28;
                    case 28:
                      if (r4.wrap && r4.flags) {
                        for (; M < 32; ) {
                          if (0 === f2)
                            break e;
                          f2--, y += l2[p2++] << M, M += 8;
                        }
                        if (y !== (4294967295 & r4.total)) {
                          e3.msg = "incorrect length check", r4.mode = 30;
                          break;
                        }
                        M = y = 0;
                      }
                      r4.mode = 29;
                    case 29:
                      L = 1;
                      break e;
                    case 30:
                      L = -3;
                      break e;
                    case 31:
                      return -4;
                    default:
                      return u;
                  }
              return e3.next_out = h2, e3.avail_out = v, e3.next_in = p2, e3.avail_in = f2, r4.hold = y, r4.bits = M, (r4.wsize || I !== e3.avail_out && r4.mode < 30 && (r4.mode < 27 || 4 !== t4)) && b(e3, e3.output, e3.next_out, I - e3.avail_out) ? (r4.mode = 31, -4) : (k -= e3.avail_in, I -= e3.avail_out, e3.total_in += k, e3.total_out += I, r4.total += I, r4.wrap && I && (e3.adler = r4.check = (r4.flags ? i : n2)(r4.check, d2, I, e3.next_out - I)), e3.data_type = r4.bits + (r4.last ? 64 : 0) + (12 === r4.mode ? 128 : 0) + (20 === r4.mode || 15 === r4.mode ? 256 : 0), L = (0 == k && 0 === I || 4 === t4) && 0 === L ? -5 : L);
            }, r3.inflateEnd = function(e3) {
              if (!e3 || !e3.state)
                return u;
              var t4 = e3.state;
              return t4.window && (t4.window = null), e3.state = null, 0;
            }, r3.inflateGetHeader = function(e3, t4) {
              return e3 && e3.state && 0 != (2 & (e3 = e3.state).wrap) ? ((e3.head = t4).done = false, 0) : u;
            }, r3.inflateSetDictionary = function(e3, t4) {
              var r4, s3 = t4.length;
              return !e3 || !e3.state || 0 !== (r4 = e3.state).wrap && 11 !== r4.mode ? u : 11 === r4.mode && n2(1, t4, s3, 0) !== r4.check ? -3 : b(e3, t4, s3, s3) ? (r4.mode = 31, -4) : (r4.havedict = 1, 0);
            }, r3.inflateInfo = "pako inflate (from Nodeca project)";
          }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("../utils/common"), n2 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], i = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], o = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], a = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
            t3.exports = function(e3, t4, r4, u, c, l, d, p) {
              var h, f, m, g, _, b, v, y, M, k = p.bits, I = 0, S = 0, D = 0, q = 0, C = 0, w = 0, A = 0, R = 0, x = 0, T = 0, O = null, L = 0, E = new s2.Buf16(16), U = new s2.Buf16(16), P = null, j = 0;
              for (I = 0; I <= 15; I++)
                E[I] = 0;
              for (S = 0; S < u; S++)
                E[t4[r4 + S]]++;
              for (C = k, q = 15; 1 <= q && 0 === E[q]; q--)
                ;
              if (q < C && (C = q), 0 === q)
                return c[l++] = 20971520, c[l++] = 20971520, p.bits = 1, 0;
              for (D = 1; D < q && 0 === E[D]; D++)
                ;
              for (C < D && (C = D), I = R = 1; I <= 15; I++)
                if ((R = (R << 1) - E[I]) < 0)
                  return -1;
              if (0 < R && (0 === e3 || 1 !== q))
                return -1;
              for (U[1] = 0, I = 1; I < 15; I++)
                U[I + 1] = U[I] + E[I];
              for (S = 0; S < u; S++)
                0 !== t4[r4 + S] && (d[U[t4[r4 + S]]++] = S);
              if (b = 0 === e3 ? (O = P = d, 19) : 1 === e3 ? (O = n2, L -= 257, P = i, j -= 257, 256) : (O = o, P = a, -1), I = D, _ = l, A = S = T = 0, m = -1, g = (x = 1 << (w = C)) - 1, 1 === e3 && 852 < x || 2 === e3 && 592 < x)
                return 1;
              for (; ; ) {
                for (M = d[S] < b ? (y = 0, d[S]) : d[S] > b ? (y = P[j + d[S]], O[L + d[S]]) : (y = 96, 0), h = 1 << (v = I - A), D = f = 1 << w; c[_ + (T >> A) + (f -= h)] = v << 24 | y << 16 | M | 0, 0 !== f; )
                  ;
                for (h = 1 << I - 1; T & h; )
                  h >>= 1;
                if (T = 0 !== h ? (T & h - 1) + h : 0, S++, 0 == --E[I]) {
                  if (I === q)
                    break;
                  I = t4[r4 + d[S]];
                }
                if (C < I && (T & g) !== m) {
                  for (_ += D, R = 1 << (w = I - (A = 0 === A ? C : A)); w + A < q && !((R -= E[w + A]) <= 0); )
                    w++, R <<= 1;
                  if (x += 1 << w, 1 === e3 && 852 < x || 2 === e3 && 592 < x)
                    return 1;
                  c[m = T & g] = C << 24 | w << 16 | _ - l | 0;
                }
              }
              return 0 !== T && (c[_ + T] = I - A << 24 | 64 << 16 | 0), p.bits = C, 0;
            };
          }, { "../utils/common": 41 }], 51: [function(e2, t3, r3) {
            "use strict";
            t3.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
          }, {}], 52: [function(e2, t3, r3) {
            "use strict";
            var s2 = e2("../utils/common");
            function n2(e3) {
              for (var t4 = e3.length; 0 <= --t4; )
                e3[t4] = 0;
            }
            var i = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], o = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], a = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], u = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], c = new Array(576), l = (n2(c), new Array(60)), d = (n2(l), new Array(512)), p = (n2(d), new Array(256)), h = (n2(p), new Array(29));
            n2(h);
            var f, m, g, _ = new Array(30);
            function b(e3, t4, r4, s3, n3) {
              this.static_tree = e3, this.extra_bits = t4, this.extra_base = r4, this.elems = s3, this.max_length = n3, this.has_stree = e3 && e3.length;
            }
            function v(e3, t4) {
              this.dyn_tree = e3, this.max_code = 0, this.stat_desc = t4;
            }
            function y(e3) {
              return e3 < 256 ? d[e3] : d[256 + (e3 >>> 7)];
            }
            function M(e3, t4) {
              e3.pending_buf[e3.pending++] = 255 & t4, e3.pending_buf[e3.pending++] = t4 >>> 8 & 255;
            }
            function k(e3, t4, r4) {
              e3.bi_valid > 16 - r4 ? (e3.bi_buf |= t4 << e3.bi_valid & 65535, M(e3, e3.bi_buf), e3.bi_buf = t4 >> 16 - e3.bi_valid, e3.bi_valid += r4 - 16) : (e3.bi_buf |= t4 << e3.bi_valid & 65535, e3.bi_valid += r4);
            }
            function I(e3, t4, r4) {
              k(e3, r4[2 * t4], r4[2 * t4 + 1]);
            }
            function S(e3, t4) {
              for (var r4 = 0; r4 |= 1 & e3, e3 >>>= 1, r4 <<= 1, 0 < --t4; )
                ;
              return r4 >>> 1;
            }
            function D(e3, t4, r4) {
              for (var s3, n3 = new Array(16), i2 = 0, o2 = 1; o2 <= 15; o2++)
                n3[o2] = i2 = i2 + r4[o2 - 1] << 1;
              for (s3 = 0; s3 <= t4; s3++) {
                var a2 = e3[2 * s3 + 1];
                0 !== a2 && (e3[2 * s3] = S(n3[a2]++, a2));
              }
            }
            function q(e3) {
              for (var t4 = 0; t4 < 286; t4++)
                e3.dyn_ltree[2 * t4] = 0;
              for (t4 = 0; t4 < 30; t4++)
                e3.dyn_dtree[2 * t4] = 0;
              for (t4 = 0; t4 < 19; t4++)
                e3.bl_tree[2 * t4] = 0;
              e3.dyn_ltree[512] = 1, e3.opt_len = e3.static_len = 0, e3.last_lit = e3.matches = 0;
            }
            function C(e3) {
              8 < e3.bi_valid ? M(e3, e3.bi_buf) : 0 < e3.bi_valid && (e3.pending_buf[e3.pending++] = e3.bi_buf), e3.bi_buf = 0, e3.bi_valid = 0;
            }
            function w(e3, t4, r4, s3) {
              var n3 = 2 * t4, i2 = 2 * r4;
              return e3[n3] < e3[i2] || e3[n3] === e3[i2] && s3[t4] <= s3[r4];
            }
            function A(e3, t4, r4) {
              for (var s3 = e3.heap[r4], n3 = r4 << 1; n3 <= e3.heap_len && (n3 < e3.heap_len && w(t4, e3.heap[n3 + 1], e3.heap[n3], e3.depth) && n3++, !w(t4, s3, e3.heap[n3], e3.depth)); )
                e3.heap[r4] = e3.heap[n3], r4 = n3, n3 <<= 1;
              e3.heap[r4] = s3;
            }
            function R(e3, t4, r4) {
              var s3, n3, a2, u2, c2 = 0;
              if (0 !== e3.last_lit)
                for (; s3 = e3.pending_buf[e3.d_buf + 2 * c2] << 8 | e3.pending_buf[e3.d_buf + 2 * c2 + 1], n3 = e3.pending_buf[e3.l_buf + c2], c2++, 0 == s3 ? I(e3, n3, t4) : (I(e3, (a2 = p[n3]) + 256 + 1, t4), 0 !== (u2 = i[a2]) && k(e3, n3 -= h[a2], u2), I(e3, a2 = y(--s3), r4), 0 !== (u2 = o[a2]) && k(e3, s3 -= _[a2], u2)), c2 < e3.last_lit; )
                  ;
              I(e3, 256, t4);
            }
            function x(e3, t4) {
              var r4, s3, n3, i2 = t4.dyn_tree, o2 = t4.stat_desc.static_tree, a2 = t4.stat_desc.has_stree, u2 = t4.stat_desc.elems, c2 = -1;
              for (e3.heap_len = 0, e3.heap_max = 573, r4 = 0; r4 < u2; r4++)
                0 !== i2[2 * r4] ? (e3.heap[++e3.heap_len] = c2 = r4, e3.depth[r4] = 0) : i2[2 * r4 + 1] = 0;
              for (; e3.heap_len < 2; )
                i2[2 * (n3 = e3.heap[++e3.heap_len] = c2 < 2 ? ++c2 : 0)] = 1, e3.depth[n3] = 0, e3.opt_len--, a2 && (e3.static_len -= o2[2 * n3 + 1]);
              for (t4.max_code = c2, r4 = e3.heap_len >> 1; 1 <= r4; r4--)
                A(e3, i2, r4);
              for (n3 = u2; r4 = e3.heap[1], e3.heap[1] = e3.heap[e3.heap_len--], A(e3, i2, 1), s3 = e3.heap[1], e3.heap[--e3.heap_max] = r4, e3.heap[--e3.heap_max] = s3, i2[2 * n3] = i2[2 * r4] + i2[2 * s3], e3.depth[n3] = (e3.depth[r4] >= e3.depth[s3] ? e3.depth[r4] : e3.depth[s3]) + 1, i2[2 * r4 + 1] = i2[2 * s3 + 1] = n3, e3.heap[1] = n3++, A(e3, i2, 1), 2 <= e3.heap_len; )
                ;
              e3.heap[--e3.heap_max] = e3.heap[1];
              for (var l2, d2, p2, h2, f2, m2 = e3, g2 = t4.dyn_tree, _2 = t4.max_code, b2 = t4.stat_desc.static_tree, v2 = t4.stat_desc.has_stree, y2 = t4.stat_desc.extra_bits, M2 = t4.stat_desc.extra_base, k2 = t4.stat_desc.max_length, I2 = 0, S2 = 0; S2 <= 15; S2++)
                m2.bl_count[S2] = 0;
              for (g2[2 * m2.heap[m2.heap_max] + 1] = 0, l2 = m2.heap_max + 1; l2 < 573; l2++)
                k2 < (S2 = g2[2 * g2[2 * (d2 = m2.heap[l2]) + 1] + 1] + 1) && (S2 = k2, I2++), g2[2 * d2 + 1] = S2, _2 < d2 || (m2.bl_count[S2]++, h2 = 0, M2 <= d2 && (h2 = y2[d2 - M2]), f2 = g2[2 * d2], m2.opt_len += f2 * (S2 + h2), v2 && (m2.static_len += f2 * (b2[2 * d2 + 1] + h2)));
              if (0 !== I2) {
                do {
                  for (S2 = k2 - 1; 0 === m2.bl_count[S2]; )
                    S2--;
                } while (m2.bl_count[S2]--, m2.bl_count[S2 + 1] += 2, m2.bl_count[k2]--, 0 < (I2 -= 2));
                for (S2 = k2; 0 !== S2; S2--)
                  for (d2 = m2.bl_count[S2]; 0 !== d2; )
                    _2 < (p2 = m2.heap[--l2]) || (g2[2 * p2 + 1] !== S2 && (m2.opt_len += (S2 - g2[2 * p2 + 1]) * g2[2 * p2], g2[2 * p2 + 1] = S2), d2--);
              }
              D(i2, c2, e3.bl_count);
            }
            function T(e3, t4, r4) {
              var s3, n3, i2 = -1, o2 = t4[1], a2 = 0, u2 = 7, c2 = 4;
              for (0 === o2 && (u2 = 138, c2 = 3), t4[2 * (r4 + 1) + 1] = 65535, s3 = 0; s3 <= r4; s3++)
                n3 = o2, o2 = t4[2 * (s3 + 1) + 1], ++a2 < u2 && n3 === o2 || (a2 < c2 ? e3.bl_tree[2 * n3] += a2 : 0 !== n3 ? (n3 !== i2 && e3.bl_tree[2 * n3]++, e3.bl_tree[32]++) : a2 <= 10 ? e3.bl_tree[34]++ : e3.bl_tree[36]++, i2 = n3, c2 = (a2 = 0) === o2 ? (u2 = 138, 3) : n3 === o2 ? (u2 = 6, 3) : (u2 = 7, 4));
            }
            function O(e3, t4, r4) {
              var s3, n3, i2 = -1, o2 = t4[1], a2 = 0, u2 = 7, c2 = 4;
              for (0 === o2 && (u2 = 138, c2 = 3), s3 = 0; s3 <= r4; s3++)
                if (n3 = o2, o2 = t4[2 * (s3 + 1) + 1], !(++a2 < u2 && n3 === o2)) {
                  if (a2 < c2)
                    for (; I(e3, n3, e3.bl_tree), 0 != --a2; )
                      ;
                  else
                    0 !== n3 ? (n3 !== i2 && (I(e3, n3, e3.bl_tree), a2--), I(e3, 16, e3.bl_tree), k(e3, a2 - 3, 2)) : a2 <= 10 ? (I(e3, 17, e3.bl_tree), k(e3, a2 - 3, 3)) : (I(e3, 18, e3.bl_tree), k(e3, a2 - 11, 7));
                  i2 = n3, c2 = (a2 = 0) === o2 ? (u2 = 138, 3) : n3 === o2 ? (u2 = 6, 3) : (u2 = 7, 4);
                }
            }
            n2(_);
            var L = false;
            function E(e3, t4, r4, n3) {
              k(e3, 0 + (n3 ? 1 : 0), 3), n3 = t4, t4 = r4, C(r4 = e3), M(r4, t4), M(r4, ~t4), s2.arraySet(r4.pending_buf, r4.window, n3, t4, r4.pending), r4.pending += t4;
            }
            r3._tr_init = function(e3) {
              if (!L) {
                for (var t4, r4, s3, n3, u2 = new Array(16), y2 = s3 = 0; y2 < 28; y2++)
                  for (h[y2] = s3, t4 = 0; t4 < 1 << i[y2]; t4++)
                    p[s3++] = y2;
                for (p[s3 - 1] = y2, y2 = n3 = 0; y2 < 16; y2++)
                  for (_[y2] = n3, t4 = 0; t4 < 1 << o[y2]; t4++)
                    d[n3++] = y2;
                for (n3 >>= 7; y2 < 30; y2++)
                  for (_[y2] = n3 << 7, t4 = 0; t4 < 1 << o[y2] - 7; t4++)
                    d[256 + n3++] = y2;
                for (r4 = 0; r4 <= 15; r4++)
                  u2[r4] = 0;
                for (t4 = 0; t4 <= 143; )
                  c[2 * t4 + 1] = 8, t4++, u2[8]++;
                for (; t4 <= 255; )
                  c[2 * t4 + 1] = 9, t4++, u2[9]++;
                for (; t4 <= 279; )
                  c[2 * t4 + 1] = 7, t4++, u2[7]++;
                for (; t4 <= 287; )
                  c[2 * t4 + 1] = 8, t4++, u2[8]++;
                for (D(c, 287, u2), t4 = 0; t4 < 30; t4++)
                  l[2 * t4 + 1] = 5, l[2 * t4] = S(t4, 5);
                f = new b(c, i, 257, 286, 15), m = new b(l, o, 0, 30, 15), g = new b(new Array(0), a, 0, 19, 7), L = true;
              }
              e3.l_desc = new v(e3.dyn_ltree, f), e3.d_desc = new v(e3.dyn_dtree, m), e3.bl_desc = new v(e3.bl_tree, g), e3.bi_buf = 0, e3.bi_valid = 0, q(e3);
            }, r3._tr_stored_block = E, r3._tr_flush_block = function(e3, t4, r4, s3) {
              var n3, i2, o2, a2 = 0;
              if (0 < e3.level ? (2 === e3.strm.data_type && (e3.strm.data_type = function(e4) {
                for (var t5 = 4093624447, r5 = 0; r5 <= 31; r5++, t5 >>>= 1)
                  if (1 & t5 && 0 !== e4.dyn_ltree[2 * r5])
                    return 0;
                if (0 !== e4.dyn_ltree[18] || 0 !== e4.dyn_ltree[20] || 0 !== e4.dyn_ltree[26])
                  return 1;
                for (r5 = 32; r5 < 256; r5++)
                  if (0 !== e4.dyn_ltree[2 * r5])
                    return 1;
                return 0;
              }(e3)), x(e3, e3.l_desc), x(e3, e3.d_desc), a2 = function(e4) {
                var t5;
                for (T(e4, e4.dyn_ltree, e4.l_desc.max_code), T(e4, e4.dyn_dtree, e4.d_desc.max_code), x(e4, e4.bl_desc), t5 = 18; 3 <= t5 && 0 === e4.bl_tree[2 * u[t5] + 1]; t5--)
                  ;
                return e4.opt_len += 3 * (t5 + 1) + 5 + 5 + 4, t5;
              }(e3), n3 = e3.opt_len + 3 + 7 >>> 3, (i2 = e3.static_len + 3 + 7 >>> 3) <= n3 && (n3 = i2)) : n3 = i2 = r4 + 5, r4 + 4 <= n3 && -1 !== t4)
                E(e3, t4, r4, s3);
              else if (4 === e3.strategy || i2 === n3)
                k(e3, 2 + (s3 ? 1 : 0), 3), R(e3, c, l);
              else {
                k(e3, 4 + (s3 ? 1 : 0), 3);
                var d2 = e3, p2 = (t4 = e3.l_desc.max_code + 1, r4 = e3.d_desc.max_code + 1, a2 + 1);
                for (k(d2, t4 - 257, 5), k(d2, r4 - 1, 5), k(d2, p2 - 4, 4), o2 = 0; o2 < p2; o2++)
                  k(d2, d2.bl_tree[2 * u[o2] + 1], 3);
                O(d2, d2.dyn_ltree, t4 - 1), O(d2, d2.dyn_dtree, r4 - 1), R(e3, e3.dyn_ltree, e3.dyn_dtree);
              }
              q(e3), s3 && C(e3);
            }, r3._tr_tally = function(e3, t4, r4) {
              return e3.pending_buf[e3.d_buf + 2 * e3.last_lit] = t4 >>> 8 & 255, e3.pending_buf[e3.d_buf + 2 * e3.last_lit + 1] = 255 & t4, e3.pending_buf[e3.l_buf + e3.last_lit] = 255 & r4, e3.last_lit++, 0 === t4 ? e3.dyn_ltree[2 * r4]++ : (e3.matches++, t4--, e3.dyn_ltree[2 * (p[r4] + 256 + 1)]++, e3.dyn_dtree[2 * y(t4)]++), e3.last_lit === e3.lit_bufsize - 1;
            }, r3._tr_align = function(e3) {
              k(e3, 2, 3), I(e3, 256, c), 16 === (e3 = e3).bi_valid ? (M(e3, e3.bi_buf), e3.bi_buf = 0, e3.bi_valid = 0) : 8 <= e3.bi_valid && (e3.pending_buf[e3.pending++] = 255 & e3.bi_buf, e3.bi_buf >>= 8, e3.bi_valid -= 8);
            };
          }, { "../utils/common": 41 }], 53: [function(e2, t3, r3) {
            "use strict";
            t3.exports = function() {
              this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
            };
          }, {}], 54: [function(e2, t3, r3) {
            (function(e3) {
              !function(e4, t4) {
                "use strict";
                var r4, s2, i, o, a, u, c, l, d;
                function p(e5) {
                  delete a[e5];
                }
                function h(e5) {
                  if (u)
                    setTimeout(h, 0, e5);
                  else {
                    var t5 = a[e5];
                    if (t5) {
                      u = true;
                      try {
                        var r5 = t5.callback, s3 = t5.args;
                        switch (s3.length) {
                          case 0:
                            r5();
                            break;
                          case 1:
                            r5(s3[0]);
                            break;
                          case 2:
                            r5(s3[0], s3[1]);
                            break;
                          case 3:
                            r5(s3[0], s3[1], s3[2]);
                            break;
                          default:
                            r5.apply(void 0, s3);
                        }
                      } finally {
                        p(e5), u = false;
                      }
                    }
                  }
                }
                function f(t5) {
                  t5.source === e4 && "string" == typeof t5.data && 0 === t5.data.indexOf(i) && h(+t5.data.slice(i.length));
                }
                e4.setImmediate || (o = 1, u = !(a = {}), c = e4.document, l = (l = Object.getPrototypeOf && Object.getPrototypeOf(e4)) && l.setTimeout ? l : e4, d = "[object process]" === {}.toString.call(e4.process) ? function(e5) {
                  n.nextTick(function() {
                    h(e5);
                  });
                } : function() {
                  var t5, r5;
                  if (e4.postMessage && !e4.importScripts)
                    return t5 = true, r5 = e4.onmessage, e4.onmessage = function() {
                      t5 = false;
                    }, e4.postMessage("", "*"), e4.onmessage = r5, t5;
                }() ? (i = "setImmediate$" + Math.random() + "$", e4.addEventListener ? e4.addEventListener("message", f, false) : e4.attachEvent("onmessage", f), function(t5) {
                  e4.postMessage(i + t5, "*");
                }) : e4.MessageChannel ? ((s2 = new MessageChannel()).port1.onmessage = function(e5) {
                  h(e5.data);
                }, function(e5) {
                  s2.port2.postMessage(e5);
                }) : c && "onreadystatechange" in c.createElement("script") ? (r4 = c.documentElement, function(e5) {
                  var t5 = c.createElement("script");
                  t5.onreadystatechange = function() {
                    h(e5), t5.onreadystatechange = null, r4.removeChild(t5), t5 = null;
                  }, r4.appendChild(t5);
                }) : function(e5) {
                  setTimeout(h, 0, e5);
                }, l.setImmediate = function(e5) {
                  "function" != typeof e5 && (e5 = new Function("" + e5));
                  for (var t5 = new Array(arguments.length - 1), r5 = 0; r5 < t5.length; r5++)
                    t5[r5] = arguments[r5 + 1];
                  return a[o] = { callback: e5, args: t5 }, d(o), o++;
                }, l.clearImmediate = p);
              }("undefined" == typeof self ? void 0 === e3 ? this : e3 : self);
            }).call(this, void 0 !== s ? s : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
          }, {}] }, {}, [10])(10);
        }).call(this, r(115).Buffer, r(119).setImmediate, r(11), r(52));
      }, function(e, t, r) {
        "use strict";
        r.d(t, "a", function() {
          return o;
        });
        var s = r(1), n = r(0), i = function(e2, t2) {
          var r2 = "function" == typeof Symbol && e2[Symbol.iterator];
          if (!r2)
            return e2;
          var s2, n2, i2 = r2.call(e2), o2 = [];
          try {
            for (; (void 0 === t2 || 0 < t2--) && !(s2 = i2.next()).done; )
              o2.push(s2.value);
          } catch (e3) {
            n2 = { error: e3 };
          } finally {
            try {
              s2 && !s2.done && (r2 = i2.return) && r2.call(i2);
            } finally {
              if (n2)
                throw n2.error;
            }
          }
          return o2;
        }, o = (a.prototype.getRealClientTimestamp = function(e2) {
          return this.serverOffsetTime + (e2 || Date.now());
        }, a.prototype.initEngine = function(e2, t2, r2) {
          return this.initHost(t2), this.busMap.set(e2, r2), r2 = { handle: e2, appID: t2, token: "", tokenExpireTime: 0, convSid: "", clientMsgSeq: 0, user: {}, syncUserTask: /* @__PURE__ */ new Set(), dbUserMap: /* @__PURE__ */ new Map(), dbGroupMap: /* @__PURE__ */ new Map(), dbConvMap: /* @__PURE__ */ new Map(), msgExtraMap: /* @__PURE__ */ new Map(), cloudSetting: { qps: { get_room_user_attrs: "5/30", send_msg: 100, send_barrage_msg: 100, default_token: 30, max_token: 100, interval_add_token: 5, max_handle_req: 10 }, req_to: { def: 3e3, send_msg: 1e4 }, retry: { login_max_itvl: 300 }, scale: { cb_msg_title_len: 20, cb_msg_summary_len: 100 } }, cryptoConfig: {}, mailHBConfig: { c2c_msg_seq: 0, conv_list_seq: 0, group_list_seq: 0, call_list_seq: 0, c2c_statemsg_seq: 0, extra_msg_list_seq: 0, friend_list_seq: 0, friend_apply_list_seq: 0, black_list_seq: 0, conv_pinned_list_seq: 0, c2c_mute_max_seq: 0, user_info_seq: 0, group_apply_list_seq: 0, history_c2c_msg_seq: 0, conv_mark_seq: 0, fetch_c2c_msg_count: 0, fetch_group_msg_count: 0, fetch_room_msg_count: 0, fetch_conv_list: 0, fetch_group_list: 0, usermail_hb_interval: 1e4, msg_to: 1e4, msg_itvl: 3e4, list_to: 1e4, list_itvl: 3e4, reaction_brief_len: 5, state_seq_reduce_num: -1, delete_all_msg_time: 0, apply_expired_duration: 0, group_tips: 0, reply_msg_seq_count: 100 } }, this.econfMap.set(e2, r2), r2;
        }, a.prototype.unInitEngine = function(e2, t2) {
          var r2 = this.econfMap.get(e2);
          r2 && (r2.cloudTimer && clearInterval(r2.cloudTimer), r2.cloudTimer = 0, r2.user = {}, r2.syncUserTask.clear(), r2.dbUserMap.clear(), r2.dbConvMap.clear(), r2.dbGroupMap.clear(), r2.msgExtraMap.clear(), r2.sessionID = void 0, r2.serverUserID = void 0, r2.controls = void 0, t2 && (this.econfMap.delete(e2), this.busMap.delete(e2)));
        }, a.prototype.setHost = function(e2) {
          this.advancedConfig.geoFence.id = e2, this.advancedConfig.geoFence.host = this.advancedConfig.geoFence.hostMap[e2].host;
        }, a.prototype.fetchZGLogConfig = function() {
          var e2 = this.advancedConfig.geoFence;
          return [(e2.host.detaillog || e2.hostMap[1].host.detaillog) + "/zglog/zip", e2.host.logreport || e2.hostMap[1].host.logreport];
        }, a.prototype.fetchZGLogWhitelistUrl = function() {
          var e2 = this.advancedConfig.geoFence;
          return (e2.host.detaillog || e2.hostMap[1].host.detaillog) + "/zglog/whitelist?";
        }, a.prototype.startSyncRemoteConfig = function(e2, t2, r2) {
          var s2 = this, n2 = this.econfMap.get(t2);
          return n2.cloudTimer || (n2.cloudTimer = setInterval(function() {
            n2.token && s2.syncRemoteConfig(e2, n2);
          }, 36e5)), this.syncRemoteConfig(e2, n2, r2);
        }, a.prototype.syncRemoteConfig = function(e2, t2, r2) {
          return r2 = { appid: t2.appID, id_name: t2.user.userID, product: "ZIM", files: ["biz_conf"], param: { platform: "1", sdk_version: "" + this.deviceInfo.sdk_ver }, timestamp: Date.now(), biztype: 0, deviceid: s.i, compress: false, mode: "online", token: r2 || t2.token }, e2.sendHttp({ url: "/cloud-setting/get", method: "POST" }, r2, 10).then(function(e3) {
            if (!(e3 && e3.data && e3.data.biz_conf && e3.data.biz_conf.data))
              return false;
            var r3 = (s2 = e3.data.biz_conf.data).qps, s2 = s2.req_to, o2 = (a2 = i(String(r3.send_msg).split("~"), 2))[0], a2 = a2[1];
            o2 = (a2 = (r3.send_msg = 1e3 * Number(a2) / Number(o2), i(String(r3.send_barrage_msg).split("~"), 2)))[0], a2 = a2[1], o2 = (a2 = (r3.send_barrage_msg = 1e3 * Number(a2) / Number(o2), i(r3.get_room_user_attrs.split("/"), 2)))[0], r3 = a2[1];
            return n.m.get_user_attribute_qps = +o2, n.m.get_user_attribute_interval = 1e3 * +r3, s2.def = 1e3 * s2.def, s2.send_msg = 1e3 * s2.send_msg, Object.assign(t2.cloudSetting, e3.data.biz_conf.data), true;
          });
        }, a.prototype.onNetworkStatusChange = function() {
          var e2, t2, r2 = this, n2 = { wifi: 2, "2g": 3, "3g": 4, "4g": 5, "5g": 5, unknown: 32 };
          function i2(e3) {
            return e3.toLowerCase().replace("-", "");
          }
          s.p ? (s.p.getNetworkType({ success: function(e3) {
            r2.netType = i2(e3.networkType || "unknown"), r2.deviceInfo.net_type = n2[r2.netType] || n2.unknown;
          } }), s.p.onNetworkStatusChange(function(e3) {
            r2.netType = i2(e3.networkType || "unknown"), r2.deviceInfo.net_type = n2[r2.netType] || n2.unknown, r2.emitNetworkChange(e3.isConnected);
          })) : ((e2 = navigator.connection || navigator.mozConnection || navigator.webkitConnection) && (this.netType = i2(e2.type || e2.effectiveType || "unknown"), this.deviceInfo.net_type = n2[this.netType] || n2.unknown, e2.addEventListener("change", function() {
            r2.netType = i2(e2.type || e2.effectiveType || "unknown"), r2.deviceInfo.net_type = n2[r2.netType] || n2.unknown;
          })), t2 = function() {
            return r2.emitNetworkChange(navigator.onLine);
          }, window.addEventListener("online", t2), window.addEventListener("offline", t2));
        }, a.prototype.emitNetworkChange = function(e2) {
          var t2 = this;
          this.busMap.forEach(function(r2) {
            return r2.exec(n.u.INetworkChange, e2, t2.netType);
          });
        }, a.prototype.initHost = function(e2) {
          var t2, r2 = this, s2 = { accesshub: "wss://accesshub-global" + (t2 = ".cool" + ["b", "g", "h"][e2 % 3] + "cloud.com") + "/accesshub", logreport: "wss://weblogger-wss" + t2 + "/zglog/web", detaillog: "https://detaillog-global" + t2, fileproxy: "https://access-zfpxy-global" + t2 };
          (e2 = (Object.keys(this.advancedConfig.geoFence.hostMap).forEach(function(e3) {
            var n2 = "-geo-" + e3 + t2;
            r2.advancedConfig.geoFence.hostMap[e3].host = "1" == e3 ? s2 : { accesshub: "wss://accesshub" + n2 + "/accesshub", logreport: "wss://weblogger-wss" + n2 + "/zglog/web", detaillog: "https://detaillog" + n2, fileproxy: "https://access-zfpxy" + n2 };
          }), this.advancedConfig.geoFence.id)) && (this.advancedConfig.geoFence.host = this.advancedConfig.geoFence.hostMap[e2].host);
        }, a);
        function a(e2) {
          this.econfMap = /* @__PURE__ */ new Map(), this.busMap = /* @__PURE__ */ new Map(), this.advancedConfig = { zim_cross_platform: "", zim_product_source: "", geoFence: { reg: /(https?:\/\/)?([a-zA-Z0-9.-]+)\.([a-zA-Z]{2,})((\/[a-zA-Z0-9#]+\/?)*)/, type: n.B.None, areas: [], id: 0, dispatch: { domain: "", host: "" }, host: { accesshub: "", logreport: "", detaillog: "", fileproxy: "" }, hostMap: { 2: { relatives: [], host: {} }, 3: { relatives: [7], host: {} }, 4: { relatives: [7], host: {} }, 5: { relatives: [7], host: {} }, 6: { relatives: [7], host: {} }, 7: { relatives: [3, 4, 5, 6, 1], host: {} }, 1: { relatives: [7], host: {} } } } }, this.serverOffsetTime = 0, this.netType = "", this.deviceInfo = { sdk_ver: e2.split(".").reverse().reduce(function(e3, t2, r2) {
            return e3 + +t2 * Math.pow(100, r2);
          }, 0), term_type: s.p ? 7 : 6, device_id: s.i, net_type: 32 }, this.onNetworkStatusChange();
        }
      }, function(e, t) {
      }, function(e, t, r) {
        var s;
        e.exports = (e = r(5), s = e.lib.WordArray, e.enc.Base64 = { stringify: function(e2) {
          for (var t2 = e2.words, r2 = e2.sigBytes, s2 = this._map, n = (e2.clamp(), []), i = 0; i < r2; i += 3)
            for (var o = (t2[i >>> 2] >>> 24 - i % 4 * 8 & 255) << 16 | (t2[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255) << 8 | t2[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255, a = 0; a < 4 && i + 0.75 * a < r2; a++)
              n.push(s2.charAt(o >>> 6 * (3 - a) & 63));
          var u = s2.charAt(64);
          if (u)
            for (; n.length % 4; )
              n.push(u);
          return n.join("");
        }, parse: function(e2) {
          var t2 = e2.length, r2 = this._map;
          if (!(n = this._reverseMap))
            for (var n = this._reverseMap = [], i = 0; i < r2.length; i++)
              n[r2.charCodeAt(i)] = i;
          var o = r2.charAt(64);
          return o && -1 !== (o = e2.indexOf(o)) && (t2 = o), function(e3, t3, r3) {
            for (var n2, i2, o2 = [], a = 0, u = 0; u < t3; u++)
              u % 4 && (n2 = r3[e3.charCodeAt(u - 1)] << u % 4 * 2, i2 = r3[e3.charCodeAt(u)] >>> 6 - u % 4 * 2, o2[a >>> 2] |= (n2 | i2) << 24 - a % 4 * 8, a++);
            return s.create(o2, a);
          }(e2, t2, n);
        }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" }, e.enc.Base64);
      }, function(e, t, r) {
        var s, n, i, o;
        e.exports = (e = r(5), o = (r = e).lib, s = o.WordArray, n = o.Hasher, o = r.algo, i = [], o = o.SHA1 = n.extend({ _doReset: function() {
          this._hash = new s.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
        }, _doProcessBlock: function(e2, t2) {
          for (var r2 = this._hash.words, s2 = r2[0], n2 = r2[1], o2 = r2[2], a = r2[3], u = r2[4], c = 0; c < 80; c++) {
            c < 16 ? i[c] = 0 | e2[t2 + c] : (l = i[c - 3] ^ i[c - 8] ^ i[c - 14] ^ i[c - 16], i[c] = l << 1 | l >>> 31);
            var l = (s2 << 5 | s2 >>> 27) + u + i[c];
            l += c < 20 ? 1518500249 + (n2 & o2 | ~n2 & a) : c < 40 ? 1859775393 + (n2 ^ o2 ^ a) : c < 60 ? (n2 & o2 | n2 & a | o2 & a) - 1894007588 : (n2 ^ o2 ^ a) - 899497514, u = a, a = o2, o2 = n2 << 30 | n2 >>> 2, n2 = s2, s2 = l;
          }
          r2[0] = r2[0] + s2 | 0, r2[1] = r2[1] + n2 | 0, r2[2] = r2[2] + o2 | 0, r2[3] = r2[3] + a | 0, r2[4] = r2[4] + u | 0;
        }, _doFinalize: function() {
          var e2 = this._data, t2 = e2.words, r2 = 8 * this._nDataBytes, s2 = 8 * e2.sigBytes;
          return t2[s2 >>> 5] |= 128 << 24 - s2 % 32, t2[14 + (64 + s2 >>> 9 << 4)] = Math.floor(r2 / 4294967296), t2[15 + (64 + s2 >>> 9 << 4)] = r2, e2.sigBytes = 4 * t2.length, this._process(), this._hash;
        }, clone: function() {
          var e2 = n.clone.call(this);
          return e2._hash = this._hash.clone(), e2;
        } }), r.SHA1 = n._createHelper(o), r.HmacSHA1 = n._createHmacHelper(o), e.SHA1);
      }, function(e, t, r) {
        var s;
        e.exports = (e = r(5), r = e.lib.Base, s = e.enc.Utf8, void (e.algo.HMAC = r.extend({ init: function(e2, t2) {
          e2 = this._hasher = new e2.init(), "string" == typeof t2 && (t2 = s.parse(t2));
          for (var r2 = e2.blockSize, n = 4 * r2, i = (e2 = ((t2 = t2.sigBytes > n ? e2.finalize(t2) : t2).clamp(), this._oKey = t2.clone()), t2 = this._iKey = t2.clone(), e2.words), o = t2.words, a = 0; a < r2; a++)
            i[a] ^= 1549556828, o[a] ^= 909522486;
          e2.sigBytes = t2.sigBytes = n, this.reset();
        }, reset: function() {
          var e2 = this._hasher;
          e2.reset(), e2.update(this._iKey);
        }, update: function(e2) {
          return this._hasher.update(e2), this;
        }, finalize: function(e2) {
          var t2 = this._hasher;
          e2 = t2.finalize(e2);
          return t2.reset(), t2.finalize(this._oKey.clone().concat(e2));
        } })));
      }, function(e, t, r) {
        var s, n, i, o, a, u, c, l, d, p, h, f;
        e.exports = (e = r(5), r(22), void (e.lib.Cipher || (r = (e = e).lib, s = r.Base, n = r.WordArray, i = r.BufferedBlockAlgorithm, (d = e.enc).Utf8, o = d.Base64, a = e.algo.EvpKDF, u = r.Cipher = i.extend({ cfg: s.extend(), createEncryptor: function(e2, t2) {
          return this.create(this._ENC_XFORM_MODE, e2, t2);
        }, createDecryptor: function(e2, t2) {
          return this.create(this._DEC_XFORM_MODE, e2, t2);
        }, init: function(e2, t2, r2) {
          this.cfg = this.cfg.extend(r2), this._xformMode = e2, this._key = t2, this.reset();
        }, reset: function() {
          i.reset.call(this), this._doReset();
        }, process: function(e2) {
          return this._append(e2), this._process();
        }, finalize: function(e2) {
          return e2 && this._append(e2), this._doFinalize();
        }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function() {
          function e2(e3) {
            return "string" == typeof e3 ? f : p;
          }
          return function(t2) {
            return { encrypt: function(r2, s2, n2) {
              return e2(s2).encrypt(t2, r2, s2, n2);
            }, decrypt: function(r2, s2, n2) {
              return e2(s2).decrypt(t2, r2, s2, n2);
            } };
          };
        }() }), r.StreamCipher = u.extend({ _doFinalize: function() {
          return this._process(true);
        }, blockSize: 1 }), d = e.mode = {}, c = r.BlockCipherMode = s.extend({ createEncryptor: function(e2, t2) {
          return this.Encryptor.create(e2, t2);
        }, createDecryptor: function(e2, t2) {
          return this.Decryptor.create(e2, t2);
        }, init: function(e2, t2) {
          this._cipher = e2, this._iv = t2;
        } }), d = d.CBC = function() {
          var e2 = c.extend();
          function t2(e3, t3, r2) {
            var s2, n2 = this._iv;
            n2 ? (s2 = n2, this._iv = void 0) : s2 = this._prevBlock;
            for (var i2 = 0; i2 < r2; i2++)
              e3[t3 + i2] ^= s2[i2];
          }
          return e2.Encryptor = e2.extend({ processBlock: function(e3, r2) {
            var s2 = this._cipher, n2 = s2.blockSize;
            t2.call(this, e3, r2, n2), s2.encryptBlock(e3, r2), this._prevBlock = e3.slice(r2, r2 + n2);
          } }), e2.Decryptor = e2.extend({ processBlock: function(e3, r2) {
            var s2 = this._cipher, n2 = s2.blockSize, i2 = e3.slice(r2, r2 + n2);
            s2.decryptBlock(e3, r2), t2.call(this, e3, r2, n2), this._prevBlock = i2;
          } }), e2;
        }(), h = (e.pad = {}).Pkcs7 = { pad: function(e2, t2) {
          for (var r2 = (t2 = 4 * t2) - e2.sigBytes % t2, s2 = r2 << 24 | r2 << 16 | r2 << 8 | r2, i2 = [], o2 = 0; o2 < r2; o2 += 4)
            i2.push(s2);
          t2 = n.create(i2, r2), e2.concat(t2);
        }, unpad: function(e2) {
          var t2 = 255 & e2.words[e2.sigBytes - 1 >>> 2];
          e2.sigBytes -= t2;
        } }, r.BlockCipher = u.extend({ cfg: u.cfg.extend({ mode: d, padding: h }), reset: function() {
          u.reset.call(this);
          var e2, t2 = (r2 = this.cfg).iv, r2 = r2.mode;
          this._xformMode == this._ENC_XFORM_MODE ? e2 = r2.createEncryptor : (e2 = r2.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == e2 ? this._mode.init(this, t2 && t2.words) : (this._mode = e2.call(r2, this, t2 && t2.words), this._mode.__creator = e2);
        }, _doProcessBlock: function(e2, t2) {
          this._mode.processBlock(e2, t2);
        }, _doFinalize: function() {
          var e2, t2 = this.cfg.padding;
          return this._xformMode == this._ENC_XFORM_MODE ? (t2.pad(this._data, this.blockSize), e2 = this._process(true)) : (e2 = this._process(true), t2.unpad(e2)), e2;
        }, blockSize: 4 }), l = r.CipherParams = s.extend({ init: function(e2) {
          this.mixIn(e2);
        }, toString: function(e2) {
          return (e2 || this.formatter).stringify(this);
        } }), d = (e.format = {}).OpenSSL = { stringify: function(e2) {
          var t2 = e2.ciphertext;
          return (e2 = (e2 = e2.salt) ? n.create([1398893684, 1701076831]).concat(e2).concat(t2) : t2).toString(o);
        }, parse: function(e2) {
          var t2, r2 = (e2 = o.parse(e2)).words;
          return 1398893684 == r2[0] && 1701076831 == r2[1] && (t2 = n.create(r2.slice(2, 4)), r2.splice(0, 4), e2.sigBytes -= 16), l.create({ ciphertext: e2, salt: t2 });
        } }, p = r.SerializableCipher = s.extend({ cfg: s.extend({ format: d }), encrypt: function(e2, t2, r2, s2) {
          s2 = this.cfg.extend(s2);
          t2 = (n2 = e2.createEncryptor(r2, s2)).finalize(t2);
          var n2 = n2.cfg;
          return l.create({ ciphertext: t2, key: r2, iv: n2.iv, algorithm: e2, mode: n2.mode, padding: n2.padding, blockSize: e2.blockSize, formatter: s2.format });
        }, decrypt: function(e2, t2, r2, s2) {
          return s2 = this.cfg.extend(s2), t2 = this._parse(t2, s2.format), e2.createDecryptor(r2, s2).finalize(t2.ciphertext);
        }, _parse: function(e2, t2) {
          return "string" == typeof e2 ? t2.parse(e2, this) : e2;
        } }), h = (e.kdf = {}).OpenSSL = { execute: function(e2, t2, r2, s2) {
          return s2 = s2 || n.random(8), e2 = a.create({ keySize: t2 + r2 }).compute(e2, s2), r2 = n.create(e2.words.slice(t2), 4 * r2), e2.sigBytes = 4 * t2, l.create({ key: e2, iv: r2, salt: s2 });
        } }, f = r.PasswordBasedCipher = p.extend({ cfg: p.cfg.extend({ kdf: h }), encrypt: function(e2, t2, r2, s2) {
          return r2 = (s2 = this.cfg.extend(s2)).kdf.execute(r2, e2.keySize, e2.ivSize), s2.iv = r2.iv, (e2 = p.encrypt.call(this, e2, t2, r2.key, s2)).mixIn(r2), e2;
        }, decrypt: function(e2, t2, r2, s2) {
          return s2 = this.cfg.extend(s2), t2 = this._parse(t2, s2.format), r2 = s2.kdf.execute(r2, e2.keySize, e2.ivSize, t2.salt), s2.iv = r2.iv, p.decrypt.call(this, e2, t2, r2.key, s2);
        } }))));
      }, function(e, t, r) {
        var s = { "./ZIMFileStoreBase": 39, "./ZIMFileStoreBase.ts": 39, "./ZIMFileStoreImpl": 40, "./ZIMFileStoreImpl.ts": 40, "./ZIMIDBImpl": 41, "./ZIMIDBImpl.ts": 41 };
        function n(e2) {
          return e2 = i(e2), r(e2);
        }
        function i(e2) {
          if (r.o(s, e2))
            return s[e2];
          throw (e2 = new Error("Cannot find module '" + e2 + "'")).code = "MODULE_NOT_FOUND", e2;
        }
        n.keys = function() {
          return Object.keys(s);
        }, n.resolve = i, (e.exports = n).id = 99;
      }, function(e, t, r) {
        "use strict";
        var s = t;
        function n() {
          s.util._configure(), s.Writer._configure(s.BufferWriter), s.Reader._configure(s.BufferReader);
        }
        s.build = "minimal", s.Writer = r(42), s.BufferWriter = r(109), s.Reader = r(43), s.BufferReader = r(110), s.util = r(9), s.rpc = r(111), s.roots = r(113), s.configure = n, n();
      }, function(e, t, r) {
        "use strict";
        e.exports = function(e2, t2) {
          for (var r2 = new Array(arguments.length - 1), s = 0, n = 2, i = true; n < arguments.length; )
            r2[s++] = arguments[n++];
          return new Promise(function(n2, o) {
            r2[s] = function(e3) {
              if (i)
                if (i = false, e3)
                  o(e3);
                else {
                  for (var t3 = new Array(arguments.length - 1), r3 = 0; r3 < t3.length; )
                    t3[r3++] = arguments[r3];
                  n2.apply(null, t3);
                }
            };
            try {
              e2.apply(t2 || null, r2);
            } catch (e3) {
              i && (i = false, o(e3));
            }
          });
        };
      }, function(e, t, r) {
        "use strict";
        t.length = function(e2) {
          var t2 = e2.length;
          if (!t2)
            return 0;
          for (var r2 = 0; 1 < --t2 % 4 && "=" === e2.charAt(t2); )
            ++r2;
          return Math.ceil(3 * e2.length) / 4 - r2;
        };
        for (var s = new Array(64), n = new Array(123), i = 0; i < 64; )
          n[s[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;
        t.encode = function(e2, t2, r2) {
          for (var n2, i2 = null, o2 = [], a = 0, u = 0; t2 < r2; ) {
            var c = e2[t2++];
            switch (u) {
              case 0:
                o2[a++] = s[c >> 2], n2 = (3 & c) << 4, u = 1;
                break;
              case 1:
                o2[a++] = s[n2 | c >> 4], n2 = (15 & c) << 2, u = 2;
                break;
              case 2:
                o2[a++] = s[n2 | c >> 6], o2[a++] = s[63 & c], u = 0;
            }
            8191 < a && ((i2 = i2 || []).push(String.fromCharCode.apply(String, o2)), a = 0);
          }
          return u && (o2[a++] = s[n2], o2[a++] = 61, 1 === u && (o2[a++] = 61)), i2 ? (a && i2.push(String.fromCharCode.apply(String, o2.slice(0, a))), i2.join("")) : String.fromCharCode.apply(String, o2.slice(0, a));
        };
        var o = "invalid encoding";
        t.decode = function(e2, t2, r2) {
          for (var s2, i2 = r2, a = 0, u = 0; u < e2.length; ) {
            var c = e2.charCodeAt(u++);
            if (61 === c && 1 < a)
              break;
            if (void 0 === (c = n[c]))
              throw Error(o);
            switch (a) {
              case 0:
                s2 = c, a = 1;
                break;
              case 1:
                t2[r2++] = s2 << 2 | (48 & c) >> 4, s2 = c, a = 2;
                break;
              case 2:
                t2[r2++] = (15 & s2) << 4 | (60 & c) >> 2, s2 = c, a = 3;
                break;
              case 3:
                t2[r2++] = (3 & s2) << 6 | c, a = 0;
            }
          }
          if (1 === a)
            throw Error(o);
          return r2 - i2;
        }, t.test = function(e2) {
          return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e2);
        };
      }, function(e, t, r) {
        "use strict";
        function s() {
          this._listeners = {};
        }
        (e.exports = s).prototype.on = function(e2, t2, r2) {
          return (this._listeners[e2] || (this._listeners[e2] = [])).push({ fn: t2, ctx: r2 || this }), this;
        }, s.prototype.off = function(e2, t2) {
          if (void 0 === e2)
            this._listeners = {};
          else if (void 0 === t2)
            this._listeners[e2] = [];
          else
            for (var r2 = this._listeners[e2], s2 = 0; s2 < r2.length; )
              r2[s2].fn === t2 ? r2.splice(s2, 1) : ++s2;
          return this;
        }, s.prototype.emit = function(e2) {
          var t2 = this._listeners[e2];
          if (t2) {
            for (var r2 = [], s2 = 1; s2 < arguments.length; )
              r2.push(arguments[s2++]);
            for (s2 = 0; s2 < t2.length; )
              t2[s2].fn.apply(t2[s2++].ctx, r2);
          }
          return this;
        };
      }, function(e, t, r) {
        "use strict";
        function s(e2) {
          function t2(e3, t3, r3, s3) {
            var n2 = t3 < 0 ? 1 : 0;
            0 === (t3 = n2 ? -t3 : t3) ? e3(0 < 1 / t3 ? 0 : 2147483648, r3, s3) : isNaN(t3) ? e3(2143289344, r3, s3) : e3(34028234663852886e22 < t3 ? (n2 << 31 | 2139095040) >>> 0 : t3 < 11754943508222875e-54 ? (n2 << 31 | Math.round(t3 / 1401298464324817e-60)) >>> 0 : (n2 << 31 | (e3 = Math.floor(Math.log(t3) / Math.LN2)) + 127 << 23 | 8388607 & Math.round(t3 * Math.pow(2, -e3) * 8388608)) >>> 0, r3, s3);
          }
          function r2(e3, t3, r3) {
            return t3 = 2 * ((e3 = e3(t3, r3)) >> 31) + 1, r3 = e3 >>> 23 & 255, e3 &= 8388607, 255 == r3 ? e3 ? NaN : 1 / 0 * t3 : 0 == r3 ? 1401298464324817e-60 * t3 * e3 : t3 * Math.pow(2, r3 - 150) * (8388608 + e3);
          }
          function s2(e3, t3, r3) {
            d[0] = e3, t3[r3] = p[0], t3[r3 + 1] = p[1], t3[r3 + 2] = p[2], t3[r3 + 3] = p[3];
          }
          function u(e3, t3, r3) {
            d[0] = e3, t3[r3] = p[3], t3[r3 + 1] = p[2], t3[r3 + 2] = p[1], t3[r3 + 3] = p[0];
          }
          function c(e3, t3) {
            return p[0] = e3[t3], p[1] = e3[t3 + 1], p[2] = e3[t3 + 2], p[3] = e3[t3 + 3], d[0];
          }
          function l(e3, t3) {
            return p[3] = e3[t3], p[2] = e3[t3 + 1], p[1] = e3[t3 + 2], p[0] = e3[t3 + 3], d[0];
          }
          var d, p, h, f, m;
          function g(e3, t3, r3, s3, n2, i2) {
            var o2, a2, u2 = s3 < 0 ? 1 : 0;
            0 === (s3 = u2 ? -s3 : s3) ? (e3(0, n2, i2 + t3), e3(0 < 1 / s3 ? 0 : 2147483648, n2, i2 + r3)) : isNaN(s3) ? (e3(0, n2, i2 + t3), e3(2146959360, n2, i2 + r3)) : 17976931348623157e292 < s3 ? (e3(0, n2, i2 + t3), e3((u2 << 31 | 2146435072) >>> 0, n2, i2 + r3)) : s3 < 22250738585072014e-324 ? (e3((o2 = s3 / 5e-324) >>> 0, n2, i2 + t3), e3((u2 << 31 | o2 / 4294967296) >>> 0, n2, i2 + r3)) : (1024 === (a2 = Math.floor(Math.log(s3) / Math.LN2)) && (a2 = 1023), e3(4503599627370496 * (o2 = s3 * Math.pow(2, -a2)) >>> 0, n2, i2 + t3), e3((u2 << 31 | a2 + 1023 << 20 | 1048576 * o2 & 1048575) >>> 0, n2, i2 + r3));
          }
          function _(e3, t3, r3, s3, n2) {
            return t3 = e3(s3, n2 + t3), s3 = 2 * ((e3 = e3(s3, n2 + r3)) >> 31) + 1, r3 = 4294967296 * (1048575 & e3) + t3, 2047 == (n2 = e3 >>> 20 & 2047) ? r3 ? NaN : 1 / 0 * s3 : 0 == n2 ? 5e-324 * s3 * r3 : s3 * Math.pow(2, n2 - 1075) * (r3 + 4503599627370496);
          }
          function b(e3, t3, r3) {
            h[0] = e3, t3[r3] = f[0], t3[r3 + 1] = f[1], t3[r3 + 2] = f[2], t3[r3 + 3] = f[3], t3[r3 + 4] = f[4], t3[r3 + 5] = f[5], t3[r3 + 6] = f[6], t3[r3 + 7] = f[7];
          }
          function v(e3, t3, r3) {
            h[0] = e3, t3[r3] = f[7], t3[r3 + 1] = f[6], t3[r3 + 2] = f[5], t3[r3 + 3] = f[4], t3[r3 + 4] = f[3], t3[r3 + 5] = f[2], t3[r3 + 6] = f[1], t3[r3 + 7] = f[0];
          }
          function y(e3, t3) {
            return f[0] = e3[t3], f[1] = e3[t3 + 1], f[2] = e3[t3 + 2], f[3] = e3[t3 + 3], f[4] = e3[t3 + 4], f[5] = e3[t3 + 5], f[6] = e3[t3 + 6], f[7] = e3[t3 + 7], h[0];
          }
          function M(e3, t3) {
            return f[7] = e3[t3], f[6] = e3[t3 + 1], f[5] = e3[t3 + 2], f[4] = e3[t3 + 3], f[3] = e3[t3 + 4], f[2] = e3[t3 + 5], f[1] = e3[t3 + 6], f[0] = e3[t3 + 7], h[0];
          }
          return "undefined" != typeof Float32Array ? (d = new Float32Array([-0]), m = 128 === (p = new Uint8Array(d.buffer))[3], e2.writeFloatLE = m ? s2 : u, e2.writeFloatBE = m ? u : s2, e2.readFloatLE = m ? c : l, e2.readFloatBE = m ? l : c) : (e2.writeFloatLE = t2.bind(null, n), e2.writeFloatBE = t2.bind(null, i), e2.readFloatLE = r2.bind(null, o), e2.readFloatBE = r2.bind(null, a)), "undefined" != typeof Float64Array ? (h = new Float64Array([-0]), m = 128 === (f = new Uint8Array(h.buffer))[7], e2.writeDoubleLE = m ? b : v, e2.writeDoubleBE = m ? v : b, e2.readDoubleLE = m ? y : M, e2.readDoubleBE = m ? M : y) : (e2.writeDoubleLE = g.bind(null, n, 0, 4), e2.writeDoubleBE = g.bind(null, i, 4, 0), e2.readDoubleLE = _.bind(null, o, 0, 4), e2.readDoubleBE = _.bind(null, a, 4, 0)), e2;
        }
        function n(e2, t2, r2) {
          t2[r2] = 255 & e2, t2[r2 + 1] = e2 >>> 8 & 255, t2[r2 + 2] = e2 >>> 16 & 255, t2[r2 + 3] = e2 >>> 24;
        }
        function i(e2, t2, r2) {
          t2[r2] = e2 >>> 24, t2[r2 + 1] = e2 >>> 16 & 255, t2[r2 + 2] = e2 >>> 8 & 255, t2[r2 + 3] = 255 & e2;
        }
        function o(e2, t2) {
          return (e2[t2] | e2[t2 + 1] << 8 | e2[t2 + 2] << 16 | e2[t2 + 3] << 24) >>> 0;
        }
        function a(e2, t2) {
          return (e2[t2] << 24 | e2[t2 + 1] << 16 | e2[t2 + 2] << 8 | e2[t2 + 3]) >>> 0;
        }
        e.exports = s(s);
      }, function(module, exports, __webpack_require__) {
        "use strict";
        function inquire(moduleName) {
          try {
            var mod = eval("quire".replace(/^/, "re"))(moduleName);
            if (mod && (mod.length || Object.keys(mod).length))
              return mod;
          } catch (e) {
          }
          return null;
        }
        module.exports = inquire;
      }, function(e, t, r) {
        "use strict";
        t.length = function(e2) {
          for (var t2, r2 = 0, s = 0; s < e2.length; ++s)
            (t2 = e2.charCodeAt(s)) < 128 ? r2 += 1 : t2 < 2048 ? r2 += 2 : 55296 == (64512 & t2) && 56320 == (64512 & e2.charCodeAt(s + 1)) ? (++s, r2 += 4) : r2 += 3;
          return r2;
        }, t.read = function(e2, t2, r2) {
          if (r2 - t2 < 1)
            return "";
          for (var s, n = null, i = [], o = 0; t2 < r2; )
            (s = e2[t2++]) < 128 ? i[o++] = s : 191 < s && s < 224 ? i[o++] = (31 & s) << 6 | 63 & e2[t2++] : 239 < s && s < 365 ? (s = ((7 & s) << 18 | (63 & e2[t2++]) << 12 | (63 & e2[t2++]) << 6 | 63 & e2[t2++]) - 65536, i[o++] = 55296 + (s >> 10), i[o++] = 56320 + (1023 & s)) : i[o++] = (15 & s) << 12 | (63 & e2[t2++]) << 6 | 63 & e2[t2++], 8191 < o && ((n = n || []).push(String.fromCharCode.apply(String, i)), o = 0);
          return n ? (o && n.push(String.fromCharCode.apply(String, i.slice(0, o))), n.join("")) : String.fromCharCode.apply(String, i.slice(0, o));
        }, t.write = function(e2, t2, r2) {
          for (var s, n, i = r2, o = 0; o < e2.length; ++o)
            (s = e2.charCodeAt(o)) < 128 ? t2[r2++] = s : (s < 2048 ? t2[r2++] = s >> 6 | 192 : (55296 == (64512 & s) && 56320 == (64512 & (n = e2.charCodeAt(o + 1))) ? (++o, t2[r2++] = (s = 65536 + ((1023 & s) << 10) + (1023 & n)) >> 18 | 240, t2[r2++] = s >> 12 & 63 | 128) : t2[r2++] = s >> 12 | 224, t2[r2++] = s >> 6 & 63 | 128), t2[r2++] = 63 & s | 128);
          return r2 - i;
        };
      }, function(e, t, r) {
        "use strict";
        e.exports = function(e2, t2, r2) {
          var s = r2 || 8192, n = s >>> 1, i = null, o = s;
          return function(r3) {
            return r3 < 1 || n < r3 ? e2(r3) : (s < o + r3 && (i = e2(s), o = 0), r3 = t2.call(i, o, o += r3), 7 & o && (o = 1 + (7 | o)), r3);
          };
        };
      }, function(e, t, r) {
        "use strict";
        e.exports = n;
        var s = r(9);
        function n(e2, t2) {
          this.lo = e2 >>> 0, this.hi = t2 >>> 0;
        }
        var i = n.zero = new n(0, 0), o = (i.toNumber = function() {
          return 0;
        }, i.zzEncode = i.zzDecode = function() {
          return this;
        }, i.length = function() {
          return 1;
        }, n.zeroHash = "\0\0\0\0\0\0\0\0", n.fromNumber = function(e2) {
          if (0 === e2)
            return i;
          var t2 = e2 < 0, r2 = (e2 = t2 ? -e2 : e2) >>> 0;
          e2 = (e2 - r2) / 4294967296 >>> 0;
          return t2 && (e2 = ~e2 >>> 0, r2 = ~r2 >>> 0, 4294967295 < ++r2 && (r2 = 0, 4294967295 < ++e2 && (e2 = 0))), new n(r2, e2);
        }, n.from = function(e2) {
          if ("number" == typeof e2)
            return n.fromNumber(e2);
          if (s.isString(e2)) {
            if (!s.Long)
              return n.fromNumber(parseInt(e2, 10));
            e2 = s.Long.fromString(e2);
          }
          return e2.low || e2.high ? new n(e2.low >>> 0, e2.high >>> 0) : i;
        }, n.prototype.toNumber = function(e2) {
          var t2;
          return !e2 && this.hi >>> 31 ? (e2 = 1 + ~this.lo >>> 0, t2 = ~this.hi >>> 0, -(e2 + 4294967296 * (t2 = e2 ? t2 : t2 + 1 >>> 0))) : this.lo + 4294967296 * this.hi;
        }, n.prototype.toLong = function(e2) {
          return s.Long ? new s.Long(0 | this.lo, 0 | this.hi, Boolean(e2)) : { low: 0 | this.lo, high: 0 | this.hi, unsigned: Boolean(e2) };
        }, String.prototype.charCodeAt);
        n.fromHash = function(e2) {
          return "\0\0\0\0\0\0\0\0" === e2 ? i : new n((o.call(e2, 0) | o.call(e2, 1) << 8 | o.call(e2, 2) << 16 | o.call(e2, 3) << 24) >>> 0, (o.call(e2, 4) | o.call(e2, 5) << 8 | o.call(e2, 6) << 16 | o.call(e2, 7) << 24) >>> 0);
        }, n.prototype.toHash = function() {
          return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);
        }, n.prototype.zzEncode = function() {
          var e2 = this.hi >> 31;
          return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e2) >>> 0, this.lo = (this.lo << 1 ^ e2) >>> 0, this;
        }, n.prototype.zzDecode = function() {
          var e2 = -(1 & this.lo);
          return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e2) >>> 0, this.hi = (this.hi >>> 1 ^ e2) >>> 0, this;
        }, n.prototype.length = function() {
          var e2 = this.lo, t2 = (this.lo >>> 28 | this.hi << 4) >>> 0, r2 = this.hi >>> 24;
          return 0 == r2 ? 0 == t2 ? e2 < 16384 ? e2 < 128 ? 1 : 2 : e2 < 2097152 ? 3 : 4 : t2 < 16384 ? t2 < 128 ? 5 : 6 : t2 < 2097152 ? 7 : 8 : r2 < 128 ? 9 : 10;
        };
      }, function(e, t, r) {
        "use strict";
        e.exports = i;
        var s = r(42), n = ((i.prototype = Object.create(s.prototype)).constructor = i, r(9));
        function i() {
          s.call(this);
        }
        function o(e2, t2, r2) {
          e2.length < 40 ? n.utf8.write(e2, t2, r2) : t2.utf8Write ? t2.utf8Write(e2, r2) : t2.write(e2, r2);
        }
        i._configure = function() {
          i.alloc = n._Buffer_allocUnsafe, i.writeBytesBuffer = n.Buffer && n.Buffer.prototype instanceof Uint8Array && "set" === n.Buffer.prototype.set.name ? function(e2, t2, r2) {
            t2.set(e2, r2);
          } : function(e2, t2, r2) {
            if (e2.copy)
              e2.copy(t2, r2, 0, e2.length);
            else
              for (var s2 = 0; s2 < e2.length; )
                t2[r2++] = e2[s2++];
          };
        }, i.prototype.bytes = function(e2) {
          var t2 = (e2 = n.isString(e2) ? n._Buffer_from(e2, "base64") : e2).length >>> 0;
          return this.uint32(t2), t2 && this._push(i.writeBytesBuffer, t2, e2), this;
        }, i.prototype.string = function(e2) {
          var t2 = n.Buffer.byteLength(e2);
          return this.uint32(t2), t2 && this._push(o, t2, e2), this;
        }, i._configure();
      }, function(e, t, r) {
        "use strict";
        e.exports = i;
        var s = r(43), n = ((i.prototype = Object.create(s.prototype)).constructor = i, r(9));
        function i(e2) {
          s.call(this, e2);
        }
        i._configure = function() {
          n.Buffer && (i.prototype._slice = n.Buffer.prototype.slice);
        }, i.prototype.string = function() {
          var e2 = this.uint32();
          return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e2, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + e2, this.len));
        }, i._configure();
      }, function(e, t, r) {
        "use strict";
        t.Service = r(112);
      }, function(e, t, r) {
        "use strict";
        e.exports = n;
        var s = r(9);
        function n(e2, t2, r2) {
          if ("function" != typeof e2)
            throw TypeError("rpcImpl must be a function");
          s.EventEmitter.call(this), this.rpcImpl = e2, this.requestDelimited = Boolean(t2), this.responseDelimited = Boolean(r2);
        }
        ((n.prototype = Object.create(s.EventEmitter.prototype)).constructor = n).prototype.rpcCall = function e2(t2, r2, n2, i, o) {
          if (!i)
            throw TypeError("request must be specified");
          var a = this;
          if (!o)
            return s.asPromise(e2, a, t2, r2, n2, i);
          if (a.rpcImpl)
            try {
              return a.rpcImpl(t2, r2[a.requestDelimited ? "encodeDelimited" : "encode"](i).finish(), function(e3, r3) {
                if (e3)
                  return a.emit("error", e3, t2), o(e3);
                if (null !== r3) {
                  if (!(r3 instanceof n2))
                    try {
                      r3 = n2[a.responseDelimited ? "decodeDelimited" : "decode"](r3);
                    } catch (e4) {
                      return a.emit("error", e4, t2), o(e4);
                    }
                  return a.emit("data", r3, t2), o(null, r3);
                }
                a.end(true);
              });
            } catch (e3) {
              return a.emit("error", e3, t2), void setTimeout(function() {
                o(e3);
              }, 0);
            }
          else
            setTimeout(function() {
              o(Error("already ended"));
            }, 0);
        }, n.prototype.end = function(e2) {
          return this.rpcImpl && (e2 || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit("end").off()), this;
        };
      }, function(e, t, r) {
        "use strict";
        e.exports = {};
      }, function(e, t, r) {
        var s = { "./formdata": 49, "./formdata.ts": 49, "./zego.fileHandler": 50, "./zego.fileHandler.ts": 50, "./zego.storeHandler": 51, "./zego.storeHandler.ts": 51 };
        function n(e2) {
          return e2 = i(e2), r(e2);
        }
        function i(e2) {
          if (r.o(s, e2))
            return s[e2];
          throw (e2 = new Error("Cannot find module '" + e2 + "'")).code = "MODULE_NOT_FOUND", e2;
        }
        n.keys = function() {
          return Object.keys(s);
        }, n.resolve = i, (e.exports = n).id = 114;
      }, function(e, t, r) {
        "use strict";
        (function(e2) {
          var s = r(116), n = r(117), i = r(118);
          function o() {
            return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
          }
          function a(e3, t2) {
            if (o() < t2)
              throw new RangeError("Invalid typed array length");
            return u.TYPED_ARRAY_SUPPORT ? (e3 = new Uint8Array(t2)).__proto__ = u.prototype : (e3 = null === e3 ? new u(t2) : e3).length = t2, e3;
          }
          function u(e3, t2, r2) {
            if (!(u.TYPED_ARRAY_SUPPORT || this instanceof u))
              return new u(e3, t2, r2);
            if ("number" != typeof e3)
              return c(this, e3, t2, r2);
            if ("string" == typeof t2)
              throw new Error("If encoding is specified then the first argument must be a string");
            return d(this, e3);
          }
          function c(e3, t2, r2, s2) {
            if ("number" == typeof t2)
              throw new TypeError('"value" argument must not be a number');
            if ("undefined" != typeof ArrayBuffer && t2 instanceof ArrayBuffer) {
              var n2 = e3, o2 = t2, c2 = r2;
              if (o2.byteLength, c2 < 0 || o2.byteLength < c2)
                throw new RangeError("'offset' is out of bounds");
              if (o2.byteLength < c2 + (s2 || 0))
                throw new RangeError("'length' is out of bounds");
              return o2 = void 0 === c2 && void 0 === s2 ? new Uint8Array(o2) : void 0 === s2 ? new Uint8Array(o2, c2) : new Uint8Array(o2, c2, s2), u.TYPED_ARRAY_SUPPORT ? (n2 = o2).__proto__ = u.prototype : n2 = p(n2, o2), n2;
            }
            if ("string" != typeof t2) {
              if (c2 = e3, s2 = t2, u.isBuffer(s2))
                return 0 !== (c2 = a(c2, o2 = 0 | h(s2.length))).length && s2.copy(c2, 0, 0, o2), c2;
              if (s2) {
                if ("undefined" != typeof ArrayBuffer && s2.buffer instanceof ArrayBuffer || "length" in s2)
                  return "number" != typeof s2.length || function(e4) {
                    return e4 != e4;
                  }(s2.length) ? a(c2, 0) : p(c2, s2);
                if ("Buffer" === s2.type && i(s2.data))
                  return p(c2, s2.data);
              }
              throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
            }
            if (n2 = e3, s2 = t2, e3 = r2, !u.isEncoding(e3 = "string" == typeof e3 && "" !== e3 ? e3 : "utf8"))
              throw new TypeError('"encoding" must be a valid string encoding');
            return (s2 = (n2 = a(n2, t2 = 0 | f(s2, e3))).write(s2, e3)) !== t2 ? n2.slice(0, s2) : n2;
          }
          function l(e3) {
            if ("number" != typeof e3)
              throw new TypeError('"size" argument must be a number');
            if (e3 < 0)
              throw new RangeError('"size" argument must not be negative');
          }
          function d(e3, t2) {
            if (l(t2), e3 = a(e3, t2 < 0 ? 0 : 0 | h(t2)), !u.TYPED_ARRAY_SUPPORT)
              for (var r2 = 0; r2 < t2; ++r2)
                e3[r2] = 0;
            return e3;
          }
          function p(e3, t2) {
            var r2 = t2.length < 0 ? 0 : 0 | h(t2.length);
            e3 = a(e3, r2);
            for (var s2 = 0; s2 < r2; s2 += 1)
              e3[s2] = 255 & t2[s2];
            return e3;
          }
          function h(e3) {
            if (e3 >= o())
              throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o().toString(16) + " bytes");
            return 0 | e3;
          }
          function f(e3, t2) {
            if (u.isBuffer(e3))
              return e3.length;
            if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e3) || e3 instanceof ArrayBuffer))
              return e3.byteLength;
            var r2 = (e3 = "string" != typeof e3 ? "" + e3 : e3).length;
            if (0 === r2)
              return 0;
            for (var s2 = false; ; )
              switch (t2) {
                case "ascii":
                case "latin1":
                case "binary":
                  return r2;
                case "utf8":
                case "utf-8":
                case void 0:
                  return x(e3).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return 2 * r2;
                case "hex":
                  return r2 >>> 1;
                case "base64":
                  return T(e3).length;
                default:
                  if (s2)
                    return x(e3).length;
                  t2 = ("" + t2).toLowerCase(), s2 = true;
              }
          }
          function m(e3, t2, r2) {
            var n2, i2 = false;
            if ((t2 = void 0 === t2 || t2 < 0 ? 0 : t2) > this.length)
              return "";
            if ((r2 = void 0 === r2 || r2 > this.length ? this.length : r2) <= 0)
              return "";
            if ((r2 >>>= 0) <= (t2 >>>= 0))
              return "";
            for (e3 = e3 || "utf8"; ; )
              switch (e3) {
                case "hex":
                  var o2 = t2, a2 = r2, u2 = this.length;
                  (!a2 || a2 < 0 || u2 < a2) && (a2 = u2);
                  for (var c2 = "", l2 = o2 = !o2 || o2 < 0 ? 0 : o2; l2 < a2; ++l2)
                    c2 += function(e4) {
                      return e4 < 16 ? "0" + e4.toString(16) : e4.toString(16);
                    }(this[l2]);
                  return c2;
                case "utf8":
                case "utf-8":
                  return M(this, t2, r2);
                case "ascii":
                  u2 = t2;
                  var d2 = r2, p2 = "";
                  d2 = Math.min(this.length, d2);
                  for (var h2 = u2; h2 < d2; ++h2)
                    p2 += String.fromCharCode(127 & this[h2]);
                  return p2;
                case "latin1":
                case "binary":
                  o2 = t2;
                  var f2 = r2, m2 = "";
                  f2 = Math.min(this.length, f2);
                  for (var g2 = o2; g2 < f2; ++g2)
                    m2 += String.fromCharCode(this[g2]);
                  return m2;
                case "base64":
                  return _2 = this, n2 = r2, 0 === (b2 = t2) && n2 === _2.length ? s.fromByteArray(_2) : s.fromByteArray(_2.slice(b2, n2));
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  for (var _2 = t2, b2 = r2, v2 = this.slice(_2, b2), y2 = "", k2 = 0; k2 < v2.length; k2 += 2)
                    y2 += String.fromCharCode(v2[k2] + 256 * v2[k2 + 1]);
                  return y2;
                default:
                  if (i2)
                    throw new TypeError("Unknown encoding: " + e3);
                  e3 = (e3 + "").toLowerCase(), i2 = true;
              }
          }
          function g(e3, t2, r2) {
            var s2 = e3[t2];
            e3[t2] = e3[r2], e3[r2] = s2;
          }
          function _(e3, t2, r2, s2, n2) {
            if (0 === e3.length)
              return -1;
            if ("string" == typeof r2 ? (s2 = r2, r2 = 0) : 2147483647 < r2 ? r2 = 2147483647 : r2 < -2147483648 && (r2 = -2147483648), r2 = +r2, (r2 = (r2 = isNaN(r2) ? n2 ? 0 : e3.length - 1 : r2) < 0 ? e3.length + r2 : r2) >= e3.length) {
              if (n2)
                return -1;
              r2 = e3.length - 1;
            } else if (r2 < 0) {
              if (!n2)
                return -1;
              r2 = 0;
            }
            if ("string" == typeof t2 && (t2 = u.from(t2, s2)), u.isBuffer(t2))
              return 0 === t2.length ? -1 : b(e3, t2, r2, s2, n2);
            if ("number" == typeof t2)
              return t2 &= 255, u.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? (n2 ? Uint8Array.prototype.indexOf : Uint8Array.prototype.lastIndexOf).call(e3, t2, r2) : b(e3, [t2], r2, s2, n2);
            throw new TypeError("val must be string, number or Buffer");
          }
          function b(e3, t2, r2, s2, n2) {
            var i2 = 1, o2 = e3.length, a2 = t2.length;
            if (void 0 !== s2 && ("ucs2" === (s2 = String(s2).toLowerCase()) || "ucs-2" === s2 || "utf16le" === s2 || "utf-16le" === s2)) {
              if (e3.length < 2 || t2.length < 2)
                return -1;
              o2 /= i2 = 2, a2 /= 2, r2 /= 2;
            }
            function u2(e4, t3) {
              return 1 === i2 ? e4[t3] : e4.readUInt16BE(t3 * i2);
            }
            if (n2)
              for (var c2 = -1, l2 = r2; l2 < o2; l2++)
                if (u2(e3, l2) === u2(t2, -1 === c2 ? 0 : l2 - c2)) {
                  if (l2 - (c2 = -1 === c2 ? l2 : c2) + 1 === a2)
                    return c2 * i2;
                } else
                  -1 !== c2 && (l2 -= l2 - c2), c2 = -1;
            else
              for (l2 = r2 = o2 < r2 + a2 ? o2 - a2 : r2; 0 <= l2; l2--) {
                for (var d2 = true, p2 = 0; p2 < a2; p2++)
                  if (u2(e3, l2 + p2) !== u2(t2, p2)) {
                    d2 = false;
                    break;
                  }
                if (d2)
                  return l2;
              }
            return -1;
          }
          function v(e3, t2, r2, s2) {
            return O(function(e4) {
              for (var t3 = [], r3 = 0; r3 < e4.length; ++r3)
                t3.push(255 & e4.charCodeAt(r3));
              return t3;
            }(t2), e3, r2, s2);
          }
          function y(e3, t2, r2, s2) {
            return O(function(e4, t3) {
              for (var r3, s3, n2 = [], i2 = 0; i2 < e4.length && !((t3 -= 2) < 0); ++i2)
                r3 = (s3 = e4.charCodeAt(i2)) >> 8, s3 %= 256, n2.push(s3), n2.push(r3);
              return n2;
            }(t2, e3.length - r2), e3, r2, s2);
          }
          function M(e3, t2, r2) {
            r2 = Math.min(e3.length, r2);
            for (var s2 = [], n2 = t2; n2 < r2; ) {
              var i2, o2, a2, u2, c2 = e3[n2], l2 = null, d2 = 239 < c2 ? 4 : 223 < c2 ? 3 : 191 < c2 ? 2 : 1;
              if (n2 + d2 <= r2)
                switch (d2) {
                  case 1:
                    c2 < 128 && (l2 = c2);
                    break;
                  case 2:
                    128 == (192 & (i2 = e3[n2 + 1])) && 127 < (u2 = (31 & c2) << 6 | 63 & i2) && (l2 = u2);
                    break;
                  case 3:
                    i2 = e3[n2 + 1], o2 = e3[n2 + 2], 128 == (192 & i2) && 128 == (192 & o2) && 2047 < (u2 = (15 & c2) << 12 | (63 & i2) << 6 | 63 & o2) && (u2 < 55296 || 57343 < u2) && (l2 = u2);
                    break;
                  case 4:
                    i2 = e3[n2 + 1], o2 = e3[n2 + 2], a2 = e3[n2 + 3], 128 == (192 & i2) && 128 == (192 & o2) && 128 == (192 & a2) && 65535 < (u2 = (15 & c2) << 18 | (63 & i2) << 12 | (63 & o2) << 6 | 63 & a2) && u2 < 1114112 && (l2 = u2);
                }
              null === l2 ? (l2 = 65533, d2 = 1) : 65535 < l2 && (l2 -= 65536, s2.push(l2 >>> 10 & 1023 | 55296), l2 = 56320 | 1023 & l2), s2.push(l2), n2 += d2;
            }
            var p2 = s2, h2 = p2.length;
            if (h2 <= k)
              return String.fromCharCode.apply(String, p2);
            for (var f2 = "", m2 = 0; m2 < h2; )
              f2 += String.fromCharCode.apply(String, p2.slice(m2, m2 += k));
            return f2;
          }
          t.Buffer = u, t.SlowBuffer = function(e3) {
            return +e3 != e3 && (e3 = 0), u.alloc(+e3);
          }, t.INSPECT_MAX_BYTES = 50, u.TYPED_ARRAY_SUPPORT = void 0 !== e2.TYPED_ARRAY_SUPPORT ? e2.TYPED_ARRAY_SUPPORT : function() {
            try {
              var e3 = new Uint8Array(1);
              return e3.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
                return 42;
              } }, 42 === e3.foo() && "function" == typeof e3.subarray && 0 === e3.subarray(1, 1).byteLength;
            } catch (e4) {
              return false;
            }
          }(), t.kMaxLength = o(), u.poolSize = 8192, u._augment = function(e3) {
            return e3.__proto__ = u.prototype, e3;
          }, u.from = function(e3, t2, r2) {
            return c(null, e3, t2, r2);
          }, u.TYPED_ARRAY_SUPPORT && (u.prototype.__proto__ = Uint8Array.prototype, u.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && u[Symbol.species] === u && Object.defineProperty(u, Symbol.species, { value: null, configurable: true })), u.alloc = function(e3, t2, r2) {
            return s2 = null, t2 = t2, r2 = r2, l(e3 = e3), e3 <= 0 || void 0 === t2 ? a(s2, e3) : "string" == typeof r2 ? a(s2, e3).fill(t2, r2) : a(s2, e3).fill(t2);
            var s2;
          }, u.allocUnsafe = function(e3) {
            return d(null, e3);
          }, u.allocUnsafeSlow = function(e3) {
            return d(null, e3);
          }, u.isBuffer = function(e3) {
            return !(null == e3 || !e3._isBuffer);
          }, u.compare = function(e3, t2) {
            if (!u.isBuffer(e3) || !u.isBuffer(t2))
              throw new TypeError("Arguments must be Buffers");
            if (e3 === t2)
              return 0;
            for (var r2 = e3.length, s2 = t2.length, n2 = 0, i2 = Math.min(r2, s2); n2 < i2; ++n2)
              if (e3[n2] !== t2[n2]) {
                r2 = e3[n2], s2 = t2[n2];
                break;
              }
            return r2 < s2 ? -1 : s2 < r2 ? 1 : 0;
          }, u.isEncoding = function(e3) {
            switch (String(e3).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return true;
              default:
                return false;
            }
          }, u.concat = function(e3, t2) {
            if (!i(e3))
              throw new TypeError('"list" argument must be an Array of Buffers');
            if (0 === e3.length)
              return u.alloc(0);
            if (void 0 === t2)
              for (n2 = t2 = 0; n2 < e3.length; ++n2)
                t2 += e3[n2].length;
            for (var r2 = u.allocUnsafe(t2), s2 = 0, n2 = 0; n2 < e3.length; ++n2) {
              var o2 = e3[n2];
              if (!u.isBuffer(o2))
                throw new TypeError('"list" argument must be an Array of Buffers');
              o2.copy(r2, s2), s2 += o2.length;
            }
            return r2;
          }, u.byteLength = f, u.prototype._isBuffer = true, u.prototype.swap16 = function() {
            var e3 = this.length;
            if (e3 % 2 != 0)
              throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (var t2 = 0; t2 < e3; t2 += 2)
              g(this, t2, t2 + 1);
            return this;
          }, u.prototype.swap32 = function() {
            var e3 = this.length;
            if (e3 % 4 != 0)
              throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var t2 = 0; t2 < e3; t2 += 4)
              g(this, t2, t2 + 3), g(this, t2 + 1, t2 + 2);
            return this;
          }, u.prototype.swap64 = function() {
            var e3 = this.length;
            if (e3 % 8 != 0)
              throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var t2 = 0; t2 < e3; t2 += 8)
              g(this, t2, t2 + 7), g(this, t2 + 1, t2 + 6), g(this, t2 + 2, t2 + 5), g(this, t2 + 3, t2 + 4);
            return this;
          }, u.prototype.toString = function() {
            var e3 = 0 | this.length;
            return 0 == e3 ? "" : 0 === arguments.length ? M(this, 0, e3) : m.apply(this, arguments);
          }, u.prototype.equals = function(e3) {
            if (u.isBuffer(e3))
              return this === e3 || 0 === u.compare(this, e3);
            throw new TypeError("Argument must be a Buffer");
          }, u.prototype.inspect = function() {
            var e3 = "", r2 = t.INSPECT_MAX_BYTES;
            return 0 < this.length && (e3 = this.toString("hex", 0, r2).match(/.{2}/g).join(" "), this.length > r2 && (e3 += " ... ")), "<Buffer " + e3 + ">";
          }, u.prototype.compare = function(e3, t2, r2, s2, n2) {
            if (!u.isBuffer(e3))
              throw new TypeError("Argument must be a Buffer");
            if (void 0 === r2 && (r2 = e3 ? e3.length : 0), void 0 === s2 && (s2 = 0), void 0 === n2 && (n2 = this.length), (t2 = void 0 === t2 ? 0 : t2) < 0 || r2 > e3.length || s2 < 0 || n2 > this.length)
              throw new RangeError("out of range index");
            if (n2 <= s2 && r2 <= t2)
              return 0;
            if (n2 <= s2)
              return -1;
            if (r2 <= t2)
              return 1;
            if (this === e3)
              return 0;
            for (var i2 = (n2 >>>= 0) - (s2 >>>= 0), o2 = (r2 >>>= 0) - (t2 >>>= 0), a2 = Math.min(i2, o2), c2 = this.slice(s2, n2), l2 = e3.slice(t2, r2), d2 = 0; d2 < a2; ++d2)
              if (c2[d2] !== l2[d2]) {
                i2 = c2[d2], o2 = l2[d2];
                break;
              }
            return i2 < o2 ? -1 : o2 < i2 ? 1 : 0;
          }, u.prototype.includes = function(e3, t2, r2) {
            return -1 !== this.indexOf(e3, t2, r2);
          }, u.prototype.indexOf = function(e3, t2, r2) {
            return _(this, e3, t2, r2, true);
          }, u.prototype.lastIndexOf = function(e3, t2, r2) {
            return _(this, e3, t2, r2, false);
          }, u.prototype.write = function(e3, t2, r2, s2) {
            if (void 0 === t2)
              s2 = "utf8", r2 = this.length, t2 = 0;
            else if (void 0 === r2 && "string" == typeof t2)
              s2 = t2, r2 = this.length, t2 = 0;
            else {
              if (!isFinite(t2))
                throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
              t2 |= 0, isFinite(r2) ? (r2 |= 0, void 0 === s2 && (s2 = "utf8")) : (s2 = r2, r2 = void 0);
            }
            var n2 = this.length - t2;
            if ((void 0 === r2 || n2 < r2) && (r2 = n2), 0 < e3.length && (r2 < 0 || t2 < 0) || t2 > this.length)
              throw new RangeError("Attempt to write outside buffer bounds");
            s2 = s2 || "utf8";
            for (var i2, o2, a2, u2 = false; ; )
              switch (s2) {
                case "hex":
                  var c2 = e3, l2 = t2, d2 = r2, p2 = (l2 = Number(l2) || 0, this.length - l2);
                  if ((!d2 || p2 < (d2 = Number(d2))) && (d2 = p2), (p2 = c2.length) % 2 != 0)
                    throw new TypeError("Invalid hex string");
                  p2 / 2 < d2 && (d2 = p2 / 2);
                  for (var h2 = 0; h2 < d2; ++h2) {
                    var f2 = parseInt(c2.substr(2 * h2, 2), 16);
                    if (isNaN(f2))
                      return h2;
                    this[l2 + h2] = f2;
                  }
                  return h2;
                case "utf8":
                case "utf-8":
                  return p2 = t2, a2 = r2, O(x(e3, (o2 = this).length - p2), o2, p2, a2);
                case "ascii":
                  return v(this, e3, t2, r2);
                case "latin1":
                case "binary":
                  return v(this, e3, t2, r2);
                case "base64":
                  return o2 = this, a2 = t2, i2 = r2, O(T(e3), o2, a2, i2);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return y(this, e3, t2, r2);
                default:
                  if (u2)
                    throw new TypeError("Unknown encoding: " + s2);
                  s2 = ("" + s2).toLowerCase(), u2 = true;
              }
          }, u.prototype.toJSON = function() {
            return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
          };
          var k = 4096;
          function I(e3, t2, r2) {
            if (e3 % 1 != 0 || e3 < 0)
              throw new RangeError("offset is not uint");
            if (r2 < e3 + t2)
              throw new RangeError("Trying to access beyond buffer length");
          }
          function S(e3, t2, r2, s2, n2, i2) {
            if (!u.isBuffer(e3))
              throw new TypeError('"buffer" argument must be a Buffer instance');
            if (n2 < t2 || t2 < i2)
              throw new RangeError('"value" argument is out of bounds');
            if (r2 + s2 > e3.length)
              throw new RangeError("Index out of range");
          }
          function D(e3, t2, r2, s2) {
            t2 < 0 && (t2 = 65535 + t2 + 1);
            for (var n2 = 0, i2 = Math.min(e3.length - r2, 2); n2 < i2; ++n2)
              e3[r2 + n2] = (t2 & 255 << 8 * (s2 ? n2 : 1 - n2)) >>> 8 * (s2 ? n2 : 1 - n2);
          }
          function q(e3, t2, r2, s2) {
            t2 < 0 && (t2 = 4294967295 + t2 + 1);
            for (var n2 = 0, i2 = Math.min(e3.length - r2, 4); n2 < i2; ++n2)
              e3[r2 + n2] = t2 >>> 8 * (s2 ? n2 : 3 - n2) & 255;
          }
          function C(e3, t2, r2, s2) {
            if (r2 + s2 > e3.length)
              throw new RangeError("Index out of range");
            if (r2 < 0)
              throw new RangeError("Index out of range");
          }
          function w(e3, t2, r2, s2, i2) {
            return i2 || C(e3, 0, r2, 4), n.write(e3, t2, r2, s2, 23, 4), r2 + 4;
          }
          function A(e3, t2, r2, s2, i2) {
            return i2 || C(e3, 0, r2, 8), n.write(e3, t2, r2, s2, 52, 8), r2 + 8;
          }
          u.prototype.slice = function(e3, t2) {
            var r2 = this.length;
            if ((e3 = ~~e3) < 0 ? (e3 += r2) < 0 && (e3 = 0) : r2 < e3 && (e3 = r2), (t2 = void 0 === t2 ? r2 : ~~t2) < 0 ? (t2 += r2) < 0 && (t2 = 0) : r2 < t2 && (t2 = r2), t2 < e3 && (t2 = e3), u.TYPED_ARRAY_SUPPORT)
              (n2 = this.subarray(e3, t2)).__proto__ = u.prototype;
            else
              for (var s2 = t2 - e3, n2 = new u(s2, void 0), i2 = 0; i2 < s2; ++i2)
                n2[i2] = this[i2 + e3];
            return n2;
          }, u.prototype.readUIntLE = function(e3, t2, r2) {
            e3 |= 0, t2 |= 0, r2 || I(e3, t2, this.length);
            for (var s2 = this[e3], n2 = 1, i2 = 0; ++i2 < t2 && (n2 *= 256); )
              s2 += this[e3 + i2] * n2;
            return s2;
          }, u.prototype.readUIntBE = function(e3, t2, r2) {
            e3 |= 0, t2 |= 0, r2 || I(e3, t2, this.length);
            for (var s2 = this[e3 + --t2], n2 = 1; 0 < t2 && (n2 *= 256); )
              s2 += this[e3 + --t2] * n2;
            return s2;
          }, u.prototype.readUInt8 = function(e3, t2) {
            return t2 || I(e3, 1, this.length), this[e3];
          }, u.prototype.readUInt16LE = function(e3, t2) {
            return t2 || I(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
          }, u.prototype.readUInt16BE = function(e3, t2) {
            return t2 || I(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
          }, u.prototype.readUInt32LE = function(e3, t2) {
            return t2 || I(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
          }, u.prototype.readUInt32BE = function(e3, t2) {
            return t2 || I(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
          }, u.prototype.readIntLE = function(e3, t2, r2) {
            e3 |= 0, t2 |= 0, r2 || I(e3, t2, this.length);
            for (var s2 = this[e3], n2 = 1, i2 = 0; ++i2 < t2 && (n2 *= 256); )
              s2 += this[e3 + i2] * n2;
            return (n2 *= 128) <= s2 && (s2 -= Math.pow(2, 8 * t2)), s2;
          }, u.prototype.readIntBE = function(e3, t2, r2) {
            e3 |= 0, t2 |= 0, r2 || I(e3, t2, this.length);
            for (var s2 = t2, n2 = 1, i2 = this[e3 + --s2]; 0 < s2 && (n2 *= 256); )
              i2 += this[e3 + --s2] * n2;
            return (n2 *= 128) <= i2 && (i2 -= Math.pow(2, 8 * t2)), i2;
          }, u.prototype.readInt8 = function(e3, t2) {
            return t2 || I(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
          }, u.prototype.readInt16LE = function(e3, t2) {
            return t2 || I(e3, 2, this.length), 32768 & (t2 = this[e3] | this[e3 + 1] << 8) ? 4294901760 | t2 : t2;
          }, u.prototype.readInt16BE = function(e3, t2) {
            return t2 || I(e3, 2, this.length), 32768 & (t2 = this[e3 + 1] | this[e3] << 8) ? 4294901760 | t2 : t2;
          }, u.prototype.readInt32LE = function(e3, t2) {
            return t2 || I(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
          }, u.prototype.readInt32BE = function(e3, t2) {
            return t2 || I(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
          }, u.prototype.readFloatLE = function(e3, t2) {
            return t2 || I(e3, 4, this.length), n.read(this, e3, true, 23, 4);
          }, u.prototype.readFloatBE = function(e3, t2) {
            return t2 || I(e3, 4, this.length), n.read(this, e3, false, 23, 4);
          }, u.prototype.readDoubleLE = function(e3, t2) {
            return t2 || I(e3, 8, this.length), n.read(this, e3, true, 52, 8);
          }, u.prototype.readDoubleBE = function(e3, t2) {
            return t2 || I(e3, 8, this.length), n.read(this, e3, false, 52, 8);
          }, u.prototype.writeUIntLE = function(e3, t2, r2, s2) {
            e3 = +e3, t2 |= 0, r2 |= 0, s2 || S(this, e3, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
            var n2 = 1, i2 = 0;
            for (this[t2] = 255 & e3; ++i2 < r2 && (n2 *= 256); )
              this[t2 + i2] = e3 / n2 & 255;
            return t2 + r2;
          }, u.prototype.writeUIntBE = function(e3, t2, r2, s2) {
            e3 = +e3, t2 |= 0, r2 |= 0, s2 || S(this, e3, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
            var n2 = r2 - 1, i2 = 1;
            for (this[t2 + n2] = 255 & e3; 0 <= --n2 && (i2 *= 256); )
              this[t2 + n2] = e3 / i2 & 255;
            return t2 + r2;
          }, u.prototype.writeUInt8 = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 1, 255, 0), u.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), this[t2] = 255 & e3, t2 + 1;
          }, u.prototype.writeUInt16LE = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : D(this, e3, t2, true), t2 + 2;
          }, u.prototype.writeUInt16BE = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : D(this, e3, t2, false), t2 + 2;
          }, u.prototype.writeUInt32LE = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2 + 3] = e3 >>> 24, this[t2 + 2] = e3 >>> 16, this[t2 + 1] = e3 >>> 8, this[t2] = 255 & e3) : q(this, e3, t2, true), t2 + 4;
          }, u.prototype.writeUInt32BE = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : q(this, e3, t2, false), t2 + 4;
          }, u.prototype.writeIntLE = function(e3, t2, r2, s2) {
            e3 = +e3, t2 |= 0, s2 || S(this, e3, t2, r2, (s2 = Math.pow(2, 8 * r2 - 1)) - 1, -s2);
            var n2 = 0, i2 = 1, o2 = 0;
            for (this[t2] = 255 & e3; ++n2 < r2 && (i2 *= 256); )
              e3 < 0 && 0 === o2 && 0 !== this[t2 + n2 - 1] && (o2 = 1), this[t2 + n2] = (e3 / i2 >> 0) - o2 & 255;
            return t2 + r2;
          }, u.prototype.writeIntBE = function(e3, t2, r2, s2) {
            e3 = +e3, t2 |= 0, s2 || S(this, e3, t2, r2, (s2 = Math.pow(2, 8 * r2 - 1)) - 1, -s2);
            var n2 = r2 - 1, i2 = 1, o2 = 0;
            for (this[t2 + n2] = 255 & e3; 0 <= --n2 && (i2 *= 256); )
              e3 < 0 && 0 === o2 && 0 !== this[t2 + n2 + 1] && (o2 = 1), this[t2 + n2] = (e3 / i2 >> 0) - o2 & 255;
            return t2 + r2;
          }, u.prototype.writeInt8 = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 1, 127, -128), u.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), this[t2] = 255 & (e3 = e3 < 0 ? 255 + e3 + 1 : e3), t2 + 1;
          }, u.prototype.writeInt16LE = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : D(this, e3, t2, true), t2 + 2;
          }, u.prototype.writeInt16BE = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : D(this, e3, t2, false), t2 + 2;
          }, u.prototype.writeInt32LE = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 4, 2147483647, -2147483648), u.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8, this[t2 + 2] = e3 >>> 16, this[t2 + 3] = e3 >>> 24) : q(this, e3, t2, true), t2 + 4;
          }, u.prototype.writeInt32BE = function(e3, t2, r2) {
            return e3 = +e3, t2 |= 0, r2 || S(this, e3, t2, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : q(this, e3, t2, false), t2 + 4;
          }, u.prototype.writeFloatLE = function(e3, t2, r2) {
            return w(this, e3, t2, true, r2);
          }, u.prototype.writeFloatBE = function(e3, t2, r2) {
            return w(this, e3, t2, false, r2);
          }, u.prototype.writeDoubleLE = function(e3, t2, r2) {
            return A(this, e3, t2, true, r2);
          }, u.prototype.writeDoubleBE = function(e3, t2, r2) {
            return A(this, e3, t2, false, r2);
          }, u.prototype.copy = function(e3, t2, r2, s2) {
            if (r2 = r2 || 0, s2 || 0 === s2 || (s2 = this.length), t2 >= e3.length && (t2 = e3.length), (s2 = 0 < s2 && s2 < r2 ? r2 : s2) === r2)
              return 0;
            if (0 === e3.length || 0 === this.length)
              return 0;
            if ((t2 = t2 || 0) < 0)
              throw new RangeError("targetStart out of bounds");
            if (r2 < 0 || r2 >= this.length)
              throw new RangeError("sourceStart out of bounds");
            if (s2 < 0)
              throw new RangeError("sourceEnd out of bounds");
            s2 > this.length && (s2 = this.length);
            var n2, i2 = (s2 = e3.length - t2 < s2 - r2 ? e3.length - t2 + r2 : s2) - r2;
            if (this === e3 && r2 < t2 && t2 < s2)
              for (n2 = i2 - 1; 0 <= n2; --n2)
                e3[n2 + t2] = this[n2 + r2];
            else if (i2 < 1e3 || !u.TYPED_ARRAY_SUPPORT)
              for (n2 = 0; n2 < i2; ++n2)
                e3[n2 + t2] = this[n2 + r2];
            else
              Uint8Array.prototype.set.call(e3, this.subarray(r2, r2 + i2), t2);
            return i2;
          }, u.prototype.fill = function(e3, t2, r2, s2) {
            if ("string" == typeof e3) {
              var n2;
              if ("string" == typeof t2 ? (s2 = t2, t2 = 0, r2 = this.length) : "string" == typeof r2 && (s2 = r2, r2 = this.length), 1 !== e3.length || (n2 = e3.charCodeAt(0)) < 256 && (e3 = n2), void 0 !== s2 && "string" != typeof s2)
                throw new TypeError("encoding must be a string");
              if ("string" == typeof s2 && !u.isEncoding(s2))
                throw new TypeError("Unknown encoding: " + s2);
            } else
              "number" == typeof e3 && (e3 &= 255);
            if (t2 < 0 || this.length < t2 || this.length < r2)
              throw new RangeError("Out of range index");
            if (!(r2 <= t2))
              if (t2 >>>= 0, r2 = void 0 === r2 ? this.length : r2 >>> 0, "number" == typeof (e3 = e3 || 0))
                for (a2 = t2; a2 < r2; ++a2)
                  this[a2] = e3;
              else
                for (var i2 = u.isBuffer(e3) ? e3 : x(new u(e3, s2).toString()), o2 = i2.length, a2 = 0; a2 < r2 - t2; ++a2)
                  this[a2 + t2] = i2[a2 % o2];
            return this;
          };
          var R = /[^+\/0-9A-Za-z-_]/g;
          function x(e3, t2) {
            t2 = t2 || 1 / 0;
            for (var r2, s2 = e3.length, n2 = null, i2 = [], o2 = 0; o2 < s2; ++o2) {
              if (55295 < (r2 = e3.charCodeAt(o2)) && r2 < 57344) {
                if (!n2) {
                  if (56319 < r2) {
                    -1 < (t2 -= 3) && i2.push(239, 191, 189);
                    continue;
                  }
                  if (o2 + 1 === s2) {
                    -1 < (t2 -= 3) && i2.push(239, 191, 189);
                    continue;
                  }
                  n2 = r2;
                  continue;
                }
                if (r2 < 56320) {
                  -1 < (t2 -= 3) && i2.push(239, 191, 189), n2 = r2;
                  continue;
                }
                r2 = 65536 + (n2 - 55296 << 10 | r2 - 56320);
              } else
                n2 && -1 < (t2 -= 3) && i2.push(239, 191, 189);
              if (n2 = null, r2 < 128) {
                if (--t2 < 0)
                  break;
                i2.push(r2);
              } else if (r2 < 2048) {
                if ((t2 -= 2) < 0)
                  break;
                i2.push(r2 >> 6 | 192, 63 & r2 | 128);
              } else if (r2 < 65536) {
                if ((t2 -= 3) < 0)
                  break;
                i2.push(r2 >> 12 | 224, r2 >> 6 & 63 | 128, 63 & r2 | 128);
              } else {
                if (!(r2 < 1114112))
                  throw new Error("Invalid code point");
                if ((t2 -= 4) < 0)
                  break;
                i2.push(r2 >> 18 | 240, r2 >> 12 & 63 | 128, r2 >> 6 & 63 | 128, 63 & r2 | 128);
              }
            }
            return i2;
          }
          function T(e3) {
            return s.toByteArray(function(e4) {
              var t2;
              if ((e4 = ((t2 = e4).trim ? t2.trim() : t2.replace(/^\s+|\s+$/g, "")).replace(R, "")).length < 2)
                return "";
              for (; e4.length % 4 != 0; )
                e4 += "=";
              return e4;
            }(e3));
          }
          function O(e3, t2, r2, s2) {
            for (var n2 = 0; n2 < s2 && !(n2 + r2 >= t2.length || n2 >= e3.length); ++n2)
              t2[n2 + r2] = e3[n2];
            return n2;
          }
        }).call(this, r(11));
      }, function(e, t, r) {
        "use strict";
        t.byteLength = function(e2) {
          return 3 * ((e2 = c(e2))[0] + (e2 = e2[1])) / 4 - e2;
        }, t.toByteArray = function(e2) {
          var t2, r2, s2 = (o2 = c(e2))[0], o2 = o2[1], a2 = new i(function(e3, t3) {
            return 3 * (e3 + t3) / 4 - t3;
          }(s2, o2)), u2 = 0, l = 0 < o2 ? s2 - 4 : s2;
          for (r2 = 0; r2 < l; r2 += 4)
            t2 = n[e2.charCodeAt(r2)] << 18 | n[e2.charCodeAt(r2 + 1)] << 12 | n[e2.charCodeAt(r2 + 2)] << 6 | n[e2.charCodeAt(r2 + 3)], a2[u2++] = t2 >> 16 & 255, a2[u2++] = t2 >> 8 & 255, a2[u2++] = 255 & t2;
          return 2 === o2 && (t2 = n[e2.charCodeAt(r2)] << 2 | n[e2.charCodeAt(r2 + 1)] >> 4, a2[u2++] = 255 & t2), 1 === o2 && (t2 = n[e2.charCodeAt(r2)] << 10 | n[e2.charCodeAt(r2 + 1)] << 4 | n[e2.charCodeAt(r2 + 2)] >> 2, a2[u2++] = t2 >> 8 & 255, a2[u2++] = 255 & t2), a2;
        }, t.fromByteArray = function(e2) {
          for (var t2, r2 = e2.length, n2 = r2 % 3, i2 = [], o2 = 0, a2 = r2 - n2; o2 < a2; o2 += 16383)
            i2.push(function(e3, t3, r3) {
              for (var n3, i3 = [], o3 = t3; o3 < r3; o3 += 3)
                n3 = (e3[o3] << 16 & 16711680) + (e3[o3 + 1] << 8 & 65280) + (255 & e3[o3 + 2]), i3.push(function(e4) {
                  return s[e4 >> 18 & 63] + s[e4 >> 12 & 63] + s[e4 >> 6 & 63] + s[63 & e4];
                }(n3));
              return i3.join("");
            }(e2, o2, a2 < o2 + 16383 ? a2 : o2 + 16383));
          return 1 == n2 ? (t2 = e2[r2 - 1], i2.push(s[t2 >> 2] + s[t2 << 4 & 63] + "==")) : 2 == n2 && (t2 = (e2[r2 - 2] << 8) + e2[r2 - 1], i2.push(s[t2 >> 10] + s[t2 >> 4 & 63] + s[t2 << 2 & 63] + "=")), i2.join("");
        };
        for (var s = [], n = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, u = o.length; a < u; ++a)
          s[a] = o[a], n[o.charCodeAt(a)] = a;
        function c(e2) {
          var t2 = e2.length;
          if (0 < t2 % 4)
            throw new Error("Invalid string. Length must be a multiple of 4");
          return t2 = (e2 = -1 === (e2 = e2.indexOf("=")) ? t2 : e2) === t2 ? 0 : 4 - e2 % 4, [e2, t2];
        }
        n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63;
      }, function(e, t) {
        t.read = function(e2, t2, r, s, n) {
          var i, o, a = 8 * n - s - 1, u = (1 << a) - 1, c = u >> 1, l = -7, d = r ? n - 1 : 0, p = r ? -1 : 1;
          n = e2[t2 + d];
          for (d += p, i = n & (1 << -l) - 1, n >>= -l, l += a; 0 < l; i = 256 * i + e2[t2 + d], d += p, l -= 8)
            ;
          for (o = i & (1 << -l) - 1, i >>= -l, l += s; 0 < l; o = 256 * o + e2[t2 + d], d += p, l -= 8)
            ;
          if (0 === i)
            i = 1 - c;
          else {
            if (i === u)
              return o ? NaN : 1 / 0 * (n ? -1 : 1);
            o += Math.pow(2, s), i -= c;
          }
          return (n ? -1 : 1) * o * Math.pow(2, i - s);
        }, t.write = function(e2, t2, r, s, n, i) {
          var o, a, u = 8 * i - n - 1, c = (1 << u) - 1, l = c >> 1, d = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = s ? 0 : i - 1, h = s ? 1 : -1;
          i = t2 < 0 || 0 === t2 && 1 / t2 < 0 ? 1 : 0;
          for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (a = isNaN(t2) ? 1 : 0, o = c) : (o = Math.floor(Math.log(t2) / Math.LN2), t2 * (s = Math.pow(2, -o)) < 1 && (o--, s *= 2), 2 <= (t2 += 1 <= o + l ? d / s : d * Math.pow(2, 1 - l)) * s && (o++, s /= 2), c <= o + l ? (a = 0, o = c) : 1 <= o + l ? (a = (t2 * s - 1) * Math.pow(2, n), o += l) : (a = t2 * Math.pow(2, l - 1) * Math.pow(2, n), o = 0)); 8 <= n; e2[r + p] = 255 & a, p += h, a /= 256, n -= 8)
            ;
          for (o = o << n | a, u += n; 0 < u; e2[r + p] = 255 & o, p += h, o /= 256, u -= 8)
            ;
          e2[r + p - h] |= 128 * i;
        };
      }, function(e, t) {
        var r = {}.toString;
        e.exports = Array.isArray || function(e2) {
          return "[object Array]" == r.call(e2);
        };
      }, function(e, t, r) {
        (function(e2) {
          var s = void 0 !== e2 && e2 || "undefined" != typeof self && self || window, n = Function.prototype.apply;
          function i(e3, t2) {
            this._id = e3, this._clearFn = t2;
          }
          t.setTimeout = function() {
            return new i(n.call(setTimeout, s, arguments), clearTimeout);
          }, t.setInterval = function() {
            return new i(n.call(setInterval, s, arguments), clearInterval);
          }, t.clearTimeout = t.clearInterval = function(e3) {
            e3 && e3.close();
          }, i.prototype.unref = i.prototype.ref = function() {
          }, i.prototype.close = function() {
            this._clearFn.call(s, this._id);
          }, t.enroll = function(e3, t2) {
            clearTimeout(e3._idleTimeoutId), e3._idleTimeout = t2;
          }, t.unenroll = function(e3) {
            clearTimeout(e3._idleTimeoutId), e3._idleTimeout = -1;
          }, t._unrefActive = t.active = function(e3) {
            clearTimeout(e3._idleTimeoutId);
            var t2 = e3._idleTimeout;
            0 <= t2 && (e3._idleTimeoutId = setTimeout(function() {
              e3._onTimeout && e3._onTimeout();
            }, t2));
          }, r(120), t.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== e2 && e2.setImmediate || this && this.setImmediate, t.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== e2 && e2.clearImmediate || this && this.clearImmediate;
        }).call(this, r(11));
      }, function(e, t, r) {
        (function(e2, t2) {
          !function(e3, r2) {
            "use strict";
            var s, n, i, o, a, u, c, l;
            function d(e4) {
              delete n[e4];
            }
            function p(e4) {
              if (i)
                setTimeout(p, 0, e4);
              else {
                var t3 = n[e4];
                if (t3) {
                  i = true;
                  try {
                    var r3 = t3, s2 = r3.callback, o2 = r3.args;
                    switch (o2.length) {
                      case 0:
                        s2();
                        break;
                      case 1:
                        s2(o2[0]);
                        break;
                      case 2:
                        s2(o2[0], o2[1]);
                        break;
                      case 3:
                        s2(o2[0], o2[1], o2[2]);
                        break;
                      default:
                        s2.apply(void 0, o2);
                    }
                  } finally {
                    d(e4), i = false;
                  }
                }
              }
            }
            e3.setImmediate || (s = 1, i = !(n = {}), o = e3.document, l = (l = Object.getPrototypeOf && Object.getPrototypeOf(e3)) && l.setTimeout ? l : e3, "[object process]" === {}.toString.call(e3.process) ? a = function(e4) {
              t2.nextTick(function() {
                p(e4);
              });
            } : function() {
              var t3, r3;
              if (e3.postMessage && !e3.importScripts)
                return t3 = true, r3 = e3.onmessage, e3.onmessage = function() {
                  t3 = false;
                }, e3.postMessage("", "*"), e3.onmessage = r3, t3;
            }() ? function() {
              function t3(t4) {
                t4.source === e3 && "string" == typeof t4.data && 0 === t4.data.indexOf(r3) && p(+t4.data.slice(r3.length));
              }
              var r3 = "setImmediate$" + Math.random() + "$";
              e3.addEventListener ? e3.addEventListener("message", t3, false) : e3.attachEvent("onmessage", t3), a = function(t4) {
                e3.postMessage(r3 + t4, "*");
              };
            }() : a = e3.MessageChannel ? ((c = new MessageChannel()).port1.onmessage = function(e4) {
              p(e4.data);
            }, function(e4) {
              c.port2.postMessage(e4);
            }) : o && "onreadystatechange" in o.createElement("script") ? (u = o.documentElement, function(e4) {
              var t3 = o.createElement("script");
              t3.onreadystatechange = function() {
                p(e4), t3.onreadystatechange = null, u.removeChild(t3), t3 = null;
              }, u.appendChild(t3);
            }) : function(e4) {
              setTimeout(p, 0, e4);
            }, l.setImmediate = function(e4) {
              "function" != typeof e4 && (e4 = new Function("" + e4));
              for (var t3 = new Array(arguments.length - 1), r3 = 0; r3 < t3.length; r3++)
                t3[r3] = arguments[r3 + 1];
              return n[s] = { callback: e4, args: t3 }, a(s), s++;
            }, l.clearImmediate = d);
          }("undefined" == typeof self ? void 0 === e2 ? this : e2 : self);
        }).call(this, r(11), r(52));
      }]);
    });
  }
});

// dep:zego-zim-web
var zego_zim_web_default = require_zego_zim_web();
export {
  zego_zim_web_default as default
};
//# sourceMappingURL=zego-zim-web.js.map
